WEBVTT
Kind: captions
Language: ja

00:00:00.210 --> 00:00:04.380
あなたは前回のXML のクイズで
優れた観察をしましたね

00:00:04.450 --> 00:00:07.600
ではXML 構文について
もっと正式に話しましょう

00:00:07.600 --> 00:00:12.220
構文規則とは
妥当なXMLとは何かの決まりのことです

00:00:12.220 --> 00:00:15.840
非妥当な XML を書けば
携帯に表示すらされません

00:00:16.250 --> 00:00:19.470
これはテキストビューという 
XML要素のコードです

00:00:19.470 --> 00:00:23.940
必ず始め山括弧で始め 次にビュー名がきます

00:00:23.940 --> 00:00:27.010
これは イメージビューかボタンか
他のタイプのビューになります

00:00:27.340 --> 00:00:31.190
次にここに属性のリストを
一行につき１つ書きます

00:00:31.190 --> 00:00:34.750
それから斜線を書き 終わり山括弧にします

00:00:35.480 --> 00:00:37.920
ここに沢山の記号や文字があります

00:00:37.920 --> 00:00:41.945
覚える為に想像してください
始め山括弧

00:00:42.615 --> 00:00:43.979
次にビュー名

00:00:44.779 --> 00:00:46.392
次は属性

00:00:48.222 --> 00:00:51.578
次は斜線
次に終わり山括弧

00:00:52.458 --> 00:00:54.016
全部つなげると

00:00:59.066 --> 00:01:02.254
これらの記号のどれかを抜かしたら
非妥当な XMLになります

00:01:02.814 --> 00:01:06.950
恣意的な記号にみえるものの背後に
こういう理屈があります

00:01:07.500 --> 00:01:10.490
XML要素のどれでも タグを開いたら

00:01:10.490 --> 00:01:12.490
必ず閉じることが必要です

00:01:12.670 --> 00:01:15.330
文の終わりにピリオドを打つのと似ていますが

00:01:15.330 --> 00:01:19.260
文でなくXMLでは
各タグを必ず閉じる必要があります

00:01:19.980 --> 00:01:21.900
ここでタグを始めてー

00:01:21.900 --> 00:01:25.367
ここですぐ閉じるので
これはセルフクロージングタグと呼ばれます

00:01:26.250 --> 00:01:28.410
セルフクロージングタグの代わりに

00:01:28.410 --> 00:01:31.570
別の開始タグと別の閉じタグでもいいです

00:01:32.550 --> 00:01:34.600
これが便利な例をここに示します

00:01:34.600 --> 00:01:36.890
これはリニアレイアウトビュー用でー

00:01:36.890 --> 00:01:39.430
このレッスンののちで学ぶものですがー

00:01:39.430 --> 00:01:42.820
これは開始タグで これは閉じタグです

00:01:44.230 --> 00:01:49.230
閉じタグは 始め山括弧を除けば
同じです

00:01:49.230 --> 00:01:53.339
斜線 ビュー名 終わり山括弧です

00:01:53.970 --> 00:01:58.440
だから開始タグと閉じタグの違いは
コレー斜線です

00:01:59.490 --> 00:02:04.410
又 その間には ２つのテキストビュー
XML要素がありますね

00:02:04.410 --> 00:02:08.970
これらは又 親リニアレイアウト内の
子XML要素とも呼ばれます

00:02:09.370 --> 00:02:13.265
ここにリニアレイアウトの
セルフクロージングタグがあったら

00:02:13.265 --> 00:02:16.180
そこに子がいくつ入ってる分かりません

00:02:16.180 --> 00:02:18.570
でも今 閉じタグはここにあるので

00:02:18.570 --> 00:02:20.700
子が2つだと正確にわかります

00:02:21.540 --> 00:02:25.460
この場合には テキストビューに
子のXML要素はないので

00:02:25.460 --> 00:02:28.260
じかにセルフクロージングタグを書けます

00:02:28.260 --> 00:02:34.840
その方が 始め山括弧・斜線・テキストビュー
終わり山括弧と書く手間が省けますから

00:02:35.720 --> 00:02:39.570
このタグ内に沢山のテキストがありますね

00:02:39.570 --> 00:02:41.570
これらは属性と呼ばれます

00:02:41.570 --> 00:02:44.950
属性は Android 携帯で挙動とか

00:02:44.950 --> 00:02:47.390
ビューの外観を決める特性です

00:02:47.390 --> 00:02:50.850
例えばこの比喩で考えてみます

00:02:50.850 --> 00:02:54.150
人には 黒髪 茶色の目のような
属性があります

00:02:54.150 --> 00:02:58.702
テキストにも幅 高さ 背景 テキスト等々の
属性があります

00:02:59.020 --> 00:03:02.040
各行の形式をよく見ると

00:03:02.040 --> 00:03:05.380
左側に属性名にありー

00:03:05.660 --> 00:03:07.140
ここに黄色の下線があります

00:03:07.140 --> 00:03:09.590
右側には 実際の値があります

00:03:11.260 --> 00:03:17.760
これらの属性値は XML 構文の一部として
引用符で囲むことが大事です

00:03:18.790 --> 00:03:20.930
次に 中間に等号があり

00:03:20.930 --> 00:03:25.310
左の属性名は右の値に設定されると示します

00:03:25.570 --> 00:03:29.160
テキストビューのテキストは
「誕生日おめでとう！」で

00:03:29.160 --> 00:03:32.640
高さは 75 dp（ 密度非依存ピクセル ）です

00:03:33.800 --> 00:03:36.070
これらの属性の全てに既定値があります

00:03:36.070 --> 00:03:38.330
ここに挙げてもいない属性がありー

00:03:38.330 --> 00:03:42.270
それはテキストビューではその属性全てに
既定値があるからです

00:03:42.270 --> 00:03:45.690
既定値で構わないなら
ここで設定する必要がありません

00:03:46.370 --> 00:03:48.000
ここにコード行を書くのは

00:03:48.000 --> 00:03:50.310
既定値と違うようにしたい時だけです

00:03:50.310 --> 00:03:54.590
例えば テキストビューの既定の背景色は
透過色です

00:03:54.790 --> 00:03:57.330
でも 黒っぽい灰色にしたい

00:03:57.330 --> 00:03:59.580
それでこのコード行があります

00:04:00.960 --> 00:04:02.890
もう一つ重大なことがあります

00:04:02.890 --> 00:04:07.450
人間は結構賢いので このような句を書いても
多分意味を理解するでしょう－

00:04:07.450 --> 00:04:10.450
たとえ正しい英語の句点や文法－

00:04:10.450 --> 00:04:13.040
本物の言葉すら使わなくてもです

00:04:13.040 --> 00:04:18.299
でも コンピューターはそこまで賢くないので
認識する的確な記号と名を使わねばなりません

00:04:18.299 --> 00:04:20.210
さもないと意味が分からず

00:04:20.210 --> 00:04:22.330
コードのエラーになります

00:04:22.910 --> 00:04:24.740
ここに例を示します

00:04:24.740 --> 00:04:27.850
ビューの名前にTxtView とか

00:04:27.850 --> 00:04:32.110
小文字の v にしたTextviewとか
スペースの入ったtext view はだめです

00:04:32.110 --> 00:04:33.670
これらは皆正しくなくー

00:04:33.670 --> 00:04:36.870
コンピューターはTextView の意味だと
解しません

00:04:36.870 --> 00:04:40.120
TextView を入れたいなら
全く同じにつづらなくてはなりません

00:04:40.120 --> 00:04:43.370
キャメル記法で
大文字のＴと大文字のＶ にします

00:04:44.260 --> 00:04:49.140
属性名は android の後にコロンを入れて
全く同じにつづる必要があります

00:04:49.260 --> 00:04:53.190
等号を入れ 次に値の周りに引用符を
入れる必要があります

00:04:53.190 --> 00:04:55.282
忘れないようもう一度

00:04:59.442 --> 00:05:02.523
では XML の構文規則を勉強したので

00:05:02.523 --> 00:05:05.730
この XML 要素に関する
これらの質問に答えて下さい

00:05:05.730 --> 00:05:08.660
まずこの XML 要素の名前は何ですか？

00:05:08.990 --> 00:05:12.950
次に コンマで分けた属性名を全部
挙げなさい

00:05:12.950 --> 00:05:14.490
属性値ではありませんよ

00:05:14.830 --> 00:05:17.540
何番目の行でタグが閉じられていますか？

00:05:18.180 --> 00:05:21.490
分かり易いように 左側に行番号を書きました

