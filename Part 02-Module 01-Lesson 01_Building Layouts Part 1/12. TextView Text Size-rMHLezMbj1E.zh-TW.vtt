WEBVTT
Kind: captions
Language: zh-TW

00:00:00.330 --> 00:00:05.520
你可能沒有注意到
設備螢幕上的文字有一點小

00:00:05.520 --> 00:00:09.550
我的意思是 我的視力不好
因此我想讓文字變大一點

00:00:09.550 --> 00:00:10.380
幸運的是

00:00:10.380 --> 00:00:14.800
我們可以宣告一個屬性 
來更改文字大小

00:00:14.800 --> 00:00:17.210
請等一會兒
這裏有一個錯誤

00:00:17.210 --> 00:00:20.600
說電腦不能
理解我的XML

00:00:20.600 --> 00:00:24.300
再次檢查代碼後我發現
新增的這行代碼

00:00:24.300 --> 00:00:28.090
顯示為黑色字體
而在上面 屬性名稱

00:00:28.090 --> 00:00:30.760
顯示為藍色
屬性值顯示為紅色

00:00:30.760 --> 00:00:32.580
因此 這行代碼
有問題

00:00:32.580 --> 00:00:34.438
現在我看到了

00:00:34.438 --> 00:00:38.190
右尖括號中的斜械
位於這一側

00:00:38.190 --> 00:00:41.330
這是新手經常會犯的錯誤 
就是在括號封閉之後

00:00:41.330 --> 00:00:43.230
增加屬性

00:00:43.230 --> 00:00:46.290
從技術上說 
這不符合XML語法規則

00:00:46.290 --> 00:00:50.080
因為它沒有關聯到
一個XML元素

00:00:50.080 --> 00:00:54.050
我們需要做的是
複製這些符號 把它們移到這裏

00:00:54.050 --> 00:00:54.870
這樣好多了

00:00:54.870 --> 00:00:59.120
錯誤不見了 變成有效的XML
然後 我們的字體也變大了

00:00:59.120 --> 00:00:59.890
哇

00:00:59.890 --> 00:01:01.630
這樣更容易識讀了

00:01:01.630 --> 00:01:04.819
請注意 現在文字大小
被設定為45sp

00:01:04.819 --> 00:01:06.730
Sp表示比例無關像素

00:01:06.730 --> 00:01:11.290
它是一個測量單位 類似於dp
其作用是為了在不同像素密度的設備上

00:01:11.290 --> 00:01:15.750
保持相同的
顯示版面

00:01:15.750 --> 00:01:19.840
Sp只用於字體 因為它根據
使用者的偏好

00:01:19.840 --> 00:01:22.790
和文字大小設定進行調整

00:01:22.790 --> 00:01:24.300
現在讓我們看一下

00:01:24.300 --> 00:01:26.090
我們來看設定值在哪裏

00:01:26.090 --> 00:01:30.750
轉到設定應用程式 然後輕觸一下
顯示 這裏有一個

00:01:30.750 --> 00:01:32.160
字體大小選項

00:01:32.160 --> 00:01:35.030
如果按一下這個選項
可以看到不同的字體大小

00:01:35.030 --> 00:01:39.140
如果我按一下巨大 
就會增大所有內容的字體大小

00:01:39.140 --> 00:01:42.670
因此始終應使用sp宣告你的
字體大小 這樣它就會根據使用者的偏號

00:01:42.670 --> 00:01:45.450
放大或縮小字體

00:01:45.450 --> 00:01:48.270
一會兒後 你將會更改文字檢視圖的 
文字大小

00:01:48.270 --> 00:01:50.600
但是 我首先要向你展示
一個東西

00:01:50.600 --> 00:01:52.690
這是素材設計規范

00:01:52.690 --> 00:01:55.450
素材設計是Google開發的
一種新設計語言

00:01:55.450 --> 00:01:57.620
幫助我們建立一致

00:01:57.620 --> 00:02:02.490
美觀的應用程式 可以跨越不同的設備
和平臺 比如Web和行動設備

00:02:02.490 --> 00:02:04.970
簡單地說
設計規范

00:02:04.970 --> 00:02:08.270
是用於指導應用程式設計 
的最佳做法

00:02:08.270 --> 00:02:12.110
它指導應用程式的版面
視覺樣式 圖像

00:02:12.110 --> 00:02:13.870
動畫和其他元素

00:02:13.870 --> 00:02:17.450
還有一個章節介紹印刷格式
或字體

00:02:17.450 --> 00:02:20.350
它含有豐富的內容
你可以在以後詳細閱讀

00:02:20.350 --> 00:02:22.520
在這個指南中 
最重要的事項是

00:02:22.520 --> 00:02:24.370
建議文字大小

00:02:24.370 --> 00:02:26.510
如果你要顯示
大字號標題

00:02:26.510 --> 00:02:28.950
可以使用其中
一些文字大小值

00:02:28.950 --> 00:02:31.890
如果要顯示正文文字
或標題

00:02:31.890 --> 00:02:33.590
可以使用這些大小值

00:02:33.590 --> 00:02:37.180
這幫助你根據使用情況
選擇合適

00:02:37.180 --> 00:02:38.760
類型的值

00:02:38.760 --> 00:02:41.200
但是請注意 如果你選擇
過多的類型大小

00:02:41.200 --> 00:02:44.440
樣式 使用者將會
難以理解

00:02:44.440 --> 00:02:48.500
因此應選擇少數幾個樣式
來顯示你想要顯示的內容

00:02:48.500 --> 00:02:49.850
當你更改TextView的

00:02:49.850 --> 00:02:53.050
文字大小時
請嘗試使用這裏的值

00:02:53.050 --> 00:02:57.120
請使用素材設計規范
更改TextView字體大小

00:02:57.120 --> 00:02:57.960
如果遇到問題

00:02:57.960 --> 00:03:01.550
可以在
Google+ Android Dev Protip中

00:03:01.550 --> 00:03:04.540
查閱文字外觀屬性的相關訊息 
我已經貼在下面

00:03:04.540 --> 00:03:08.100
然後 也可以在XML Visualizer中
嘗試這樣做

00:03:08.100 --> 00:03:10.420
下面是XML Visualizer
和部分代碼的連結

00:03:10.420 --> 00:03:12.010
將會對你有所幫助

