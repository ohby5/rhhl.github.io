WEBVTT
Kind: captions
Language: en

00:00:00.330 --> 00:00:05.520
If you haven't already noticed, the text
is kind of tiny on this device screen.

00:00:05.520 --> 00:00:09.550
I mean, my eyesight is terrible, so
I really need it to be a lot bigger.

00:00:09.550 --> 00:00:10.380
Luckily for us,

00:00:10.380 --> 00:00:14.800
there is an attribute that we can
declare to change the text size.

00:00:14.800 --> 00:00:17.210
Oh, but
wait there is an error down here.

00:00:17.210 --> 00:00:20.600
It says the computer wasn't
able to understand my XML.

00:00:20.600 --> 00:00:24.300
Double checking the code I see this new
line that we added is actually appearing

00:00:24.300 --> 00:00:28.090
in black font,
whereas everything above has blue for

00:00:28.090 --> 00:00:30.760
the attribute name and
red for the attribute value.

00:00:30.760 --> 00:00:32.580
So there's something
wrong with this line.

00:00:32.580 --> 00:00:34.438
Oh wait, I see it now.

00:00:34.438 --> 00:00:38.190
Forward slash in the closing angle
bracket are on this side up here.

00:00:38.190 --> 00:00:41.330
This is actually a common beginner
mistake to add the attribute

00:00:41.330 --> 00:00:43.230
after the tack has been closed.

00:00:43.230 --> 00:00:46.290
Technically, this is
hanging out in XML limbo or

00:00:46.290 --> 00:00:50.080
something because it's not
tied to an XML element.

00:00:50.080 --> 00:00:54.050
What we really want is to copy these
symbols and move them down here.

00:00:54.050 --> 00:00:54.870
That's better.

00:00:54.870 --> 00:00:59.120
There's no error, and this is valid XML,
and then our font is bigger.

00:00:59.120 --> 00:00:59.890
Woo hoo!

00:00:59.890 --> 00:01:01.630
It's much more readable now.

00:01:01.630 --> 00:01:04.819
Note how the text size
is set to be 45 sp.

00:01:04.819 --> 00:01:06.730
Sp stands for scale independent pixels.

00:01:06.730 --> 00:01:11.290
It is a unit of measure similar
to dp which makes the app look

00:01:11.290 --> 00:01:15.750
consistent across different
devices of different densities.

00:01:15.750 --> 00:01:19.840
Sp is only used for fonts because
it adjusts based on the user's

00:01:19.840 --> 00:01:22.790
preferences and settings for text size.

00:01:22.790 --> 00:01:24.300
Let's look at that now.

00:01:24.300 --> 00:01:26.090
Let me show you where the setting is.

00:01:26.090 --> 00:01:30.750
Go to the settings app, then tap on
display, and there's an option for

00:01:30.750 --> 00:01:32.160
font size.

00:01:32.160 --> 00:01:35.030
If you click on that,
you can see the different font sizes.

00:01:35.030 --> 00:01:39.140
If I click on huge, and it increases
the font size of everything.

00:01:39.140 --> 00:01:42.670
So always use sp to declare your
font sizes so it will scale up or

00:01:42.670 --> 00:01:45.450
down according to the user's preference.

00:01:45.450 --> 00:01:48.270
In a moment you'll change
the text size of the text view.

00:01:48.270 --> 00:01:50.600
However, I first wanted
to show you one thing.

00:01:50.600 --> 00:01:52.690
This is the material design spec.

00:01:52.690 --> 00:01:55.450
Material design is a new design
language developed by Google

00:01:55.450 --> 00:01:57.620
to help people create consistent and

00:01:57.620 --> 00:02:02.490
beautiful apps across different devices
and platforms, like web and mobile.

00:02:02.490 --> 00:02:04.970
The design specification,
or design specs for

00:02:04.970 --> 00:02:08.270
short, highlights the best practices for
designing your app.

00:02:08.270 --> 00:02:12.110
It provides guidance on the layout
of your app, visual style, imagery,

00:02:12.110 --> 00:02:13.870
animations, and much more.

00:02:13.870 --> 00:02:17.450
There's also a section on typography,
or fonts.

00:02:17.450 --> 00:02:20.350
It lists a whole bunch of information
here that you can read later.

00:02:20.350 --> 00:02:22.520
But the most important
thing is this guide here,

00:02:22.520 --> 00:02:24.370
that talks about
the recommended text sizes.

00:02:24.370 --> 00:02:26.510
If you're displaying
a really big header,

00:02:26.510 --> 00:02:28.950
you can use some of
these text size values.

00:02:28.950 --> 00:02:31.890
If you're trying to do a title or
some body text or a caption,

00:02:31.890 --> 00:02:33.590
you can use some of these sizes.

00:02:33.590 --> 00:02:37.180
This will help guide you on what types
values you can pick depending on what

00:02:37.180 --> 00:02:38.760
your use case is.

00:02:38.760 --> 00:02:41.200
But be careful, because if you
pick too many type sizes or

00:02:41.200 --> 00:02:44.440
styles in your app, it can be
very overwhelming for the user.

00:02:44.440 --> 00:02:48.500
So just pick a couple of styles to
display the information that you want.

00:02:48.500 --> 00:02:49.850
When you change the text size for

00:02:49.850 --> 00:02:53.050
the TextView,
try a couple of these values here.

00:02:53.050 --> 00:02:57.120
Go ahead and change the TextView font
size using the material design spec.

00:02:57.120 --> 00:02:57.960
And then if you're up for

00:02:57.960 --> 00:03:01.550
a challenge, you can try learning
about the text appearance attribute

00:03:01.550 --> 00:03:04.540
from the Google+ Android Dev Protip
that I've posted below.

00:03:04.540 --> 00:03:08.100
And then you can try this in
the XML Visualizer as well.

00:03:08.100 --> 00:03:10.420
The link to the XML Visualizer
with the code for

00:03:10.420 --> 00:03:12.010
you to get started is linked below.

