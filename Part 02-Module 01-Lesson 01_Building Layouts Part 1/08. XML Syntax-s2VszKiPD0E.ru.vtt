WEBVTT
Kind: captions
Language: ru

00:00:00.490 --> 00:00:03.560
Вы сделали некоторые хорошие
наблюдения в прошлом задании в ХML

00:00:03.560 --> 00:00:04.720
который мы вам показали.

00:00:04.720 --> 00:00:08.150
Сейчас мы подробнее расскажем
о синтаксисе XML.

00:00:08.150 --> 00:00:12.470
Синтаксис это правила которые
определяют правильный XML.

00:00:12.470 --> 00:00:15.570
Если вы напишите неверный XML, то он
даже не будет отображен на телефоне.

00:00:16.680 --> 00:00:20.130
Это код для элемента XML
под названием TextView.

00:00:20.130 --> 00:00:24.110
Мы всегда начинаем с открывающей
угловой скобки и названия раскладки.

00:00:24.110 --> 00:00:28.020
Это может быть <i>image view, button</i>,
или любая другая.

00:00:28.020 --> 00:00:30.790
Потом идет список аттрибутов -
по одному на строку.

00:00:30.790 --> 00:00:35.880
Потом - прямой слеш и
закрывающая угловая скобка.

00:00:35.880 --> 00:00:38.420
Здесь много букв и символов.

00:00:38.420 --> 00:00:41.945
Чтобы лучше их запомнить - подумайте
про открывающую угловую скобку.

00:00:41.945 --> 00:00:44.089
А потом название раскладки.

00:00:44.089 --> 00:00:47.052
А потом аттрибуты и

00:00:47.052 --> 00:00:52.008
прямой слеш и закрывающая
угловая скобка.

00:00:52.008 --> 00:00:59.066
Все вместе.

00:00:59.066 --> 00:01:02.814
Если вы упустите какой-то из этих
символов то XML будет нерабочий.

00:01:02.814 --> 00:01:07.500
Вот причина необходимости этих,
казалось бы, хаотичных символов.

00:01:07.500 --> 00:01:10.490
Для каждого элемента XML когда
вы начинаете или открываете метку,

00:01:10.490 --> 00:01:12.910
всегда нужно ее закрывать.

00:01:12.910 --> 00:01:15.680
Это как поставить точку
в конце предложения но в случае

00:01:15.680 --> 00:01:19.260
с XML вместо предложения
вам надо закрыть все метки.

00:01:20.440 --> 00:01:21.900
Поскольку мы начали метку вот здесь

00:01:21.900 --> 00:01:25.197
и закрыли ее тут, это называется
самозакрывающаяся метка.

00:01:26.690 --> 00:01:28.410
Вместо самозакрывающейся метки

00:01:28.410 --> 00:01:31.570
можно поставить отдельную
открывающуюуся и закрывающуюся метку.

00:01:33.060 --> 00:01:35.090
Вот пример где это можно использвать.

00:01:35.090 --> 00:01:37.990
Это для раскладки LinearLayout,
о котором вы узнаете

00:01:37.990 --> 00:01:39.740
далее в этом уроке.

00:01:39.740 --> 00:01:42.820
Но знайте что это открывающая метка,
а это закрывающая метка.

00:01:44.510 --> 00:01:49.550
Закрывающая метка такая же, кроме
того что в ней есть угловая скобка,

00:01:49.550 --> 00:01:53.199
прямой слеш, название раскладки
и закрывающая угловая скобка.

00:01:54.330 --> 00:01:55.730
То есьразница между открывающей и

00:01:55.730 --> 00:01:58.400
и закрывающей меткой -
вот в этом прямом слеше.

00:02:00.080 --> 00:02:04.630
Вы также заметили что внутри
у нас есть два XML элемента <i>TextView</i>.

00:02:04.630 --> 00:02:09.840
Они называются младшими элементами XML
внутри старшего <i>LinearLayout</i>.

00:02:09.840 --> 00:02:12.775
Можете представить что если бы у вас
здесь была самозакрывающаяся метка

00:02:12.775 --> 00:02:16.810
для LinearLayout, вы бы не знали
сколько в нем младших элементов.

00:02:16.810 --> 00:02:18.430
Но сейчас есть закрывающая
метка внизу

00:02:18.430 --> 00:02:20.550
и вы точно знаете что здесь
два младших элемента.

00:02:22.020 --> 00:02:25.750
В нашем случае в TextView,
нет младших XML элементов, поэтому

00:02:25.750 --> 00:02:30.200
мы можем поставить замозакрывающуся
метку и не надо

00:02:30.200 --> 00:02:34.840
писать всю вот эту конструкцию.

00:02:36.140 --> 00:02:40.210
Вы заметили что у нас есть много
дополнительного текста внутри метки.

00:02:40.210 --> 00:02:42.160
Это называется аттрибуты.

00:02:42.160 --> 00:02:44.950
Аттрибуты это характеристики
которые определяют способы

00:02:44.950 --> 00:02:48.040
отображения на Android телефоне.

00:02:48.040 --> 00:02:51.000
Например, мы можем поумат
о такой аналогии.

00:02:51.000 --> 00:02:54.230
У ччеловека есть такие аттрибуты
как черные волосы и карие глаза.

00:02:54.230 --> 00:02:57.492
У текста тоже есть аттрибуты -
такие как ширина, высота, подсветка,

00:02:57.492 --> 00:02:59.190
и многие другие.

00:02:59.190 --> 00:03:02.560
Внимательно посмотрев на
формат каждой строки мы

00:03:02.560 --> 00:03:06.040
увидим название аттрибута
с левой стороны.

00:03:06.040 --> 00:03:07.040
Вот - подчеркнуто желтым.

00:03:07.040 --> 00:03:09.970
А справа стоит значение.

00:03:11.600 --> 00:03:14.180
Важно знать что значения аттрибутов

00:03:14.180 --> 00:03:17.730
надо ставить в кавычках -
это часть синтаксиса XML.

00:03:19.220 --> 00:03:22.830
После идет знак равенства, который
указывает что аттрибут слева

00:03:22.830 --> 00:03:25.940
установлен на значение справа.

00:03:25.940 --> 00:03:29.570
Поэтому текст для TextView
это <i>Happy Birthday!</i>, a

00:03:29.570 --> 00:03:32.640
а высота 75 пикселей.

00:03:34.080 --> 00:03:36.070
У всех этих аттрибутов
есть значения по умолчанию,

00:03:36.070 --> 00:03:38.850
и есть еще аттрибуты,
которые мы здесь не указали.

00:03:38.850 --> 00:03:42.740
Потому что в TextView есть значения
по умолчанию у всех этих аттрибутов.

00:03:42.740 --> 00:03:45.690
Если эти значения вам подходят
их не надо отдельно указывать.

00:03:46.750 --> 00:03:48.000
Надо лишь написать строки кода

00:03:48.000 --> 00:03:50.940
те что вы хотите чтобы отличались
от значений по умолчанию.

00:03:50.940 --> 00:03:52.920
Например, подсветка по умолчанию для

00:03:52.920 --> 00:03:55.170
TextView прозрачная.

00:03:55.170 --> 00:03:57.890
Но мы хотим установить ее
на темно-серый цвет и поэтому

00:03:57.890 --> 00:03:59.400
здесть стоит вот эта строка кода.

00:04:01.430 --> 00:04:03.250
Одно важное замечание.

00:04:03.250 --> 00:04:06.770
Люди умны и если я напишу такие
фразы вы скорее всего поймете

00:04:06.770 --> 00:04:10.450
что я имею в виду, даже если я
не следую правилам пунктуации или

00:04:10.450 --> 00:04:13.040
грамматики или даже коверкаю слова.

00:04:13.040 --> 00:04:17.089
Копьютеры не так умны и вам надо
использовать точные символы и

00:04:17.089 --> 00:04:20.720
названия которые они распознают,
иначе они не поймут что вы имеете

00:04:20.720 --> 00:04:22.110
в виду и выдадут ошибку.

00:04:23.410 --> 00:04:24.740
Вот пример.

00:04:24.740 --> 00:04:28.580
В названии мы не можем
написать его как <i>TxtView</i>, или

00:04:28.580 --> 00:04:32.640
<i>Textview</i> с прописной v, или 
<i>text</i> <i>view</i> с пробелом.

00:04:32.640 --> 00:04:34.140
Это все неверно и компьютер

00:04:34.140 --> 00:04:37.260
не будет знать что мы
имели в виду TextView.

00:04:37.260 --> 00:04:40.800
Если мы хотим написать TextView
то надо писать его точно как надо

00:04:40.800 --> 00:04:43.370
с заглавной Т и заглавной V
в горбатом регистре.

00:04:44.610 --> 00:04:48.080
Названия аттрибутов следует писать
без ошибок с двоеточием

00:04:48.080 --> 00:04:49.260
после <i>android</i>.

00:04:49.260 --> 00:04:53.960
Нужен знак равенства а после
надо поставить значение в кавычки.

00:04:53.960 --> 00:04:59.892
Повторим, чтобы вы не забыли.

00:04:59.892 --> 00:05:02.683
Итак, мы закончили синтаксические
правила для XML,

00:05:02.683 --> 00:05:06.440
сможете ответить на эти
вопросы про элемент XML?

00:05:06.440 --> 00:05:09.530
Первое - какое название
у элемента XML?

00:05:09.530 --> 00:05:13.320
Потом, можете ли переписать
названия аттрибутов через запятую?

00:05:13.320 --> 00:05:15.570
Не значения аттрибутов.

00:05:15.570 --> 00:05:17.540
Потом - в какой строке
метка закрывается?

00:05:18.580 --> 00:05:21.490
Чтобы вам помочь я записала
номера строк с левой стороны.

