WEBVTT
Kind: captions
Language: ja

00:00:00.390 --> 00:00:03.210
ここではテキストの
ビューオブジェクトの作成を

00:00:03.210 --> 00:00:05.210
練習してその
メソッドを呼び出します

00:00:05.210 --> 00:00:06.930
ただの練習なので

00:00:06.930 --> 00:00:11.250
JustJava アプリで
失敗しないために

00:00:11.250 --> 00:00:13.020
新規の Android アプリを
使います

00:00:14.370 --> 00:00:19.070
File &gt; New Project で
Android Studio の

00:00:19.070 --> 00:00:21.650
プロジェクトを開いて
デフォルトのままで進みます

00:00:21.650 --> 00:00:25.620
必ずBlank Activity を選択し
Finish をクリックします

00:00:28.210 --> 00:00:31.190
プロジェクトを作成したら
端末でアプリを実行します

00:00:32.380 --> 00:00:36.220
デフォルトではここに
“Hello World” と出ます

00:00:36.220 --> 00:00:38.220
今度は少し
違うことをします

00:00:38.220 --> 00:00:42.340
MainActivity クラスで onCreate
メソッドに変更を加えます

00:00:42.340 --> 00:00:46.600
XML layout の “actvity_main” で
“setContentView” を呼び出さず

00:00:46.600 --> 00:00:49.080
独自のテキストビューを
作成--ここに設定します

00:00:50.390 --> 00:00:51.960
Android Developers の
サイトでは

00:00:51.960 --> 00:00:56.010
Building Your First App で
トレーニングができます

00:00:56.010 --> 00:00:59.600
特に講義の一部である
“Display the Message” に注目

00:00:59.600 --> 00:01:02.220
onCreate メソッドで
TextView の作成が出来ると

00:01:02.220 --> 00:01:03.930
伝えています

00:01:03.930 --> 00:01:07.290
これはレッスンの始めで
やったコードです

00:01:07.290 --> 00:01:08.850
新たに TextView を
作成して

00:01:08.850 --> 00:01:11.720
“textView” という変数に
保存します

00:01:11.720 --> 00:01:14.708
このコンストラクタには
コンテキストが必要です

00:01:14.708 --> 00:01:18.140
そこで “(this)” は現行の
activity を示すので

00:01:18.140 --> 00:01:21.780
入力パラメータとして
“(this)” を渡します

00:01:21.780 --> 00:01:24.450
activity はコンテキストでも
あるので

00:01:24.450 --> 00:01:27.530
これが TextView を
修正してくれます

00:01:27.530 --> 00:01:30.610
メソッドはTextView
オブジェクトで呼び出します

00:01:30.610 --> 00:01:35.330
これは “textView” という変数名で
TextView クラスではありません

00:01:35.330 --> 00:01:38.360
だから小文字の “t” で
始まるのです

00:01:38.360 --> 00:01:42.430
“textView.setTextSize” と
“textView.setText” を例として

00:01:43.830 --> 00:01:47.160
下に進むと
“setContentView” を呼び出し

00:01:47.160 --> 00:01:49.890
“textView” を渡すよう
指示が出ます

00:01:49.890 --> 00:01:51.690
更に下へ進むと
onCreate メソッドの

00:01:51.690 --> 00:01:53.230
サンプルのコードが出ます

00:01:54.230 --> 00:01:55.520
この部分は
必要ありません

00:01:55.520 --> 00:01:58.360
textView を作成して
“activity_layout” の

00:01:58.360 --> 00:02:01.160
contentView を設定する
部分だけに注目します

00:02:02.440 --> 00:02:04.610
MainActivity クラスの
Android Studio に戻り

00:02:04.610 --> 00:02:07.030
onCreate メソッドに
変更を加えます

00:02:07.030 --> 00:02:08.394
空欄の行を
いくつか加えます

00:02:09.535 --> 00:02:12.065
まずコンストラクタを使い
新規 TextView オブジェクトを

00:02:13.245 --> 00:02:15.535
作成して変数名を
“textView” にします

00:02:15.535 --> 00:02:20.075
対象が適切に示せる
記述法であれば

00:02:20.075 --> 00:02:21.075
名前は何でもいいです

00:02:22.080 --> 00:02:24.870
このテキストには
コンテキストが必要なので

00:02:24.870 --> 00:02:28.100
この activity を示す
“(this)” を渡します

00:02:28.100 --> 00:02:30.500
次の行のコードでは

00:02:30.500 --> 00:02:32.630
textView オブジェクトで
メソッドを呼び出します

00:02:33.770 --> 00:02:38.100
“.” [ドット] を入力すると textView
オブジェクトで呼び出し可能な

00:02:38.100 --> 00:02:39.730
メソッドが全て
出てきます

00:02:40.990 --> 00:02:44.340
入力を続けると
フィルタリングされて

00:02:44.340 --> 00:02:47.720
選択肢が
しぼられます

00:02:47.720 --> 00:02:51.230
“setText” を選び Enter を
押すと自動入力されます

00:02:53.140 --> 00:02:56.370
入力引数として
ストリングを入れます

00:02:56.370 --> 00:02:59.230
最後に setCcontentView の
行の内容を変えます

00:02:59.230 --> 00:03:04.240
XML layout ファイルを使わずに
“textView” に変えます

00:03:04.240 --> 00:03:06.810
では保存して
端末で実行します

00:03:07.860 --> 00:03:11.840
新たな画面には
“Hello world!” ではなく

00:03:11.840 --> 00:03:15.030
“Wow” と出るはずです

00:03:15.030 --> 00:03:15.660
出ましたね

00:03:16.680 --> 00:03:17.860
これではつまらないので

00:03:17.860 --> 00:03:20.390
少し面白く
作ってみましょう

00:03:20.390 --> 00:03:24.198
この textView オブジェクトで
他のメソッドを呼び出します

00:03:24.198 --> 00:03:27.254
色やフォントサイズを
変えましょう

00:03:27.254 --> 00:03:29.294
もっと冒険するなら

00:03:29.294 --> 00:03:32.780
更に他のメソッドを
呼び出してみましょう

00:03:32.780 --> 00:03:35.280
オンラインの
Documentation で

00:03:35.280 --> 00:03:38.370
他にどんなメソッドがあるか
textView を見てみましょう

00:03:38.370 --> 00:03:40.490
終わりましたらチェックを
入れて進みましょう

