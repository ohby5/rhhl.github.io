WEBVTT
Kind: captions
Language: zh-CN

00:00:00.210 --> 00:00:04.370
此前 我们看到 我们可以把一个数输入到 display 方法里

00:00:04.370 --> 00:00:08.350
我们来讨论方法输入和输出的不同

00:00:08.350 --> 00:00:11.460
将 MainActivity 里的 submitOrder 方法作为一个例子

00:00:12.510 --> 00:00:15.000
在这个方法里有好多行的代码

00:00:15.000 --> 00:00:16.670
当用户点击 Order 按钮时

00:00:16.670 --> 00:00:19.330
它将触发 submitOrde 方法被调用

00:00:19.330 --> 00:00:23.200
Android 设备将从上到下执行每一条指令

00:00:23.200 --> 00:00:26.980
然后它将触发calculatePrice 方法被调用

00:00:26.980 --> 00:00:30.400
它将跳到定义 calculatePrice 方法的地方

00:00:30.400 --> 00:00:33.830
在 MainActivity 文件底部

00:00:33.830 --> 00:00:37.020
Android 设备将从上到下执行方法里每一条指令

00:00:37.020 --> 00:00:41.270
然后返回 submitOrder 方法

00:00:41.270 --> 00:00:44.340
它将一直执行下去直到它触发了

00:00:44.340 --> 00:00:45.268
方法的结束指令

00:00:45.268 --> 00:00:47.240
当 calculatePrice 方法被调用的时候

00:00:47.240 --> 00:00:49.510
我们可以输入一些值

00:00:49.510 --> 00:00:53.620
这样当我们执行代码行的时候 就可以使用这些输入值

00:00:53.620 --> 00:00:55.070
作为方法的结果

00:00:55.070 --> 00:00:58.940
我们可以通过一个单一的输出值返回给调用者

00:00:58.940 --> 00:01:03.030
通过这种方式 输出值可以在后续代码行使用

00:01:03.030 --> 00:01:07.090
在 Java 里 我们所说的方法的输入参数

00:01:07.090 --> 00:01:09.520
可以是零个或者更多的输入参数

00:01:10.550 --> 00:01:13.370
在 Java 里 我们所说的输出一个返回值

00:01:13.370 --> 00:01:16.470
我们可以有零个或一个返回值

00:01:16.470 --> 00:01:20.420
举个输入参数的例子 输入 quantity

00:01:20.420 --> 00:01:22.840
到 calculatePrice 方法里

00:01:22.840 --> 00:01:26.957
这个方法能够使用 quantity 来计算出

00:01:26.957 --> 00:01:28.130
整个订单的总价

00:01:28.130 --> 00:01:31.350
然后 我们把总价作为一个返回值返回

00:01:31.350 --> 00:01:34.046
在下面这个 submitOrder 方法里 

00:01:34.046 --> 00:01:38.253
我们能够用这个总价做一些其他的事 比如在屏幕上显示

00:01:38.253 --> 00:01:40.930
创建收据 或者类似的事

00:01:40.930 --> 00:01:43.730
总结一下 这是我们定义 calculatePrice 方法的地方

00:01:43.730 --> 00:01:45.400
这是我们调用它的地方

00:01:45.400 --> 00:01:49.490
我们希望创建一个方法来计算咖啡订单的价格

00:01:49.490 --> 00:01:53.410
当前 我们在 submitOrder 方法里直接计算价格

00:01:53.410 --> 00:01:57.020
但是计算价格的逻辑有一点复杂

00:01:57.020 --> 00:01:59.030
所以我们用自己的方法来操作

00:01:59.030 --> 00:02:01.948
这样就可以在需要的时候多次调用 

00:02:01.948 --> 00:02:04.080
不用在任何地方复制粘贴代码

00:02:04.080 --> 00:02:07.730
随着 Android 开发经验的增加 判断能力也会得到提升

00:02:07.730 --> 00:02:11.850
比如判断何时需要创建新方法何时不需要

00:02:11.850 --> 00:02:14.690
这是需要经验和时间的

00:02:14.690 --> 00:02:17.640
这是我们第一次创建一个新的方法

00:02:17.640 --> 00:02:20.800
在我们自己的 MainActivity 里

00:02:20.800 --> 00:02:24.575
不像开始的时候从头编写它 我们想通过阅读一些代码片段

00:02:24.575 --> 00:02:28.460
来学着识别正确的方法

00:02:28.460 --> 00:02:31.700
所以在讲师注释里 我们将会提供三个选项

00:02:31.700 --> 00:02:35.830
阅读这三个代码片段 

00:02:35.830 --> 00:02:40.330
决定哪个选项是正确地实现了计算订单价格的方法

00:02:40.330 --> 00:02:42.330
当你点击讲师注释里的链接时

00:02:42.330 --> 00:02:46.850
你可以看到这只有代码选项A B C

00:02:48.380 --> 00:02:49.290
这样做的目标是

00:02:49.290 --> 00:02:53.360
让你在没有看过代码之前也能轻松阅读

00:02:53.360 --> 00:02:57.370
我们没有介绍过创建一个有效方法准确规则

00:02:57.370 --> 00:03:01.169
但是 我想要你做出你认为最正确的猜测

00:03:02.630 --> 00:03:05.091
你也可以去 Google 搜索 

00:03:05.091 --> 00:03:09.140
关于定义 Java 方法的更多的信息

00:03:09.140 --> 00:03:11.450
当你点击不同的搜索结果时

00:03:11.450 --> 00:03:15.100
你一定看到文档里你不明白的信息

00:03:15.100 --> 00:03:18.290
但是我希望即使你不理解页面上的这些内容 你依然感觉轻松轻松

00:03:18.290 --> 00:03:21.950
因为它不理解任何东西是完全正常的

00:03:21.950 --> 00:03:25.780
你需要做的只是浏览这些你能理解的文章

00:03:25.780 --> 00:03:28.030
以及与你手头工作相关的文章

00:03:29.140 --> 00:03:30.610
继续 阅读这三个选项的代码

00:03:30.610 --> 00:03:34.260
看一些网上的信息 然后做出你最好的猜测

00:03:34.260 --> 00:03:37.627
关于怎样正确地定义 calculatePrice 方法

