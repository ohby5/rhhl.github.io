WEBVTT
Kind: captions
Language: fr

00:00:03.350 --> 00:00:07.400
La méthode devrait renvoyer une chaîne de 
caractère, qui est le nom du compte.

00:00:07.400 --> 00:00:09.580
Jusqu’à présent, la méthode de signature 
semble bonne.

00:00:09.580 --> 00:00:13.090
On a le modificateur d’accès, le type de 
données renvoyées, le nom de la méthode,

00:00:13.090 --> 00:00:14.470
et pas de paramètres d’entrée.

00:00:14.470 --> 00:00:17.160
On a aussi une ouverture et 
une fermeture d’accolade.

00:00:17.160 --> 00:00:18.970
La première ligne de codes semble correcte.

00:00:18.970 --> 00:00:23.060
Elle renvoie une chaîne de caractères entre 
guillemets, et ensuite il y a un point-virgule.

00:00:23.060 --> 00:00:24.850
Donc, c’est la valeur de retour.

00:00:24.850 --> 00:00:28.530
Néanmoins, le problème vient d’une seconde
ligne où on voit une autre instruction

00:00:28.530 --> 00:00:31.200
de retour avec une autre valeur de retour.

00:00:31.200 --> 00:00:35.400
On a appris avant qu’on ne peut pas avoir de
lignes de codes après l’instruction de retour

00:00:35.400 --> 00:00:38.770
parce que celles-ci seront considérées 
comme inaccessibles par l’ordinateur.

00:00:38.770 --> 00:00:42.760
Donc, dans ce cas-là, cette méthode 
a une erreur sur la ligne 8.

00:00:42.760 --> 00:00:44.770
Ok, passons à la méthode 2 maintenant.

00:00:45.860 --> 00:00:50.190
La deuxième méthode consiste à ajouter
un pourboire de 4$ à l’addition actuelle.

00:00:50.190 --> 00:00:54.430
L’addition est un paramètre d’entrée, 
et le type de données est entier.

00:00:54.430 --> 00:00:58.630
La valeur de retour de la méthode devrait 
être le prix total de l’addition avec ces 4$

00:00:58.630 --> 00:01:00.340
de pourboire compris.

00:01:00.340 --> 00:01:02.540
Premièrement, vérifions la méthode 
de signature.

00:01:02.540 --> 00:01:04.230
Nous avons un modificateur d’accès.

00:01:04.230 --> 00:01:06.284
Il nous manque le type de données de 
retour, ça c’est bizarre.

00:01:06.284 --> 00:01:11.130
Et puis on a le nom de méthode et 
un paramètre d’entrée.

00:01:11.130 --> 00:01:14.730
Donc, le type de donnée de retour est un 
drapeau rouge, mais continuons à lire.

00:01:14.730 --> 00:01:18.500
À l’intérieur de la méthode on peut lire
addition retour +4 et point-virgule.

00:01:18.500 --> 00:01:20.630
Donc, ça c’est la valeur de retour.

00:01:20.630 --> 00:01:26.510
L’addition est une variable et on lui y ajoute 
quatre, donc cela estime une valeur unique.

00:01:26.510 --> 00:01:30.220
Et ensuite c’est un entier 
Qui devrait être renvoyé.

00:01:30.220 --> 00:01:33.440
Donc il nous manque 
le mot int juste ici.

00:01:33.440 --> 00:01:35.350
Et c’est sur la ligne 6.

00:01:35.350 --> 00:01:39.240
Donc dans le tableau on met que la méthode 
2 a une erreur sur la ligne 6 et

00:01:39.240 --> 00:01:41.650
on doit préciser 
le type de données de retour int.

00:01:42.960 --> 00:01:44.980
Regardons la troisième méthode.

00:01:44.980 --> 00:01:48.290
Cette méthode consiste à configurer 
l’application pour notre ville actuelle.

00:01:48.290 --> 00:01:50.090
Nous n’avons pas le code pour 
l’autre application.

00:01:50.090 --> 00:01:52.820
Mais, regardons simplement le code 
pour cette méthode-là.

00:01:52.820 --> 00:01:55.590
La méthode de signature commence 
avec un modificateur d’accès privé.

00:01:59.930 --> 00:02:02.500
Et ensuite le nom de méthode 
est appelé configuration.

00:02:02.500 --> 00:02:05.310
Il n’y a pas de paramètres d’entrée et 
on a une accolade ouverte et fermée.

00:02:06.410 --> 00:02:09.750
À l’intérieur de la méthode on voit 
qu’il y a une variable, elle

00:02:09.750 --> 00:02:15.550
ressemble à une variable globale de nom de ville 
et est configurée sur la chaîne de caractère London.

00:02:15.550 --> 00:02:20.086
Ok, d’après tout ce que j’ai pu observer, 
il n’y a fondamentalement pas de type

00:02:20.086 --> 00:02:22.800
de données de retour dans le 
commentaire ici.

00:02:22.800 --> 00:02:26.370
Il semble qu’on soit en train de ne
rien renvoyer comme résultat, donc

00:02:26.370 --> 00:02:31.580
souvenez-vous que le mot-clef dans Java
pour ne rien renvoyer est le mot void.

00:02:31.580 --> 00:02:35.610
Donc, je pense que l’erreur est sur la 
ligne 4, ici on doit dire void.

00:02:36.750 --> 00:02:38.210
Ok, donc, je l’ai ajouté au tableau.

00:02:39.500 --> 00:02:40.775
Maintenant, passons à la méthode 4.

00:02:42.300 --> 00:02:45.320
Cette méthode consiste à savoir 
le nombre d’étudiants dans une classe.

00:02:45.320 --> 00:02:48.040
La valeur de retour est le nombre 
d’étudiants qui est un entier.

00:02:48.040 --> 00:02:51.790
La méthode commence avec
un modificateur d’axe privé.

00:02:51.790 --> 00:02:55.770
Et ensuite le type de données de retour est 
un entier, donc, pour l’instant c’est pas mal.

00:02:55.770 --> 00:03:00.260
Le nom de méthode est getStudentClassSize
Et il n’y a pas de paramètre d’entrée.

00:03:00.260 --> 00:03:03.040
À l’intérieur de la méthode, 
nous avons un retour de mot-clef et

00:03:03.040 --> 00:03:05.850
puis on peut lire 20 entre guillemets, mais

00:03:05.850 --> 00:03:10.850
c’est bizarre, car c’est une chaîne de 
caractères et on veut qu’il renvoie un entier.

00:03:10.850 --> 00:03:15.334
Donc l’erreur est sur la ligne 7, où on 
doit renvoyer 20 sans guillemets.

00:03:15.334 --> 00:03:18.760
Et voilà à quoi devrait 
ressembler votre tableau.

