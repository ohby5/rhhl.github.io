WEBVTT
Kind: captions
Language: ko

00:00:00.070 --> 00:00:02.580
이번 퀴즈의 정답은 C입니다.

00:00:02.790 --> 00:00:04.530
정답을 못 맞췄더라도 걱정하지 마세요.

00:00:04.530 --> 00:00:07.850
아직 배우지 않은 주제이기 때문입니다.

00:00:08.039 --> 00:00:13.140
상위 레벨로 가서 각 보기가 왜 정답인지와
정답이 아닌지를 간단하게 설명하겠습니다.

00:00:13.250 --> 00:00:16.200
물론 다음 번 동영상에서 이에 대한
모든 용어들을 더 자세히 다루겠습니다.

00:00:17.130 --> 00:00:20.730
여기 세 개의 옵션을 살펴보고
이들의 차이점이 무엇인지 알아봅시다.

00:00:21.240 --> 00:00:25.030
우선 각 메서드의 코드 행이
동일하다는 사실을 눈치채셨을 겁니다.

00:00:25.240 --> 00:00:28.560
바로 여기와, 여기 그리고 여기가 그렇죠.

00:00:29.040 --> 00:00:31.930
또한 각 메서드 위에 있는 주석도 동일하죠.

00:00:32.060 --> 00:00:35.700
그리고 이 주석은 해당 메서드에 대한 설명이고요.

00:00:35.890 --> 00:00:37.950
또한 이 메서드는 수량에 따른 주문 가격을

00:00:37.990 --> 00:00:39.530
계산한 것이어야 합니다.

00:00:40.240 --> 00:00:43.770
또 다른 유사점은 모두가
'private'이라는 단어로 시작한다는 점이죠.

00:00:43.820 --> 00:00:45.700
아직은 이게 무엇을 의미하는지
모르겠지만, 괜찮습니다.

00:00:46.550 --> 00:00:48.510
그 다음 단어는 'int'이죠.

00:00:50.060 --> 00:00:54.690
B옵션에는 int라는 말이 없지만
C옵션에는 있지요.

00:00:54.910 --> 00:00:56.960
그러니까 이런 점에서 차이가 나는 거죠.

00:00:57.160 --> 00:00:58.790
다음 파트로 넘어가겠습니다.

00:00:58.940 --> 00:01:01.790
여기에 calculate price라고 두 단어로 되어 있죠.

00:01:01.960 --> 00:01:06.760
B옵션에는 CalculatePrice가 낙타 대문자로
한 단어처럼 붙어 있습니다.

00:01:07.540 --> 00:01:11.810
C옵션에도 낙타 대문자로 공백이 없습니다.

00:01:12.770 --> 00:01:17.520
다음으로 넘어가면 열린 괄호와
int 수량이 나오죠.

00:01:17.590 --> 00:01:20.800
그런데 닫힌 괄호가 없어서 좀 이상하죠.

00:01:21.030 --> 00:01:25.830
B옵션에는 열린 괄호와 닫힌 괄호가
나오고 int 수량이 들어 있습니다.

00:01:26.060 --> 00:01:29.600
C옵션에는 열린/닫힌 괄호와 int 수량이 나옵니다.

00:01:30.890 --> 00:01:34.680
그 다음 열린 중괄호와 닫힌 중괄호가 나옵니다.

00:01:34.720 --> 00:01:36.000
하지만 B옵션에는 없습니다.

00:01:36.340 --> 00:01:38.720
그런데 C옵션에는 있지요.

00:01:39.140 --> 00:01:42.770
지금까지 각 옵션의 차이점을
몇 가지 발견했습니다.

00:01:42.920 --> 00:01:46.270
어떤 메서드가 유효한 것인지

00:01:46.560 --> 00:01:47.980
구글 검색으로 예를 살펴보겠습니다.

00:01:48.080 --> 00:01:52.330
브라우저를 열어
define java method라고 검색하겠습니다.

00:01:53.550 --> 00:01:55.720
다른 검색어로 찾는 분도 있을 텐데

00:01:55.870 --> 00:01:57.410
그것도 괜찮습니다.

00:01:57.560 --> 00:01:59.030
첫 번째 링크가 좋아 보이네요.

00:01:59.120 --> 00:02:01.410
이건 자바의 공식 오라클 문서입니다.

00:02:01.610 --> 00:02:02.630
여기를 클릭하겠습니다.

00:02:02.820 --> 00:02:05.530
이 페이지를 본 적이 없으신 분이라면
지금 동영상을 멈추고

00:02:05.700 --> 00:02:09.580
강의 노트에 있는 링크를 클릭하여
해당 페이지를 훑어보시기 바랍니다.

00:02:09.910 --> 00:02:11.770
이 부분이 우리가 하고 있는 코드와
정확히 일치하지는 않지만

00:02:12.000 --> 00:02:16.380
이 메서드 선언의 요소와 우리 코드의
패턴을 맞추는 정도만 하면 됩니다.

00:02:16.610 --> 00:02:18.480
여기에 있는 다른 문장도 유익합니다.

00:02:18.620 --> 00:02:22.390
메서드 선언의 필수 요소는 메서드의 리턴 타입과 이름,

00:02:22.500 --> 00:02:27.850
괄호 한 쌍, 중괄호 사이의 바디라는 것에 대한 설명입니다.

00:02:28.520 --> 00:02:32.890
방금 제가 새로운 단어를 많이 언급했는데
이에 대한 내용은 아래에 있습니다.

00:02:33.020 --> 00:02:34.880
이에 대해 나중에 자세히 다루도록 하겠습니다.

00:02:35.800 --> 00:02:39.950
여기에 있는 정보를 이용하여 우리에게
주어진 옵션을 좁혀보도록 하겠습니다.

00:02:40.850 --> 00:02:45.090
이 옵션을 문서 페이지에 있는
올바른 메서드 선언과 비교해보면

00:02:45.520 --> 00:02:47.340
이 옵션이 틀렸다는 사실을 알 수 있죠.

00:02:48.370 --> 00:02:52.200
여기에 열린 괄호는 있지만
닫힌 괄호가 없기 때문입니다.

00:02:52.580 --> 00:02:57.030
이 문서에 따르면 괄호가
쌍으로 있어야 한다고 합니다.

00:02:57.160 --> 00:02:59.300
바로 여기와 여기처럼 말이죠.

00:03:00.390 --> 00:03:03.960
또한 메서드명은 필드나 변수의 명칭을 짓는 것과

00:03:04.240 --> 00:03:07.280
동일한 규칙을 따라야 한다고 문서에 언급되어 있습니다.

00:03:07.440 --> 00:03:10.980
즉 낙타 대문자를 써야 하고 이름 사이에
공백이 있어서는 안 된다는 말이죠.

00:03:11.100 --> 00:03:13.220
따라서 바로 여기 명칭은 유효하지 않습니다.

00:03:13.570 --> 00:03:17.100
따라서 A옵션도 안 되고, B옵션으로 가보면

00:03:17.280 --> 00:03:22.800
이 문서에서 필수 요소라고 꼽은
열린/닫힌 중괄호가 없습니다.

00:03:23.770 --> 00:03:29.680
B옵션에는 메서드명 앞에 와야 하는
메서드의 리턴 타입도 없습니다.

00:03:30.370 --> 00:03:32.420
바로 이 자리에 ‘int’ 단어가 있어야 하죠.

00:03:32.550 --> 00:03:36.540
이 메서드의 아웃풋으로
가격을 보내야 하기 때문입니다.

00:03:36.610 --> 00:03:38.880
따라서 B 옵션은 두 가지
이유에서 틀린 셈입니다.

00:03:39.000 --> 00:03:41.090
그러면 C옵션은 문제가 없기를 희망해봅시다.

00:03:41.240 --> 00:03:43.340
여기에 정확한 형태의 리턴 데이터가 있고

00:03:43.430 --> 00:03:47.850
낙타 대문자로 정확하게 적힌
메서드명도 있습니다.

00:03:47.930 --> 00:03:53.370
열린/닫힌 괄호는 물론
열린/닫힌 중괄호도 있습니다.

00:03:53.420 --> 00:03:55.040
따라서 이 옵션이 제일 좋지요.

00:03:55.120 --> 00:03:58.260
C옵션이 메서드의 필수 요소를
모두 갖추었습니다.

00:03:58.380 --> 00:04:00.370
다음 시간에 이에 대해
더 자세히 얘기해보겠습니다.

