WEBVTT
Kind: captions
Language: ja

00:00:00.640 --> 00:00:04.200
なぜオプションCが最善なのかを見るために、

00:00:04.200 --> 00:00:08.420
Javaのメソッドの宣言におけるシンタックスのルールを
見てみましょう。

00:00:08.420 --> 00:00:10.820
これはシグニチャというメソッドでもあります。

00:00:12.090 --> 00:00:13.460
これが以前見たcalculatePriceメソッドの

00:00:13.460 --> 00:00:16.239
シグニチャメソッドです。

00:00:16.239 --> 00:00:20.100
単語の順番が気になる人もいると思います。

00:00:20.100 --> 00:00:24.470
これはあるフォーマットを基準にしていて、
こんな感じになります。

00:00:24.470 --> 00:00:27.050
難しいかもしれませんが、大丈夫です。

00:00:27.050 --> 00:00:29.040
一つ一つ見ていきましょう。

00:00:30.550 --> 00:00:34.250
シグニチャメソッドの最初にprivateとあります。

00:00:34.250 --> 00:00:36.400
これはJava access modifierと呼ばれるものです。

00:00:37.410 --> 00:00:41.400
このcalculatePriceに誰がアクセスできるかを決めます。

00:00:41.400 --> 00:00:46.290
普通はprivateかpublicになります。

00:00:46.290 --> 00:00:51.010
これはprivateとなっているので、この
calculatePriceは

00:00:51.010 --> 00:00:55.590
このmain.activityの他のメソッドからしか
呼ぶことができないということです。

00:00:55.590 --> 00:00:56.830
main.activityの外では、

00:00:56.830 --> 00:01:00.750
例えば、他のアクティビティーでは、これは使えません。

00:01:00.750 --> 00:01:03.340
main.activityだけのものなのです。

00:01:03.340 --> 00:01:04.180
逆に、

00:01:04.180 --> 00:01:09.100
publicとなっていたら、誰でもこれを使うことができます。

00:01:09.100 --> 00:01:12.560
main.activity`でも他のアクティビティでも使えます。

00:01:13.710 --> 00:01:15.120
例えるとこんな感じになります。

00:01:15.120 --> 00:01:18.530
もし皆さんがセレブで公の場にいれば、
誰もが皆さんを知ることになります。

00:01:18.530 --> 00:01:19.730
私的で、

00:01:19.730 --> 00:01:24.420
家にばかりいたら、あなたを知っている人は
限られてきます。

00:01:24.420 --> 00:01:27.930
calculatePriceメソッドは、privateなので、

00:01:27.930 --> 00:01:30.440
main.activityの中だけで使われます。

00:01:30.440 --> 00:01:33.770
次に戻り値のタイプとしてintがあります。

00:01:33.770 --> 00:01:35.560
前のダイアグラムを覚えていますか？

00:01:35.560 --> 00:01:38.360
メソッドを呼ぶときは、インプットを渡して、

00:01:38.360 --> 00:01:39.910
アウトプットを受け取ります。

00:01:39.910 --> 00:01:44.140
戻り値のタイプは、返されるデータのタイプとなります。

00:01:44.140 --> 00:01:48.020
前のレッスンで学んだタイプはintとstring

00:01:48.020 --> 00:01:49.730
でしたよね。

00:01:49.730 --> 00:01:52.410
これはobjectタイプも返すことができます。

00:01:52.410 --> 00:01:54.449
これについてはまた後に学びます。

00:01:55.700 --> 00:01:58.150
このcalculatePriceメソッドは、

00:01:58.150 --> 00:02:02.030
整数である注文の合計を返しています。

00:02:02.030 --> 00:02:06.540
Facebookなどのソーシャルメディアのアプリで、
友達の数を出すメソッドがあれば、

00:02:06.540 --> 00:02:11.130
友達の数を示す整数を返すことができます。

00:02:11.130 --> 00:02:15.390
次にメソッドの名前です。この場合はcalculatePrice
となっていますね。

00:02:15.390 --> 00:02:19.730
変数を名前で呼ぶことができるように、
メソッドも名前で呼んで、

00:02:19.730 --> 00:02:23.790
そのコードを実行させることができます。

00:02:23.790 --> 00:02:28.120
メソッドを定義するドキュメンテーションで、メソッドの

00:02:28.120 --> 00:02:30.690
名前の付け方について載っています。

00:02:30.690 --> 00:02:34.450
後で読んでみてもいいでしょう。
基本的には、メソッドの名前は

00:02:34.450 --> 00:02:39.030
runやget、compareなどの動詞から始まるものとされています。

00:02:39.030 --> 00:02:40.880
小文字で始まり、

00:02:40.880 --> 00:02:43.360
複数の単語があればキャメルケースになります。

00:02:43.360 --> 00:02:46.400
メソッドの名前の次はかっこの中にある

00:02:46.400 --> 00:02:50.350
インプットのリストです。

00:02:50.350 --> 00:02:52.670
インプットはいくつあってもかまいません。

00:02:52.670 --> 00:02:57.010
何もインプットがなければ、
かっこの中は空で大丈夫です。

00:02:57.010 --> 00:02:59.150
インプットが一つの場合は、
こんな感じになります。

00:02:59.150 --> 00:03:00.730
複数のインプットがる場合は、

00:03:00.730 --> 00:03:03.890
それぞれをコンマで分けます。

00:03:03.890 --> 00:03:07.110
一つのインプット、またはインプットパラメータの場合を

00:03:07.110 --> 00:03:10.070
見てみましょう。

00:03:10.070 --> 00:03:14.060
データタイプと変数の名前を使って、

00:03:14.060 --> 00:03:16.460
インプットを定義します。

00:03:16.460 --> 00:03:18.170
インプットとアウトプットの図からすると、

00:03:18.170 --> 00:03:22.370
これは最初のインプットになります。

00:03:23.560 --> 00:03:28.030
このメソッドの中では、quantityという変数を使うことができます。

00:03:28.030 --> 00:03:30.190
他の変数と同じようなものです。

00:03:30.190 --> 00:03:32.930
その中には値が入っています。

00:03:32.930 --> 00:03:36.990
その値は、このメソッドを呼んで記入した

00:03:36.990 --> 00:03:38.570
インプットになります。

00:03:40.030 --> 00:03:43.850
メソッドシグニチャを変えて、もう一つインプットを加えたい場合は、

00:03:43.850 --> 00:03:47.290
二番目のインプットパラメータのタイプと

00:03:47.290 --> 00:03:48.980
名前を指定する必要があります。

00:03:48.980 --> 00:03:52.200
これで、このメソッドの中で、quantityやpriceOfOneCupなどの

00:03:52.200 --> 00:03:55.940
変数を使うことができます。

00:03:55.940 --> 00:03:59.220
このメソッドを呼ぶときは、正しい数のインプットを

00:03:59.220 --> 00:04:02.790
渡すことを忘れないでください。

00:04:02.790 --> 00:04:06.980
そしてインプットは正しいタイプでなければいけません。

00:04:06.980 --> 00:04:08.380
その順番も逆に記入することはできません。

00:04:08.380 --> 00:04:11.650
不適格な解釈を起こすことになります。

00:04:11.650 --> 00:04:15.210
インプットを記入したら、かっこ閉じを記入し、また

00:04:15.210 --> 00:04:16.980
かっこを記入します。

00:04:16.980 --> 00:04:20.640
これがメソッドの指令の始まりです。

00:04:20.640 --> 00:04:21.660
その後には、

00:04:21.660 --> 00:04:25.270
かっこ閉じを記入して、メソッドの終結を示します。

00:04:25.270 --> 00:04:27.060
ドキュメンテーションに戻ります。

00:04:27.060 --> 00:04:30.470
メソッドの宣言が今度は理解できると思います。

00:04:30.470 --> 00:04:32.760
まずaccess modifierですね。

00:04:32.760 --> 00:04:35.120
そして戻り値のタイプ、

00:04:35.120 --> 00:04:39.100
メソッドの名前、そしてインプット。

00:04:39.100 --> 00:04:42.760
ここでは４つのインプットがります。

00:04:42.760 --> 00:04:46.260
それぞれがタイプと名前を持っています。

00:04:46.260 --> 00:04:48.720
かっこがあり、

00:04:48.720 --> 00:04:50.610
その中に指令が入っています。

00:04:50.610 --> 00:04:51.990
そしてかっこ閉じ

00:04:53.100 --> 00:04:54.480
これがメソッドの宣言です。

00:04:55.640 --> 00:04:59.060
この問題では、異なるメソッドの宣言を見分ける

00:04:59.060 --> 00:05:00.850
練習をします。

00:05:00.850 --> 00:05:04.120
指導書にコードを載せます。

00:05:04.120 --> 00:05:08.000
アプリの中で使われるようなメソッドがたくさんあります。

00:05:08.000 --> 00:05:11.010
それぞれのメソッドの名前、

00:05:11.010 --> 00:05:12.800
インプット、

00:05:12.800 --> 00:05:14.010
戻り値のタイプを見分けることができるでしょうか。

00:05:15.030 --> 00:05:16.130
例を一つ一緒に見てみましょう。

00:05:17.910 --> 00:05:19.710
メソッドの例です。

00:05:19.710 --> 00:05:23.520
名前を使って挨拶のカスタムメッセージを
作ることです。

00:05:23.520 --> 00:05:27.270
戻り値は挨拶を表すテキストになります。

00:05:27.270 --> 00:05:29.580
コメントは今はスキップして、

00:05:29.580 --> 00:05:32.570
キャメルケースでメソッドの名前があります。

00:05:32.570 --> 00:05:35.130
creatCustomgreetingとあります。

00:05:35.130 --> 00:05:37.650
次にインプットです。

00:05:37.650 --> 00:05:39.780
これが最初のインプットパラメータです。

00:05:39.780 --> 00:05:42.490
タイプはstringで名前はfirstNameです。

00:05:43.520 --> 00:05:45.570
次に２つ目のインプットパラメータです。

00:05:45.570 --> 00:05:48.390
これはstringタイプで、nameという変数になっています。

00:05:48.390 --> 00:05:51.580
二つのインプットはコンマで分けられています。

00:05:51.580 --> 00:05:55.290
そしてかっこで閉じられています。

00:05:55.290 --> 00:05:57.350
そしてここにアウトプットがあります。

00:05:57.350 --> 00:06:00.605
戻り値のタイプはstringです。

00:06:00.605 --> 00:06:03.685
挨拶はstringで表すことができるからです。

00:06:03.685 --> 00:06:07.365
表に表すとこんな感じになります。

00:06:08.725 --> 00:06:11.245
残りの空欄を埋めてみてください。

