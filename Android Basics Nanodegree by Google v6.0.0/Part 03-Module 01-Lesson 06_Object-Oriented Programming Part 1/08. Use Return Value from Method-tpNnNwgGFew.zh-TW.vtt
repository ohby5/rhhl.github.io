WEBVTT
Kind: captions
Language: zh-TW

00:00:00.940 --> 00:00:04.070
首我們要更改calculatePrice方法簽字

00:00:04.070 --> 00:00:06.480
來設定正確的返回資料型別

00:00:06.480 --> 00:00:08.640
我們假設輸入參數的個數是0

00:00:09.850 --> 00:00:12.840
我們在這里定義calculatePrice方法

00:00:12.840 --> 00:00:15.930
這個方法的作用是計算訂單的總價格

00:00:15.930 --> 00:00:18.160
然后返回這個總價格

00:00:18.160 --> 00:00:19.660
價格應該是一個整數

00:00:19.660 --> 00:00:22.670
因此我們需要把返回資料型別從void改為int

00:00:23.730 --> 00:00:25.800
第一個任務就完成了

00:00:25.800 --> 00:00:29.130
測驗題還說 要確保沒有輸入參數

00:00:29.130 --> 00:00:29.930
這是確實沒有輸入參數

00:00:31.020 --> 00:00:34.150
第二個任務是修改方法內部的代碼

00:00:34.150 --> 00:00:36.798
保證正確地計算訂單的價格

00:00:36.798 --> 00:00:39.220
假設一杯咖啡的價格是$5.00

00:00:40.770 --> 00:00:43.880
在這個方法內 我們使用訂購杯數

00:00:43.880 --> 00:00:46.460
將它乘以每杯咖啡的單價$5

00:00:47.700 --> 00:00:49.860
就等于訂單總價

00:00:49.860 --> 00:00:51.100
這樣 我們就理解了這行代碼的含義

00:00:52.250 --> 00:00:56.920
但是有兩個問題 變數price從來沒有被使用

00:00:56.920 --> 00:00:59.490
而且有一個錯誤提示我們缺少返回陳述式

00:00:59.490 --> 00:01:03.470
它期望我們返回一個整數 但是我們沒有返回任何值

00:01:03.470 --> 00:01:07.120
現在我們的代碼是這樣的

00:01:07.120 --> 00:01:12.060
我們需要一行代碼來陳述返回值 然后把一個值放在這里

00:01:12.060 --> 00:01:13.950
返回值是價格

00:01:13.950 --> 00:01:18.220
因此我要放入price 這是我們在這里定義的一個變數

00:01:18.220 --> 00:01:20.760
很好 現在所有錯誤都消失了

00:01:20.760 --> 00:01:22.650
我們還應該修改 Java DOC.

00:01:22.650 --> 00:01:27.060
因此我們聲明 我們要返回總價

00:01:27.060 --> 00:01:30.090
當有人調用這個方法時 他們就知道會得到什么

00:01:31.600 --> 00:01:35.730
因此現在我們已經完成這個方法的所有定義工作

00:01:35.730 --> 00:01:38.600
現在讓我們轉到調用這個方法的位置

00:01:38.600 --> 00:01:41.939
在submitOrder方法內 我們應該調用calculatePrice方法

00:01:43.240 --> 00:01:46.120
現在價格計算方法的位置還不確定

00:01:46.120 --> 00:01:49.130
我需要復制它 把它貼在這里

00:01:49.130 --> 00:01:52.830
在我們計算訂單價格之前

00:01:52.830 --> 00:01:55.500
在訂單提交方法 我們需要為它定義一個方法

00:01:55.500 --> 00:01:57.670
我需要把它貼在這里

00:01:57.670 --> 00:01:59.910
現在刪除多余的分號

00:01:59.910 --> 00:02:03.170
我們注意到在這個方法中 價格是一個區域變數

00:02:03.170 --> 00:02:04.910
而且在這個方法中也是一個區域變數

00:02:04.910 --> 00:02:06.520
因此它們的名稱可以是相同的

00:02:06.520 --> 00:02:09.258
因為它們具有不同的變數適用范圍

00:02:09.258 --> 00:02:13.100
這里的價格變數和這里的變數完全沒有關系

00:02:13.100 --> 00:02:16.300
它們已經過更新 而且是互相獨立的

00:02:16.300 --> 00:02:19.750
這個方法執行完成后 price變數就消失了

00:02:20.830 --> 00:02:23.230
我們返回到submitOrder方法

00:02:23.230 --> 00:02:24.810
因此計算價格

00:02:24.810 --> 00:02:29.680
把它存放在變數中 我們可以使用它來建立價格訊息

00:02:30.820 --> 00:02:33.390
實隙上 這個代碼是通用的

00:02:33.390 --> 00:02:34.800
我們可以連結整數

00:02:34.800 --> 00:02:39.490
價格到總價字串 并附加貨幣符號

00:02:39.490 --> 00:02:43.680
然后我們連結"Thank you!" 顯示在熒幕上

00:02:43.680 --> 00:02:47.960
我要刪除這些多余的空白行 然后保存

00:02:47.960 --> 00:02:49.410
然后 我們可以在設備上運行程式

00:02:50.660 --> 00:02:52.250
我變更數量

00:02:52.250 --> 00:02:55.700
然后按一下ORDER 它就正確顯示價格為$25

00:02:56.790 --> 00:02:57.825
太好了 完全正確

00:02:57.825 --> 00:03:00.864
但是我怎樣確定calculatePrice已經發揮作用呢

00:03:00.864 --> 00:03:05.640
因為與我們以前的應用程式相比 使用者并不能看到明顯的變更

00:03:05.640 --> 00:03:09.524
你可以使用一些技術核實

00:03:09.524 --> 00:03:10.644
你的代碼實際在運行

00:03:10.644 --> 00:03:14.420
我可以讓它返回一個很大的數字 比如700.

00:03:14.420 --> 00:03:16.972
保存我的代碼 然后運行

00:03:16.972 --> 00:03:20.671
現在我期望 如果我變更數量

00:03:20.671 --> 00:03:25.226
然后按ORDER訂單 價格應該顯示為$700

00:03:25.226 --> 00:03:29.190
這樣我應知道這個價格計算方法實際上已經被調用

00:03:30.250 --> 00:03:31.610
運行正常 好極了

00:03:32.910 --> 00:03:35.040
現在我可以取消這個變更

00:03:35.040 --> 00:03:38.120
檢查這個方法是否被執行的另一種途徑

00:03:38.120 --> 00:03:39.220
在這里添加一個斷點

00:03:40.230 --> 00:03:43.390
我點這個調試小圖標

00:03:43.390 --> 00:03:45.040
我們的應用程式進入調試模態

00:03:46.370 --> 00:03:47.530
如果我變更數量

00:03:47.530 --> 00:03:51.250
然后按一下訂購 我期望程式在這里暫停

00:03:53.140 --> 00:03:54.580
它在這里暫停了

00:03:54.580 --> 00:03:57.460
現在我們位于價格計算方法之中

00:03:57.460 --> 00:04:00.100
有一個全域變數quantity

00:04:00.100 --> 00:04:05.340
如果我轉到下一行 我看現在這里有一個區域變數price

00:04:05.340 --> 00:04:12.670
它被設定為$15 因為數量是3 3乘以5等于15 好極了

00:04:12.670 --> 00:04:15.777
現在 將要執行價格計算方法

00:04:15.777 --> 00:04:18.834
如果我按一下Resume 它會正確更新熒幕

