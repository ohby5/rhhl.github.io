WEBVTT
Kind: captions
Language: zh-CN

00:00:00.480 --> 00:00:01.310
等等

00:00:01.310 --> 00:00:02.240
怎么啦？

00:00:02.240 --> 00:00:04.950
什么时候这个突然变成厨艺展示了？

00:00:04.950 --> 00:00:07.270
因为我们必须讨论方法？

00:00:07.270 --> 00:00:08.625
解释一下 Rachael Ray

00:00:08.625 --> 00:00:11.650
好的 你曾经烤过蛋糕吗？

00:00:11.650 --> 00:00:13.570
我之前吃过蛋糕

00:00:13.570 --> 00:00:14.120
好的

00:00:14.120 --> 00:00:15.790
好的 你完全有资格

00:00:15.790 --> 00:00:16.360
好的

00:00:16.360 --> 00:00:20.140
所有你烤蛋糕需要做的是放面 糖

00:00:20.140 --> 00:00:20.840
那些佐料

00:00:20.840 --> 00:00:21.351
是的 那些佐料

00:00:21.351 --> 00:00:22.210
耶

00:00:22.210 --> 00:00:24.730
之后你按照食谱

00:00:24.730 --> 00:00:28.240
- 好的 - 就出来一个蛋糕

00:00:28.240 --> 00:00:29.950
像这样？

00:00:29.950 --> 00:00:31.070
是的

00:00:31.070 --> 00:00:31.870
好的 很好

00:00:31.870 --> 00:00:33.820
再次联系类比的方法

00:00:33.820 --> 00:00:35.265
好的 所以为了

00:00:35.265 --> 00:00:37.185
你能够给一个方法输入参数

00:00:37.185 --> 00:00:39.955
比如我们在 display 方法放入 quantity

00:00:39.955 --> 00:00:43.545
是的 之后你按照方法的指令执行

00:00:43.545 --> 00:00:46.340
好的 就好像做蛋糕的食谱

00:00:46.340 --> 00:00:46.955
嗯嗯

00:00:46.955 --> 00:00:48.840
之后你可以返回输出值

00:00:48.840 --> 00:00:51.873
输出 它们很美味

00:00:51.873 --> 00:00:55.660
让我们搜索更多信息

00:00:55.660 --> 00:00:58.220
关于方法的输入参数

00:00:58.220 --> 00:01:01.460
我将要对 java method parameter 进行 Google 搜索

00:01:01.460 --> 00:01:04.250
第一个链接看起来不错所以我要点击它

00:01:04.250 --> 00:01:08.240
这篇文章谈论关于方法传递信息的知识

00:01:08.240 --> 00:01:12.270
这有关于计算房屋按月贷款的预付款项的一段代码

00:01:12.270 --> 00:01:16.850
它有四个输入参数 贷款额 利率

00:01:16.850 --> 00:01:20.440
本息 和贷款的时间周期

00:01:20.440 --> 00:01:24.680
之后我们可以用这个输入参数代替我们看到的方法

00:01:24.680 --> 00:01:28.100
简单的如同变量去做数学计算

00:01:28.100 --> 00:01:29.710
当我们调用计算computePayment方法

00:01:29.710 --> 00:01:33.890
要确定我们按照这个特定顺序输入

00:01:33.890 --> 00:01:37.130
所以付款额在第一位 之后是利率以及之后的

00:01:37.130 --> 00:01:38.480
在这部分的测验

00:01:38.480 --> 00:01:41.520
你将有机会更详细地回顾本文

00:01:41.520 --> 00:01:43.970
在 the desk Java 应用的 Mainactivity 里

00:01:43.970 --> 00:01:46.990
我们将要修改 display 方法和

00:01:46.990 --> 00:01:49.800
练习输入参数的方法

00:01:49.800 --> 00:01:52.680
注意我们的应用里的 decrement 方法

00:01:52.680 --> 00:01:54.880
调用了 display quantity 方法

00:01:54.880 --> 00:01:58.670
我们传入 quantity 变量给这个方法

00:01:58.670 --> 00:02:01.110
不过这个输入参数叫 number 所以

00:02:01.110 --> 00:02:04.420
无论何时我们想要引用这个输入 只需要声明 number

00:02:04.420 --> 00:02:07.880
技术上讲在这个方法里我们使用全局变量

00:02:07.880 --> 00:02:11.150
来代替传入一个参数

00:02:11.150 --> 00:02:14.430
但是为了教授关于输入参数的知识

00:02:14.430 --> 00:02:16.370
我们先这样

00:02:16.370 --> 00:02:19.480
我能修改这个调用 displayQuantity 的方法

00:02:19.480 --> 00:02:21.300
输入一个参数 30

00:02:21.300 --> 00:02:27.090
这是有效的因为它是符合要求的数据类型

00:02:27.090 --> 00:02:29.430
所以在 decrement 方法当我们调用 display quantity

00:02:29.430 --> 00:02:32.750
它会跳到这里并执行这个指令

00:02:32.750 --> 00:02:35.320
这个变量值将是30

00:02:35.320 --> 00:02:40.140
我将在我的设备上给你演示 所以当我点击减号按钮

00:02:40.140 --> 00:02:43.090
在我的应用 quantity 会显示30

00:02:43.090 --> 00:02:44.390
让我试试这个

00:02:45.410 --> 00:02:47.970
这里 就是我们预期的结果

00:02:47.970 --> 00:02:52.380
我同样能创建不同变量并传递给这个方法

00:02:52.380 --> 00:02:55.560
这里我创建一个局部变量叫 someQuantity 并且

00:02:55.560 --> 00:02:56.610
将它初始化为100

00:02:56.610 --> 00:02:59.770
将这个变量传给这个方法

00:02:59.770 --> 00:03:04.290
现在变量的值就变为100了

00:03:04.290 --> 00:03:06.350
让我在设备上运行

00:03:06.350 --> 00:03:10.224
现在我希望当我点击减号按钮这个 quantity 更新为100

00:03:11.280 --> 00:03:12.120
确实是这样

00:03:12.120 --> 00:03:14.630
你可以试一下

00:03:14.630 --> 00:03:17.560
不同的输入方法

00:03:17.560 --> 00:03:19.510
当你使用输入参数

00:03:19.510 --> 00:03:22.680
你可能会遇到其他的术语叫实参

00:03:22.680 --> 00:03:24.000
当你调用方法时

00:03:24.000 --> 00:03:27.570
传递给方法的参数叫实参

00:03:27.570 --> 00:03:28.730
现在这是一种有趣的单词

00:03:28.730 --> 00:03:31.630
因为当你听到 arguments 你将会想到人们争吵

00:03:31.630 --> 00:03:32.510
咒骂别人

00:03:32.510 --> 00:03:34.310
不过这不是这样的

00:03:34.310 --> 00:03:37.220
实参就是简单地传递给方法的输入

00:03:37.220 --> 00:03:42.150
形参就是方法定义时

00:03:42.150 --> 00:03:44.550
声明需要的输入

00:03:44.550 --> 00:03:48.060
形参和实参有一点区别

00:03:48.060 --> 00:03:49.790
无论如何 看看笔记

00:03:49.790 --> 00:03:53.040
关于方法参数的文章

00:03:53.040 --> 00:03:55.850
之后在你的应用里体验一下他们的用法

00:03:55.850 --> 00:03:58.650
首先试着重命名 number 形参

00:03:58.650 --> 00:04:01.380
在 display quantity 方法声明里

00:04:01.380 --> 00:04:03.850
只是给不同变量命名

00:04:03.850 --> 00:04:07.740
之后修改错误 再次运行应用

00:04:07.740 --> 00:04:10.660
在下一个练习 修改数据类型

00:04:10.660 --> 00:04:15.280
将形参 number 从 int 型转变为 String 型

00:04:15.280 --> 00:04:18.660
观察会发生什么并取消修改

00:04:18.660 --> 00:04:21.269
如果你可以尝试其他的东西

00:04:21.269 --> 00:04:22.690
例如 如果你有一个问题

00:04:22.690 --> 00:04:25.560
如果我做X 会发生什么 然后继续并尝试它

