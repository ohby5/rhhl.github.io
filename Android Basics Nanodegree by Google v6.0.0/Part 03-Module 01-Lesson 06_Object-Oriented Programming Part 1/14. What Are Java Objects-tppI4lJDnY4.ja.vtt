WEBVTT
Kind: captions
Language: ja

00:00:00.490 --> 00:00:01.635
ボックスを覚えてる？

00:00:01.635 --> 00:00:02.809
&gt;&gt; ボックス？

00:00:02.809 --> 00:00:04.090
&gt;&gt; これこれ

00:00:04.090 --> 00:00:06.910
&gt;&gt; ワオ！
&gt;&gt; 覚えてる？

00:00:06.910 --> 00:00:07.480
&gt;&gt; うん、覚えてる。

00:00:07.480 --> 00:00:08.260
覚えてるよ。

00:00:08.260 --> 00:00:10.380
値を入れられる変数でしょ？

00:00:10.380 --> 00:00:10.930
そう、

00:00:10.930 --> 00:00:15.020
それを組み合わせて大きなJavaオブジェクトを
作ることもできるのよ。

00:00:15.020 --> 00:00:16.790
&gt;&gt; ２つ以上の変数を使って、

00:00:16.790 --> 00:00:18.420
さらに大きなものを作るんだね。

00:00:18.420 --> 00:00:19.709
&gt;&gt; その通り。
&gt;&gt; 分かった。

00:00:19.709 --> 00:00:21.751
&gt;&gt; TextViewみたいだね。

00:00:21.751 --> 00:00:23.960
&gt;&gt; そう、だから整数の変数をつくることもできるわ。

00:00:23.960 --> 00:00:25.640
&gt;&gt; これがほんとサイズだね。

00:00:25.640 --> 00:00:26.210
&gt;&gt; その通り。

00:00:26.210 --> 00:00:27.752
&gt;&gt; 分かった。

00:00:27.752 --> 00:00:28.637
&gt;&gt; さらに文字列変数も

00:00:28.637 --> 00:00:29.460
加えることができるの。

00:00:29.460 --> 00:00:31.830
&gt;&gt; テキストに使う文字列だね。

00:00:31.830 --> 00:00:36.240
&gt;&gt; TextViewのステートとしてTextViewに取り組まれる
ことができるの。

00:00:36.240 --> 00:00:38.970
&gt;&gt; これから学ぶ方法で、こういうものを

00:00:38.970 --> 00:00:39.900
使うことができるんだね。

00:00:39.900 --> 00:00:40.500
&gt;&gt;　その通り。

00:00:40.500 --> 00:00:41.290
&gt;&gt; じゃあやってみよう。

00:00:42.480 --> 00:00:46.220
&gt;&gt;　前にも示したように、スクリーンにTextViewを表示するのは、

00:00:46.220 --> 00:00:49.690
アプリの中のJavaオブジェクトで管理されています。

00:00:49.690 --> 00:00:52.300
これがTextView　Javaオブジェクトの例です。

00:00:52.300 --> 00:00:55.890
ボックスのようなもので、その中にステートがあります。

00:00:55.890 --> 00:00:58.350
ステートはたくさんのフィールドでできています。

00:00:58.350 --> 00:01:00.240
レッスン２でグローバル変数について学んだように、

00:01:00.240 --> 00:01:02.760
フィールドは変数です。

00:01:02.760 --> 00:01:05.730
最終的にスクリーンに表示されるテキストである

00:01:05.730 --> 00:01:09.220
todayという変数をテキストフィールドとして持つことができます。

00:01:09.220 --> 00:01:13.520
このテキストのフォントサイズを決める整数フィールドを持つこともできます。

00:01:13.520 --> 00:01:14.910
他にフィールドはいろいろあります。

00:01:14.910 --> 00:01:19.460
テキストカラーやフォントファミリーなど、全てこのTextViewお
ステートを作り出すものです。

00:01:19.460 --> 00:01:21.900
このイメージにはないですが。

00:01:21.900 --> 00:01:23.940
このJavaオブジェクトを使ったり、アプリの起動中に

00:01:23.940 --> 00:01:28.420
変更したりするには、このTextViewの
メソッドを使います。

00:01:28.420 --> 00:01:31.020
レッスン３でメソッドについて学びました。

00:01:31.020 --> 00:01:35.120
TextViewのメソッドの例には、setTextやgetTextなどが
あります。

00:01:35.120 --> 00:01:39.910
setTextSizeやgetTextSizeなどもあります。

00:01:39.910 --> 00:01:43.190
それぞれのメソッドは特定の指令を実行します。

00:01:43.190 --> 00:01:45.590
onDrawなどの複雑なメソッドも使うことができます。

00:01:45.590 --> 00:01:48.440
これは、TextViewをスクリーンに描くためのものです。

00:01:48.440 --> 00:01:53.350
一般的に、このTextViewオブジェクトは、

00:01:53.350 --> 00:01:57.850
その中身のステート情報を持っていて、
メソッドを使って、このTextViewを使うことができます。

00:01:57.850 --> 00:02:01.500
ステートを変えたり、それより複雑な動作を
することができます。

00:02:02.850 --> 00:02:06.565
スクリーンにImageViewを表示するには、
アプリの中に、

00:02:06.565 --> 00:02:08.838
ImageViewのJavaオブジェクトがあります。

00:02:08.838 --> 00:02:13.710
このImageViewは、表示画像、スケール、クロップなどの、

00:02:13.710 --> 00:02:17.680
ステート情報を持っています。

00:02:17.680 --> 00:02:20.490
他にもフィールドがありますが、

00:02:20.490 --> 00:02:22.250
ここには書きませんでした。

00:02:22.250 --> 00:02:25.759
setImage、setScaleTypeなど、さらに複雑なフィールドがあります。

00:02:25.759 --> 00:02:30.330
onDrarなどは、このImageViewに描き込むためのものです。

00:02:30.330 --> 00:02:31.560
デベロッパーとして、

00:02:31.560 --> 00:02:35.480
onDrawをわざわざ読んで、スクリーンに描き込む
ということはしなくてもいいです。

00:02:35.480 --> 00:02:39.880
Androidが自動的にやってくれます。しかし、

00:02:39.880 --> 00:02:43.910
ImageViewを変えるメソッドを覚えておくと
便利です。

00:02:43.910 --> 00:02:47.580
このImageViewの中のすべてのフィールドを
どうやって見ることができるのでしょうか。

00:02:47.580 --> 00:02:50.530
また、メソッドを見るにはどうすればいいでしょうか。

00:02:50.530 --> 00:02:53.980
答えは、オブジェクトのクラスの定義にあります。

00:02:55.010 --> 00:02:57.574
TextView.javaというファイルです。

00:02:57.574 --> 00:03:00.890
MainActivity.javaを定義したのと似ています。

00:03:00.890 --> 00:03:05.130
このTextViewファイルには、ステートやメソッドを示す

00:03:05.130 --> 00:03:08.530
コードがたくさんあります。

00:03:08.530 --> 00:03:12.240
ステートやメソッドと書いてあるわけではありませんが、

00:03:12.240 --> 00:03:14.990
ステートとメソッドに関する情報が含まれています。

00:03:16.020 --> 00:03:19.970
これは、TextViewが動作する上でのルールと考えて
みるといいかもしれません。

00:03:19.970 --> 00:03:25.750
このオブジェクトは、todayという文字列など
具体的な情報を持つことができます。

00:03:25.750 --> 00:03:26.760
またはテキストサイズ１８などです。

00:03:26.760 --> 00:03:32.420
このクラスを使って、さらにTextViewオブジェクトを
作ることもできます。

00:03:32.420 --> 00:03:34.290
これらは違ったテキスト文字列を持つことができます。

00:03:34.290 --> 00:03:37.010
例えば、これはhelloというテキストをもち、

00:03:37.010 --> 00:03:39.800
これはgodbyeというテキストを持つことができます。

00:03:39.800 --> 00:03:43.050
違ったフォントサイズや色を持つこともできます。

00:03:44.080 --> 00:03:47.520
それでも、すべてはクラステンプレートを
元にしてできています。

00:03:47.520 --> 00:03:50.670
クラスとオブジェクトインスタンスを区別するのは、
難しいかもしれません。

00:03:50.670 --> 00:03:51.890
でも大丈夫です。

00:03:51.890 --> 00:03:53.760
慣れるには少し時間がかかります。

00:03:53.760 --> 00:03:55.630
類似を使ってみると、

00:03:55.630 --> 00:03:59.270
部屋の見取り図を作るのと似ています。

00:03:59.270 --> 00:04:02.680
この見取り図を使って実際に家を建てることが来ます。

00:04:02.680 --> 00:04:04.320
これらはそれぞれ違うかもしれませんが、

00:04:04.320 --> 00:04:06.990
すべてこの見取り図を基にしています。

00:04:06.990 --> 00:04:10.270
見取り図は家自体ではないということが
重要です。

00:04:10.270 --> 00:04:12.110
これは図にすぎません。

00:04:12.110 --> 00:04:17.079
同じように、TextViewクラスは、これらの
オブジェクトインスタンスを作るためにあります。

00:04:17.079 --> 00:04:20.480
これのインスタンスが実際のテキストや、テキストカラー、そしてテキストサイズを

00:04:20.480 --> 00:04:23.350
持ちます。

00:04:23.350 --> 00:04:25.010
クラスはどのようなものなのでしょうか。

