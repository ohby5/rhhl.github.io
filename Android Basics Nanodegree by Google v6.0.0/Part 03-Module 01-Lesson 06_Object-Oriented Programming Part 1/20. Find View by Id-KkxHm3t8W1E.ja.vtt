WEBVTT
Kind: captions
Language: ja

00:00:00.430 --> 00:00:02.969
Just Java アプリの
MainActivity に戻ります

00:00:02.969 --> 00:00:06.190
特に displayMessage メソッドに
注目しながら

00:00:06.190 --> 00:00:08.570
全てを把握しようと
していましたね

00:00:08.570 --> 00:00:13.870
findViewById メソッドの
宣言がここになくても

00:00:13.870 --> 00:00:18.740
定義は AppCompatActivity の
スーパークラスでされています

00:00:18.740 --> 00:00:20.440
setContentView も
同じく

00:00:20.440 --> 00:00:23.820
AppCompatActivity クラスで
定義されています

00:00:23.820 --> 00:00:26.710
このメソッドでは
何が起きていて

00:00:26.710 --> 00:00:29.300
何故リソース ID を入力する
必要があるのでしょうか

00:00:29.300 --> 00:00:31.930
何故ここにもう一対
丸括弧があるのでしょうか

00:00:31.930 --> 00:00:34.410
これらに答えるために
今までの学習内容をまとめて

00:00:34.410 --> 00:00:37.720
このコードがある理由を
導き出します

00:00:38.870 --> 00:00:40.350
この図表を
覚えていますか

00:00:40.350 --> 00:00:44.910
端末のアプリをクリックすると
MainActivity が開きます

00:00:44.910 --> 00:00:48.650
コード内で MainActivity の
onCreate メソッドがシステムから

00:00:48.650 --> 00:00:49.770
呼び出されます

00:00:49.770 --> 00:00:53.220
ここに setContentView という
メッソドとリソースレイアウト ID が

00:00:53.220 --> 00:00:55.340
共に含まれます

00:00:55.340 --> 00:00:59.710
前回は決まったコンテンツビューでの
一つのテキストビューでしたが

00:00:59.710 --> 00:01:01.950
今回はアプリにもう一つ
ビューを加えます

00:01:01.950 --> 00:01:04.650
レイアウトリソース ID を
入力します

00:01:04.650 --> 00:01:06.980
すると XML ファイルに
マッピングされます

00:01:06.980 --> 00:01:09.560
一旦コンテントビューを
設定すると

00:01:09.560 --> 00:01:13.200
XML レイアウトファイルを
探して各行を読みます

00:01:13.200 --> 00:01:18.140
各々が Java オブジェクトの
inflate または作成をします

00:01:18.140 --> 00:01:19.860
XML ファイルを通して

00:01:19.860 --> 00:01:23.040
Java オブジェクト全体の
階層を組み立てます

00:01:23.040 --> 00:01:27.090
各ビューが inflate する時
適切に設定するために

00:01:27.090 --> 00:01:31.600
コンストラクタや NewTextView
または NewLinearLayout を呼び出して

00:01:31.600 --> 00:01:34.760
全ての属性を Java の
オブジェクトに渡します

00:01:34.760 --> 00:01:38.700
NewTextView や NewLinearLayout の
コードを書いたりフォントサイズの

00:01:38.700 --> 00:01:40.650
設定は不要です

00:01:40.650 --> 00:01:44.540
全て inflation の過程で
出来ているからです

00:01:44.540 --> 00:01:48.290
アプリの起動中ビューに
変更などを加えるには

00:01:48.290 --> 00:01:49.830
例えばテキストやボタンを

00:01:49.830 --> 00:01:54.480
変更する場合は
Java オブジェクトを検索して

00:01:54.480 --> 00:01:58.560
見つけたら MainActivity 内で
変数として保存できます

00:01:58.560 --> 00:02:01.360
私たちは新たな TextViews を
最初から作るのではなく

00:02:01.360 --> 00:02:04.310
ビュー階層の中から既存の
オブジェクトを探すのです

00:02:06.060 --> 00:02:08.639
これらが今回使ってきた
MainActivity の変数です

00:02:08.639 --> 00:02:13.160
今回使った数量と価格
そして価格メッセージです

00:02:13.160 --> 00:02:15.830
ローカル変数と
グローバル変数があります

00:02:15.830 --> 00:02:19.520
ビュー階層でビューに行くには
特定のビューを参照する

00:02:19.520 --> 00:02:21.149
変数を作成します

00:02:22.500 --> 00:02:25.765
例えば変数 "quantityTextView"
を作ります

00:02:25.765 --> 00:02:28.580
この TextView の
参照値になります

00:02:28.580 --> 00:02:31.340
UI の + - ボタンを押すと

00:02:31.340 --> 00:02:34.340
TextView のテキストが変わり
違う数字が表示されます

00:02:36.220 --> 00:02:39.340
"orderSummaryTextView" という
変数もあります

00:02:39.340 --> 00:02:41.730
このビューを参照します

00:02:41.730 --> 00:02:44.590
ORDER [注文] ボタンを押すと
"orderSummaryTextView" の

00:02:44.590 --> 00:02:47.660
テキストが変わって新たな
発注明細が表示されます

00:02:47.660 --> 00:02:51.680
アプリ起動中に UI を
変更するにあたって

00:02:51.680 --> 00:02:55.440
特定のビューを示す変数が
いかに便利か分かりますね

00:02:55.440 --> 00:02:59.430
しかしこの TextView に
どうやって変数を

00:02:59.430 --> 00:03:00.790
繋げるのでしょうか

00:03:00.790 --> 00:03:03.780
"orderSummaryTextView" も
どうやって TextView に

00:03:03.780 --> 00:03:04.495
繋げるのでしょうか

00:03:06.250 --> 00:03:08.139
レイアウト XML ファイルに
戻ります

00:03:08.139 --> 00:03:11.699
特定のビューにビュー ID を
付けたのを覚えていますか

00:03:12.953 --> 00:03:17.400
このTextView のビュー ID は
"quantity.text.view" です

00:03:17.400 --> 00:03:21.340
そしてこのビュー ID は
"order.summary.text.view"

00:03:21.340 --> 00:03:24.240
ID を付けるかは任意です

00:03:24.240 --> 00:03:28.760
あとで参照する場合のみ
付ければいいのです

00:03:28.760 --> 00:03:33.180
全てにビュー ID を付けるのは
必須ではありません

00:03:33.180 --> 00:03:37.470
今回の Java コードでは
この２つのみ参照するので

00:03:37.470 --> 00:03:39.860
この２つにだけ ID を
つけましょう

00:03:40.880 --> 00:03:43.900
これらにだけビュー ID を
設定したので

00:03:43.900 --> 00:03:46.700
後ほど Java コードで
参照できます

00:03:46.700 --> 00:03:51.350
これらの変数もビューに
対して設定したので

00:03:51.350 --> 00:03:53.740
ビューが操作できます

00:03:53.740 --> 00:03:57.680
しかし変数と特定の
Java オブジェクトが

00:03:57.680 --> 00:04:01.160
どうやって繋がるのか
まだ知りません

00:04:01.160 --> 00:04:04.700
これらの繋がりも
知りません

00:04:04.700 --> 00:04:08.820
AppCompatActivity で
メソッドをお見せします

00:04:08.820 --> 00:04:12.560
findViewById と言って入力を
リソース ID としてみなします

00:04:13.810 --> 00:04:16.290
findViewById メソッドは

00:04:16.290 --> 00:04:21.220
入力された ID と一致する
ビューを検索します

00:04:21.220 --> 00:04:23.790
onCreate メソッドを経て

00:04:23.790 --> 00:04:28.890
XML からビュー階層の
ビューを検索します

00:04:28.890 --> 00:04:30.560
冒頭で話したように

00:04:30.560 --> 00:04:34.350
onCreate メソッドでは
ビュー階層を設定して

00:04:34.350 --> 00:04:39.405
findViewByID メソッドが
起動して対象を探します

00:04:39.405 --> 00:04:43.615
このメソッドの戻り値は
View のオブジェクトです

00:04:43.615 --> 00:04:47.415
左側の列は全てのメソッドの
戻り値です

00:04:47.415 --> 00:04:51.815
つまりこの activity コードで
findViewById を呼び出して

00:04:51.815 --> 00:04:56.670
リソース ID を入力すると
オブジェクトの戻り値が出て

00:04:56.670 --> 00:04:59.980
それを activity 内の
変数として保存できます

00:05:02.170 --> 00:05:04.300
MainActivity Java コードは
こう見えます

00:05:05.360 --> 00:05:07.230
findViewById を呼び出して

00:05:07.230 --> 00:05:12.140
ビューのリソース ID を
入力します

00:05:12.140 --> 00:05:15.050
"order.summary.text.view" を
ID として TextView に設定

00:05:15.050 --> 00:05:19.370
"R.id.order_summary_text_view"
として参照します

00:05:19.370 --> 00:05:23.490
これにより全階層を
トラバースして

00:05:23.490 --> 00:05:24.930
ID と一致する
ビューを検索します

00:05:26.110 --> 00:05:31.030
そして Java オブジェクトを
戻り値とします

00:05:31.030 --> 00:05:34.790
戻り値は左側の変数に
保存されて

00:05:34.790 --> 00:05:39.290
"orderSummaryTextView" という
View の変数になります

00:05:39.290 --> 00:05:42.610
そしてビューが戻って
ビュー変数に保存されます

00:05:42.610 --> 00:05:47.280
MainActivity の後半では
findViewById を呼び出して

00:05:47.280 --> 00:05:53.120
TextView のリソース ID
"R.id.quantity_text_view" を入力

00:05:53.120 --> 00:05:55.610
これが数量ピッカーの
TextView にできます

00:05:55.610 --> 00:05:58.847
これを呼び出すと
階層内で検索がされて

00:05:58.847 --> 00:06:01.460
その ID でビューを
探そうとします

00:06:01.460 --> 00:06:03.265
そしてビューの戻り値を

00:06:03.265 --> 00:06:07.190
"quantity_text_view" という
変数に保存できます

00:06:07.190 --> 00:06:09.490
この変数にも View の
データ型があります

00:06:10.490 --> 00:06:13.440
MainActivity 内では変数
"quantityTextView" と

00:06:13.440 --> 00:06:17.190
"orderSummaryTextView" が
あることとビュー階層で

00:06:17.190 --> 00:06:20.800
変数が Java オブジェクトに
繋がることが分かりました

00:06:20.800 --> 00:06:21.396
ここにあるのは

00:06:21.396 --> 00:06:25.460
各変数に対するデータ型を
左側に書き出したものです

00:06:26.690 --> 00:06:29.750
ここに宣言する通りこれらの
変数は View 型です

