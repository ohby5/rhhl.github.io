WEBVTT
Kind: captions
Language: zh-TW

00:00:00.920 --> 00:00:03.410
讓我們回到JustJava軟體一下子

00:00:03.410 --> 00:00:07.260
看看MainActivity等級\displayMessage方法

00:00:07.260 --> 00:00:09.950
事情在這裡開始有頭緒

00:00:09.950 --> 00:00:14.350
我們已經知道在創造叫
orderSummaryTextView的變數

00:00:14.350 --> 00:00:16.760
這個變數的資料類型是TextView

00:00:17.790 --> 00:00:19.610
這部份我們還不了解

00:00:20.740 --> 00:00:23.290
在下一行，我們呼叫
這個文字檢視目標的方法

00:00:24.650 --> 00:00:28.070
我們使用上述相同的變數名稱

00:00:28.070 --> 00:00:31.830
所以稱為
orderSummaryTextView.setText

00:00:31.830 --> 00:00:34.290
然後通過一個字串
作為方法的輸入

00:00:35.300 --> 00:00:38.790
字串訊息原本是輸入參數

00:00:38.790 --> 00:00:40.200
顯示訊息方法

00:00:41.720 --> 00:00:45.250
現在讓我們深入了解這個編碼
那是我們還不了解的

00:00:45.250 --> 00:00:48.210
看來findViewById是個方法呼叫

00:00:48.210 --> 00:00:53.530
因為是在這些括號之前
看起來像個輸入自變數

00:00:53.530 --> 00:00:57.458
但奇怪的是，這個方法
沒有在這等級中定義

00:00:57.458 --> 00:01:02.355
若我點兩下名稱
然後點command F

00:01:02.355 --> 00:01:07.560
或Windows上的control-F
我們可以試著搜尋檔案

00:01:07.560 --> 00:01:10.780
我只有看到findViewById兩個事件

00:01:10.780 --> 00:01:12.790
用法都很類似

00:01:12.790 --> 00:01:15.160
但我沒看到叫findViewById的方法

00:01:16.190 --> 00:01:19.640
講到這裡，稍早在主要活動等級

00:01:19.640 --> 00:01:23.450
我們看到呼叫setContentView
但若你搜尋

00:01:23.450 --> 00:01:26.280
這個檔案，並沒有在
主要活動裡定義

00:01:27.820 --> 00:01:29.620
因此，這些方法在哪裡定義？

00:01:30.620 --> 00:01:33.610
主要活動其實是個很短的檔案

00:01:33.610 --> 00:01:35.150
只有大概90行

00:01:35.150 --> 00:01:38.790
但這個等級比眼睛看到的還多

00:01:38.790 --> 00:01:42.200
編碼說延伸AppCompatActivity

00:01:42.200 --> 00:01:45.710
這表示主要活動是一個

00:01:45.710 --> 00:01:49.290
AppCompatActivity
等級功能的延伸

00:01:49.290 --> 00:01:52.790
若你在電腦看到活動列活動
那沒關係

00:01:52.790 --> 00:01:55.450
那只是較舊的版本

00:01:55.450 --> 00:01:58.770
你應該要用的最新版本是
AppCompatActivity

00:01:58.770 --> 00:02:02.420
AppCompatActivity給我們
倒退相容支援

00:02:02.420 --> 00:02:04.460
較舊的Android裝置

00:02:04.460 --> 00:02:07.980
AppCompatActivity是
Android支援圖書館的一部分

00:02:07.980 --> 00:02:11.740
讓我們能在較舊的Android裝置

00:02:11.740 --> 00:02:15.420
使用Android的最新UI功能

00:02:15.420 --> 00:02:17.940
透過延伸AppCompatActivity等級

00:02:17.940 --> 00:02:20.620
我們會得到所有的功能
所有的狀態以及

00:02:20.620 --> 00:02:24.490
MainActivity裡免費的方法

00:02:24.490 --> 00:02:26.980
我們不需要複製貼上編碼

00:02:26.980 --> 00:02:28.800
我們只要延伸等級

00:02:30.090 --> 00:02:31.020
若你有興趣

00:02:31.020 --> 00:02:35.880
你能搜尋AppCompatActivity
找到更多訊息

00:02:35.880 --> 00:02:39.700
這是AppCompatActivity等級的參考文件

00:02:39.700 --> 00:02:41.920
因為我安裝Chrome延伸

00:02:41.920 --> 00:02:43.120
我也可以檢視來源

00:02:43.120 --> 00:02:47.890
這是AppCompatActivity等級
定義的編碼

00:02:47.890 --> 00:02:50.360
你可以看到這裡有很多功能

00:02:50.360 --> 00:02:54.510
但是主要訊息是
你不需要了解如何執行

00:02:54.510 --> 00:02:58.350
你所要知道的是
當你延伸AppCompatActivity

00:02:58.350 --> 00:03:01.010
你會免費得到這個功能

00:03:01.010 --> 00:03:03.580
在高等級你可以看到這樣

00:03:03.580 --> 00:03:05.900
這是MainActivity的等級定義

00:03:05.900 --> 00:03:08.000
假設你有些方法定義

00:03:08.000 --> 00:03:12.350
當你延伸AppCompatActivity
我們則可以進入狀態

00:03:12.350 --> 00:03:14.200
以及從AppCompatActivity的方法

00:03:14.200 --> 00:03:17.870
現在，他們還沒有真正
加到主要活動等級

00:03:17.870 --> 00:03:19.280
但你可以想像他們在那裡

00:03:19.280 --> 00:03:22.930
因為你還是可以參考
狀態以及方法

00:03:22.930 --> 00:03:26.540
這是我們的編碼如何
參照向setContentView或

00:03:26.540 --> 00:03:27.840
findViewById的方法

00:03:27.840 --> 00:03:32.240
因為我們承襲這些方法
我們沒有在MainActivity定義他們

00:03:32.240 --> 00:03:35.110
MainActivity出現在裝置螢幕

00:03:35.110 --> 00:03:39.520
但我們沒有寫MainActivity的編碼
我們也是承襲使用

00:03:39.520 --> 00:03:42.750
我們沒有直接從
AppCompatActivity的狀態與方法

00:03:42.750 --> 00:03:46.840
但我們知道他們在那裡
並且可以參照他們

00:03:46.840 --> 00:03:50.260
講到承襲
這部分有好有壞

00:03:50.260 --> 00:03:52.540
有時候我們想承襲行為

00:03:52.540 --> 00:03:54.980
但有時候我們想要稍微修改

00:03:55.980 --> 00:03:59.900
若你想要從承襲等級
改變一些行為

00:03:59.900 --> 00:04:02.230
你可以複寫特定方法

00:04:02.230 --> 00:04:07.360
你可以在方法上方加
@override，電腦就會知道

00:04:07.360 --> 00:04:12.100
你不想要AppCompatActivity
的方法版本

00:04:12.100 --> 00:04:15.830
而是要你定義的版本

00:04:15.830 --> 00:04:18.620
這是個要小心的主題
並且需要很多練習

00:04:18.620 --> 00:04:21.660
但我們已經看過從AppCompatActivity

00:04:21.660 --> 00:04:23.640
複寫的一個例子

00:04:23.640 --> 00:04:26.380
這個方法是on create method

00:04:26.380 --> 00:04:31.170
透過在MainActivity複寫
on create method，我們明訂

00:04:31.170 --> 00:04:35.380
這個方法被呼叫時
要發生的事

00:04:35.380 --> 00:04:37.180
若你並沒有馬上了解，別擔心

00:04:37.180 --> 00:04:40.534
我只是給你一些目標導向程式概念的

00:04:40.534 --> 00:04:42.350
簡短概要

00:04:42.350 --> 00:04:46.160
你仍有問題是絕對在預期內的

00:04:46.160 --> 00:04:49.370
還需要閱讀更多這個主題

00:04:49.370 --> 00:04:50.860
來完全了解

00:04:50.860 --> 00:04:53.771
另一個方式來看
MainActivity

00:04:53.771 --> 00:04:58.220
與AppCompatActivity等級
是畫一個等級階級圖

00:04:58.220 --> 00:05:00.930
這與檢視階級圖不同

00:05:00.930 --> 00:05:05.340
因為檢視階級圖顯示
螢幕出現的項目樹狀圖

00:05:05.340 --> 00:05:07.810
等級階級圖顯示不同Java等級的

00:05:07.810 --> 00:05:09.990
關係

00:05:09.990 --> 00:05:12.860
有AppCompatActivity為總綱

00:05:12.860 --> 00:05:15.868
由於MainActivity
從AppCompatActivity延伸

00:05:15.868 --> 00:05:18.560
這是子等級

00:05:18.560 --> 00:05:22.200
當你看到這個等級定義
你延伸的東西叫做

00:05:22.200 --> 00:05:23.970
總綱

00:05:23.970 --> 00:05:25.770
這會是子等級

00:05:25.770 --> 00:05:29.070
若你建立另一個叫
detail activity的活動

00:05:29.070 --> 00:05:32.340
你延伸AppCompatActivity
這會是子等級

00:05:32.340 --> 00:05:33.409
這會是總綱

00:05:34.720 --> 00:05:37.840
這裡有另一個Java等級承襲的例子

00:05:37.840 --> 00:05:40.520
若你去思考
文字檢視、影像檢視

00:05:40.520 --> 00:05:44.460
與按鍵檢視都有共通點

00:05:44.460 --> 00:05:48.070
這些檢視在螢幕上都有寬與高

00:05:48.070 --> 00:05:51.330
我們還沒學到
但他們也有可見度狀態

00:05:51.330 --> 00:05:54.400
所以他們可以隱藏或顯示

00:05:54.400 --> 00:05:58.650
還有一些其他特性
都是很常見的

00:05:58.650 --> 00:06:02.370
除了在文字檢視等級
寫出這些編碼

00:06:02.370 --> 00:06:05.590
然後複製到影像檢視
然後按鍵檢視

00:06:05.590 --> 00:06:07.610
我們可以做些聰明的動作

00:06:07.610 --> 00:06:09.980
我們可以建立檢視等級

00:06:09.980 --> 00:06:14.110
我們可以從這些檢視
擷取共通的特性

00:06:14.110 --> 00:06:19.730
然後放到檢視等級
如此一來，只要寫一次編碼

00:06:19.730 --> 00:06:22.610
但我們如何讓文字檢視等級
與檢視等級

00:06:22.610 --> 00:06:24.000
有相關聯性？

00:06:24.000 --> 00:06:26.548
若你想到承襲，你就對了

00:06:26.548 --> 00:06:30.080
在TextView java檔案
我們要定義文字檢視等級

00:06:30.080 --> 00:06:33.240
如此一來我們會從檢視等級
承襲所有的數據與方法

00:06:34.270 --> 00:06:37.520
則不需要在TextView等級
有很多編碼

00:06:37.520 --> 00:06:41.860
因為部分的功能已經寫在檢視等級

00:06:41.860 --> 00:06:43.730
同樣適用ImageView

00:06:43.730 --> 00:06:46.800
與按鍵等級
我們不用寫那麼多編碼

00:06:46.800 --> 00:06:49.690
在這些檔案裡，我們只要寫

00:06:49.690 --> 00:06:53.090
ImageView與檢視等級不同的地方

00:06:53.090 --> 00:06:57.720
我把這想成定義變量
所以ImageView等級只要

00:06:57.720 --> 00:07:01.890
定義ImageView與檢視等級的差別

00:07:03.840 --> 00:07:06.960
若我們不想要從檢視等級
承襲特定行為

00:07:06.960 --> 00:07:11.760
我們可以在ImageView等級
與任何等級

00:07:11.760 --> 00:07:12.820
指定更新的行為

00:07:14.070 --> 00:07:16.680
提醒你用詞，在這等級裡

00:07:16.680 --> 00:07:20.039
TextView會是子等級
檢視會是總綱

00:07:21.430 --> 00:07:23.280
若我們回到TextView的文件

00:07:23.280 --> 00:07:27.310
我們可以了解這個部分

00:07:27.310 --> 00:07:30.000
這是TextView延伸檢視

00:07:30.000 --> 00:07:33.330
現在我們知道這表示
我們從ViewClass承襲

00:07:33.330 --> 00:07:35.280
狀態與方法

00:07:35.280 --> 00:07:38.330
下面這裡是等級階級圖

00:07:38.330 --> 00:07:41.884
顯示TextView等級
從ViewClass承襲

00:07:43.730 --> 00:07:46.530
依次，檢視等級從目標等級承襲

00:07:47.650 --> 00:07:50.060
若你探索，你可以發現其他等級

00:07:50.060 --> 00:07:54.780
像是EditText等級
是從TextView等級的延伸

00:07:54.780 --> 00:07:57.570
從TextView等級採用行為

00:07:57.570 --> 00:08:00.120
然後增加一些特定的功能

00:08:01.290 --> 00:08:03.590
因此EditText從TextView延伸

00:08:03.590 --> 00:08:06.720
然後TextView從View延伸
View從Object延伸

00:08:06.720 --> 00:08:09.830
這就是等級階級圖

00:08:11.370 --> 00:08:13.950
這裡有很多內容
你可以看上很久

00:08:13.950 --> 00:08:17.010
但讓我說明TextView文件頁另一件事

00:08:17.010 --> 00:08:20.820
我要說明SetVisibility的方法

00:08:20.820 --> 00:08:24.350
這是TextView等級中
SetVisibility的Java方法

00:08:24.350 --> 00:08:26.860
讓文字顯示或隱藏

00:08:28.000 --> 00:08:33.240
若我點這個方法
會帶我到View等級

00:08:33.240 --> 00:08:36.010
然後說明這個方法的用途

00:08:36.010 --> 00:08:39.860
因此你可以看到TextView目標
有設定可見度方法

00:08:39.860 --> 00:08:43.659
但這其實是從View等級承襲而來

00:08:43.659 --> 00:08:47.470
因此這個功能是免費的
從View等級來

00:08:47.470 --> 00:08:50.930
好，我們剛說了很多新概念

00:08:50.930 --> 00:08:56.040
通常這是電腦科學
一學期的課程

00:08:56.040 --> 00:08:58.260
我們現在要做點練習

00:08:58.260 --> 00:09:01.170
希望可以讓你連貫起來

00:09:01.170 --> 00:09:03.010
但要知道這需要很多時間

00:09:03.010 --> 00:09:06.610
以及練習來完全了解這些概念

00:09:06.610 --> 00:09:09.700
好，第一個習題
我要你建立另一個新Android軟體

00:09:09.700 --> 00:09:11.530
因為我們不要把just Java軟體搞砸

00:09:13.070 --> 00:09:14.640
當你建立案子之後
執行軟體

00:09:15.790 --> 00:09:18.630
當你建立軟體後
你會看到MainActivity檔案

00:09:18.630 --> 00:09:22.530
MainActivity檔案會從
AppCompatActivity延伸

00:09:22.530 --> 00:09:26.060
在你的Android工作室版本
若MainActivity從

00:09:26.060 --> 00:09:28.760
ActionBarActivity延伸
那也沒關係

00:09:28.760 --> 00:09:32.200
那是AppCompatActivity的舊版本

00:09:32.200 --> 00:09:35.650
透過移除方法複寫
我們要回去

00:09:35.650 --> 00:09:40.280
onCreate方法出現在
AppCompatActivity的方法

00:09:40.280 --> 00:09:44.540
這個方法的出現
說我們onCreate

00:09:44.540 --> 00:09:46.230
要不同的MainActivity行為

00:09:46.230 --> 00:09:49.540
因此移除這個
帶我們回到

00:09:49.540 --> 00:09:52.040
AppCompatActivity等級的原始狀態

00:09:52.040 --> 00:09:53.380
當你執行軟體

00:09:53.380 --> 00:09:57.250
跟第一次執行軟體相比
你發現什麼不同？

00:09:57.250 --> 00:09:58.510
在文字框格寫下你的答案

