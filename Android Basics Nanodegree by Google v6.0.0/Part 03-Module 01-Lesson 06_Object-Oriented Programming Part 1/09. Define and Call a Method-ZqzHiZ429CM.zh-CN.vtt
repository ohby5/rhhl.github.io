WEBVTT
Kind: captions
Language: zh-CN

00:00:00.640 --> 00:00:03.565
让我们一起来做第一步 给 MainActivity 添加一个新方法

00:00:04.930 --> 00:00:07.390
你可以在文件的任何地方添加方法

00:00:07.390 --> 00:00:11.100
只要它在其它方法的大括号之外

00:00:11.100 --> 00:00:14.230
我打算添加到之前定义的方法下面

00:00:14.230 --> 00:00:16.300
就是 calculatePrice 下面

00:00:16.300 --> 00:00:19.530
这里的访问修饰符是 private 因为需要

00:00:19.530 --> 00:00:22.960
访问这个方法的都在 MainActivity 中

00:00:24.180 --> 00:00:27.060
返回类型是 String

00:00:27.060 --> 00:00:30.550
因为 createOrderSummary 方法应该返回一个字符串

00:00:30.550 --> 00:00:34.665
这个方法的名字是 createOrderSummary

00:00:36.230 --> 00:00:38.940
输入是价格 这是个数字

00:00:40.340 --> 00:00:42.890
这样方法签名就写完了 但

00:00:42.890 --> 00:00:47.060
现在需要实现这个方法让它返回这条信息

00:00:47.060 --> 00:00:52.040
信息包含名字、数量、总额和 Thank you

00:00:52.040 --> 00:00:54.580
所以我继续复制这段代码

00:00:54.580 --> 00:00:56.590
粘贴到 createOrderSummary 方法中

00:00:56.590 --> 00:01:00.120
现在我们可以在这个基础上修改了

00:01:00.120 --> 00:01:01.150
区别是

00:01:01.150 --> 00:01:05.090
订单总价应该以名字开头 而非价格总额

00:01:05.090 --> 00:01:08.890
所以 我来把这段代码移动到下一行 留作后用

00:01:08.890 --> 00:01:12.359
我把 priceMessage 变量初始化为 Name：

00:01:12.359 --> 00:01:14.580
然后是 Kaptain Kunal

00:01:14.580 --> 00:01:17.660
下一行 我打算修改 priceMessage

00:01:18.690 --> 00:01:22.025
我打算把剩余内容附加到当前信息的后面

00:01:22.025 --> 00:01:26.485
写为 priceMessage + 然后是新的文字

00:01:26.485 --> 00:01:31.115
我想再加上 Quantity: 和 quantity变量

00:01:32.265 --> 00:01:34.095
因为 quantity 是个全局变量

00:01:34.095 --> 00:01:36.745
我们应该可以在这个方法里访问到它

00:01:36.745 --> 00:01:39.340
现在我们有了名字和数量

00:01:39.340 --> 00:01:44.020
下一行 我打算再次修改 priceMessage

00:01:44.020 --> 00:01:45.940
添加更多的文字

00:01:45.940 --> 00:01:48.700
事实上这段文字应该是价格总额

00:01:48.700 --> 00:01:50.270
我只能使用之前的

00:01:51.340 --> 00:01:55.080
然后在最后一行我们再次修改 priceMessage

00:01:55.080 --> 00:01:58.639
在这个字符串当前值的后面加上Thank you!

00:01:59.740 --> 00:02:02.210
一切顺利 但还是有点错误

00:02:02.210 --> 00:02:04.260
说是它缺少 return 声明

00:02:04.260 --> 00:02:07.090
因为我们想要返回一个汇总字符串

00:02:07.090 --> 00:02:10.370
然后我需要增加另一行代码 return

00:02:10.370 --> 00:02:12.240
然后是 return 的值

00:02:12.240 --> 00:02:15.210
在这里返回值是 priceMessage

00:02:15.210 --> 00:02:16.630
结尾也加上分号

00:02:17.660 --> 00:02:19.440
现在没有错误了

00:02:19.440 --> 00:02:22.150
代码看起来不错 所以运行一下 测试它

00:02:23.480 --> 00:02:26.300
现在如果我修改 QUANTITY 为 3

00:02:26.300 --> 00:02:28.930
点击 ORDER 按钮 它并不工作

00:02:30.620 --> 00:02:32.320
让我们一起看看哪里出错了

00:02:32.320 --> 00:02:35.260
仔细看一下代码 我知道问题在哪里了

00:02:35.260 --> 00:02:38.660
有个警告 说是 createOrderSummary 这个方法里 有个private

00:02:38.660 --> 00:02:39.730
方法还没被使用

00:02:39.730 --> 00:02:41.100
我忘记调用它了

00:02:41.100 --> 00:02:42.450
让我们回到测验页面

00:02:43.580 --> 00:02:46.910
我们成功的完成了第一个任务 但是现在我不得不

00:02:46.910 --> 00:02:50.010
从 submitOrder 方法中调用 createOrderSummary 方法

00:02:51.220 --> 00:02:55.300
回到 Android Studio 中我需要修改 submitOrder 方法

00:02:55.300 --> 00:02:57.300
我已经正确的计算了价格

00:02:57.300 --> 00:03:00.320
现在需要把它传递给 createOrderSummary

00:03:00.320 --> 00:03:03.860
我在这里操作 createOrderSummary

00:03:03.860 --> 00:03:05.690
用 price 变量

00:03:05.690 --> 00:03:08.340
这个方法的返回值将被保存

00:03:08.340 --> 00:03:10.380
到 priceMessage 中

00:03:10.380 --> 00:03:13.190
我不再需要这行代码了 因为

00:03:13.190 --> 00:03:15.260
Thank you 已经在这段文字里了

00:03:15.260 --> 00:03:16.680
所以删掉它

00:03:16.680 --> 00:03:20.800
为了更新屏幕 我必须用 displayMessage 调用

00:03:20.800 --> 00:03:23.230
priceMessage 变量 像之前一样

00:03:23.230 --> 00:03:25.410
现在我们再运行一下应用

00:03:25.410 --> 00:03:27.370
如果把 QUANTITY 的值改为3

00:03:27.370 --> 00:03:29.930
点击 ORDER 按钮 它仍然不起作用

00:03:31.080 --> 00:03:34.970
大多数文字都在一行里 其实应该分成多行

00:03:34.970 --> 00:03:37.210
回去 修改代码

00:03:37.210 --> 00:03:40.650
看看这里的代码 我发现我忘了加换行符

00:03:40.650 --> 00:03:43.950
这里只给 Thank you 换行 其它没有换行

00:03:43.950 --> 00:03:46.340
所以现在给其它行加上换行

00:03:47.510 --> 00:03:49.230
再运行一次

00:03:50.370 --> 00:03:51.600
起作用了

00:03:51.600 --> 00:03:52.830
真了不起

00:03:52.830 --> 00:03:56.050
现在 Kaptain Kunal 可以收到三杯咖啡了

00:03:56.050 --> 00:03:59.670
我想给大家演示一些优化方案 大家可以用在自己的代码中

00:03:59.670 --> 00:04:02.530
注意 你可以调用 createOrderSummary 方法中的 calculatePrice 方法

00:04:02.530 --> 00:04:07.170
而不是作为一个参数传入

00:04:07.170 --> 00:04:10.420
所以你可以在这里完成 calculatePrice 的调用

00:04:10.420 --> 00:04:12.880
这样同样可行

00:04:12.880 --> 00:04:16.250
但我想演示的是 你可以把一个方法的输出

00:04:16.250 --> 00:04:18.370
作为另一个方法的输入传给它

00:04:18.370 --> 00:04:20.040
所以我们保持不变

00:04:21.440 --> 00:04:23.874
在 createOrderSummary 方法中

00:04:23.874 --> 00:04:27.920
我还想演示一下 += 运算符的使用

00:04:27.920 --> 00:04:29.240
这是个缩写

00:04:29.240 --> 00:04:35.070
他表示 priceMessage = priceMessage +这里的部分

00:04:35.070 --> 00:04:40.660
如果我改变这一部分 都变成 += 会和之前一样

00:04:40.660 --> 00:04:43.680
这需要更少的输入 代码会更简单

00:04:44.740 --> 00:04:46.120
在 calculatePrice 方法中

00:04:46.120 --> 00:04:49.160
我要做的另一件事就是直接返回变量值

00:04:49.160 --> 00:04:54.030
而不是存储到一个局部变量中 然后返回它

00:04:54.030 --> 00:04:56.840
这同样也会让代码更简洁

00:04:56.840 --> 00:05:00.340
然后这里 在 submitOrder 方法中 不用创建订单总量

00:05:00.340 --> 00:05:03.880
并存放到一个变量中 然后在后面使用

00:05:03.880 --> 00:05:08.960
我只需要调用 createOrderSummary 然后调用 displayMessage

00:05:08.960 --> 00:05:11.290
效果一样

00:05:11.290 --> 00:05:14.590
createOrderSummary 的返回值是一个字符串

00:05:14.590 --> 00:05:19.190
它会作为输入参数传递给 displayMessage 方法

00:05:19.190 --> 00:05:21.410
如果觉得这样更容易阅读 可以原样保留

00:05:23.110 --> 00:05:25.630
所有这些技巧的逻辑都是相同的

00:05:27.030 --> 00:05:30.290
另外要记得 在这个方法上面添加一个 Java文档注释

00:05:30.290 --> 00:05:33.680
用来描述它的行为

00:05:33.680 --> 00:05:36.821
严格来讲私有方法不需要 Java文档注释

00:05:36.821 --> 00:05:39.449
不过写代码描述是个好习惯

00:05:39.449 --> 00:05:42.437
这样其他人在读你的代码时也可以理解

00:05:42.437 --> 00:05:44.380
你想做什么

00:05:44.380 --> 00:05:48.002
这个方法的描述是 它会创建一个订单汇总

00:05:48.002 --> 00:05:51.560
输入参数是订单的价格 返回值是汇总的文字

