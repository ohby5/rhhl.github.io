WEBVTT
Kind: captions
Language: ja

00:00:00.520 --> 00:00:03.270
前回はコンストラクタが
クラス内で定義され

00:00:03.270 --> 00:00:07.910
それがインスタンスの作成で
使われることを話しました

00:00:07.910 --> 00:00:10.610
ではインスタンスを
作成するために

00:00:10.610 --> 00:00:14.220
TextView コンストラクタを
繰り返し呼び出します

00:00:14.220 --> 00:00:17.190
コンストラクタの呼び出しでの
コードの使用方法を見ましょう

00:00:18.250 --> 00:00:22.280
“quantity” という名前の
新たな整変数を作成して

00:00:22.280 --> 00:00:24.960
初期値を “2” にしたことを
覚えていますか

00:00:24.960 --> 00:00:26.340
新規オブジェクトの作成と

00:00:26.340 --> 00:00:29.120
変数内への保存はそれと
類似したフォーマットで

00:00:30.200 --> 00:00:32.200
この様になります

00:00:32.200 --> 00:00:36.150
データ型は int ではなく
オブジェクトを使います

00:00:36.150 --> 00:00:38.770
オブジェクトのデータ型は
どんなクラス名にもできます

00:00:38.770 --> 00:00:41.650
今回は “TextView” です

00:00:41.650 --> 00:00:45.700
変数名も条件さえ守れば
名前は何でもいいです

00:00:45.700 --> 00:00:47.720
今回は “priceTextView”
にします

00:00:47.720 --> 00:00:49.600
イコールの後は新たな
オブジェクトです

00:00:49.600 --> 00:00:51.740
右側の部分は更に
分解できます

00:00:52.800 --> 00:00:58.060
右側は “new” の後に
オブジェクトデータ型で

00:00:58.060 --> 00:01:00.190
ここでは
“TextView” にします

00:01:00.190 --> 00:01:03.510
これが TextView クラスで
定義されたコンストラクタを

00:01:03.510 --> 00:01:07.940
呼び出すので入力引数が
入った丸括弧があります

00:01:07.940 --> 00:01:10.790
コンストラクタが
コンテキストオブジェクトを

00:01:10.790 --> 00:01:13.490
要求したらここで
“context” を渡します

00:01:13.490 --> 00:01:18.120
コンテキストオブジェクトは
アプリケーション環境に関して

00:01:18.120 --> 00:01:19.870
アプリケーションリソース等に
行く手助けになります

00:01:20.940 --> 00:01:24.140
コンストラクタを呼び出して
新規 TextView オブジェクトを

00:01:24.140 --> 00:01:26.060
作成します

00:01:26.060 --> 00:01:31.200
“priceTextView” という変数に
新規オブジェクトが保存されます

00:01:31.200 --> 00:01:34.830
変数はデータ型が定義した
単一の“priceTextView” の

00:01:34.830 --> 00:01:36.080
オブジェクトだけを
保持します

00:01:37.210 --> 00:01:39.850
ImageView オブジェクトを
作成して変数に保存する例を

00:01:39.850 --> 00:01:41.840
もう一つあげます

00:01:41.840 --> 00:01:45.770
データ型は “ImageView” で
変数名は “coffeeImageView”

00:01:45.770 --> 00:01:50.450
代入演算子のあとに
“new ImageView” がきます

00:01:50.450 --> 00:01:53.830
このオブジェクトデータ型と
全く同じ方法で入力します

00:01:53.830 --> 00:01:57.320
コンストラクタを呼び出して
入力内容を全て渡すので

00:01:57.320 --> 00:02:00.620
丸括弧をして中に
入力します

00:02:00.620 --> 00:02:03.420
３つ目の例では
Button オブジェクトを

00:02:03.420 --> 00:02:05.700
作ってこの変数に
保存します

00:02:05.700 --> 00:02:08.479
データ型は “Button” にして
変数名は “submitOrderButton”

00:02:08.479 --> 00:02:11.950
コンストラクタを呼び出す為に
ここは “new Button” にします

00:02:13.140 --> 00:02:15.850
独自のデータ型を
定義することも可能です

00:02:15.850 --> 00:02:19.820
例えばクラス定義で
“CatView” を作ると

00:02:19.820 --> 00:02:22.820
この行を使って
“new CatView” が出来ます

00:02:22.820 --> 00:02:25.380
コンストラクタの猫の名前で
ストリングの入力が

00:02:25.380 --> 00:02:29.180
必要なので丸括弧の中に
“Tiger” を入力して

00:02:29.180 --> 00:02:32.280
CatView コンストラクタに
渡します

00:02:32.280 --> 00:02:35.690
コンストラクタの入力で
渡すものを決めるには

00:02:35.690 --> 00:02:41.450
class Javadoc または
class source のファイルを見ます

00:02:41.450 --> 00:02:45.680
新たなオブジェクトなので
全てに “new” を使います

00:02:45.680 --> 00:02:47.730
Java キーワードリストに
戻ると

00:02:47.730 --> 00:02:51.040
確かに new という
言葉があります

00:02:52.190 --> 00:02:54.710
Documentation を見ると
コンストラクタではなく

00:02:54.710 --> 00:02:58.820
factory メソッドを
使うように指示される

00:02:58.820 --> 00:03:01.510
こともあります

00:03:01.510 --> 00:03:02.710
例をあげます

00:03:02.710 --> 00:03:04.290
新規 MediaPlayer を
作成します

00:03:04.290 --> 00:03:09.040
“MediaPlayer.create” を
使うように指示されます

00:03:09.040 --> 00:03:13.250
これが MediaPlayer オブジェクトを
戻して変数に保存します

00:03:13.250 --> 00:03:17.176
オブジェクトのデータ型を
“MediaPlayer” で始めて

00:03:17.176 --> 00:03:22.720
. [ドット] の後に factory --
メソッド名を “create” にして

00:03:22.720 --> 00:03:26.110
入力引数を渡して
MediaPlayer を初期化します

00:03:27.390 --> 00:03:29.710
続いては Toast の
作成例です

00:03:30.900 --> 00:03:33.700
Toast は一時的に
現れて消える

00:03:33.700 --> 00:03:34.389
ポップアップメッセージ
です

00:03:35.420 --> 00:03:38.540
オブジェクトの
データ型なので

00:03:38.540 --> 00:03:39.800
コードは “Toast” で
始まります

00:03:39.800 --> 00:03:44.050
続いて factory メソッド名の
“.makeText” になります

00:03:44.050 --> 00:03:48.730
入力引数を渡して
Toast を作成します

00:03:48.730 --> 00:03:51.800
factory メソッド名と
入力引数を知るには

00:03:51.800 --> 00:03:55.280
Toast クラスの Documentation を
見て下さい

00:03:55.280 --> 00:03:58.440
コンストラクタか
factory メソッドを使い

00:03:58.440 --> 00:04:01.780
オブジェクトを作成する
要否は Google 検索で

00:04:01.780 --> 00:04:03.640
分かります

00:04:03.640 --> 00:04:06.940
新規オブジェクトの作成には
コンストラクタが一般的です

00:04:06.940 --> 00:04:10.180
factory メソッドは
あまり一般的ではないです

00:04:10.180 --> 00:04:12.690
どちらにするかも
Google 検索で

00:04:12.690 --> 00:04:13.820
分かります

00:04:15.000 --> 00:04:18.180
オブジェクト作成の練習は
ここで出来ます

00:04:18.180 --> 00:04:20.050
これらのコードの各行には
エラーがあります

00:04:21.160 --> 00:04:22.380
そのエラーを
特定しましょう

00:04:22.380 --> 00:04:24.770
then write the correct line
of code in these boxes below.
そして正しいコードを
下の空欄に書きましょう

