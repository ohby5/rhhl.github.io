WEBVTT
Kind: captions
Language: zh-CN

00:00:00.390 --> 00:00:03.210
在这个测验中 你将练习创建一个 TextView 对象

00:00:03.210 --> 00:00:05.210
然后调用它的方法

00:00:05.210 --> 00:00:06.930
由于这只是用来练习

00:00:06.930 --> 00:00:11.250
在Just Java 应用之外 我们可以用一个新的 Android 应用来完成它

00:00:11.250 --> 00:00:13.020
这样就不会和 JustJava 应用混淆

00:00:14.370 --> 00:00:19.070
通过 File &gt; New Project 在 Android Studio 中打开项目向导

00:00:19.070 --> 00:00:21.650
接受所有这些默认选项

00:00:21.650 --> 00:00:25.620
确保你选择了 Blank Activity 模板 然后单击Finish

00:00:28.210 --> 00:00:31.190
一旦你的项目创建完成 在你的设备上运行它

00:00:32.380 --> 00:00:36.220
默认的行为是在屏幕的这个地方显示 Hello World!

00:00:36.220 --> 00:00:38.220
但是现在我们要做一些改变

00:00:38.220 --> 00:00:42.340
在 MainActivity 类中 我们要修改 onCreate 方法

00:00:42.340 --> 00:00:46.600
不在 MainActivity 的 XML 布局文件中调用 setContentView 方法

00:00:46.600 --> 00:00:49.080
我们创建自己的 TextView 把它放在这里

00:00:50.390 --> 00:00:51.960
在 Android Developers 网站中

00:00:51.960 --> 00:00:56.010
有一个 Training 模块 在这个模块中讨论了如何创建你的第一个应用

00:00:56.010 --> 00:00:59.600
具体来说 我看一下这个 Display the Message 的教程

00:00:59.600 --> 00:01:02.220
它告诉你 在 activity 的 onCreate 方法中

00:01:02.220 --> 00:01:03.930
我们创建一个 TextView

00:01:03.930 --> 00:01:07.290
我们在之前的课程中见到过这句代码

00:01:07.290 --> 00:01:08.850
我们正在创建一个新的 TextView

00:01:08.850 --> 00:01:11.720
并且把它存放在 textView 变量中

00:01:11.720 --> 00:01:14.708
构造函数需要一个语境作为输入参数

00:01:14.708 --> 00:01:18.140
传入 this 作为 输入参数

00:01:18.140 --> 00:01:21.780
因为 this 指向当前的 activity

00:01:21.780 --> 00:01:24.450
activity 是一个语境 所以 this 也是

00:01:24.450 --> 00:01:27.530
this 将会为我们创建一个正确的 TextView

00:01:27.530 --> 00:01:30.610
然后我们可以调用 TextView 对象的方法了

00:01:30.610 --> 00:01:35.330
记住 textView 是一个变量名 而不是 TextView 类

00:01:35.330 --> 00:01:38.360
这就是为什么这里的 t 是小写的

00:01:38.360 --> 00:01:42.430
我们可以调用 textView.setTextSize 和 textView.setText 作为例子

00:01:43.830 --> 00:01:47.160
向下拉滚动条 显示着调用 setContentView

00:01:47.160 --> 00:01:49.890
传入 textView 作为输入参数

00:01:49.890 --> 00:01:51.690
接着向下拉 这里有一些

00:01:51.690 --> 00:01:53.230
onCreate 方法的示例代码

00:01:54.230 --> 00:01:55.520
我们不需要这部分内容

00:01:55.520 --> 00:01:58.360
我们只关注 创建 textView 的部分

00:01:58.360 --> 00:02:01.160
然后我们把它设置为 activity 布局的 contentView

00:02:02.440 --> 00:02:04.610
回到 Android Studio 中的 MainActivity 类

00:02:04.610 --> 00:02:07.030
我要修改 onCreate 方法

00:02:07.030 --> 00:02:08.394
我在这里插入一些空行

00:02:09.535 --> 00:02:12.065
首先 我将使用构造函数创建一个新的 TextView 对象

00:02:13.245 --> 00:02:15.535
给它一个变量名称 textView

00:02:15.535 --> 00:02:20.075
你也可以给它起别的名字 只要能够恰当的

00:02:20.075 --> 00:02:21.075
描述它的性质就可以了

00:02:22.080 --> 00:02:24.870
构造函数需要一个语境

00:02:24.870 --> 00:02:28.100
我们把 this 传入 来指向这个 activity

00:02:28.100 --> 00:02:30.500
在下一行的代码中

00:02:30.500 --> 00:02:32.630
我将调用 textView 对象的方法

00:02:33.770 --> 00:02:38.100
当我输入 ． 的时候　这里就会显示所有

00:02:38.100 --> 00:02:39.730
textView　对象可调用的方法

00:02:40.990 --> 00:02:44.340
如果我输入一些字符　这些选项就会自动过滤

00:02:44.340 --> 00:02:47.720
你可以看到这些选项已经变少了

00:02:47.720 --> 00:02:51.230
我将选择 setText 点击回车自动完成

00:02:53.140 --> 00:02:56.370
然后我输入一个字符串作为输入参数

00:02:56.370 --> 00:02:59.230
最后一步是修改 setContentView 这行

00:02:59.230 --> 00:03:04.240
不用 XML 布局文件 我们将 textView 粘贴过来

00:03:04.240 --> 00:03:06.810
保存一下 然后在设备上运行它

00:03:07.860 --> 00:03:11.840
我所期望的是屏幕上显示一个新的 TextView

00:03:11.840 --> 00:03:15.030
写着 Wow！ 而不是写着 Hello World！

00:03:15.030 --> 00:03:15.660
确实是这样的

00:03:16.680 --> 00:03:17.860
这也太没有挑战性了

00:03:17.860 --> 00:03:20.390
我希望你做一些有趣的事情

00:03:20.390 --> 00:03:24.198
我希望你调用这个 textView 其他的方法

00:03:24.198 --> 00:03:27.254
例如改变颜色或者文本大小

00:03:27.254 --> 00:03:29.294
如果你想尝试更多

00:03:29.294 --> 00:03:32.780
你可以试着调用 textView 其他的方法

00:03:32.780 --> 00:03:35.280
看看 textView 的在线文档

00:03:35.280 --> 00:03:38.370
可以知道有哪些其他的可用方法

00:03:38.370 --> 00:03:40.490
当你完成了 勾选这些方框 继续

