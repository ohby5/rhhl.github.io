WEBVTT
Kind: captions
Language: tr

00:00:00.520 --> 00:00:03.700
Şimdi, Java kodunun içinde XML kaynaklarına atıf yapabileceğimizi biliyoruz.

00:00:04.710 --> 00:00:08.680
Ama kaynaklarla Java kodu arasındaki ilişki tam olarak nedir?

00:00:08.680 --> 00:00:11.380
Tam bir uygulamanın parçası olarak nasıl bir araya gelmekteler?

00:00:12.460 --> 00:00:15.215
Just Java uygulama ikonuna bastığınız andan başlayalım.

00:00:16.335 --> 00:00:18.615
Ana Aktivite'yi açar.

00:00:18.615 --> 00:00:21.925
Şu anda bir şey görmezsiniz, çünkü başlatılmaktadır.

00:00:21.925 --> 00:00:25.835
Burada iyi olan nokta, başlatılma sürecindeki pek çok karışık durum

00:00:25.835 --> 00:00:28.565
sizin için otomatik olarak Android tarafından yapılmaktadır.

00:00:28.565 --> 00:00:31.995
Bizim burada önem verdiğimiz kısım, Ana Aktivite dosyası içinde

00:00:31.995 --> 00:00:34.875
Oluşturma metodunun otomatik olarak oluşmasıdır.

00:00:34.875 --> 00:00:37.590
Bu aşamada aktivite oluşturulmaktadır.

00:00:37.590 --> 00:00:40.580
Biraz iş var ve sonra İçeriği Göstermeyi ayarla diyen

00:00:40.580 --> 00:00:45.120
bir satır ve düzenleme dosyası için kaynak Kimliği vardır.

00:00:45.120 --> 00:00:47.640
Adı R.layout.activity_main.

00:00:47.640 --> 00:00:52.280
Bu, aktivitenin içerik izlemesinin aktivitenin ana XML dosyasında açıklandığı gibi

00:00:52.280 --> 00:00:55.720
düzene yerleştirilmesi anlamına gelecektir.

00:00:55.720 --> 00:00:59.700
Bu metod çağrısıdır ve girdi parametresi bu kaynak Kimliğidir.

00:00:59.700 --> 00:01:02.600
İçeriği görmek için kullanacağınız düzeni ayarladığınızda

00:01:02.600 --> 00:01:07.660
Android cihazı başlayabilir ve bu XML düzen dosyasını çözümlemeye başlayabilir.

00:01:07.660 --> 00:01:09.410
Çözümleme, bu dosyayı okuyup

00:01:09.410 --> 00:01:12.490
ve onu yorumlamaya çalışmaktır; örneğin, bu bir çizgisel plan demek gibi.

00:01:12.490 --> 00:01:13.570
Bu bir metin görüntüsü gibi.

00:01:13.570 --> 00:01:15.270
Bunlar özellikler, ve bunun gibi.

00:01:15.270 --> 00:01:18.850
Yani aslında dosyanın ne içerdiğini anlamaya çalışmaktır.

00:01:18.850 --> 00:01:21.960
Android cihazı dosyanın üstünden başlayarak okur.

00:01:21.960 --> 00:01:24.670
Burada çizgisel bir plan olduğunu anlar.

00:01:24.670 --> 00:01:29.170
Daha sonra bu çizgisel planı temsilen bir Java nesnesi şişirir.

00:01:29.170 --> 00:01:30.570
Daha sonra bir sonraki satıra gider ve

00:01:30.570 --> 00:01:36.120
Metin İzlemeyi kolayca çizgisel plana eklememiz gerektiğini görür, aynen böyle.

00:01:36.120 --> 00:01:39.865
Bu ikinci derste görüş hiyerarşisine benzemeye başlıyor.

00:01:39.865 --> 00:01:43.125
Size daha önce söylemediğim şey, bunun aslında Java nesneleri arasında

00:01:43.125 --> 00:01:45.265
bir hiyerarşi olduğu.

00:01:45.265 --> 00:01:47.975
Daha sonraki videolarda Java nesneleri hakkında daha fazla şey öğreneceğimizden

00:01:47.975 --> 00:01:50.515
şimdiden tam olarak anlamamanız normal.

00:01:50.515 --> 00:01:53.085
Bir sonraki satıra geçtiğimizde çizgisel planlı bir Java nesnesi

00:01:53.085 --> 00:01:55.385
şişirmemiz gerektiğini görüyoruz.

00:01:55.385 --> 00:01:58.855
Bu, kök Çizgisel Plan'a bir çozuk gibi eklenir. T

00:01:58.855 --> 00:02:00.480
Sonra bir Düğme unsuru görürüz.

00:02:00.480 --> 00:02:03.300
Ve bunu bir çocuk gibi Çizgisel Plan'a ekleriz.

00:02:03.300 --> 00:02:07.470
izleme hiyerarşimiz için ihtiyacımız olan tüm izlemeleri şişirene dek

00:02:07.470 --> 00:02:09.280
dosyada aşağıya doğru devam ederiz.

00:02:09.280 --> 00:02:13.740
Java nesnelerinin bu izleme hiyerarşisine ulaştığımızda, onları uygulama çalışırken

00:02:13.740 --> 00:02:15.470
kullanabilir ve değiştirebiliriz.

00:02:16.570 --> 00:02:19.930
Buradaki Metin İzleme gibi bir nesne durum hakkında bilgi içermektedir.

00:02:19.930 --> 00:02:23.070
Metin gibi, metin rengi, metin boyutu.

00:02:23.070 --> 00:02:26.880
Nesnedeki metodlar sayesinde bunları çağırıp

00:02:26.880 --> 00:02:29.130
onların içsel durumlarını değiştirebiliriz.

00:02:29.130 --> 00:02:31.670
Yani örneğin uygulama çalışırken metni değiştirebiliriz.

00:02:32.690 --> 00:02:36.700
Tüm bu nesnelerle etkileşim kurmaya nesne odaklı programlama adı verilmektedir.

00:02:36.700 --> 00:02:40.220
Daha sonraki videolarda bunu daha detaylı olarak ele alacağız.

00:02:40.220 --> 00:02:44.230
Özetlemek gerekirse ana aktivitede bu plana ayarla İçerik İzleme'yi çağırırız

00:02:44.230 --> 00:02:49.440
sonra bu planı okuyarak bir kısım Java nesnelerini şişiririz.

00:02:49.440 --> 00:02:53.590
Bu Java nesneleri uygulamanın görme hiyerarşisini oluşturur.

00:02:53.590 --> 00:02:56.920
Ana Aktivite bu görme hiyerarşisine bağlıdır ve

00:02:56.920 --> 00:03:00.400
siz Ana Aktivite ile etkileşim kurdukça, o da nesneleri günceller.

