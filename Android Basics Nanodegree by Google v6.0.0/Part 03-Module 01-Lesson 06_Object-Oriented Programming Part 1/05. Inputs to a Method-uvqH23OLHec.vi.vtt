WEBVTT
Kind: captions
Language: vi

00:00:00.310 --> 00:00:01.310
Chờ đã.

00:00:01.310 --> 00:00:02.310
Sao vậy?

00:00:02.310 --> 00:00:04.950
Tại sao tự nhiên lại biến thành
chương trình nấu ăn thế này?

00:00:04.950 --> 00:00:07.000
Vì chúng ta phải nói về phương thức?

00:00:07.000 --> 00:00:08.625
Cậu giải thích được không,
Rachael Ray?

00:00:08.625 --> 00:00:11.650
[CƯỜI] Chà, thế cậu
đã bao giờ nướng bánh chưa?

00:00:11.650 --> 00:00:13.130
Tôi từng ăn bánh rồi.

00:00:13.130 --> 00:00:14.130
Ok.

00:00:14.130 --> 00:00:15.790
Thế là cậu đủ tiêu chuẩn
làm việc này rồi.

00:00:15.790 --> 00:00:16.790
Được rồi.

00:00:16.790 --> 00:00:19.840
Tất cả những gì cậu cần làm để làm
một chiếc bánh là cho bột, đường.

00:00:19.840 --> 00:00:20.840
- Các nguyên liệu.
- Nguyên liệu.

00:00:20.840 --> 00:00:22.000
- Đúng.
- Phải rồi.

00:00:22.210 --> 00:00:24.730
Và sau đó tuân theo
những chỉ dẫn trong công thức.

00:00:24.730 --> 00:00:28.240
Ok.
Và thế là xong một cái bánh.

00:00:28.240 --> 00:00:29.950
Như thế này hả?

00:00:29.950 --> 00:00:30.950
Đúng rồi.

00:00:30.950 --> 00:00:31.950
Ừ.
Chà, cậu có thể

00:00:31.950 --> 00:00:33.820
liên hệ với phương thức
lần nữa được không?

00:00:33.820 --> 00:00:35.265
Tất nhiên rồi.
Đương nhiên với

00:00:35.265 --> 00:00:37.185
một phương thức,
bạn phải cho đầu vào.

00:00:37.185 --> 00:00:40.150
Như chúng ta đã làm với khối lượng
cho phương thức hiển thị phải không?

00:00:40.150 --> 00:00:43.545
Đúng, và rồi cậu thực hiện
theo chỉ dẫn của phương thức.

00:00:43.545 --> 00:00:46.340
Ok, vậy giống như công thức làm bánh?

00:00:46.340 --> 00:00:48.840
Ừ, sau đó cậu sẽ có
đầu ra trả lại.

00:00:48.840 --> 00:00:51.873
Đầu ra ư, ngon phết nhỉ.

00:00:51.873 --> 00:00:55.660
[CƯỜI]
Hãy cùng xem thêm thông tin

00:00:55.660 --> 00:00:58.220
về tham số đầu vào
cho các phương thức.

00:00:58.220 --> 00:01:01.460
Tôi sẽ tìm kiếm trên Google
với từ khóa tham số phương thức Java.

00:01:01.460 --> 00:01:04.250
Kết quả đầu tiên có vẻ được
nên tôi sẽ bấm vào đó.

00:01:04.250 --> 00:01:08.240
Bài viết này nói về việc
thêm thông tin vào trong phương thức.

00:01:08.240 --> 00:01:12.270
Đây là một đoạn code nhỏ lập trình khỏan
thanh toán tiền vay mua nhà hàng tháng.

00:01:12.270 --> 00:01:16.850
Nó có bốn tham số đầu vào,
tiền thuê, lãi suất, giá trị tương lai

00:01:16.850 --> 00:01:20.440
của khoản vay, cũng như số lượng các kỳ
và kỳ hạn của khoản vay.

00:01:20.440 --> 00:01:24.680
Và trong phương thức này, ta thấy
ta có thể sử dụng các tham số đầu vào

00:01:24.680 --> 00:01:28.000
giống như các biến
trong toán học.

00:01:28.000 --> 00:01:29.850
Khi ta gọi phương thức
tính khoản thanh toán,

00:01:29.850 --> 00:01:33.890
chúng ta phải đảm bảo rằng mình
nhập vào đúng dữ liệu, theo đúng thứ tự.

00:01:33.890 --> 00:01:37.130
Vì vậy giá trị khoản vay phải ở đâu tiên,
sau đó đến lãi suất và cứ thế.

00:01:37.130 --> 00:01:38.480
Trong câu hỏi ở phần này,

00:01:38.480 --> 00:01:41.520
bạn sẽ có cơ hội để kiểm chứng
bài viết này một cách kỹ càng hơn.

00:01:41.520 --> 00:01:43.970
Trong mục thực thi chính của
ứng dụng Java,

00:01:43.970 --> 00:01:46.990
chúng ta sẽ thay đổi phương thức
hiển thị khối lượng và

00:01:46.990 --> 00:01:49.800
tham số đầu vào
để giúp các bạn thực hành.

00:01:49.800 --> 00:01:52.680
Lưu ý rằng trong phương thức giảm
trong ứng dụng của chúng ta,

00:01:52.680 --> 00:01:54.880
cái mà chúng ta gọi là
phương thức hiển thị khối lượng,

00:01:54.880 --> 00:01:58.670
chúng ta đang sử dụng biến số lượng
làm đầu vào cho phương thức này.

00:01:58.670 --> 00:02:01.110
Nhưng tham số đầu vào
được gọi là 'number', vì vậy

00:02:01.110 --> 00:02:04.420
mỗi khi chúng ta muốn đề cập đến
đầu vào này, ta chỉ cần nói number.

00:02:04.420 --> 00:02:07.880
Về mặt nguyên lý, ta có thể sử dụng
biến số lượng toàn cầu trong

00:02:07.880 --> 00:02:11.150
phương thức này, thay vì
sử dụng nó như tham số đầu vào.

00:02:11.150 --> 00:02:14.430
Nhưng để dạy các bạn về
tham số đầu vào,

00:02:14.430 --> 00:02:16.370
hãy cứ làm như vậy.

00:02:16.370 --> 00:02:19.480
Tôi có thể sửa phần triệu gọi này
thành phương thức hiển thị số lượng

00:02:19.480 --> 00:02:21.300
vì vậy đầu vào của
chúng ta là số 30.

00:02:21.300 --> 00:02:26.750
Điều này vẫn hợp lệ vì nó vẫn khớp
với định dạng dữ liệu đầu vào.

00:02:26.750 --> 00:02:29.430
Do vậy trong phương thức giảm mà
chúng ta gọi là hiển thị số lượng,

00:02:29.430 --> 00:02:32.750
nó sẽ nhảy xuống đây,
thực hiện theo chỉ dẫn, và

00:02:32.750 --> 00:02:35.320
biến number sẽ có
giá trị bằng 30.

00:02:35.320 --> 00:02:40.140
Tôi sẽ chạy thử trên thiết bị để bạn thấy
bây giờ nếu tôi chạy nút trừ

00:02:40.140 --> 00:02:43.090
trên ứng dụng, nó sẽ
hiển thị giá trị 30 ở đây.

00:02:43.090 --> 00:02:44.390
Để tôi thử xem.

00:02:45.410 --> 00:02:47.970
Đây.
Và nó diễn ra đúng như thế.

00:02:47.970 --> 00:02:52.380
Tôi cũng có thể tạo một biến khác và dùng
nó làm đầu vào cho phương thức này.

00:02:52.380 --> 00:02:55.560
Ở đây tôi đã tạo một biến
nội bộ gọi là someQuantity và

00:02:55.560 --> 00:02:56.610
tôi đặt nó bắt đầu từ 100.

00:02:56.610 --> 00:02:59.770
Tôi dùng biến này
làm đầu vào cho phương thức,

00:02:59.770 --> 00:03:04.290
và giờ thì biến number ở đây
đang có giá trị là 100.

00:03:04.290 --> 00:03:06.350
Tôi sẽ chạy thử trên thiết bị.

00:03:06.350 --> 00:03:10.224
Giờ tôi kỳ vọng khi bấm vào nút trừ,
số lượng sẽ được cập nhật thành 100.

00:03:11.280 --> 00:03:12.280
Và đúng thế.

00:03:12.280 --> 00:03:14.630
Đây chỉ là một vài thứ
mà bạn có thể thử

00:03:14.630 --> 00:03:17.560
khi nhập những đầu vào
khác nhau vào một phương thức.

00:03:17.560 --> 00:03:19.510
Khi làm việc với tham số đầu vào,

00:03:19.510 --> 00:03:22.680
một thuật ngữ mà bạn
hay gặp là đối số.

00:03:22.680 --> 00:03:24.000
Khi bạn gọi một phương thức,

00:03:24.000 --> 00:03:27.570
những dữ liệu đầu vào được nhập vào
phương thức đó gọi là đối số.

00:03:27.570 --> 00:03:28.730
Thuật ngữ này khá buồn cười.

00:03:28.730 --> 00:03:31.630
Vì khi bạn nghe đối chọi,
bạn sẽ nghĩ tới việc la mắng

00:03:31.630 --> 00:03:32.630
và nguyền rủa lẫn nhau.

00:03:32.630 --> 00:03:34.310
Nhưng ở đây thì khác.

00:03:34.310 --> 00:03:37.220
Đối số chỉ đơn giản là đầu vào
được nhập vào trong một phương thức.

00:03:37.220 --> 00:03:42.150
Tham số đầu vào là những đầu vào
thực tế được xác định khi gọi phương thức.

00:03:42.150 --> 00:03:44.550
Chúng là những biến được sử dụng
trong phương thức của bạn.

00:03:44.550 --> 00:03:48.060
Như vậy, có chút khác biệt giữa tham số
đầu vào và đối số.

00:03:48.060 --> 00:03:49.790
Dù sao, hãy tiếp tục
đọc bài viết và những

00:03:49.790 --> 00:03:53.040
lưu ý của người hướng dẫn
về tham số đầu vào.

00:03:53.040 --> 00:03:55.850
Sau đó tiếp tục thử nghiệm
code này trên ứng dụng.

00:03:55.850 --> 00:03:58.650
Hãy bắt đầu bằng việc đổi tên
tham số đầu vào number,

00:03:58.650 --> 00:04:01.380
bên trong phần xác định
phương thức hiển thị số lượng.

00:04:01.380 --> 00:04:03.850
Đơn giản hãy tạo cho nó
một tên biến khác.

00:04:03.850 --> 00:04:07.740
Cứ như thế, khắc phục lỗi
và chạy ứng dụng lần nữa.

00:04:07.740 --> 00:04:10.660
Ở bài kiểm tra tiếp theo, hãy thử
thay đổi định dạng dữ liệu

00:04:10.660 --> 00:04:15.280
của tham số đầu vào number từ số nguyên
thành thứ gì khác như chuỗi.

00:04:15.280 --> 00:04:18.660
Hãy quan sát điều gì xảy ra và
quay lại như lúc đầu.

00:04:18.660 --> 00:04:21.269
Nếu bạn vẫn thích thử nghiệm thêm
điều gì khác, cứ tự nhiên.

00:04:21.269 --> 00:04:22.690
Ví dụ như, nếu bạn băn khoăn,

00:04:22.690 --> 00:04:25.560
sẽ thế nào nếu mình làm x,
thì đừng ngại thử nó.

