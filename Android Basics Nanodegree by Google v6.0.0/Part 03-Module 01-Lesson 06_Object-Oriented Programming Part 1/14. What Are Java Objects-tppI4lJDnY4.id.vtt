WEBVTT
Kind: captions
Language: id

00:00:00.490 --> 00:00:01.635
Masih ingat soal kotak?

00:00:01.635 --> 00:00:02.809
&amp;gt;&amp;gt; Kotak apa?

00:00:02.809 --> 00:00:04.090
&amp;gt;&amp;gt; Kotak ini.

00:00:04.090 --> 00:00:06.910
&amp;gt;&amp;gt; Apa!
&amp;gt;&amp;gt; Anda juga mengingatnya?

00:00:06.910 --> 00:00:08.260
&amp;gt;&amp;gt; Oh ya, iya.
Saya mengingatnya.

00:00:08.260 --> 00:00:10.380
Mereka variabel, dan di dalamnya
bisa ditaruh nilai.

00:00:10.380 --> 00:00:15.020
Ya dan Anda bisa mengkombinasikan mereka
untuk membuat objek Java yang lebih besar.

00:00:15.020 --> 00:00:16.790
&amp;gt;&amp;gt; Jadi Anda bisa ambil dua
atau lebih

00:00:16.790 --> 00:00:18.420
dan buat sesuatu lebih besar.

00:00:18.420 --> 00:00:19.709
&amp;gt;&amp;gt; Tepat sekali.
&amp;gt;&amp;gt; Oke

00:00:19.709 --> 00:00:21.751
&amp;gt;&amp;gt; Seperti TextView.

00:00:21.751 --> 00:00:23.960
&amp;gt;&amp;gt; Ya.
Jadi, kita bisa punya variabel integer.

00:00:23.960 --> 00:00:25.640
&amp;gt;&amp;gt; Ini untuk ukuran huruf.

00:00:25.640 --> 00:00:27.752
&amp;gt;&amp;gt; Tepat sekali.
&amp;gt;&amp;gt; Oke.

00:00:27.752 --> 00:00:29.460
&amp;gt;&amp;gt; Anda juga bisa
punya variabel string.

00:00:29.460 --> 00:00:31.830
&amp;gt;&amp;gt; Dan variabel string untuk teks asli

00:00:31.830 --> 00:00:36.240
&amp;gt;&amp;gt; Ya, dan itu tidak bisa masuk kedalam
TextView sebagai status TextView.

00:00:36.240 --> 00:00:39.900
&amp;gt;&amp;gt; Kita bisa berinteraksi dengannya
memakai metode berbeda kita bahas nanti.

00:00:39.900 --> 00:00:41.290
&amp;gt;&amp;gt; Tepat sekali.
&amp;gt;&amp;gt; Ayo lakukan.

00:00:42.480 --> 00:00:46.220
&amp;gt;&amp;gt; Seperti yang disebutkan sebelumnya,
menampilkan TextView di layar seperti ini

00:00:46.220 --> 00:00:49.690
sebenarnya dikendalikan oleh
objek Java di dalam aplikasi.

00:00:49.690 --> 00:00:52.300
Ini adalah contoh objek Java TextView.

00:00:52.300 --> 00:00:55.890
Ini seperti kotak, dan didalamnya,
terkandung status.

00:00:55.890 --> 00:00:58.350
Status ini dibuat dari
banyak sekali bidang.

00:00:58.350 --> 00:01:00.240
Bidang adalah variabel,
seperti di pelajaran

00:01:00.240 --> 00:01:02.760
kedua ketika kita mempelajari
tentang vriabel global.

00:01:02.760 --> 00:01:05.730
Kita bisa miliki bidang teks untuk
menyimpan string hari ini,

00:01:05.730 --> 00:01:09.220
yang merupakan teks yang
akhirnya muncul di layar.

00:01:09.220 --> 00:01:13.520
Kita juga bisa memiliki bidang integer
untuk menyimpan ukuran huruf teks ini.

00:01:13.520 --> 00:01:14.910
Ada banyak sekali bidang lainnya,

00:01:14.910 --> 00:01:19.460
seperti text color, font family yang
membuat keadaan TextView.

00:01:19.460 --> 00:01:21.900
Saya tidak menggambarnya.

00:01:21.900 --> 00:01:23.940
Untuk berinteraksi dengan
objek Java ini dan

00:01:23.940 --> 00:01:28.420
mengubahnya saat aplikasi berjalan,
kita bisa panggil metode pada TextView.

00:01:28.420 --> 00:01:31.020
Kita sudah belajar tentang metode
di pelajaran ketiga.

00:01:31.020 --> 00:01:35.120
Beberapa contoh metode pada TextView
adalah setText dan getText.

00:01:35.120 --> 00:01:39.910
Anda juga bisa miliki metode seperti
setTextSize atau getTextSize, dll.

00:01:39.910 --> 00:01:43.190
Masing-masing dari metode ini hanya
mengeksekusi satu daftar instruksi.

00:01:43.190 --> 00:01:45.590
Anda bisa miliki metode lebih
komplek seperti onDraw,

00:01:45.590 --> 00:01:48.440
yang menangani penggambaran
TextView ke dalam layar.

00:01:48.440 --> 00:01:53.350
Secara keseluruhan, TextView ini tentang
memegang status informasi pada apa yang

00:01:53.350 --> 00:01:57.850
TextView muat, dan Anda bisa panggil
metode untuk berinteraksi dengan TextView

00:01:57.850 --> 00:02:01.500
ini seperti memodifikasi status atau
melakukan tindakan yang lebih komplek.

00:02:02.850 --> 00:02:06.565
Untuk menampilkan ImageView pada layar,
kita sebenarnya punya objek Java

00:02:06.565 --> 00:02:08.838
untuk ImageView di dalam aplikasi.

00:02:08.838 --> 00:02:13.710
ImageView khusus ini memuat informasi,
seperti gambar yang harus

00:02:13.710 --> 00:02:17.680
diampilkan, juga tipe skala,
misal center crop.

00:02:17.680 --> 00:02:20.490
Sekali lagi, ada banyak bidang lain
yang membuat status ImageView,

00:02:20.490 --> 00:02:22.250
Saya hanya tidak menggambarnya disini.

00:02:22.250 --> 00:02:25.759
Terdapat metode seperti setImage,
setScaleType, dan yang lebih komplek lagi

00:02:25.759 --> 00:02:30.330
seperti onDraw, untuk menangani
penggambaran ImageView dalam layar.

00:02:30.330 --> 00:02:31.560
Catat, sebagai pengembang

00:02:31.560 --> 00:02:35.480
kita tidak secara jelas memanggil onDraw
untuk menyuruhnya menggambarkan ke layar.

00:02:35.480 --> 00:02:39.880
Android menangani untuk kita panggilan
ini secara otomatis, tapi berguna

00:02:39.880 --> 00:02:43.910
untuk bisa memanggil metode ini untuk
mengubah ImageView, contohnya.

00:02:43.910 --> 00:02:47.580
Jadi, bagaimana kita tahu semua bidang
yang berada di dalam status ImageView,

00:02:47.580 --> 00:02:50.530
dan apa semua metode dari ImageView ini?

00:02:50.530 --> 00:02:53.980
Untuk menjawab pertanyaan itu kita harus
melihat kelas definisi objek tersebut.

00:02:55.010 --> 00:02:57.574
Ini adalah berkas yang
disebut TextView.java,

00:02:57.574 --> 00:03:00.890
serupa dengan cara kita mendefinisikan
MainActivity.java.

00:03:00.890 --> 00:03:05.130
Di dalam kelas berkas TextView,
ada banyak sekali kode yang

00:03:05.130 --> 00:03:08.530
membicarakan tentang status
TextView dan juga metode.

00:03:08.530 --> 00:03:12.240
Untuk sekarang, tidak dikatakan
secara langsung, tapi hanya terisi

00:03:12.240 --> 00:03:14.990
informasi mengenai status dan metode.

00:03:16.020 --> 00:03:19.970
Anda bisa menganggapnya mendefinisikan
aturan cara TextView berperilaku.

00:03:19.970 --> 00:03:25.750
Contoh objek ini dapat menyimpan spesifik
informasi seperti teks string hari ini.

00:03:25.750 --> 00:03:26.760
Atau ukuran teks 18.

00:03:26.760 --> 00:03:32.420
Anda juga dapat menggunakan kelas ini
untuk membuat contoh objek TextView lagi.

00:03:32.420 --> 00:03:34.290
yang dapat memiliki
nilai teks string berbeda.

00:03:34.290 --> 00:03:37.010
Saya rasa yang satu ini bisa
menyimpan teks yang mengatakan hello,

00:03:37.010 --> 00:03:39.800
dan satu ini bisa menyimpan teks
yang mengatakan goodbye.

00:03:39.800 --> 00:03:43.050
Ukuran huruf mereka boleh berbeda,
warna teks berbeda, dll.

00:03:44.080 --> 00:03:47.520
Namun, mereka semua berasal
dari template kelas.

00:03:47.520 --> 00:03:50.670
Anda mungkin kesulitan dalam membedakan
antara kelas dan contoh objek,

00:03:50.670 --> 00:03:51.890
tapi tak apa.

00:03:51.890 --> 00:03:53.760
Membutuhkan waktu agar terbiasa.

00:03:53.760 --> 00:03:55.630
Berikut Analogi untuk membantu Anda.

00:03:55.630 --> 00:03:59.270
Anda bisa menganggapnya seperti membuat
rencana lantai untuk sebuah rumah.

00:03:59.270 --> 00:04:02.680
Anda bisa menggunakan rencana lantai
untuk membuat rumah yang sebenarnya.

00:04:02.680 --> 00:04:04.320
Masing-masing rumah ini sedikit berbeda.

00:04:04.320 --> 00:04:06.990
Tapi mereka semua didasari
rencana lantai dasar.

00:04:06.990 --> 00:04:10.270
Perlu dicatat kalau rencana
lantai bukanlah rumah.

00:04:10.270 --> 00:04:12.110
Ini hanya rencana.

00:04:12.110 --> 00:04:17.079
Demikian pula, kelas TextView digunakan
untuk membuat contoh objek tersebut.

00:04:17.079 --> 00:04:20.480
Jadi contoh ini adalah salah satu
dari nilai teks sebenarnya,

00:04:20.480 --> 00:04:23.350
nilai warna teks dan ukuran teks.

00:04:23.350 --> 00:04:25.010
Jadi, seperti apa rupa
salah satu kelas?

