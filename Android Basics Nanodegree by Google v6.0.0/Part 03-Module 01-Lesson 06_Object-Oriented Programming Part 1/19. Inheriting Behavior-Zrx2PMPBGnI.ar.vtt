WEBVTT
Kind: captions
Language: ar

00:00:00.868 --> 00:00:03.068
‫فلنعد للحظة إلى تطبيق Just Java

00:00:03.400 --> 00:00:06.567
‫لنلق نظرة على فئة MainActivity
‫ووظيفة displayMessage

00:00:07.234 --> 00:00:09.334
‫بدأت الأمور تتضح أكثر هنا

00:00:09.934 --> 00:00:14.001
‫لقد أدركنا بالفعل أننا ننشيء متغير
‫اسمه orderSummaryTextView

00:00:14.300 --> 00:00:16.901
‫نوع بيانات هذا المتغير هو TextView

00:00:17.801 --> 00:00:19.702
‫لكننا لم نفهم هذا الجزء بعد

00:00:20.667 --> 00:00:23.334
‫في السطر التالي نستدعي وظيفة
‫على كائن الواجهة النصية الجديد

00:00:24.634 --> 00:00:27.335
‫نستخدم نفس اسم المتغير
‫كما تم إعلانه بالأعلى هنا

00:00:28.067 --> 00:00:31.067
‫لذا نقوم باستدعاء
‫orderSummaryTextView.setText

00:00:31.834 --> 00:00:34.368
‫ثم نمرر سلسلة حروف كأحد المدخلات
‫إلى الوظيفة

00:00:35.300 --> 00:00:38.700
‫رسالة السلسلة الحرفية هذه جائت
‫كمعامل إدخال

00:00:38.801 --> 00:00:40.268
‫إلى وظيفة عرض الرسالة

00:00:41.701 --> 00:00:44.968
‫الآن فلنتعمق أكثر في هذا الجزء من الكود
‫والذي لم نفهمه بعد

00:00:45.200 --> 00:00:48.068
‫يبدو أن findViewById
‫هو استدعاء لوظيفة

00:00:48.200 --> 00:00:52.701
‫لأنه يسبق هذه الأقواس
‫بما يشبه وسيط إدخال

00:00:53.534 --> 00:00:57.567
‫لكن الغريب أن هذه الوظيفة
‫غير معرفة في أي مكان في هذه الفئة

00:00:58.601 --> 00:01:01.701
‫لو قمت بالنقر المزدوج على هذا الاسم
‫وضغطت على CMD+F

00:01:02.100 --> 00:01:06.867
‫أو CTRL+F على الويندوز
‫فسوف نحاول البحث في هذا الملف

00:01:07.501 --> 00:01:10.469
‫أرى أن findViewById
‫واردة مرتين فقط

00:01:10.601 --> 00:01:12.402
‫وهي مستخدمة بنفس الطريقة

00:01:12.801 --> 00:01:15.535
‫ولكنني لا أرى أي وظيفة
‫تسمى findViewById

00:01:16.133 --> 00:01:19.467
‫وبمناسبة هذا،
‫سابقاً في فئة النشاط الرئيسي

00:01:19.634 --> 00:01:24.335
‫رأينا استدعاء لـ setContentView
‫ولكن لو بحثنا عنها في الملف

00:01:24.400 --> 00:01:26.533
‫فلن نجدها معرفة أيضا في النشاط الرئيسي

00:01:27.801 --> 00:01:29.868
‫إذن أين يتم تعريف تلك الوظائف؟

00:01:30.634 --> 00:01:33.301
‫حسناً، ملف MainActivity
‫في الواقع هو ملف قصير جداً

00:01:33.567 --> 00:01:35.501
‫يبلغ طوله تقريباً 90 سطر فقط

00:01:35.667 --> 00:01:38.434
‫لكن هناك أكثر من هذا في هذه الفئة
‫مما نراه حقاً

00:01:38.801 --> 00:01:41.901
‫مكتوب في الكود
‫extends AppCompatActivity

00:01:42.200 --> 00:01:45.333
‫هذا يعني أن النشاط الرئيسي هو امتداد

00:01:45.601 --> 00:01:48.835
‫للأداء الوظيفي في فئة AppCompatActivity

00:01:49.267 --> 00:01:52.901
‫على حاسوبك لو وجدت نشاط
‫شريط إجراءات هنا فلا تقلق

00:01:52.968 --> 00:01:54.902
‫إنه فقط نسخة أقدم من هذه

00:01:55.434 --> 00:01:58.501
‫النسخة الأخيرة التي ينبغي أن تستخدمها
‫هي AppCompatActivity

00:01:58.734 --> 00:02:02.268
‫وهي تعطينا دعماً
‫لتوافق الإصدارات السابقة

00:02:02.367 --> 00:02:04.101
‫على أجهزة أندرويد الأقدم

00:02:04.467 --> 00:02:07.567
‫يعتبر AppCompatActivity
‫جزء من مكتبة دعم الأندرويد

00:02:07.968 --> 00:02:11.368
‫إنه يسمح لنا باستخدام خصائص
‫واجهة المستخدم على الأندرويد

00:02:11.734 --> 00:02:14.734
‫بينما لا زلنا نعمل
‫على أجهزة أندرويد أقدم

00:02:15.434 --> 00:02:17.868
‫عن طريق تمديد
‫فئة AppCompatActivity

00:02:17.934 --> 00:02:21.768
‫فنحن نحصل على كل الأداء الوظيفي
‫والحالة والوظائف

00:02:22.267 --> 00:02:24.135
‫من هنا بداخل MainActivity مجاناً

00:02:24.501 --> 00:02:26.801
‫لسنا بحاجة لنسخ أو لصق أي كود من هنا

00:02:26.968 --> 00:02:29.168
‫نستطيع ببساطة أن نمدد تلك الفئة

00:02:30.033 --> 00:02:33.867
‫إن كنت مهتماً، يمكنك معرفة المزيد
‫عن AppCompatActivity..

00:02:34.067 --> 00:02:35.134
‫بالبحث في (جوجل)

00:02:35.868 --> 00:02:38.901
‫هذا هو المستند المرجعي
‫لفئة AppCompatActivity

00:02:39.634 --> 00:02:41.634
‫وبما أنني مثبت لدي ملحق Chrome

00:02:41.834 --> 00:02:43.468
‫فأنا أستطيع رؤية المصدر أيضاً

00:02:44.234 --> 00:02:47.701
‫وهذا هو الكود حيث يتم تعريف
‫الفئة AppCompatActivity

00:02:47.901 --> 00:02:49.968
‫يمكنكم ملاحظة أن هناك الكثير
‫من الأداء الوظيفي هنا

00:02:50.200 --> 00:02:53.734
‫المغزى الرئيسي هو أنك لست بحاجة
‫لفهم كيف كيفية تنفيذه

00:02:54.467 --> 00:02:58.101
‫كل ما عليك معرفته هو أنك حين
‫تقوم بتمديد AppCompatActivity

00:02:58.334 --> 00:03:00.302
‫تحصل على كل هذا الأداء الوظيفي مجاناً

00:03:00.968 --> 00:03:03.202
‫من منظور أعلى، يمكنك تخيله هكذا

00:03:03.567 --> 00:03:05.734
‫هذا هو تعريف فئة في النشاط الرئيسي

00:03:05.868 --> 00:03:07.669
‫فلنقل أن لديك بعض الوظائف معرفة هنا

00:03:07.968 --> 00:03:12.001
‫حين تمدد AppCompatActivity
‫يصبح بإمكاننا الوصول للحالة

00:03:12.334 --> 00:03:14.367
‫والوظائف من AppCompatActivity

00:03:14.634 --> 00:03:17.502
‫هم لم يتم إضافتهم فعلياً
‫إلى فئة النشاط الرئيسي

00:03:17.734 --> 00:03:19.201
‫ولكن يمكنك تخيل أنهم هناك

00:03:19.267 --> 00:03:22.634
‫لأنك لا يزال بإمكانك الإشارة إلى الحالة
‫والوظائف أيضاً

00:03:22.868 --> 00:03:26.202
‫ولهذا يستطيع الكود الخاص بنا الإشارة
‫إلى أشياء مثل setContentView

00:03:26.367 --> 00:03:27.767
‫و findViewById

00:03:27.834 --> 00:03:31.901
‫لأننا ورثنا تلك الوظائف ولم نقم بتعريفهم
‫في النشاط الرئيسي

00:03:32.234 --> 00:03:34.768
‫النشاط الرئيسي يظهر على شاشة الجهاز

00:03:35.000 --> 00:03:39.067
‫لكننا لم نكتب الكود الخاص بهذا
‫في MainActivity بل ورثناه أيضاً

00:03:39.534 --> 00:03:43.502
‫لم نحصل على الحالة والوظائف من
‫AppCompatActivity مباشرة في الفئة..

00:03:43.767 --> 00:03:46.301
‫ولكننا نعرف الآن أنهم موجودين
‫ويمكننا الإشارة إليهم

00:03:46.834 --> 00:03:50.168
‫بالحديث عن وراثة الأشياء
‫فهناك مزايا وعيوب لهذا

00:03:50.267 --> 00:03:52.267
‫أحياناً سنود أن نقوم بوراثة سلوك

00:03:52.367 --> 00:03:55.034
‫ولكن في أحيان أخرى نريد تعديله قليلاً

00:03:55.934 --> 00:03:59.601
‫لو أردت تغيير جزء من السلوك
‫من هذه الفئة الموروثة

00:03:59.868 --> 00:04:01.669
‫تستطيع تخطي وظائف معينة

00:04:02.200 --> 00:04:07.134
‫تستطيع إضافة الكلمة @override
‫أعلى الوظيفة حتى يعرف الحاسب

00:04:07.367 --> 00:04:11.801
‫أنك لا تريد نسخة الوظيفة
‫من AppCompatActivity

00:04:12.100 --> 00:04:15.300
‫بل تريد النسخة التي عرفتها هنا

00:04:15.834 --> 00:04:18.368
‫هذا موضوع صعب
‫ويتطلب الكثير من التدريب

00:04:18.634 --> 00:04:21.568
‫لكننا رأينا مثالاً واحداً
‫على تخطي الوظيفة

00:04:21.667 --> 00:04:23.535
‫من الفئة AppCompatActivity

00:04:23.634 --> 00:04:25.767
‫وتلك الوظيفة هي on Create

00:04:26.367 --> 00:04:29.801
‫بتخطي وظيفة onCreate
‫في النشاط الرئيسي..

00:04:30.000 --> 00:04:32.400
‫فإننا نقوم بتحديد نسختنا الخاصة..

00:04:32.567 --> 00:04:34.867
‫لما ينبغي حدوثه عند
‫استدعاء تلك الوظيفة

00:04:35.367 --> 00:04:37.068
‫لا بأس إن لم تفهمه على الفور

00:04:37.167 --> 00:04:38.801
‫أنا أعطيكم فقط موجزاً..

00:04:38.901 --> 00:04:41.802
‫عن بعض مباديء البرمجة كائنية التوجه

00:04:42.267 --> 00:04:45.934
‫من المقبول تماماً أن يكون عندك
‫بعض الأسئلة بعد

00:04:46.133 --> 00:04:50.133
‫ولا زلت بحاجة لقراءة المزيد عن هذه
‫المواضيع لتفهمهم بالكامل

00:04:50.767 --> 00:04:53.568
‫طريقة أخرى لتخيل العلاقة
‫بين النشاط الرئيسي

00:04:53.667 --> 00:04:55.867
‫وفئات AppCompatActivity..

00:04:56.000 --> 00:04:57.968
‫هي أن ترسم مخطط تدرج الفئة

00:04:58.234 --> 00:05:00.401
‫هذا يختلف عن مخطط تدرج الواجهة

00:05:00.567 --> 00:05:05.201
‫لأن مخطط تدرج الواجهة يظهر
‫شجرة من الواجهات التي تظهر على الشاشة

00:05:05.334 --> 00:05:07.734
‫مخطط تدرج الفئة يظهر العلاقة

00:05:07.801 --> 00:05:09.602
‫بين فئات الجافا المختلفة

00:05:10.000 --> 00:05:12.567
‫لدينا AppCompatActivity كفئة عليا

00:05:12.868 --> 00:05:16.068
‫بما أن MainActivity
‫ممتد من AppCompatActivity

00:05:16.267 --> 00:05:18.001
‫فهذه إذن تعرف باسم فئة فرعية

00:05:18.567 --> 00:05:20.535
‫لذا متى ترى تعريف الفئة هذا..

00:05:20.634 --> 00:05:23.568
‫فإن ما تمدده يعرف باسم الفئة العليا

00:05:23.834 --> 00:05:25.401
‫هذا سيكون الفئة الفرعية

00:05:25.767 --> 00:05:28.735
‫لذا لو أنشأت نشاط آخر
‫اسمه DetailActivity

00:05:28.934 --> 00:05:30.902
‫ثم قمت بتمديد AppCompatActivity..

00:05:30.968 --> 00:05:33.602
‫فإن هذه سوف تكون الفئة
‫الفرعية، وهذه هي الفئة العليا

00:05:34.634 --> 00:05:37.335
‫إليكم مثال آخر عن وراثة الفئة في الجافا

00:05:37.767 --> 00:05:40.201
‫لو فكرنا في الأمر سنجد أن
‫واجهة النص وواجهة الصور

00:05:40.334 --> 00:05:43.701
‫وواجهة الأزرار كلهم لديهم جوانب مشتركة

00:05:44.400 --> 00:05:47.467
‫كل هذه الواجهات لديهم عرض وارتفاع
‫على الشاشة

00:05:48.033 --> 00:05:51.033
‫لم نتعلم هذا بعد لكنهم أيضاً
‫لديهم حالة تسمى الرؤية visibility

00:05:51.334 --> 00:05:53.935
‫حتى نستطيع جعلهم مخفيين أو مرئيين

00:05:54.400 --> 00:05:57.967
‫هناك بعض الخصائص الأخرى أيضاً
‫الشائعة فيما بينهم

00:05:58.567 --> 00:06:02.134
‫بدلاً من كتابة الكود لهذه الخصائص
‫بداخل الفئة text view

00:06:02.334 --> 00:06:05.302
‫ثم نسخه إلى image view
‫ثم فئة button

00:06:05.567 --> 00:06:07.134
‫يمكننا القيام بشيء أكثر ذكاء

00:06:07.601 --> 00:06:09.569
‫بإمكاننا إنشاء فئة واجهة

00:06:09.968 --> 00:06:13.569
‫بإمكاننا استخلاص الخصائص المشتركة
‫بين كل هذه الواجهات

00:06:13.634 --> 00:06:16.068
‫ونضعهم بداخل فئة الواجهة هذه..

00:06:16.467 --> 00:06:19.034
‫وبهذا.. نكتب الكود مرة واحدة فقط

00:06:19.734 --> 00:06:23.468
‫لكن كيف سنصنع الصلة بين
‫فئة واجهة النص وفئة الواجهة

00:06:23.968 --> 00:06:26.202
‫لو كنت تفكر في الوراثة
‫فأنت على صواب

00:06:26.501 --> 00:06:29.634
‫في ملف الجافا TextView سوف نعرف
‫فئة واجهة النص

00:06:30.067 --> 00:06:33.434
‫بهذه الطريقة سنرث كل البيانات
‫والوظائف من فئة الواجهة

00:06:34.200 --> 00:06:37.300
‫وعندها لن نكون محتاجين
‫للكثير من الكود في فئة TextView

00:06:37.534 --> 00:06:41.335
‫لأن جزء من الأداء الوظيفي
‫مكتوب بالفعل في فئة الواجهة

00:06:41.801 --> 00:06:44.669
‫نفس الشيء ينطبق على
‫واجهة الصورة وفئات الأزرار

00:06:44.834 --> 00:06:46.401
‫لن نضطر لكتابة كود كثير

00:06:46.734 --> 00:06:50.668
‫في هذه الملفات علينا فقط أن نكتب
‫عما هو مختلف عن واجهة الصورة

00:06:50.834 --> 00:06:52.468
‫مقارنة بفئة الواجهة

00:06:53.000 --> 00:06:55.634
‫أرى هذا كتحديد معامل الفرق (دلتا)

00:06:55.968 --> 00:07:00.068
‫لذا فعلى فئة (ImageView) تعريف
‫ما الاختلاف بين واجهة الصورة..

00:07:00.200 --> 00:07:02.068
‫مقارنة بفئة (الواجهة)

00:07:03.767 --> 00:07:06.635
‫لو أردنا ألا نرث سلوك معين
‫من فئة الواجهة View.java

00:07:06.968 --> 00:07:09.535
‫يمكننا فقط تحديد السلوك المحدث

00:07:09.701 --> 00:07:12.834
‫بداخل فئة ImageView
‫أو أي من هذه الفئات

00:07:14.000 --> 00:07:15.801
‫لتذكيركم بالمصطلحات..

00:07:15.968 --> 00:07:18.335
‫ففي هذه الحالة، ستكون
‫TextView الفئة الفرعية..

00:07:18.501 --> 00:07:20.435
‫بينما View ستكون الفئة العليا

00:07:21.367 --> 00:07:24.268
‫لو عدنا إلى مستندات التوثيق
‫الخاصة بالفئة TextView..

00:07:24.501 --> 00:07:26.735
‫فإننا نفهم هذا الجزء الآن

00:07:27.234 --> 00:07:29.267
‫إذ تذكر أن TextView
‫تمدد View

00:07:29.901 --> 00:07:34.769
‫الآن نعلم أن هذا يعني أننا نرث..
‫الحالة والوظائف من الفئة View

00:07:35.267 --> 00:07:37.734
‫وبالأسفل هنا مخطط تدرج الفئات

00:07:38.267 --> 00:07:42.201
‫ويبين أن فئة TextView
‫ترث من الفئة View

00:07:43.667 --> 00:07:46.834
‫وبدورها فإن الفئة View
‫ترث من الفئة Object

00:07:47.601 --> 00:07:49.868
‫لو قمت بالاستكشاف قليلاً
‫سوف تجد فئات أخرى

00:07:50.067 --> 00:07:54.167
‫مثل الفئة EditText والتي هي
‫ممتدة من الفئة TextView

00:07:54.701 --> 00:07:57.235
‫لذا فهي تأخذ السلوك من فئة TextView

00:07:57.434 --> 00:08:00.268
‫ثم تضيف بعض الأداء الوظيفي المحدد إليه

00:08:01.234 --> 00:08:03.401
‫إذن EditText ممتدة من TextView

00:08:03.534 --> 00:08:07.068
‫و TextView ممتد من View
‫و View ممتد من Object

00:08:07.434 --> 00:08:10.001
‫وهذا هو مخطط تدرج الفئات

00:08:11.367 --> 00:08:13.868
‫هناك الكثير من الأمور
‫ويمكنك النظر إليها لساعات

00:08:13.934 --> 00:08:17.268
‫لكن دعني أريك شيء واحد فقط
‫في صفحة مستندات توثيق TextView

00:08:17.801 --> 00:08:20.135
‫أريد أن أريك الوظيفة SetVisibility

00:08:20.801 --> 00:08:24.001
‫هذه هي وظيفة الجافا لضبط الرؤية
‫داخل الفئة TextView

00:08:24.334 --> 00:08:27.001
‫يقوم هذا بتغيير ما إذا كانت
‫الواجهة مرئية أم لا

00:08:27.934 --> 00:08:33.001
‫لو نقرت على هذه الوظيفة
‫فسوف تعيدني إلى فئة View

00:08:33.200 --> 00:08:35.667
‫ثم تقوم بوصف ما تفعله تلك الوظيفة

00:08:35.934 --> 00:08:39.568
‫إذن يمكننا أن نرى أن كائن TextView
‫لديه وظيفة لضبط الرؤية

00:08:39.834 --> 00:08:42.901
‫ولكنها في الأصل موروثة
‫من الفئة View

00:08:43.601 --> 00:08:46.935
‫إذن فقد حصلنا على هذه الوظيفة
‫مجاناً من فئة View

00:08:47.400 --> 00:08:50.500
‫حسناً لقد غطينا لتونا
‫الكثير من المفاهيم الجديدة

00:08:50.868 --> 00:08:55.168
‫في العادة فإن هذا سيكون موزعاً
‫على فصل دراسي في دورة علوم الحاسب

00:08:56.033 --> 00:08:57.901
‫سنقوم ببعض التدريب الآن

00:08:58.033 --> 00:09:00.600
‫ونأمل أن يساهم هذا
‫في ربط الأمور ببعضها بالنسبة إليكم

00:09:01.167 --> 00:09:05.668
‫ولكن اعلم أنه سيستغرق وقتاً وتمريناً
‫كبيرين لتتمكن من الإلمام بهم جميعاً

00:09:06.567 --> 00:09:09.567
‫حسناً، التدريب الأول
‫هو إنشاء تطبيق أندرويد جديد آخر

00:09:09.701 --> 00:09:11.602
‫لأننا لا نريد العبث بتطبيق Just Java

00:09:13.033 --> 00:09:14.901
‫بعد إنشاء المشروع، شغله

00:09:15.767 --> 00:09:18.534
‫بعد إنشاء التطبيق سترى ملف MainActivity

00:09:18.634 --> 00:09:21.801
‫هذا الملف سوف يمدد
‫AppCompatActivity

00:09:22.434 --> 00:09:24.168
‫في نسختك من أندرويد ستوديو..

00:09:24.367 --> 00:09:27.601
‫لو كان MainActivity يمتد من
‫ActionBarActivity على نقيض هذا..

00:09:27.934 --> 00:09:31.301
‫فلا بأس في هذا أيضاً، فهو نسخة
‫أقدم من AppCompatActivity

00:09:32.200 --> 00:09:35.267
‫بإزالة تخطي هذه الوظيفة، فإننا نعود..

00:09:35.367 --> 00:09:39.901
‫إلى الوضع التي كانت عليه وظيفة onCreate
‫في فئة AppCompatActivity

00:09:40.267 --> 00:09:42.267
‫وجود هذه الوظيفة يقول..

00:09:42.400 --> 00:09:45.700
‫أننا نريد سلوكاً مختلفاً في MainActivity
‫للوظيفة onCreate

00:09:46.234 --> 00:09:48.135
‫إذن إزالتها تعود بنا..

00:09:48.200 --> 00:09:51.300
‫إلى السلوك الأصلي في الفئة
‫AppCompatActivity

00:09:52.033 --> 00:09:53.300
‫عند تشغيلك للتطبيق..

00:09:53.367 --> 00:09:56.734
‫ما هو الاختلاف الذي لاحظته
‫مقارنة بأول مرة قمت بتشغيله؟

00:09:57.234 --> 00:09:58.935
‫اكتب اجابتك في مربع النص هذا

