WEBVTT
Kind: captions
Language: ja

00:00:00.210 --> 00:00:04.370
以前に数を display メソッドに
渡す方法をご紹介しました

00:00:04.370 --> 00:00:08.350
ここではメソッドの異なった出入力の
詳細についてお話しします

00:00:08.350 --> 00:00:09.840
例として MainActivity にある

00:00:09.880 --> 00:00:12.440
submitOrder メソッドを
見てみましょう

00:00:12.510 --> 00:00:15.000
そのメソッドに一連のコード行があるとします

00:00:15.000 --> 00:00:16.670
ユーザーが Order ボタンを
クリックした時に

00:00:16.670 --> 00:00:19.330
この submitOrder メソッドが
呼び出されます

00:00:19.330 --> 00:00:23.200
Android デバイスがこれらの各指示を
上から下まで実行していきます

00:00:23.200 --> 00:00:26.980
それが calculatePrice
メソッド呼び出しにくると

00:00:26.980 --> 00:00:30.400
calculatePrice メソッドが
定義されているところにジャンプします

00:00:30.400 --> 00:00:33.830
これが MainActivity 
ファイルの下部に定義されているとすると

00:00:33.830 --> 00:00:37.020
Android デバイスがこれらの各指示を
メソッドの上から下まで実行していきます

00:00:37.020 --> 00:00:41.270
そして submitOrder メソッドに
ジャンプして戻ります

00:00:41.270 --> 00:00:45.220
その後 引き続きメソッドの最後まで
指示を実行していきます

00:00:45.268 --> 00:00:47.240
calculatePrice メソッドが
呼び出されると

00:00:47.240 --> 00:00:49.510
一連の入力を渡すことができるので

00:00:49.510 --> 00:00:53.620
これらのコード行を実行している時に
これらの入力値を使用できます

00:00:53.620 --> 00:00:55.070
このメソッドの結果として

00:00:55.070 --> 00:00:58.940
呼び出し元に 1 つの出力値を
渡すことができます

00:00:58.940 --> 00:01:03.030
これで出力値を後続のコード行で
使用することができます

00:01:03.030 --> 00:01:07.090
Java ではこのメソッドへの入力を
入力パラメーターと呼び

00:01:07.090 --> 00:01:09.520
0 もしくはそれ以上を
入力パラメーターとすることができます

00:01:10.550 --> 00:01:13.370
Java ではこの出力を戻り値と呼び

00:01:13.370 --> 00:01:16.470
0 もしくは 1 を戻り値と
することができます

00:01:16.470 --> 00:01:20.420
入力パラメーターの例としては 数量を

00:01:20.420 --> 00:01:22.840
calculatePrice メソッドに
渡します

00:01:22.840 --> 00:01:26.957
このように このメソッドは
注文全体の合計価格を把握するために

00:01:26.957 --> 00:01:28.130
数量を使用できます

00:01:28.130 --> 00:01:31.350
そして戻り値として
その合計金額を渡すことができます

00:01:31.350 --> 00:01:34.046
submitOrder メソッド
ここでは

00:01:34.046 --> 00:01:38.253
この合計金額を他の目的で
使用することができます 例えば

00:01:38.253 --> 00:01:40.930
画面に表示したり領収書や何かを
作成したりといったことです

00:01:40.930 --> 00:01:43.730
要約すると ここが
calculatePriceメソッドを

00:01:43.730 --> 00:01:45.400
定義するところで
ここはそれを呼び出すところです

00:01:45.400 --> 00:01:49.490
コーヒー注文の価格を計算する
メソッドを作成したい場合

00:01:49.490 --> 00:01:53.410
現在は submitOrder メソッドで
直接価格を計算していますが

00:01:53.410 --> 00:01:57.020
この価格を計算するロジックは
もう少し複雑になります

00:01:57.020 --> 00:01:59.030
それではそれを自身のメソッドに
移動しましょう

00:01:59.030 --> 00:02:01.948
するとコードをあちこちに
コピー＆ペーストしなくても呼び出したいだけ

00:02:01.948 --> 00:02:04.080
何回でも呼び出すことができます

00:02:04.080 --> 00:02:07.730
Android 開発で
多くの経験を得るにつれて

00:02:07.730 --> 00:02:10.320
ある目的のために新しいメソッドを作成するか

00:02:10.340 --> 00:02:11.850
その必要がないかについて より良い判断を
することができるようになります

00:02:11.850 --> 00:02:14.690
これには経験と時間がものを言います

00:02:14.690 --> 00:02:17.640
さて ここで初めて
自分自身で新しいメソッドを

00:02:17.640 --> 00:02:20.800
MainActivity のなかに
作成していくわけですが

00:02:20.800 --> 00:02:24.575
ゼロからスタートして書き始めるよりも
コード スニペットを読んで

00:02:24.575 --> 00:02:28.460
何が正しいメソッドであるかを認識することを
学習することから初めてみましょう

00:02:28.460 --> 00:02:31.700
インストラクターノートの中に
3 つのオプションをご用意しました

00:02:31.700 --> 00:02:35.830
これらの 3 つのコード スニペットを
じっくり読んで どのオプションが

00:02:35.830 --> 00:02:40.330
注文の金額計算をするのに正しくメソッドを
実装するのか特定してみましょう

00:02:40.330 --> 00:02:42.330
インストラクターノートをクリックすると

00:02:42.330 --> 00:02:46.850
オプション A B C の
コードが見られます

00:02:48.380 --> 00:02:53.280
ここでの目的は 以前に見たことがない
コードを読むことに慣れることです

00:02:53.360 --> 00:02:57.370
何が有効なメソッドに必要なのかの
厳密な規則についてはまだ触れていませんが

00:02:57.370 --> 00:03:01.169
最も正しいと思うオプションを
推測してみて下さい

00:03:02.630 --> 00:03:05.091
Java メソッドを定義する方法について
もっと情報を得るために

00:03:05.091 --> 00:03:09.140
Google 検索もお勧めします

00:03:09.140 --> 00:03:11.450
異なった検索結果をクリックすると

00:03:11.450 --> 00:03:15.100
分からない文書の情報が出てきます

00:03:15.100 --> 00:03:18.290
これらのページはすべてを
理解できなくても大丈夫です

00:03:18.290 --> 00:03:21.950
全部を理解できないのは
ごく普通のことです

00:03:21.950 --> 00:03:25.780
必要なのは 記事をざっと読んで
自分が理解できる

00:03:25.780 --> 00:03:28.030
当面の問題に関連あるものを探すことです

00:03:29.140 --> 00:03:30.610
それでは これら 3 つのオプションの
コードを読んでみましょう

00:03:30.610 --> 00:03:34.260
そしてオンラインで情報を探して
calculatePrice メソッドの

00:03:34.260 --> 00:03:37.627
定義方法について最良の推測をしてみましょう

