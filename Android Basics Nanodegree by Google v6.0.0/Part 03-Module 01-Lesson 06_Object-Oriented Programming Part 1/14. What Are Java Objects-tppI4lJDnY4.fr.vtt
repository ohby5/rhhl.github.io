WEBVTT
Kind: captions
Language: fr

00:00:00.490 --> 00:00:01.635
Tu te rappeles des boîtes ?

00:00:01.635 --> 00:00:02.809
Quelles boites ?

00:00:02.809 --> 00:00:04.090
Ces boîtes.

00:00:04.090 --> 00:00:06.910
Huh!
Tu te souviens d'elles ?

00:00:06.910 --> 00:00:07.480
Oh ouais, ouais.

00:00:07.480 --> 00:00:08.260
Je me souviens d'elles.

00:00:08.260 --> 00:00:10.380
Ce sont des variables, où on peut
mettre une valeur à l'intérieur.

00:00:10.380 --> 00:00:10.930
Ouais, et

00:00:10.930 --> 00:00:15.020
On peut combiner ces variables 
pour créer un objet Java plus grand.

00:00:15.020 --> 00:00:16.790
Oh, tu peux prendre deux ou
plusieurs variables et

00:00:16.790 --> 00:00:18.420
faire quelque chose de grand.

00:00:18.420 --> 00:00:19.709
Exactement.
Okay

00:00:19.709 --> 00:00:21.751
Comme un TextView.

00:00:21.751 --> 00:00:23.960
Ouais. Alors, nous pouvons
avoir une variable entière.

00:00:23.960 --> 00:00:25.640
C'est pour la taille de la police.

00:00:25.640 --> 00:00:26.210
Exactement.

00:00:26.210 --> 00:00:27.752
Okay.

00:00:27.752 --> 00:00:28.637
Et puis, tu peux aussi avoir

00:00:28.637 --> 00:00:29.460
chaîne de variables.

00:00:29.460 --> 00:00:31.830
Et la chaîne de variables pour
le texte lui-même.

00:00:31.830 --> 00:00:36.240
Qui peuvent aller à l'intérieur de la
TextView dans l'état de la TextView.

00:00:36.240 --> 00:00:38.970
On peut interagir avec ces
choses en utilisant différentes méthodes

00:00:38.970 --> 00:00:39.900
Nous allons jouer avec la prochaine.

00:00:39.900 --> 00:00:40.500
Exactement.

00:00:40.500 --> 00:00:41.290
Ok
Faisons cela.

00:00:42.480 --> 00:00:46.220
On l'a vu plutôt en vous montrant
un TextView sur l'écran comme celui-ci

00:00:46.220 --> 00:00:49.690
Il est contrôlé par
un objet Java au sein de l'application.

00:00:49.690 --> 00:00:52.300
Ceci est un exemple d'un 
objet TextView Java.

00:00:52.300 --> 00:00:55.890
C'est comme une boîte, dans celle-ci
il y a un état.

00:00:55.890 --> 00:00:58.350
L'état est constitué
d'un tas de domaines.

00:00:58.350 --> 00:01:00.240
Un champ est une variable,
comme dans la leçon deux,

00:01:00.240 --> 00:01:02.760
quand nous avons vu
les variables globales.

00:01:02.760 --> 00:01:05.730
Nous pouvons avoir un champ de texte 
pour stocker la chaîne aujourd'hui,

00:01:05.730 --> 00:01:09.220
qui va être le texte qui est
finalement affiché sur l'écran.

00:01:09.220 --> 00:01:13.520
On peut avoir un champ entier pour
stocker la taille la police du texte.

00:01:13.520 --> 00:01:14.910
Il y a aussi un tas d'autres domaines,

00:01:14.910 --> 00:01:19.460
Comme la couleur du texte, la famille de
polices qui composent l'état de la boite.

00:01:19.460 --> 00:01:21.900
Je ne les ai pas
dessiné dans cette image.

00:01:21.900 --> 00:01:23.940
Pour interagir avec cet objet Java et

00:01:23.940 --> 00:01:28.420
le changer pendant qu'on fait tourner le 
soft, on peut appeler des méthodes.

00:01:28.420 --> 00:01:31.020
On a vu les méthodes
plus tôt dans la troisième leçon.

00:01:31.020 --> 00:01:35.120
Quelques exemples de méthodes sur un
TextView sont setText et getText.

00:01:35.120 --> 00:01:39.910
On peut avoir aussi SetTextSize
ou getTextSize, et ainsi de suite.

00:01:39.910 --> 00:01:43.190
Chacune de ces méthodes tout
exécute une liste d'instructions.

00:01:43.190 --> 00:01:45.590
Vous pouvez avoir des méthodes plus 
complexes comme OnDraw,

00:01:45.590 --> 00:01:48.440
qui gère le dessin
d'un TextView sur l'écran.

00:01:48.440 --> 00:01:53.350
Cet objet TextView détient des infos
d'état sur ce qu'est la TextView

00:01:53.350 --> 00:01:57.850
et vous pouvez appeler des méthodes
pour interagir avec cette TextView,

00:01:57.850 --> 00:02:01.500
de nature à modifier l'état,
ou à faire des actions plus complexes.

00:02:02.850 --> 00:02:06.565
Pour afficher une ImageView sur l'écran,
nous avons fait un objet Java pour

00:02:06.565 --> 00:02:08.838
l'ImageView à l'intérieur de l'app.

00:02:08.838 --> 00:02:13.710
Cette ImageView contient des infos sur
l'état, comme comment l'image devrait

00:02:13.710 --> 00:02:17.680
être montrée, ainsi que le type 
d'échelle, comme les center crop.

00:02:17.680 --> 00:02:20.490
Il y a un tas d'autres domaines
qui composent l'état d'une ImageView,

00:02:20.490 --> 00:02:22.250
Je ne les ai pas dessiné ici.

00:02:22.250 --> 00:02:25.759
Il y a des méthodes comme setImage,
setScaleType, et des plus complexes

00:02:25.759 --> 00:02:30.330
des méthodes, comme OnDraw, pour 
gérer ce dessin ImageView sur l'écran.

00:02:30.330 --> 00:02:31.560
Notez que, en tant que développeurs,

00:02:31.560 --> 00:02:35.480
on a pas besoin d'appeler OnDraw
pour lui dire de dessiner sur l'écran.

00:02:35.480 --> 00:02:39.880
Android appelle automatiquement 
pour nous, mais il est utile

00:02:39.880 --> 00:02:43.910
de pouvoir appeler ces méthodes à
changer l'ImageView, par exemple.

00:02:43.910 --> 00:02:47.580
Comment savons-nous que tous les champs
sont à l'intérieur de l'état d'une

00:02:47.580 --> 00:02:50.530
ImageView, et toutes les méthodes sont
elles dans cette ImageView ?

00:02:50.530 --> 00:02:53.980
Nous devons regarder
la définition de la classe pour cet objet.

00:02:55.010 --> 00:02:57.574
Il y a un fichier appelé TextView.java,

00:02:57.574 --> 00:03:00.890
Similaire à la façon dont nous 
avons défini MainActivity.java.

00:03:00.890 --> 00:03:05.130
Dans ce fichier TextView de classe,
nous avons un tas de code qui

00:03:05.130 --> 00:03:08.530
parlent de l'état du TextView 
ainsi que des méthodes.

00:03:08.530 --> 00:03:12.240
Cela ne dit pas les méthodes de l'état 
exactement, mais il contient toutes

00:03:12.240 --> 00:03:14.990
les infos sur l'état et il contient des
informations sur les méthodes.

00:03:16.020 --> 00:03:19.970
On peut penser à ça comme la définition
des règles sur le comportement TextView.

00:03:19.970 --> 00:03:25.750
Cette instance d'objet peut contenir des
infos comme la chaîne de texte.

00:03:25.750 --> 00:03:26.760
Ou la taille du texte 18.

00:03:26.760 --> 00:03:32.420
On peut utiliser cette classe pour créer
encore plus d'objets de TextView,

00:03:32.420 --> 00:03:34.290
Et ceux-ci pourraient avoir une 
valeur différente de la chaîne de texte.

00:03:34.290 --> 00:03:37.010
Je pense que celui-ci pourrait
contenir du texte qui dit bonjour,

00:03:37.010 --> 00:03:39.800
et celui-ci pourrait montrer le
texte qui dit au revoir.

00:03:39.800 --> 00:03:43.050
Ils pourraient avoir différentes tailles
de police, différentes couleurs etc...

00:03:44.080 --> 00:03:47.520
Cependant, ils sont tous basés
hors du modèle de classe.

00:03:47.520 --> 00:03:50.670
C'est peut-être difficile de distinguer
entre une classe et une instance d'objet,

00:03:50.670 --> 00:03:51.890
mais ce n'est pas grave.

00:03:51.890 --> 00:03:53.760
Il faut un certain
temps pour s'y habituer.

00:03:53.760 --> 00:03:55.630
Voici une analogie pour vous aider.

00:03:55.630 --> 00:03:59.270
Vous pouvez y penser comme la création
d'un plan d'étage d'une maison.

00:03:59.270 --> 00:04:02.680
Vous pouvez utiliser ce plan d'étage
pour créer des maisons réelles.

00:04:02.680 --> 00:04:04.320
Chacune de ces maisons peut
être légèrement différente.

00:04:04.320 --> 00:04:06.990
Mais elles sont toutes basées hors
de ce plan d'étage de base.

00:04:06.990 --> 00:04:10.270
Il est important de noter que le plan
n'e'st pas une maison lui-même.

00:04:10.270 --> 00:04:12.110
C'est juste le plan.

00:04:12.110 --> 00:04:17.079
De même, la classe TextView est utilisée
pour créer ces instances d'objets.

00:04:17.079 --> 00:04:20.480
Donc ces cas sont ceux
avec les valeurs réelles de texte,

00:04:20.480 --> 00:04:23.350
Valeurs de couleurs de 
texte, et les tailles de texte.

00:04:23.350 --> 00:04:25.010
Alors à quoi une de 
ces classes ressemble ?

