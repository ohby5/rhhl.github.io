WEBVTT
Kind: captions
Language: zh-TW

00:00:00.660 --> 00:00:05.050
我們從第一步開始
這一步是變更

00:00:05.050 --> 00:00:05.656
訂單摘要的價格標題

00:00:05.656 --> 00:00:09.333
首先我打開activity_main版面文件
然后我找到

00:00:09.333 --> 00:00:12.000
控制價格標題的檢視圖

00:00:12.000 --> 00:00:14.270
把光標放在這里

00:00:14.270 --> 00:00:17.240
我看到這個檢視圖
正確地高亮顯示

00:00:17.240 --> 00:00:20.710
現在我可以進行操作
修改這里的字串

00:00:20.710 --> 00:00:23.800
我要刪除這個
然后鍵入訂單摘要.

00:00:23.800 --> 00:00:26.370
在預覽視窗中
它正確地更新了

00:00:26.370 --> 00:00:28.690
請注意到 我拼寫為
大寫字母O

00:00:28.690 --> 00:00:31.910
和大寫字母S 而不是全部都是大寫

00:00:31.910 --> 00:00:34.390
如果我們決定變更我們的UI

00:00:34.390 --> 00:00:39.950
并且全部設定為大寫
我的文字仍然不會出錯

00:00:39.950 --> 00:00:42.360
因此我寫成
像這樣的Order Summary

00:00:42.360 --> 00:00:44.850
然后使用
屬性陳述式textAllCaps = true

00:00:46.170 --> 00:00:47.840
好了每一個任務完成了

00:00:47.840 --> 00:00:51.600
第二個任務是找到
價格值TextView

00:00:51.600 --> 00:00:54.130
并進行更改 使它具有一個ID

00:00:54.130 --> 00:00:58.050
如果我移到訂單摘要標題之后的
下一個TextView

00:00:58.050 --> 00:01:02.830
這是價格值TextView,
在這里它也高亮顯示

00:01:02.830 --> 00:01:07.840
根據需要 我要把這個ID
變更為order_summary_text_view

00:01:07.840 --> 00:01:11.170
很好 這些都是
版面XML變更

00:01:11.170 --> 00:01:13.210
讓我們來執行應用程式
確保它仍然能夠正常運行

00:01:14.220 --> 00:01:15.210
實際上 程式沒有運行

00:01:15.210 --> 00:01:19.490
我看到一個錯誤 提示說
它不能在java文件中

00:01:19.490 --> 00:01:21.320
找到符號price_text_view

00:01:21.320 --> 00:01:24.250
看來 在編譯我們的應用程之前
我們還需要

00:01:24.250 --> 00:01:25.080
做另外一些事情

00:01:26.850 --> 00:01:29.730
在主活動顯示方法中
我們應該

00:01:29.730 --> 00:01:34.120
把變數名稱priceTextView
更改為orderSummaryTextView

00:01:34.120 --> 00:01:37.260
在主活動文件內的
顯示訊息方法中

00:01:37.260 --> 00:01:39.430
我在這里找到priceTextView

00:01:39.430 --> 00:01:42.570
我需要刪除它
然后鍵入orderSummaryTextView

00:01:42.570 --> 00:01:44.212
它將位于camelCase中

00:01:44.212 --> 00:01:47.940
以小寫字母o開頭
因為它是一個變數名稱

00:01:47.940 --> 00:01:50.348
接下來我看到一個報警
說變數從未被使用

00:01:50.348 --> 00:01:53.410
因此我要復制它
我要在下一行使用它

00:01:53.410 --> 00:01:58.580
因為有一個錯誤說
priceTextView未解析

00:01:58.580 --> 00:02:02.740
然后刪除這個
然后在這里使用新的變數名稱

00:02:02.740 --> 00:02:04.550
很好 錯誤不見了

00:02:04.550 --> 00:02:07.859
但是這里有另外一個錯誤
我認為這與最后一個任務有關

00:02:09.080 --> 00:02:13.598
最后一個
任務是把R.id.price_text_view

00:02:13.598 --> 00:02:16.035
變為R.id.order_summary_text_view

00:02:16.035 --> 00:02:19.652
我要雙擊一個這個
顯示為紅色的錯誤

00:02:19.652 --> 00:02:24.437
然后我要刪除它
鍵入order_summary_text_view

00:02:24.437 --> 00:02:26.630
現在錯誤不見了

00:02:27.780 --> 00:02:29.930
現在應用程式正常運行
而沒有任何錯誤

00:02:29.930 --> 00:02:31.660
初始版面是正確的

00:02:31.660 --> 00:02:34.340
它不是顯示價格
現在它顯示訂單摘要

00:02:34.340 --> 00:02:37.520
如果我變更數量 然后按一下訂單
這里顯示訂單摘要

00:02:38.660 --> 00:02:41.890
我們來討論
你在這里所看到的內容

00:02:41.890 --> 00:02:44.400
記住 沒有正確
或錯誤的答案

00:02:44.400 --> 00:02:49.098
首先你注意到 
對于價格TextView 當我們為它提供

00:02:49.098 --> 00:02:53.730
一個order_summary_text_view ID時
在我們修改displayMessage方法時

00:02:53.730 --> 00:02:58.460
Java代碼中將會再次
相同的格式

00:02:58.460 --> 00:03:02.010
你還可能注意到 
把價格變更為訂單摘要

00:03:02.010 --> 00:03:04.840
看起來對代碼的其他部分
產生了鏈鎖反應

00:03:04.840 --> 00:03:09.230
現在為了使應用程式再次運行
需要進行一些變更

00:03:09.230 --> 00:03:11.840
但是其他變更是為了
遵守規定

00:03:11.840 --> 00:03:15.810
以避免任何過時
和延續性地引用價格

00:03:17.190 --> 00:03:19.880
我們更仔細地
看displayMessage方法

00:03:19.880 --> 00:03:23.910
你可能注意到只有一個
輸入參數 字串訊息

00:03:23.910 --> 00:03:24.980
而且沒有返回值

00:03:26.100 --> 00:03:30.640
&gt;&gt; 這個方法中沒有代碼行
定義返回值

00:03:30.640 --> 00:03:34.864
你還會發現TextView關鍵字
我們在XML中看到過它

00:03:34.864 --> 00:03:36.320
其作用是為我們的版面增加一個文字檢視圖

00:03:37.500 --> 00:03:39.330
它的拼寫
與這里完全相同

00:03:40.480 --> 00:03:44.830
另外 這行代碼看上去
是分配一個變數

00:03:44.830 --> 00:03:46.740
我們設定了變數資料型別

00:03:46.740 --> 00:03:50.674
變數名稱
然后在這里設定初始值

00:03:52.035 --> 00:03:55.825
這與字符串
和整數的宣告方法相似

00:03:55.825 --> 00:03:59.115
如果你更認真地看
你可能會認為 這看上去

00:03:59.115 --> 00:04:03.705
像是方法調用
findViewById后面是一個開始括弧

00:04:03.705 --> 00:04:06.885
里面有內容
然后是一個結束括弧

00:04:06.885 --> 00:04:10.310
與這里的setText相似
這里有一個開始括弧

00:04:10.310 --> 00:04:12.510
里面有內容
然后是一個結束括弧

00:04:12.510 --> 00:04:14.200
因此這也可能是一個方法調用

00:04:15.230 --> 00:04:18.240
在接下來的視訊中
我們將會更詳細地討論

00:04:18.240 --> 00:04:21.230
這些代碼行
的作用是什么

00:04:21.230 --> 00:04:23.350
然后理解
它們的實際含義

