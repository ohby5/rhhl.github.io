WEBVTT
Kind: captions
Language: zh-TW

00:00:00.610 --> 00:00:02.190
我们开始完成第一项内容。

00:00:02.190 --> 00:00:07.473
重命名输入参数的值，赋予其一个不同的名字。

00:00:07.473 --> 00:00:11.210
这就是第一个输入参数，是一个整型数据（int number），

00:00:11.210 --> 00:00:15.236
我需要做的就是改变这个变量的名字。

00:00:15.236 --> 00:00:16.736
比如，可以将它改成 ‘numberOfCoffees’。

00:00:16.736 --> 00:00:17.735
它可以是任意你想要的名字。

00:00:17.735 --> 00:00:23.290
现在，马上出现了一个警告和错误。

00:00:23.290 --> 00:00:27.030
警告的意思是说‘numberOfCoffees’这个参数从来没有被用过，

00:00:27.030 --> 00:00:31.530
因为在这段程序中我从来没有用过它作为变量。

00:00:31.530 --> 00:00:35.090
而这个错误的意思是说不能分解代码。

00:00:35.090 --> 00:00:36.890
现在没有被调用的变量了。

00:00:36.890 --> 00:00:38.550
本地被调用的变量里也没有。

00:00:38.550 --> 00:00:40.580
也不在被调用的全局变量中。

00:00:40.580 --> 00:00:42.790
并且它也不是输入的参数。

00:00:42.790 --> 00:00:46.930
所以，我需要将其转换，使‘numberOfCoffees’能被调用。

00:00:46.930 --> 00:00:48.040
就这样，错误解决了。

00:00:48.040 --> 00:00:49.248
现在可以在设备中运行了。

00:00:49.248 --> 00:00:51.640
它看起来就是这样子的。

00:00:51.640 --> 00:00:54.060
像预想的那样，这个数量选择器成功运行了。

00:00:54.060 --> 00:00:57.810
对用户来说是看不到变化的，因为我们只是修改了

00:00:57.810 --> 00:00:59.510
输入参数的名字而已。

00:01:00.690 --> 00:01:04.200
并且，我们也不必更改程序调用的方式。

00:01:04.200 --> 00:01:08.100
我们仍然能够指定‘numberOfCoffees’，然后输入任意想要的值。

00:01:08.100 --> 00:01:11.540
对于调用过程来说输入参数的名字是什么无关紧要。

00:01:12.760 --> 00:01:16.270
第二项内容是改变输入参数的数据类型，

00:01:16.270 --> 00:01:17.370
从一整个数变成一个字符串。

00:01:19.110 --> 00:01:22.600
所以在用来显示数量的程序中，我要更改输入值，

00:01:22.600 --> 00:01:29.040
用一串字符来代替单个的整数数据，像这样。

00:01:29.040 --> 00:01:32.125
但是，现在在我们的应用中有好几个错误出现了。

00:01:32.125 --> 00:01:35.495
往回看，可以看到有红色曲型下划线，

00:01:35.495 --> 00:01:38.025
出现在增量运算和减量运算中。

00:01:38.025 --> 00:01:39.496
错误信息说的是，

00:01:39.496 --> 00:01:44.130
‘displayQuantity’的主程序中字符串不能作为整数数据应用。

00:01:45.760 --> 00:01:48.960
意思就是不能输入这些变量，

00:01:48.960 --> 00:01:53.560
因为程序中的是整数数据，而我们想要的是数据串。

00:01:54.710 --> 00:01:58.320
数据类型不匹配才会引发错误产生，

00:01:58.320 --> 00:02:00.810
甚至，该应用都不能在设备上运行。

00:02:00.810 --> 00:02:02.050
这是一个编译期错误。

00:02:03.060 --> 00:02:04.780
有很多方法能修复。

00:02:04.780 --> 00:02:08.558
其中之一是，我们来更改程序中的数据，

00:02:08.558 --> 00:02:10.494
让它成为真正的字符串。

00:02:10.494 --> 00:02:14.246
比如我输入100，然后加上引号，这样它就成了一个字符串，

00:02:14.246 --> 00:02:17.210
它与输入的数据类型是相匹配的。

00:02:17.210 --> 00:02:20.300
但是实际上我们还是希望数量是一个整型，

00:02:20.300 --> 00:02:24.220
因此，我们要对其做一些增减，
使之成为一个整体。

00:02:24.220 --> 00:02:27.380
我们留下这个数量数据。

00:02:27.380 --> 00:02:29.670
然后将它改成一个整型数据。

00:02:29.670 --> 00:02:32.740
这样我们的应用程序就能运行了。

00:02:34.110 --> 00:02:34.980
酷！所以到目前为止，

00:02:34.980 --> 00:02:39.100
我们了解了带有一个输入参数的程序的例子。

00:02:39.100 --> 00:02:43.370
那么不带输入参数的程序，以及

00:02:43.370 --> 00:02:45.050
带有两个或更多输入参数的程序是怎么样的呢？

