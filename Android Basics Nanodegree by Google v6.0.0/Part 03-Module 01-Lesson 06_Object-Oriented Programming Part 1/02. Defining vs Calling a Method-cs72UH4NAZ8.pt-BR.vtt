WEBVTT
Kind: captions
Language: pt-BR

00:00:00.664 --> 00:00:01.698
Como veio trabalhar hoje?

00:00:02.276 --> 00:00:04.160
Eu tenho uma bicicleta,
me serve muito bem.

00:00:04.252 --> 00:00:05.876
- E você?
- Tudo bem. Eu dirijo.

00:00:06.400 --> 00:00:07.636
Como esse carro está se saindo?

00:00:08.000 --> 00:00:09.778
- Ele é bom.
- Sim? Sabe como funciona?

00:00:10.276 --> 00:00:12.990
- Sob o capô?
- Não, eu não preciso.

00:00:13.052 --> 00:00:14.996
Eu só preciso colocar
a chave, ligar e dirigir.

00:00:15.630 --> 00:00:17.612
Sabe que isso é como escrever código.

00:00:18.024 --> 00:00:20.289
- De que maneira?
- Bem, tudo é tipo escrever código.

00:00:20.363 --> 00:00:22.210
- Sim.
- Preste atenção.

00:00:22.210 --> 00:00:24.301
Nas lições anteriores ensinamos
um monte de código.

00:00:24.726 --> 00:00:27.090
Sim, ensinamos métodos
como o método de exibição

00:00:27.095 --> 00:00:29.175
e o de exibição de preço.
- E diziamos:

00:00:29.378 --> 00:00:31.640
Não se preocupe, falaremos
sobre o que faz mais tarde.

00:00:31.735 --> 00:00:33.556
- Bem, agora é mais tarde.
- Tudo bem.

00:00:33.692 --> 00:00:37.163
Desde que saiba como um carro
funciona, você consegue usá-lo,

00:00:37.530 --> 00:00:39.476
- Os alunos usaram esse método.
- Tudo bem.

00:00:39.520 --> 00:00:42.350
Certo, mas nós escrevemos o método,
por isso, fomos os projetistas

00:00:42.356 --> 00:00:43.661
do carro, nesse caso.
- Entendo.

00:00:43.821 --> 00:00:46.424
Assim, a idéia principal é poder
definir o método em algum lugar.

00:00:46.460 --> 00:00:47.710
É como construir o carro.

00:00:48.051 --> 00:00:49.590
E depois você pode chamar esse método.

00:00:49.643 --> 00:00:51.366
- Isso é como dirigir o carro.
- Sim.

00:00:51.840 --> 00:00:53.667
- Usemos estas idéias a seguir.
- Parece bom.

00:00:54.500 --> 00:00:56.381
No arquivo <i>MainActivity.java</i>,

00:00:56.590 --> 00:00:58.904
este é o lugar onde o método
de exibição está definido.

00:00:59.532 --> 00:01:02.738
E este é o lugar onde ele está sendo
chamado, dentro do método de incremento

00:01:03.027 --> 00:01:04.461
e dentro do método de decremento.

00:01:04.806 --> 00:01:08.258
As instruções do método
de exibição pegam um número

00:01:08.541 --> 00:01:11.430
e, em seguida, o exibem
na tela, como esse aqui.

00:01:11.690 --> 00:01:15.778
Em vez de definir um método, podemos
simplesmente pegar as instruções dele

00:01:16.360 --> 00:01:20.916
copiar e colar onde
nós invocamos esse método.

00:01:21.286 --> 00:01:25.101
E uma vez que número não é uma variável
aqui, vamos alterá-lo para quantidade.

00:01:25.569 --> 00:01:27.464
Para fazer igual com o método de incremento,

00:01:27.716 --> 00:01:30.080
poderíamos copiar este código
e colá-lo aqui.

00:01:30.940 --> 00:01:33.427
Assim, esse código funciona da mesma
forma que tínhamos antes,

00:01:33.636 --> 00:01:35.686
Mas agora, nós não precisamos
do método de exibição.

00:01:35.975 --> 00:01:38.030
A desvantagem desta implementação

00:01:38.320 --> 00:01:40.972
é que temos código duplicado
em ambos os métodos.

00:01:41.120 --> 00:01:43.181
Em vez disso, se definirmos
o método de exibição

00:01:43.526 --> 00:01:45.790
e então apenas chamá-lo pelo nome,

00:01:46.209 --> 00:01:49.076
podemos ter menos código,
que é melhor para o aplicativo.

00:01:49.489 --> 00:01:51.255
Quero mostrar outra coisa bem legal.

00:01:51.655 --> 00:01:52.892
Sempre que encontrar um método,

00:01:53.138 --> 00:01:55.015
pode clicar nele,
clicar com o botão direito,

00:01:55.458 --> 00:01:59.560
e depois, em <i>Go To &gt; Declaration</i>,
ou <i>Cmmd + V </i>se você estiver em um <i>Mac</i>.

00:02:00.633 --> 00:02:03.655
Isso rola o arquivo até onde
o método está definido.

00:02:04.129 --> 00:02:07.520
Isto é útil porque então você pode
ver as instruções reais

00:02:07.556 --> 00:02:08.966
contidas dentro desse método.

00:02:09.530 --> 00:02:12.018
Para outros&nbsp;métodos,
ele pode abrir a instrução

00:02:12.420 --> 00:02:14.080
no código do <i>framework </i>Android.

00:02:14.480 --> 00:02:18.332
Isto foi escrito pela equipe do Android,
o arquivo <i>TextView.java</i>,

00:02:18.960 --> 00:02:21.980
e mostra que, embora algumas
coisas possam parecer mágica,

00:02:22.200 --> 00:02:25.593
você sempre pode rastrear as linhas
de código onde ele foi definido.

00:02:26.110 --> 00:02:29.083
Por você ou por alguém
da equipe do Android.

00:02:30.006 --> 00:02:33.593
Para ajudar você a entender a diferença
entre a definição e chamanda de método

00:02:33.969 --> 00:02:35.593
vamos modificar a <i>MainActivity.</i>

00:02:35.975 --> 00:02:37.760
Vamos mudar o modo
como um método é definido,

00:02:38.030 --> 00:02:42.092
mudando o nome do método
de exibição para <i>displayQuantity</i>.

00:02:42.580 --> 00:02:44.578
Então, para chamar esse método,

00:02:44.849 --> 00:02:47.126
precisamos mudar alguma coisa
sobre esse código?

00:02:47.433 --> 00:02:49.780
Se estas alterações causaram
erro em seu aplicativo,

00:02:50.024 --> 00:02:52.290
certifique-se de resolvê-lo,
para que você possa executar

00:02:52.300 --> 00:02:53.421
o app no celular novamente.

00:02:53.809 --> 00:02:55.089
Marque as caixas quando terminar.

