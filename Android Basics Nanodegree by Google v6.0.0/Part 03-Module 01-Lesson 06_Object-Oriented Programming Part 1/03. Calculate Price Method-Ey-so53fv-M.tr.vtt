WEBVTT
Kind: captions
Language: tr

00:00:00.280 --> 00:00:03.270
Bu testin doğru cevabı C.

00:00:03.270 --> 00:00:05.120
Ancak cevabı bulamadıysanız sorun yok,

00:00:05.120 --> 00:00:08.680
çünkü bu henüz öğrenmediğimiz 
konuları kapsıyordu.

00:00:08.680 --> 00:00:12.590
Yüksek bir seviyede neden her seçeneğin 
doğru veya yanlış olduğuna hızlıca

00:00:12.590 --> 00:00:16.690
bakacağım, ancak bu terimlerle ilgili 
videolarda daha fazlasını öğreneceğiz.

00:00:17.530 --> 00:00:21.420
Haydi buradaki üç seçeneğimize 
bakalım ve aralarındaki farkları bulalım.

00:00:21.420 --> 00:00:24.190
İlk önce her metodun içerisindeki 
kodun satırının aynı olduğunu

00:00:24.190 --> 00:00:25.420
farkedebilirsiniz.

00:00:25.420 --> 00:00:29.020
İşte burada, işte burada, işte burada.

00:00:29.020 --> 00:00:32.400
Aynı zamanda her metod için
yukarıdaki yorum aynı.

00:00:32.400 --> 00:00:36.020
Yorum, metodun ne olduğunun
yalnızca açıklamasıdır.

00:00:36.020 --> 00:00:38.600
Metod, miktara bağlı olarak 
sipariş fiyatının

00:00:38.600 --> 00:00:40.030
hesaplanmasıdır.

00:00:40.030 --> 00:00:44.150
Başka bir benzerlik de hepsinin 
özel kelimesiyle başlamasıdır.

00:00:44.150 --> 00:00:46.440
Ne olduğunu henüz bilmiyoruz 
ama sorun değil.

00:00:46.790 --> 00:00:48.840
Buradaki sonraki kelime tamsayı (int).

00:00:49.740 --> 00:00:55.410
B seçeneğinde tamsayı demiyor 
fakat C seçeneğinde tamsayı diyor.

00:00:55.410 --> 00:00:57.770
Öyleyse, bir nedenle burada farklı.

00:00:57.770 --> 00:00:59.260
Haydi bir sonraki bölüme geçelim.

00:00:59.260 --> 00:01:02.250
Burada fiyatı hesapla diyor 
ve bu iki kelime.

00:01:02.250 --> 00:01:07.990
B seçeneğinde, camelcase'deki tek kelime 
gibi CalculatePrice birbiriyle uyuşuyor.

00:01:07.990 --> 00:01:12.690
C seçeneğinde yine boşluksuz 
camel case durumu var.

00:01:12.690 --> 00:01:17.530
Daha sonra, açma parantez ve 
tamsayı miktarını görüyoruz.

00:01:17.530 --> 00:01:20.520
Ancak biraz tuhaf olan kapama 
parantez bulunmuyor.

00:01:21.420 --> 00:01:26.130
B seçeneğinde, açma ve kapama parantezi 
ve tamsayı miktarını görüyoruz.

00:01:26.130 --> 00:01:29.810
C seçeneğinde, açma kapama parantezi 
ve tamsayı miktarını görüyoruz.

00:01:31.010 --> 00:01:34.690
Sonra burada açma ve kapama 
parantezi görüyoruz.

00:01:34.690 --> 00:01:36.140
Ancak B seçeneğinde değil.

00:01:36.960 --> 00:01:39.610
Ve ancak onlar C seçeneğinde 
ortaya çıkmaktalar.

00:01:39.610 --> 00:01:43.000
Farklı seçenekler arasındaki
farklılıkları gözlemliyoruz.

00:01:43.000 --> 00:01:46.550
Haydi bir örnekle, Google aramasıyla 
geçerli metodun ne olması

00:01:46.550 --> 00:01:48.520
gerektiğine bakalım.

00:01:48.520 --> 00:01:52.860
O zaman bir tarayıcı sayfası açacağım 
ve java metodunun tanımını arayacağım.

00:01:53.650 --> 00:01:55.650
Farklı bir sorgu araştırmış olabilirsiniz

00:01:55.650 --> 00:01:57.229
ve bu da iyi çalışmış olabilir.

00:01:57.880 --> 00:01:59.040
Bu ilk link iyi görünüyor.

00:01:59.040 --> 00:02:01.720
Bu Java'daki resmi Oracle 
dökümantasyondan.

00:02:01.720 --> 00:02:02.740
Buna tıklayacağım.

00:02:02.740 --> 00:02:06.020
Eğer daha önce bu sayfayı görmediyseniz, 
videoyu durdurabilirsiniz ve

00:02:06.020 --> 00:02:09.669
bu sayfaya göz gezdirmek için eğitici 
notlardaki linke tıklayabilirsiniz.

00:02:09.669 --> 00:02:12.850
Bu bizim kodumuzla tam olarak 
uyuşmazken, siz yine de kodumuzun

00:02:12.850 --> 00:02:17.090
tanımıyla bu metodun bileşenlerini 
karşılaştırıp benzetme yapabilirsiniz.

00:02:17.090 --> 00:02:18.750
Buradaki diğer cümle faydalı.

00:02:18.750 --> 00:02:25.690
Metod bildiriminin gerekli elemanları
metodun iade türü, adı, parantez çifti ()

00:02:25.690 --> 00:02:28.930
ve bu ayraçlar arasındaki gövde {}.

00:02:28.930 --> 00:02:32.750
Şimdilik çok sayıda yeni kelimeden
bahsettim, onları aşağıda okuyabilirsiniz.

00:02:32.750 --> 00:02:35.880
Fakat daha sonra bunlarla 
ilgili daha fazla konuşacağız.

00:02:35.880 --> 00:02:40.090
Seçeneklerimizi daraltmaya yardımcı olması
için bu bilgiyi kullanmaya çalışalım.

00:02:41.150 --> 00:02:45.530
Eğer dökümantasyon sayfasında 
doğru metot tanımıyla bu seçeneği

00:02:45.530 --> 00:02:48.460
karşılaştırmaya çalışırsak, bu
seçenek aslında hatalı olur.

00:02:48.460 --> 00:02:52.670
Burada açma parantez var
ancak kapama parantez yok.

00:02:52.670 --> 00:02:56.825
Dökümantasyonda buradaki gibi tam parantez
çiftine ihtiyacımız olduğu söyleniyor,

00:02:56.825 --> 00:02:59.670
burada ve buradaki gibi.

00:02:59.670 --> 00:03:03.920
Dökümantasyon aynı zamanda alan adı 
veya değişkenler gibi metot isminin de aynı

00:03:03.920 --> 00:03:07.380
kuralları takip etmesi gerektiğini söylüyor
ve bu, camel case'i kullanmamız

00:03:07.380 --> 00:03:11.320
gerektiği ve isimde hiçbir boşluğun olmaması
gerektiği anlamına geliyor.

00:03:11.320 --> 00:03:14.080
Yani buradaki isim geçersiz.

00:03:14.080 --> 00:03:16.840
O zaman, A seçeneği değil. 
Şimdi B seçeneğine gidelim.

00:03:16.840 --> 00:03:22.960
Dökümentasyonda gerekli olduğu söylenen açma
ve kapama ayracımız burada eksik.

00:03:24.030 --> 00:03:27.370
B seçeneğinde metot isminden
önce gelmesi gereken

00:03:27.370 --> 00:03:30.420
metot iade türü de bulunmuyor.

00:03:30.420 --> 00:03:32.520
O zaman burada tamsayı 
kelimesi olması gerekiyor

00:03:32.520 --> 00:03:36.560
çünkü biz metot çıktısı için fiyatı
geri getirmek istiyoruz.

00:03:36.560 --> 00:03:38.950
Yani B seçeneği iki nedenle yanlış.

00:03:38.950 --> 00:03:41.380
Öyleyse C seçeneğinin
daha iyi olduğunu umalım.

00:03:41.380 --> 00:03:44.420
Burada doğru olan veri iade türümüz var ve

00:03:44.420 --> 00:03:48.570
sonra CamelCase'de doğru bir 
şekilde söylenen metot ismimiz var.

00:03:48.570 --> 00:03:52.200
Aynı zamanda açma ve kapama parantezimiz 
ve ayrıca kapama

00:03:52.200 --> 00:03:53.370
ayracımız var.

00:03:53.370 --> 00:03:55.300
Bu nedenle bu, gerçekten güzel görünüyor.

00:03:55.300 --> 00:03:58.480
C seçeneği metodun gerekli 
tüm bölümlerine sahip.

00:03:58.480 --> 00:04:00.961
Bunun hakkında biraz daha fazla konuşalım.

