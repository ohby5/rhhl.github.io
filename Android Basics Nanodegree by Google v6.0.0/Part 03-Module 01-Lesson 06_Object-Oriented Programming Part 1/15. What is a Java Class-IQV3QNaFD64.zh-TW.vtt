WEBVTT
Kind: captions
Language: zh-TW

00:00:00.470 --> 00:00:03.770
我們已經建立了了
一個<i>TextView</i>類別的簡單版

00:00:03.770 --> 00:00:06.810
這將被儲存在
<i>TextView.java</i>檔案。

00:00:06.810 --> 00:00:08.290
我們把它簡化，
這令你更容易

00:00:08.290 --> 00:00:11.060
明白類別是什麼。

00:00:11.060 --> 00:00:13.710
首先，它以控制修飾符開始。

00:00:13.710 --> 00:00:15.100
它被標記為公開

00:00:15.100 --> 00:00:19.480
處於不活動狀態的其他東西
可以使用這個<i>TextView</i>類別。

00:00:19.480 --> 00:00:21.040
然後，我們有word類別。

00:00:21.040 --> 00:00:24.310
這為Java表示，
這是一個類別定義。

00:00:24.310 --> 00:00:26.400
然後我們有類別名稱。

00:00:26.400 --> 00:00:30.590
在Java中，類別的名稱以一個大寫字母開頭，
且它是駝峰式大小寫。

00:00:30.590 --> 00:00:34.360
這蜓有沒有空格和
它利用後續的字。

00:00:34.360 --> 00:00:36.800
這裡有一些其他文字，
但我們會之後看看。

00:00:36.800 --> 00:00:39.304
最重要的是我們
有一個開括號，

00:00:39.304 --> 00:00:42.354
然後在定義的底部
我們有一個關括號。

00:00:42.354 --> 00:00:47.130
現在，TextView類別裡，
我們有一大堆變數。

00:00:47.130 --> 00:00:51.140
每一個代表<i>TextView</i>的其中一個字段，
所以我們有一個字段

00:00:51.140 --> 00:00:55.700
關於<i>TextView</i>內本和一
個<i>TextView</i>內本顏色的字段。

00:00:55.700 --> 00:00:57.850
還有其他字段的，
但要記住，

00:00:57.850 --> 00:00:59.928
這個是一個簡化版本
的TextView類別。

00:01:01.000 --> 00:01:04.239
你也有一個變量來存儲
應用程序提及

00:01:04.239 --> 00:01:05.740
的內容。

00:01:05.740 --> 00:01:08.750
你可以在以下筆記中，
閱讀更多關於內容的資料，但是

00:01:08.750 --> 00:01:13.170
它基本上是一個方法來訪問
有關應用程序的信息，就像

00:01:13.170 --> 00:01:16.670
例如，你可以使用上下文
訪問在應用程序中的資源。

00:01:17.870 --> 00:01:19.990
這些都是<i>TextView</i>的方法。

00:01:19.990 --> 00:01:23.690
<i>setText</i>方法需要輸入文本串。

00:01:23.690 --> 00:01:28.840
然後，它更新全局變數的<i>MTEXT</i>
來使用這個新的數值。

00:01:28.840 --> 00:01:32.480
<i>setTextColor</i>
也同樣需要輸入一個新的顏色和

00:01:32.480 --> 00:01:36.080
更新的內部狀態
來使用這個新的顏色值。

00:01:36.080 --> 00:01:38.045
還有像<i>gettext</i>和
<i>getTextColor</i>的方法

00:01:38.045 --> 00:01:42.920
恢復內部文本字符串或內部文本顏色。

00:01:44.080 --> 00:01:48.091
還有一件事，你可能已經注意到
這裡所有的全局變數

00:01:48.091 --> 00:01:49.651
都是以小寫<i>m</i>開始。

00:01:49.651 --> 00:01:51.510
M是指成員變數，並

00:01:51.510 --> 00:01:55.330
這些都是<i>TextView</i>
類別的成員變數。

00:01:55.330 --> 00:01:58.580
成員變量只是字段的另一種說法或

00:01:58.580 --> 00:02:00.990
<i>TextView</i>的類別狀態。

00:02:00.990 --> 00:02:03.380
這裡有一個簡單的<i>ImageView</i>
的類別。

00:02:03.380 --> 00:02:05.320
你會在<i>ImageView.java</i>
檔案發現它。

00:02:06.400 --> 00:02:10.580
它以公開類別開始，
那麼<i>ImageVie</i>是類別名稱。

00:02:10.580 --> 00:02:13.550
然後我們有開關括號。

00:02:13.550 --> 00:02:15.980
這構成了<i>ImageView</i>的狀態。

00:02:15.980 --> 00:02:17.730
一般情況下它有更多的字段，但

00:02:17.730 --> 00:02:20.000
我只是想告訴你一個例子。

00:02:20.000 --> 00:02:25.680
這是一個整數變數，叫<i>mImageId</i>，
<i>m</i>是成員變數。

00:02:25.680 --> 00:02:28.340
這個存儲用於

00:02:28.340 --> 00:02:31.160
<i>ImageView</i>的圖像的資源標識。

00:02:31.160 --> 00:02:34.470
在這兒，我們有構造函數，用來

00:02:34.470 --> 00:02:36.390
構造一個新的<i>ImageView</i>對象。

00:02:36.390 --> 00:02:38.730
而它需要輸入上下文。

00:02:38.730 --> 00:02:40.809
然後初始化這些變數。

00:02:42.120 --> 00:02:43.088
我們有一個方法。

00:02:43.088 --> 00:02:47.190
它叫<i>setImage</i>，
它需要輸入一個資源標識，用於

00:02:47.190 --> 00:02:50.500
新的圖像，
應該會顯示在<i>ImageView</i>。

00:02:50.500 --> 00:02:53.850
在此方法中，我們更新
圖像ID的內部變數。

00:02:55.100 --> 00:02:57.691
同樣，我們創造了
簡化的<i>TextView</i>和

00:02:57.691 --> 00:03:01.880
<i>ImageView</i>類別來幫助你
理解類別的概念。

00:03:01.880 --> 00:03:05.200
現在，讓我們來看看<i>Android</i>框架中，

00:03:05.200 --> 00:03:06.110
這些類別的真實
版本

00:03:07.950 --> 00:03:09.240
要查看在<i>Android　Java</i>類別中的代碼

00:03:09.240 --> 00:03:13.240
你可以安裝這個<i>Chrome</i>擴充功能

00:03:13.240 --> 00:03:14.960
如果你是不使用<i>Chrome</i>
瀏覽器，

00:03:14.960 --> 00:03:17.989
你可以看看以下的筆記，
如何存取這些文件。

00:03:19.020 --> 00:03:19.520
好吧。

00:03:21.840 --> 00:03:26.081
一旦<i>Chrome</i>擴充功能已安裝，
然後當我搜索，類似

00:03:26.081 --> 00:03:30.260
<i>TextView Android</i>，我去看看
關於類別的參考文件，

00:03:30.260 --> 00:03:34.830
然後就是額外的鏈接，比如說源代碼。

00:03:34.830 --> 00:03:36.730
這個是真正為高級開發人員。

00:03:36.730 --> 00:03:41.420
如果您想了解用於創建<i>TextView</i>
的代碼。

00:03:41.420 --> 00:03:45.850
這是由Android團隊定義的
<i>TextView.java</i>文件。

00:03:45.850 --> 00:03:47.970
正如你所看到的，
這真是漫長而複雜的。

00:03:47.970 --> 00:03:49.739
但它仍然有類別的
主部分。

00:03:51.010 --> 00:03:55.330
它以公開類別開始，然後是
<i>TextView</i>，類別名稱，

00:03:55.330 --> 00:03:57.280
然後是開括號和

00:03:57.280 --> 00:03:59.500
關括號，然後一路到底部。

00:04:00.930 --> 00:04:04.340
在類別的頂部，
我們看到了一堆字段，

00:04:04.340 --> 00:04:07.200
這構成了類別的狀態。

00:04:07.200 --> 00:04:13.470
例如，我們看到，<i>Textcolor</i>是字段，
我們看到<i>Tex</i>也是一個字段。

00:04:13.470 --> 00:04:17.560
這裡是<i>TextView</i>的構造函數
這需要輸入上下文。

00:04:17.560 --> 00:04:22.560
如果我按<i>Cmd+ F</i>或<i>CTL+ F</i>如果你在
<i>Windows中</i>，那麼我可以嘗試搜索

00:04:22.560 --> 00:04:24.050
<i>setText</i>。

00:04:24.050 --> 00:04:26.250
而這裡是<i>setText</i>方法。

00:04:26.250 --> 00:04:29.835
此方法是要設定
<i>TextView</i>的字符串值。

00:04:29.835 --> 00:04:31.205
如果我搜尋<i>gettext</i>，

00:04:31.205 --> 00:04:35.605
我也看到這個方法
恢復<i>TextView</i>的顯示文本。

00:04:35.605 --> 00:04:38.275
你有個想法，如果你想，
你可以自己瀏覽這個關於這個題目。

00:04:39.545 --> 00:04:42.245
如果我搜索
<i>ImageView</i>的文檔頁面，

00:04:42.245 --> 00:04:46.750
然後我可以點擊查看源代碼來查看
所有<i>ImageView</i>類別的代碼。

00:04:46.750 --> 00:04:49.370
文件指出公開呼籲ImageView

00:04:49.370 --> 00:04:52.460
然後這些字段構成
<i>ImageView</i>狀態，

00:04:52.460 --> 00:04:55.810
在文件的底部有一堆方法。

00:04:55.810 --> 00:04:57.810
文件中的代碼是相當複雜的，

00:04:57.810 --> 00:05:00.360
它有數千行代碼。

00:05:00.360 --> 00:05:03.060
關於面向對象的編程的最好的部分，

00:05:03.060 --> 00:05:06.500
雖然是你不需要
知道所有這些細節。

00:05:06.500 --> 00:05:10.200
作為開發人員，你可以在你的應用程式
使用<i>TextView</i>的和<i>ImageView</i>

00:05:10.200 --> 00:05:13.630
而不需知道所有裡面發生的細節。

