WEBVTT
Kind: captions
Language: ru

00:00:00.610 --> 00:00:02.650
Я добавила код, который мы 
выучили, в приложение.

00:00:02.650 --> 00:00:07.660
Он гласит <i>View orderSummaryTextView
= findViewById</i>,

00:00:07.660 --> 00:00:13.000
затем вводим идентификатор ресурса для
<i>order_summary_text_view</i>.

00:00:13.000 --> 00:00:15.910
Но это приводит к ошибке в Android 
Studio в следующей строке.

00:00:17.750 --> 00:00:21.830
Тут говорится, что нельзя решить 
метод <i>setText</i>.

00:00:21.830 --> 00:00:24.430
Если я добавлю еще одну строку кода здесь,

00:00:24.430 --> 00:00:27.880
я покажу вам типы методов, 
действительные в этой переменной.

00:00:28.890 --> 00:00:32.400
Мы только что создали переменную
<i>orderSummaryTextView</i>,

00:00:32.400 --> 00:00:34.330
и она <i>TypeView</i>, и поэтому

00:00:34.330 --> 00:00:37.520
в следующей строке мы сможем
вызывать на нее метод.

00:00:37.520 --> 00:00:40.540
Но если взглянуть на предложения 
автозаполнения,

00:00:40.540 --> 00:00:44.120
эти методы являются методами <i>View</i>.

00:00:44.120 --> 00:00:46.140
Нет конкретных методов <i>TextView</i>.

00:00:47.200 --> 00:00:49.350
Например, здест нет ни одного 
метода <i>setText</i>.

00:00:51.320 --> 00:00:54.455
Поэтому мы получаем тут ошибку, 
пытаясь вызвать <i>setText</i>.

00:00:56.020 --> 00:01:00.890
И вы также не можете задать размер 
текста, цвет или что-то из этого.

00:01:00.890 --> 00:01:02.350
Так где же все эти методы?

00:01:03.840 --> 00:01:08.700
Дело в том, что <i>TextView</i> - более 
конкретный тип элемента <i>View</i>.

00:01:10.430 --> 00:01:13.240
Поэтому, если мы хотим вызвать 
методы <i>TextView</i> на этот объект,

00:01:13.240 --> 00:01:16.777
нам надо убедиться, что это объект
элемента <i>TextView</i>.

00:01:17.820 --> 00:01:21.160
Итак, переменная является 
объектом <i>TextView</i>.

00:01:21.160 --> 00:01:25.750
Но тут появляется другая ошибка: 
несовместимые типы, потому что <i>TextView</i>

00:01:25.750 --> 00:01:31.090
должен быть справа, но мы тут видим 
только обычный <i>View</i>.

00:01:31.090 --> 00:01:34.240
That's because the findViewById
method returns a View.

00:01:34.240 --> 00:01:35.558
Как же нам это согласовать?

00:01:35.558 --> 00:01:41.720
Раз уж <i>TextView</i> - более конкретный тип 
элемента <i>View</i> или, если по-другому

00:01:41.720 --> 00:01:47.260
<i>TextView</i> это подкласс <i>View</i>, 
мы можем сделать кое-что под названием

00:01:47.260 --> 00:01:51.970
приведение типов. В Java это значит, что 
мы можем взять <i>View</i>, возвращенный

00:01:51.970 --> 00:01:54.280
этим методом, и считать его за <i>TextView</i>.

00:01:54.280 --> 00:01:58.760
Теперь правая сторона является 
объектом <i>TextView</i> и

00:01:58.760 --> 00:02:02.168
затем мы можем хранить его внутри этой 
переменной <i>orderSummaryTextView</i>.

00:02:03.460 --> 00:02:06.110
Знаю, кажется пугающим, потому что 
я только что назвала

00:02:06.110 --> 00:02:07.970
тонну новых понятий.

00:02:07.970 --> 00:02:09.210
Давайте объясню еще раз.

00:02:10.229 --> 00:02:14.280
Метод <i>findViewById</i> превращает 
объект в тип <i>View</i>.

00:02:14.280 --> 00:02:15.820
Записав это обозначение в скобках,

00:02:15.820 --> 00:02:19.690
указав в них нужный тип данных объекта,

00:02:19.690 --> 00:02:23.250
мы приводим этот <i>View</i> в <i>TextView</i>.

00:02:23.250 --> 00:02:27.217
Таким образом, все выражение здесь 
оценивается как объект <i>TextView</i>.

00:02:28.600 --> 00:02:32.140
Мы можем хранить это в переменной слева,

00:02:32.140 --> 00:02:35.790
а это <i>orderSummary TextView</i>,
и у него тип <i>TextView</i>.

00:02:35.790 --> 00:02:40.740
В последующих строках мы можем 
вызвать на этот объект методы <i>TextView</i>.

00:02:40.740 --> 00:02:43.720
Видите, как все текстовые 
методы отображаются вот тут?

00:02:44.840 --> 00:02:48.070
<i>setAllCaps, setTextSize</i> и другие.

00:02:48.070 --> 00:02:51.660
Я могу просто вытереть это, потому что 
<i>setText</i> должен работать,

00:02:51.660 --> 00:02:54.170
а сообщений об ошибках больше нет.

00:02:54.170 --> 00:02:57.100
Если мы хотим вызывать методы <i>TextView</i>,

00:02:57.100 --> 00:02:59.410
нам нужно, чтобы был объект <i>TextView</i>.

00:02:59.410 --> 00:03:02.500
А чтобі получить обїект <i>TextView</i>,
нужно візвать <i>findViewById</i>,

00:03:02.500 --> 00:03:06.890
а затем привести этот объект <i>View</i>
в тип <i>TextView</i>.

00:03:06.890 --> 00:03:09.700
Причина, по которо работает 
приведение типа, потому что

00:03:09.700 --> 00:03:13.440
этот <i>View</i> здесь, в иерархии элемента 
является собственно <i>TextView</i>.

00:03:13.440 --> 00:03:17.520
Если мы попытаемся привести его в что-то 
вроде радио-кнопки, это не сработает,

00:03:17.520 --> 00:03:20.840
потому что <i>orderSummaryTextView</i>
является типом <i>TextView</i>, поэтому

00:03:20.840 --> 00:03:23.000
мы должны привести его в 
соответствующий тип.

00:03:24.275 --> 00:03:28.370
И таким же образом, в методе 
<i>displayQuantity</i> мы вызываем <i>findViewById</i> и

00:03:28.370 --> 00:03:32.350
вводим идентификатор ресурса
для <i>quantity_Text_View</i>.

00:03:32.350 --> 00:03:36.090
Это возвращает <i>View</i>, и мы переводим 
его в <i>TextView</i>, и

00:03:36.090 --> 00:03:39.330
можем хранить это внутри этой переменной 
под названием <i>quantityTextView</i>.

00:03:40.400 --> 00:03:43.450
У этой перменной тип <i>TextView</i>, и поэтому

00:03:43.450 --> 00:03:48.170
в последующих строках мы можем вызвать 
на нее методы <i>TextView</i>, например, <i>setText</i>.

00:03:48.170 --> 00:03:51.160
Вот обновленный код <i>MainActivity</i>, 
использующий приведение типа.

00:03:51.160 --> 00:03:56.400
Мы можем привести эти <i>Views</i> в <i>TextViews</i>, 
чтобы хранить их в переменных

00:03:56.400 --> 00:04:00.622
с типом <i>TextView</i>. В этом списке 
<i>MainActivity</i> переменных

00:04:00.622 --> 00:04:05.090
<i>quantityTextView</i> и <i>orderSummaryTextView</i> 
являются типом <i>TextView</i>.

00:04:05.090 --> 00:04:06.820
На них мы можем вызывать методы <i>TextView</i>,

00:04:06.820 --> 00:04:10.810
и мы не ограничены тем, чтобы считать 
их только типом <i>View</i>.

00:04:10.810 --> 00:04:15.050
А теперь мы можем вызвать конкретные 
методы <i>TextView</i> на эти переменные.

00:04:15.050 --> 00:04:19.041
Например, мы можем вызвать <i>setText</i>
на <i>orderSummaryTextView</i>,

00:04:19.041 --> 00:04:21.880
и можем вызвать <i>setText</i>
на <i>quantityTextView</i>.

00:04:21.880 --> 00:04:22.650
Как вы видите,

00:04:22.650 --> 00:04:27.180
вы должны быть осторожны с тем, какой 
тип данных где используется.

00:04:27.180 --> 00:04:31.290
До сих пор, когда мы вызывали методы, мы 
не думали о возвращаемой величине,

00:04:31.290 --> 00:04:34.400
потому что метод <i>setText</i> вообще-то
не имеет возвращаемой величины.

00:04:34.400 --> 00:04:37.180
То же касается и метода
<i>imageView.setImageResource</i> .

00:04:37.180 --> 00:04:39.060
У него нет возвращаемой величины.

00:04:39.060 --> 00:04:41.540
Но другие методы могут иметь 
возвращаемые величины.

00:04:41.540 --> 00:04:45.590
Например, в классе TextView есть
метод <i>getTextSize</i>.

00:04:45.590 --> 00:04:47.680
Он возвращает целое число, так что

00:04:47.680 --> 00:04:53.410
мы можем хранить результат метода в 
переменной под названием размер типа <i>int</i>.

00:04:53.410 --> 00:04:55.140
А вот еще метод с возвращаемой величиной.

00:04:55.140 --> 00:04:58.270
В этом классе <i>Button</i> [кнопка] вы 
можете вызывать метод <i>getHeight</i>,

00:04:58.270 --> 00:05:03.420
и он возвращает целое число, которое 
вы можете хранить внутри переменной.

00:05:03.420 --> 00:05:06.450
Если вам нужно сохранить этот результат 
внутри строки, например,

00:05:06.450 --> 00:05:10.810
вы получите сообщение об ошибке, потому 
что этот метод возвращает целое число.

00:05:10.810 --> 00:05:14.988
Чтобы узнать, какой тип данных нужно 
вводить в метод и какой тип данных

00:05:14.988 --> 00:05:19.290
возвращается назад из метода, вам 
нужно свериться с документацией.

00:05:19.290 --> 00:05:21.260
А, например, в классе <i>TextView</i>,

00:05:21.260 --> 00:05:25.760
если вызвать любой из этих методов, 
он возвращает величину типа <i>int</i>.

00:05:25.760 --> 00:05:28.620
Тип данных возвращаемой величины 
указан в колонке слева.

00:05:28.620 --> 00:05:33.040
В других методах можно получить в виде 
возвращаемой величины пустого значения

00:05:33.040 --> 00:05:38.330
или булевого, которые мы еще не изучали, 
или числа с плавающей запятой, длинный

00:05:38.330 --> 00:05:42.790
целый тип и т.д. Эта страница документа 
тоже показывает расширенные типы данных

00:05:42.790 --> 00:05:45.010
для входных значений для каждого метода.

00:05:45.010 --> 00:05:49.590
Например, метод <i>setTextColor</i> требует 
целого числа в качестве входного значения,

00:05:49.590 --> 00:05:53.110
а возвращаемая величина - <i>void</i> [пустая],
так что возвращаемой величины нет.

00:05:53.110 --> 00:05:56.010
Поэтому проверяйте описание, чтобы 
знать, какие типы данных ожидаются.

00:05:56.010 --> 00:05:58.750
В противном случае, будете получать 
сообщения об ошибках от

00:05:58.750 --> 00:06:01.070
Android Studio о том, что типы 
не сопоставимы.

00:06:01.070 --> 00:06:02.630
Вернемся к практике.

00:06:02.630 --> 00:06:05.580
Внизу четыре разных примера кодов.
Некоторые из кодов

00:06:05.580 --> 00:06:10.100
могут содержать ошибки, относящиеся 
к несопоставимым типам данных.

00:06:10.100 --> 00:06:11.165
Если найдете ошибку,

00:06:11.165 --> 00:06:15.540
опишите как ее нужно исправить в 
предоставленных внизу окошках.

00:06:15.540 --> 00:06:19.948
Или, если код совершенно верен, можете 
просто написать "Ошибок нет".

00:06:19.948 --> 00:06:22.545
Этот тест довольно сложный, потому что 
мы только что изучили

00:06:22.545 --> 00:06:26.555
много понятий и этот код все 
еще довольно новый для вас.

00:06:26.555 --> 00:06:30.105
Не спешите и сверьтесь с 
документацией для этих методов.

00:06:30.105 --> 00:06:33.695
Убедитесь, что входные значения и 
возвращаемые величины верны,

00:06:33.695 --> 00:06:37.665
и что если мы заявляем переменные, 
у нас для них верный тип данных.

00:06:37.665 --> 00:06:39.265
Также просмотрите документацию на вызов

00:06:39.265 --> 00:06:42.375
этих методов, чтобы убедиться, 
что мы испоьзуем методы верно.

