WEBVTT
Kind: captions
Language: ru

00:00:00.480 --> 00:00:01.310
Подожди.

00:00:01.310 --> 00:00:02.240
&gt;&gt; Что не так?

00:00:02.240 --> 00:00:04.950
&gt;&gt; Как это мы вдруг оказались
в кулинарном шоу?

00:00:04.950 --> 00:00:07.270
&gt;&gt; Потому что нам нужно
было поговориьт о методах?

00:00:07.270 --> 00:00:08.625
&gt;&gt; Может объяснишь, Рейчел Рэй?

00:00:08.625 --> 00:00:11.650
&gt;&gt; Ну, ты когда-нибудь
раньше пек пироги?

00:00:11.650 --> 00:00:13.570
&gt;&gt; Я их раньше ел.

00:00:13.570 --> 00:00:14.120
&gt;&gt; Ладно.

00:00:14.120 --> 00:00:15.790
Что ж, да ты профессионал.

00:00:15.790 --> 00:00:16.360
&gt;&gt; Ага.

00:00:16.360 --> 00:00:20.140
&gt;&gt; Чтобы испечь пирог, тебе всего лишь
нужно взять муку, сахар.

00:00:20.140 --> 00:00:20.840
&gt;&gt; Ингредиенты.

00:00:20.840 --> 00:00:21.845
&gt;&gt; Ингредиенты.

00:00:21.845 --> 00:00:22.210
Да.

00:00:22.210 --> 00:00:24.730
А потом выполняй инструкции рецепта.

00:00:24.730 --> 00:00:28.240
&gt;&gt; Ладно.
&gt;&gt; И потом появится пирог.

00:00:28.240 --> 00:00:29.950
&gt;&gt; Вот так?

00:00:29.950 --> 00:00:31.070
&gt;&gt; Да.

00:00:31.070 --> 00:00:31.870
&gt;&gt; Ага.
Что ж,

00:00:31.870 --> 00:00:33.820
свяжи эту аналогию с методом еще раз.

00:00:33.820 --> 00:00:35.265
&gt;&gt; Хорошо. Конечно.

00:00:35.265 --> 00:00:37.185
Для метода нужно ввести входные значения.

00:00:37.185 --> 00:00:39.955
&gt;&gt; Как мы делали с перменной <i>quantity</i> для
метода <i>display</i>?

00:00:39.955 --> 00:00:43.545
&gt;&gt; Да, а потом ты выполняешь 
инструкции метода.

00:00:43.545 --> 00:00:46.340
&gt;&gt; Ага, почти как рецепт 
для выпечки пирога.

00:00:46.340 --> 00:00:46.955
&gt;&gt; Угу. Тогда

00:00:46.955 --> 00:00:48.840
ты получишь возвращенную 
выходную величину.

00:00:48.840 --> 00:00:51.873
&gt;&gt; Выходные величины такие вкусные.

00:00:51.873 --> 00:00:55.660
&gt;&gt; Найдем побольше информации

00:00:55.660 --> 00:00:58.220
о входных параметрах для методов.

00:00:58.220 --> 00:01:01.460
Я задам в Google поиск параметра 
Java метода.

00:01:01.460 --> 00:01:04.250
Первая ссылка мне нравится, 
я на нее нажму.

00:01:04.250 --> 00:01:08.240
Эта статья рассказывает о 
введении информации в метод.

00:01:08.240 --> 00:01:12.270
Вот фрагмент программы, которая 
вычисляет месячную выплату за съем дома.

00:01:12.270 --> 00:01:16.850
В ней четыре входных параметра:
сумма аренды, процент, будущая стоимость

00:01:16.850 --> 00:01:20.440
арендыи еще количество периодов 
долговременности схъема.

00:01:20.440 --> 00:01:24.680
А внутри этого метода мы видим, что можно 
использовать эти входные параметры

00:01:24.680 --> 00:01:28.100
просто как переменные, чтобы сделать 
математические расчеты.

00:01:28.100 --> 00:01:29.710
Когда мы вызываем метод <i>computeРayment</i>,

00:01:29.710 --> 00:01:33.890
мы должны убедиться, что вводим 
входные данные в определенном порядке.

00:01:33.890 --> 00:01:37.130
Так что сначала идет сумма аренды, 
потом процент и так далее.

00:01:37.130 --> 00:01:38.480
Чтобы сделать тест этого раздела,

00:01:38.480 --> 00:01:41.520
у вас будет возможность посмотреть 
эту статью подробнее.

00:01:41.520 --> 00:01:43.970
В <i>МainАctivity</i> в приложении Just Java

00:01:43.970 --> 00:01:46.990
мы будем изменять метод 
<i>displayQuantity</i> и

00:01:46.990 --> 00:01:49.800
входной параметр, чтобы 
вы попрактиковались.

00:01:49.800 --> 00:01:52.680
Обратите внимание, что в методе 
уменьшения на единицу в вашем приложении

00:01:52.680 --> 00:01:54.880
или что мы зовем методом <i>displayQuantity</i>,

00:01:54.880 --> 00:01:58.670
мы вводим переменную <i>quantity</i> как 
входное значение в этот метод.

00:01:58.670 --> 00:02:01.110
Но входной параметр называется <i>number</i>, 
так что когда бы

00:02:01.110 --> 00:02:04.420
мы ни захотели сослаться на это входное 
значение, нам достаточно сказать <i>number</i>.

00:02:04.420 --> 00:02:07.880
Технически, мы могли бы использовать 
глобальную переменную <i>quantity</i>в

00:02:07.880 --> 00:02:11.150
этом методе вместо того, чтобы 
выдавать ее за входной параметр.

00:02:11.150 --> 00:02:14.430
Но ради того, чтобы учить 
вас о входных параметрах,

00:02:14.430 --> 00:02:16.370
давайте оставим их как есть.

00:02:16.370 --> 00:02:19.480
Я могу изменить эот вызов на 
метод <i>displayQuantity</i>, так что

00:02:19.480 --> 00:02:21.300
он вводит входное значение, число 30.

00:02:21.300 --> 00:02:27.090
Это допустимо, потому что по-прежнему 
сопоставимо с типом входных данных.

00:02:27.090 --> 00:02:29.430
Таким образом,когда мы вызываем 
<i>displayQuantity</i>, в методе

00:02:29.430 --> 00:02:32.750
уменьшения, он прыгнет вниз, 
сюда, и выполнит эти инструкции.

00:02:32.750 --> 00:02:35.320
А переменная <i>number</i> будет
иметь значение 30. Я запущу это

00:02:35.320 --> 00:02:40.140
на своем телефоне, чтобы показать вам. 
Теперь, когда я жу кнопку минус на

00:02:40.140 --> 00:02:43.090
приложении, оно показывает количество 30.

00:02:43.090 --> 00:02:44.390
Сейчас я попробую.

00:02:45.410 --> 00:02:47.970
Вот.
Так оно и получилось.

00:02:47.970 --> 00:02:52.380
Я мгу создавать различные переменные и 
вводить их как входные данные в метод.

00:02:52.380 --> 00:02:55.560
Вот, я создала локальную переменную 
под названием<i>someQuantity</i> и

00:02:55.560 --> 00:02:56.610
присвоила ей значение 100.

00:02:56.610 --> 00:02:59.770
Я ввела эту переменную как входную 
величину в данный метод,

00:02:59.770 --> 00:03:04.290
а теперь переменная <i>number</i> 
тут, внутри имеет значение 100.

00:03:04.290 --> 00:03:06.350
Запустим телефон.

00:03:06.350 --> 00:03:10.224
Я ожидаю, что при нажатии кнопки "Минус", 
<i>number</i> [количество] обновится до 100.

00:03:11.280 --> 00:03:12.120
Так и есть.

00:03:12.120 --> 00:03:14.630
Это лишь немногое, что вы можете 
сделать, экспериментируюя с

00:03:14.630 --> 00:03:17.560
введением различных входных 
величин в метод.

00:03:17.560 --> 00:03:19.510
По мере работы с входными параметрами,

00:03:19.510 --> 00:03:22.680
вы встретите еще один термин - 
arguments [аргументы].

00:03:22.680 --> 00:03:24.000
Когда вы вызываете метод,

00:03:24.000 --> 00:03:27.570
входные величины, вводимые в такой метод, 
называются аргументами.

00:03:27.570 --> 00:03:28.730
Это немного смешное слово.

00:03:28.730 --> 00:03:31.630
Потому что когда думаешь об аргументах, в 
голову приходят орущие и проклинающие

00:03:31.630 --> 00:03:32.510
друг друга люди.

00:03:32.510 --> 00:03:34.310
Но тут все совсем не так.

00:03:34.310 --> 00:03:37.220
Аргументы - это просто входные 
данные, вводимые в метод.

00:03:37.220 --> 00:03:42.150
Входные параметры это действующие 
входные данные вобъявлении вашего метода и

00:03:42.150 --> 00:03:44.550
они являются переменными, которые 
используютя в методе.

00:03:44.550 --> 00:03:48.060
Так что есть легкое отличие между 
входным параметром и аргументом.

00:03:48.060 --> 00:03:49.790
В любом случае, почитайте статью и

00:03:49.790 --> 00:03:53.040
инструкции о параметрах метода.

00:03:53.040 --> 00:03:55.850
Затем поэкспериментируйте с 
кодом в вашем приложении.

00:03:55.850 --> 00:03:58.650
Сначала попробуйте переименовать
входной параметр <i>number</i>

00:03:58.650 --> 00:04:01.380
в объявлении метода <i>displayQuantity</i>.

00:04:01.380 --> 00:04:03.850
Просто дайте ему другое 
название переменной.

00:04:03.850 --> 00:04:07.740
Затем исправьте ошибки, если есть, 
и снова запустите приложение.

00:04:07.740 --> 00:04:10.660
В следующем тесте измените тип данных

00:04:10.660 --> 00:04:15.280
входного параметра <i>number</i> с <i>int</i> 
на что-то еще типа <i>String</i>.

00:04:15.280 --> 00:04:18.660
Посмотрите, что произойде и 
отмените внесенные изменения.

00:04:18.660 --> 00:04:21.269
Если хотите поэкспериментировать с 
другими вещами, вперед!

00:04:21.269 --> 00:04:22.690
Например, если у вас есть вопрос

00:04:22.690 --> 00:04:25.560
что случится, если я сделаю Х, 
действуйте и пробуйте.

