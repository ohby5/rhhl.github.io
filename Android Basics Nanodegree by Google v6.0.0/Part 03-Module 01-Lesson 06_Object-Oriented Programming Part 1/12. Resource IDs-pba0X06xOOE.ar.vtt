WEBVTT
Kind: captions
Language: ar

00:00:00.634 --> 00:00:02.701
الآن بعد أن علمت ماهية موارد آندرويد..

00:00:02.901 --> 00:00:04.869
وأن باستطاعتك وضعهم في مجلدات مختلفة

00:00:05.200 --> 00:00:09.701
فلنتحدث عن كيفية الوصول إلى الموارد
التي حفظتها في تلك المجلدات

00:00:10.567 --> 00:00:14.634
حين يتم ترجمة تطبيقك ليعمل
هناك أداة في الأندرويد اسمها AAPT

00:00:15.000 --> 00:00:17.133
وهي تقوم بإنشاء الفئة R

00:00:17.601 --> 00:00:21.335
وهي ببساطة ملف R.Java
وسأريكم مثال لهذا فيما يلي

00:00:21.767 --> 00:00:25.834
وهو يحتوي على معرفات الموارد
لكل الموارد في مجلد res

00:00:26.367 --> 00:00:30.335
لكل مورد أضفته، أصبح له مُعرف يشير إليه

00:00:30.767 --> 00:00:34.268
تنسيق المعرف مبني على نوع المورد

00:00:34.567 --> 00:00:39.934
لذا كل موارد الجافا الرسومية..
ستتبع نسق R.drawable

00:00:40.501 --> 00:00:46.601
كل الموارد التي هي سلاسل حروف
ستتبع الصيغة (اسم_المورد.R.string)

00:00:46.667 --> 00:00:48.334
والذي هو (hello) في حالتنا هذه

00:00:49.100 --> 00:00:51.701
لاحظ أن هناك طريقتان للوصول إلى المورد

00:00:52.167 --> 00:00:57.534
في كود الجافا يتبع التنسيق
(اسم_المورد.R.resource type)

00:00:58.022 --> 00:01:01.268
أما في XML فهو يتبع العلامة @

00:01:01.567 --> 00:01:05.068
لذا نحن نكتب @ ثم نوع المورد
وهو سلسلة حروف هنا

00:01:05.267 --> 00:01:08.300
ثم شرطة مائلة ثم اسم المورد
والذي هو hello

00:01:09.234 --> 00:01:12.935
إليكم المزيد من الأمثلة عن أنواع الموارد
المختلفة وكيفية الوصول إليها

00:01:13.734 --> 00:01:17.224
هناك فقط بضع أنواع موارد شائعة
ولكن هناك الكثير غيرها

00:01:17.834 --> 00:01:21.134
تذكر أنه في كود جافا
دائمًا ما تبدأ بحرف R كبير..

00:01:21.348 --> 00:01:23.216
متبوعًا بنقطة ثم نوع المورد

00:01:23.467 --> 00:01:25.335
متبوعًا بنقطة ثم اسم المورد

00:01:25.567 --> 00:01:27.501
والاسم قد يكون أيًا ما تحدده

00:01:28.033 --> 00:01:30.967
أما في XML فنبدأ بعلامة @ ثم نوع المورد

00:01:31.033 --> 00:01:33.001
ثم شرطة مائلة ثم اسم المورد

00:01:34.067 --> 00:01:38.035
فلنأخذ لحظة لإيجاد كل معرفات الموارد
في ملف MainActivity.java

00:01:38.534 --> 00:01:41.402
سأفتح أمر البحث في آندرويد ستوديو

00:01:42.067 --> 00:01:45.668
سأستخدم Cmd+F أو استخدم Ctrl+F
لو كنت تستخدم (ويندوز)

00:01:46.901 --> 00:01:48.702
سينبثق لنا حقل للبحث

00:01:49.567 --> 00:01:52.101
سأقوم بالبحث عن R ثم نقطة

00:01:52.730 --> 00:01:55.197
ثم أنقر على مطابقة حالة الأحرف..

00:01:55.267 --> 00:01:58.034
بحيث يبحث عن حروف R الكبيرة فقط

00:01:58.434 --> 00:02:03.201
أول شيء وجده هو الإشارة إلى
R.layout.activity_main

00:02:03.634 --> 00:02:07.101
هذا مثير للاهتمام لأننا نشير
إلى ملف مخطط main_activity

00:02:07.701 --> 00:02:11.935
في الواقع هذه هي الطريقة التي يعرف بها
النشاط الرئيسي أن يحمل ملف XML هذا

00:02:12.100 --> 00:02:13.133
أليس هذا رائعاً؟

00:02:13.367 --> 00:02:14.901
لننظر إلى الإشارة التالية

00:02:15.601 --> 00:02:17.634
حسناً، في وظيفة displayQuantity..

00:02:17.801 --> 00:02:22.035
لدينا إشارة إلى
R.id.quantity_text_view

00:02:22.367 --> 00:02:24.968
إذن هذا يشير إلى معرف واجهة

00:02:25.267 --> 00:02:28.434
وبالتحديد واجهة النصالتي تعرض الكمية

00:02:29.033 --> 00:02:31.333
نأمل أن تكون بعض أجزاء الأحجية
قد التحمت مع بعضها

00:02:31.667 --> 00:02:33.967
بالإشارة إلى هذه الواجهة في كود جافا..

00:02:34.234 --> 00:02:37.935
نستطيع تحديثه أثناء تشغيل التطبيق
ليعرض numberOfCoffees

00:02:38.467 --> 00:02:40.435
فلنذهب إلى الحدث التالي

00:02:40.634 --> 00:02:42.901
حسناً في وظيفة displayMessage..

00:02:43.200 --> 00:02:46.901
نجد إشارة إلى
R.id.order_summary_text_view

00:02:47.400 --> 00:02:52.433
يبدو هنا أننا نحاول الإشارة إلى واجهة
النص هذه والتي تعرض ملخص الطلب

00:02:52.595 --> 00:02:54.531
لنستطيع تحديثها بهذه الرسالة

