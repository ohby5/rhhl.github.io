WEBVTT
Kind: captions
Language: zh-CN

00:00:00.860 --> 00:00:04.030
回到我们之前见过的 displayMessage 方法中

00:00:05.030 --> 00:00:07.570
我们是想弄清这里发生了什么

00:00:08.630 --> 00:00:12.450
从我们目前学过的知识来看 这有个 TextView 对象

00:00:12.450 --> 00:00:15.670
变量名是 orderSummaryTextView

00:00:15.670 --> 00:00:18.870
这有一堆我们看不懂的代码

00:00:18.870 --> 00:00:22.820
但在第二行 我们使用了变量 prderSummaryTextView

00:00:22.820 --> 00:00:25.030
我们设定上面的文字为这个信息

00:00:26.250 --> 00:00:29.470
让我们来了解更多关于如何调用对象的方法

00:00:31.250 --> 00:00:34.920
在对象上访问方法要遵循这个格式

00:00:34.920 --> 00:00:39.560
首先写 Object 变量名 在本例中它是 titleTextView

00:00:39.560 --> 00:00:41.160
然后我添加一个点

00:00:41.160 --> 00:00:45.350
跟着是方法名称 在本例中是 setText

00:00:45.350 --> 00:00:49.390
这个方法的定义在名叫 TextView 的 Java 类中

00:00:49.390 --> 00:00:53.250
这个方法的声明中还指定了参数是字符串类型的

00:00:53.250 --> 00:00:58.060
所以我们 加上括号 把一个字符串作为输入

00:00:58.060 --> 00:00:59.700
声明结尾加上分号

00:01:00.920 --> 00:01:05.459
当我们写这行代码时 它修改了 titleTextView 对象

00:01:05.459 --> 00:01:08.100
以便于显示在屏幕上

00:01:08.100 --> 00:01:10.490
之所以使用对象变量名

00:01:10.490 --> 00:01:13.600
是因为应用中有很多 TextView

00:01:13.600 --> 00:01:16.379
为了能够保证调用正确的对象实例的方法

00:01:17.560 --> 00:01:20.980
当你说明输入参数时 要确保按照

00:01:20.980 --> 00:01:24.620
正确的方法声明的顺序声明参数

00:01:25.660 --> 00:01:29.460
所以如果没有输入 你的括号里就只是一个空集

00:01:29.460 --> 00:01:32.820
传递输入参数到一个方法的方式和之前

00:01:32.820 --> 00:01:34.110
在第3课学的一样

00:01:34.110 --> 00:01:36.140
记住 用圆点分隔对象变量名和

00:01:36.140 --> 00:01:38.450
方法名字

00:01:38.450 --> 00:01:42.450
这是另一个例子 同样关于 titleTextView 对象

00:01:42.450 --> 00:01:45.190
我们打算对它调用setTextSize 方法

00:01:45.190 --> 00:01:49.220
这个方法的输入是一个整数 表示新字体大小

00:01:49.220 --> 00:01:51.830
在这个例子里 我们把字体大小设置为18

00:01:52.980 --> 00:01:55.510
当 Android 执行这行代码时

00:01:55.510 --> 00:02:00.460
它会改变 titleTextView 让它有18号大小的字体

00:02:00.460 --> 00:02:02.260
本例中

00:02:02.260 --> 00:02:06.540
我们在 TextView 对象上 调用的方法叫做 warningTextView

00:02:07.580 --> 00:02:11.140
这个方法叫做 setTextColor 它的输入是一个颜色

00:02:12.140 --> 00:02:16.010
注意 颜色被指定为 Color.RED

00:02:16.010 --> 00:02:17.670
我们在文档中查找

00:02:17.670 --> 00:02:22.030
颜色类 滑动能看到红色的定义在这

00:02:22.030 --> 00:02:25.290
你在这还能看到许多其它颜色

00:02:26.370 --> 00:02:30.850
当你调用 setTextColor 时 你可以用 Color.BLUE 或 Color.BLACK

00:02:30.850 --> 00:02:33.835
最后 这有一个关于 ImageView 调用方法的例子

00:02:34.882 --> 00:02:39.230
这个 ImageView 对象有个变量名 welcomeImageView

00:02:39.230 --> 00:02:41.260
我们对它调用 setImageResource 方法

00:02:42.380 --> 00:02:46.135
这个方法把一个新的图片作为输入参数 这个图片是我们应该设置在 ImageView 中的图片

00:02:47.400 --> 00:02:51.580
我们以 R.drawable 的格式 指定新图片的资源ID

00:02:51.580 --> 00:02:53.000
这是文件名

00:02:54.100 --> 00:02:58.610
这是另一个在 Java 代码中使用资源 ID 的例子

00:02:58.610 --> 00:03:02.059
要得到在 TextView 对象上可调用的全部方法列表

00:03:02.059 --> 00:03:04.867
只要打开 TextView Android文档页面

00:03:04.867 --> 00:03:08.810
搜索 TextView Android 然后点击这

00:03:09.840 --> 00:03:12.110
这个页面我们见过

00:03:12.110 --> 00:03:15.740
我们已经知道了列在这个页面中的 XML 属性

00:03:16.830 --> 00:03:19.900
向下滚动看见一系列的文字视图类中的

00:03:19.900 --> 00:03:20.790
公共方法

00:03:21.910 --> 00:03:22.870
如果你想找一些东西

00:03:22.870 --> 00:03:27.210
可以使用 Cmd+F 如果你是 Windows 系统 你就用 Ctrl+F

00:03:27.210 --> 00:03:29.900
我打算查找 setTextColor 方法 这个方法之前我们用过

00:03:31.200 --> 00:03:32.740
setTextColor 方法在这

00:03:32.740 --> 00:03:35.310
它把整数颜色作为输入参数

00:03:36.420 --> 00:03:40.540
所有这些方法在 TextView 类中被定义为公共方法

00:03:40.540 --> 00:03:43.170
这就是为什么现在我们能调用这些方法的原因

00:03:43.170 --> 00:03:44.910
如果它们被定义为私有方法

00:03:44.910 --> 00:03:46.210
这里就看不到它们了

00:03:47.400 --> 00:03:49.070
当你们调用这些方法时

00:03:49.070 --> 00:03:52.370
检查好所需的参数 确保参数排序正确

00:03:52.370 --> 00:03:55.680
还有正确的数据类型

00:03:56.910 --> 00:03:58.040
当你看这些代码时

00:03:58.040 --> 00:04:02.130
有的时候调用方法时不用圆点

00:04:02.130 --> 00:04:06.150
区别在于 你是在一个类的内部还是外部

00:04:06.150 --> 00:04:08.730
一起看看 TextView 类下的一个例子

00:04:08.730 --> 00:04:12.540
已经定义的 setText 方法 和一些其它方法

00:04:12.540 --> 00:04:16.589
假如我们从其它方法中调用这个 setText

00:04:16.589 --> 00:04:21.040
你可以通过调用 setText 来实现 然后传递到输入参数上

00:04:21.040 --> 00:04:24.070
但是圆点在哪？对象变量名放哪？

00:04:24.070 --> 00:04:28.800
这一行实际上是 this.setText("Hello")

00:04:28.800 --> 00:04:31.360
就是引用当前对象实例

00:04:31.360 --> 00:04:34.800
然后 对于这个对象调用 setText

00:04:34.800 --> 00:04:38.880
我们已经再熟悉不过调用对象的方法的格式了

00:04:38.880 --> 00:04:42.301
但是这个隐含的 this.part 不是必须的

00:04:42.301 --> 00:04:47.380
或者是为了让代码更简洁 我们可以只调用 setText("Hello”)

00:04:47.380 --> 00:04:50.670
注意类内访问 setTexts 和类外访问

00:04:50.670 --> 00:04:53.800
setTexts 的区别

00:04:53.800 --> 00:04:55.990
这个是非常容易理解的

00:04:55.990 --> 00:04:59.380
因为你要用哪个 TextView 是十分明确的

00:04:59.380 --> 00:05:03.380
避免在类内有多个 TextView

00:05:03.380 --> 00:05:06.280
在类内和类外的 TextView 中

00:05:06.280 --> 00:05:08.970
还有个不同点是

00:05:08.970 --> 00:05:12.330
在类内 TextView 可读取私有变量

00:05:12.330 --> 00:05:14.210
和私有方法

00:05:14.210 --> 00:05:16.060
如果在 TextView 类外

00:05:16.060 --> 00:05:21.150
无法使用私有变量和私有方法

00:05:21.150 --> 00:05:25.100
在 MainActivity 类别内 你只能从 TextView 类中

00:05:25.100 --> 00:05:27.300
使用公共方法和公共变量

