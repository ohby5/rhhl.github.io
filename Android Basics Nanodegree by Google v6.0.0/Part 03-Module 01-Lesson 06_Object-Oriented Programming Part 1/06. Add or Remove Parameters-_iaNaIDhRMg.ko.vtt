WEBVTT
Kind: captions
Language: ko

00:00:00.680 --> 00:00:02.750
입력 파라미터 1개인 경우는
이미 같이 살펴봤습니다.

00:00:02.750 --> 00:00:05.689
이것은 calculatePrice 메소드의
코드로, 강의 노트에 이미

00:00:05.689 --> 00:00:07.110
포함되어 있던 부분입니다.

00:00:07.110 --> 00:00:09.760
이제 입력 파라미터가
2개인 경우를 살펴봅시다.

00:00:09.760 --> 00:00:14.450
submitOrder 메소드에서 이제
calculatePrice를 호출하려 합니다.

00:00:14.450 --> 00:00:18.580
여기서 10은 커피 한 잔에 
10달러임을 나타냅니다.

00:00:18.580 --> 00:00:20.900
이걸 먼저 바꿔 보죠.

00:00:20.900 --> 00:00:26.214
submitOrder 메소드에서 
calculatePrice를 호출하려 합니다.

00:00:26.214 --> 00:00:29.610
이 메소드에 두 개의 아규먼트를
전달하는 거죠.

00:00:29.610 --> 00:00:32.950
이렇게 하면 여기 메소드 서명과
일치하지 않아 오류가 생깁니다.

00:00:32.950 --> 00:00:35.470
이제 그 부분을 업데이트 할 거예요.

00:00:35.470 --> 00:00:38.580
괄호 안에 이렇게
쉼표를 붙입니다.

00:00:38.580 --> 00:00:41.520
그리고 'int price'라고 입력하죠.

00:00:41.520 --> 00:00:47.040
두번째 입력치는 가격이고 
이건 정수치니까요.

00:00:47.040 --> 00:00:50.190
바로 오류가 생깁니다.

00:00:50.190 --> 00:00:54.140
여기 메소드 서명에는 입력 파라미터가
하나뿐이므로 맞지 않는 거죠.

00:00:54.140 --> 00:00:57.200
이 부분을 고쳐서 두번째
입력 파라미터가 들어가게 할 겁니다.

00:00:57.200 --> 00:00:58.420
이 괄호 안에다

00:00:58.420 --> 00:01:01.070
두번째 파라미터를 추가할 거예요.

00:01:02.280 --> 00:01:05.630
이것은 커피 한 잔 당 가격이니,
이걸 price per cup이라 하고

00:01:05.630 --> 00:01:10.030
숫자로 들어가니까 데이터 유형은
int로 두겠습니다.

00:01:11.050 --> 00:01:13.420
파라미터 유형의 이름은 
원하는 대로 넣으시면 됩니다.

00:01:13.420 --> 00:01:16.850
담고 있는 정보의 내용에 관한
설명이어야 겠죠.

00:01:16.850 --> 00:01:20.530
반면 데이터 유형은 특정한
자바 데이터 유형이어야 합니다.

00:01:20.530 --> 00:01:24.090
int나 string, 그리고 아직 배우지
않은 다른 종류들이 있겠죠.

00:01:24.090 --> 00:01:29.670
이 두번째 입력 파라미터 설명을 위해
자바 doc도 업그레이드 했습니다.

00:01:29.670 --> 00:01:33.070
이 메소드를 보면 
수량 입력과 동시에

00:01:33.070 --> 00:01:36.630
한 잔 당 가격이 5달러로
수량에 5를 곱하는 걸로 되어 있죠.

00:01:36.630 --> 00:01:40.130
하지만 이제 커피 한 잔 가격이 
변수 형태로 바뀌었으니

00:01:40.130 --> 00:01:43.960
5라는 수치를 굳이 코딩하지 말고
이 변수를 쓰도록 하죠.

00:01:43.960 --> 00:01:47.340
이제 주문한 총 가격은
수량에다가

00:01:47.340 --> 00:01:48.270
한 잔 당 가격을 곱한 것이 됩니다.

00:01:48.270 --> 00:01:51.500
이미 설명했던 것처럼 
템플릿에 놓고 비교해 보면

00:01:51.500 --> 00:01:55.350
이제 수량 및 한 잔 당 가격은
다른 수치로 바뀌어도 무방합니다.

00:01:55.350 --> 00:01:57.699
입력 파라미터이기 때문이죠.

00:02:01.700 --> 00:02:04.860
다르게 호출해도
여전히 계산할 수 있게 됩니다.

00:02:06.030 --> 00:02:08.840
이제 입력 파라미터가 
0인 경우를 살펴봅시다.

00:02:08.840 --> 00:02:10.190
submit order 메소드에서

00:02:10.190 --> 00:02:13.110
괄호 안을 비워둔 채 
calculate price를 호출해야 합니다.

00:02:14.310 --> 00:02:17.200
submit order 메소드에서
calculate price를 호출하면,

00:02:17.200 --> 00:02:18.619
이제 이 아규먼트를 삭제할 겁니다.

00:02:19.620 --> 00:02:21.700
이제 이 메소드에는 어떤 입력도
전달되지 않죠.

00:02:22.790 --> 00:02:25.590
바로 붉은 색 밑줄이 생기네요.
메소드 서명이랑

00:02:25.590 --> 00:02:28.290
일치하지 않기 때문입니다.
그래서 이제

00:02:28.290 --> 00:02:29.900
이 입력 파라미터 전부를 삭제합니다.

00:02:31.110 --> 00:02:34.380
여전히 오류가 발생하네요. 이제 
이 파라미터들은 존재하지 않으니까요.

00:02:34.380 --> 00:02:35.820
그래서 이 부분도 삭제합니다.

00:02:37.330 --> 00:02:41.460
이제는 price per cup이라는 기호를
처리할 수 없다는 오류가 발생하네요.

00:02:41.460 --> 00:02:44.720
더 이상 입력변수가 아니니,
힘들게 코딩한 가격 수치로 되돌립니다.

00:02:44.720 --> 00:02:49.060
5달러 혹은 어떤 가격 수치로
입력하셔도 됩니다.

00:02:50.070 --> 00:02:53.230
이제 더 이상은 수량 관련 
오류가 나지 않네요.

00:02:53.230 --> 00:02:54.570
이제 이것은 글로벌 변수가 되었고,

00:02:54.570 --> 00:02:58.790
main activity에 있는 어떤 메소드에서든
이 수량 변수를 연결할 수 있습니다.

00:02:58.790 --> 00:03:00.470
죄송해요.
입력 파라미터 이름으로

00:03:00.470 --> 00:03:02.360
quantity 말고 다른 걸 
지정했어야 하는데 말이죠.

00:03:02.360 --> 00:03:05.830
하지만 여러분도 이제 아시겠죠.
입력 파라미터가 없으면,

00:03:05.830 --> 00:03:08.120
글로벌 변수에 
연결할 수밖에 없답니다.

00:03:08.120 --> 00:03:11.680
수치를 직접 코딩하거나 혹은
여기에 로컬 변수를 만들어서

00:03:11.680 --> 00:03:12.630
거기에 연결하시면 됩니다.

