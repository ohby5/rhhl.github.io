WEBVTT
Kind: captions
Language: zh-TW

00:00:00.680 --> 00:00:02.750
我们已经一起完成了带有一个输入参数的情况。

00:00:02.750 --> 00:00:05.689
这是calculate Price方法的代码，包含在

00:00:05.689 --> 00:00:07.110
指导说明中了。

00:00:07.110 --> 00:00:09.760
现在，我们一起来了解带有两个输入参数的例子。

00:00:09.760 --> 00:00:14.450
在submit Order方法中，
调用calculate Price (quantity, 10)。

00:00:14.450 --> 00:00:18.580
这里10代表每杯咖啡是10美元。

00:00:18.580 --> 00:00:20.900
现在开始改吧。

00:00:20.900 --> 00:00:26.214
我将在submit Order方法中
调用calculate Price (quantity, 10)。

00:00:26.214 --> 00:00:29.610
在方法中引入两个参数。

00:00:29.610 --> 00:00:32.950
因为不符合方法签名，所以出现了一个错误。

00:00:32.950 --> 00:00:35.470
我来更新一下。

00:00:35.470 --> 00:00:38.580
在括号内加一个逗号。

00:00:38.580 --> 00:00:41.520
然后键入整数型的价格数值，

00:00:41.520 --> 00:00:47.040
我们键入的价格是一个整数，作为第二个输入参数。

00:00:47.040 --> 00:00:50.190
马上出现了一个错误，因为

00:00:50.190 --> 00:00:54.140
与方法签名不匹配，这里只允许有一个输入参数。

00:00:54.140 --> 00:00:57.200
我要做的就是做一下更改，使其有两个输入参数。

00:00:57.200 --> 00:00:58.420
在这个前

00:00:58.420 --> 00:01:01.070
后括号内，添加第二个参数。

00:01:02.280 --> 00:01:05.630
因为这是每杯咖啡的价格，我就命名它为

00:01:11.050 --> 00:01:13.420
参数的名称可以是任意的。

00:01:13.420 --> 00:01:16.850
对于它所表达的信息必须是描述性的。

00:01:16.850 --> 00:01:20.530
而参数类型必须是特定的java数据类型。

00:01:20.530 --> 00:01:24.090
整型字符串以及其他类型我们还没有学过。

00:01:24.090 --> 00:01:29.670
同时更新方法帮助文档，对第二个输入参数进行描述。

00:01:29.670 --> 00:01:33.070
方法内部表达的是咖啡的数量

00:01:33.070 --> 00:01:36.630
乘以每杯咖啡5美元。

00:01:36.630 --> 00:01:40.130
而现在，每杯咖啡的价格已被改成了一个变量。

00:01:40.130 --> 00:01:43.960
所以我们用每杯咖啡的价格来代替5这一固定不变的硬编码。

00:01:43.960 --> 00:01:47.340
现在总价格变成了数量

00:01:47.340 --> 00:01:48.270
乘以每一杯的价格。

00:01:48.270 --> 00:01:51.500
如果你们回想之前我所讲过的模板，与之类比

00:01:51.500 --> 00:01:55.350
就可以知道现在数量和每一杯的价格可以换成

00:01:55.350 --> 00:01:57.699
不同的值，因为它们是输入参数。

00:01:58.940 --> 00:02:01.700
你们可以以不同的数量和每一杯的价格调用

00:02:01.700 --> 00:02:04.860
这一方法，计算依然能进行。

00:02:06.030 --> 00:02:08.840
现在开始完成最后一项，0个输入参数的情况。

00:02:08.840 --> 00:02:10.190
在submit Order（提单）这个方法中，

00:02:10.190 --> 00:02:13.110
我们要用空括号调用calculate Price（计价）方法。

00:02:14.310 --> 00:02:17.200
在submit Order方法中，当我调用calculate Price方法时，

00:02:17.200 --> 00:02:18.619
要移除这些参数。

00:02:19.620 --> 00:02:21.700
现在我们不引入任何输入值。

00:02:22.790 --> 00:02:25.590
立刻出现了一条红色下划线，是因为与签名存在错配，

00:02:25.590 --> 00:02:28.290
所以往回查找，

00:02:28.290 --> 00:02:29.900
去掉所有的输入参数。

00:02:31.110 --> 00:02:34.380
还有关于一个错误的报告，因为这些参数并不存在，

00:02:34.380 --> 00:02:35.820
所以可以到前面去把这条报告删除。

00:02:37.330 --> 00:02:41.460
现在又有一个错误，说‘price per cup’这个符号无法定义。

00:02:41.460 --> 00:02:44.720
因为它已经不再是输入的变量，所以我们要换回

00:02:44.720 --> 00:02:49.060
5美元这一硬编码，或者你们可以选择其他任意的价格。

00:02:50.070 --> 00:02:53.230
计算机没有对数量产生任何异议，因为实际上

00:02:53.230 --> 00:02:54.570
它是一个全局变量，

00:02:54.570 --> 00:02:58.790
而且可以从主方法的任意一个方法中引用数量。

00:02:58.790 --> 00:03:00.470
不好意思。我本应该选择其他的名字

00:03:00.470 --> 00:03:02.360
而不是quantity（数量）来给输入参数命名。

00:03:02.360 --> 00:03:05.830
但是你们只要明白，没有了输入参数，

00:03:05.830 --> 00:03:08.120
就只能使用全局变量了。

00:03:08.120 --> 00:03:11.680
你们可以使用硬编码，如果在这创建了本地变量的话，

00:03:11.680 --> 00:03:12.630
也可以使用本地变量。

