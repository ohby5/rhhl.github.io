WEBVTT
Kind: captions
Language: id

00:00:00.300 --> 00:00:03.370
Kita baru saja selesai memanggil metode
dan memasukkan input.

00:00:03.370 --> 00:00:04.260
&amp;gt;&amp;gt; Oh, tunggu.

00:00:04.260 --> 00:00:06.790
Apakah Anda mengacu memasukkan kualitas
untuk, apa itu tadi,

00:00:06.790 --> 00:00:08.270
metode hitung harga?

00:00:08.270 --> 00:00:09.300
&amp;gt;&amp;gt; Tepat.

00:00:09.300 --> 00:00:11.850
Dan sekarang kita ingin mendapatkan
nilai return darinya.

00:00:11.850 --> 00:00:12.765
Kusuka nilai return.

00:00:12.765 --> 00:00:13.930
[TERTAWA]
Jadi apa nanti?

00:00:13.930 --> 00:00:15.300
Saya rasa, harga?

00:00:15.300 --> 00:00:16.550
Karena itu metode hitung harga.

00:00:16.550 --> 00:00:19.750
&amp;gt;&amp;gt; Ya harga pesanan total
akan menjadi nilai kembalinya.

00:00:19.750 --> 00:00:21.310
&amp;gt;&amp;gt; Oke, mari kita lakukan itu!

00:00:21.310 --> 00:00:23.510
&amp;gt;&amp;gt; Oke.
Apakah Anda perlu garpu?

00:00:25.820 --> 00:00:26.980
&amp;gt;&amp;gt; Benarkah?

00:00:26.980 --> 00:00:31.340
&amp;gt;&amp;gt; Di Java, keluaran dari metode ini
dikenal sebagai nilai return.

00:00:31.340 --> 00:00:35.640
Dalam contoh kode, Anda mungkin telah
melihat kata return dalam metode, atau

00:00:35.640 --> 00:00:39.090
melihat kata return
di komentar di atasnya.

00:00:39.090 --> 00:00:42.170
Mari kita mencari informasi lebih lanjut
tentang nilai return untuk metode.

00:00:42.170 --> 00:00:46.900
Saya akan melakukan pencarian Google
untuk nilai return metode Java.

00:00:46.900 --> 00:00:48.780
Tautan pertama tampaknya bagus.

00:00:48.780 --> 00:00:51.420
Artikel ini membahas
mengembalikan nilai dari sebuah metode.

00:00:52.710 --> 00:00:55.240
Ia mengatakan bahwa
sebuah metode selesai dieksekusi

00:00:55.240 --> 00:00:59.510
ketika kita menyelesaikan semua pernyataan
atau semua baris dalam metode.

00:00:59.510 --> 00:01:04.319
Atau saat kita mencapai pernyataan return
yang pertama, mana yang lebih dulu.

00:01:04.319 --> 00:01:07.370
Sebuah metode juga akan berakhir jika
kita memberikan pengecualian atau

00:01:07.370 --> 00:01:10.410
kesalahan, tapi kita tidak akan
membahasnya dalam kursus ini.

00:01:10.410 --> 00:01:12.710
Sebagian besar kita akan fokus
pada dua kasus pertama.

00:01:14.240 --> 00:01:18.230
Jadi dalam kode, Anda mungkin akan melihat
sesuatu seperti return, titik koma.

00:01:18.230 --> 00:01:21.100
Itu berarti metode harus berakhir dan

00:01:21.100 --> 00:01:24.150
setiap baris kode yang muncul setelah ini
tidak akan dieksekusi.

00:01:25.440 --> 00:01:28.170
Atau Anda mungkin melihat
sesuatu seperti ini.

00:01:28.170 --> 00:01:32.230
Return, dan kemudian return, titik koma.

00:01:32.230 --> 00:01:35.280
Ini mengembalikan nilai keluaran
dari metode ini.

00:01:36.470 --> 00:01:37.900
Berikut ini contohnya.

00:01:37.900 --> 00:01:40.140
Ini adalah kode untuk metode GetArea.

00:01:40.140 --> 00:01:43.420
Ini menghitung luas persegi panjang,
yang didefinisikan

00:01:43.420 --> 00:01:46.010
sebagai lebar kali tinggi.

00:01:46.010 --> 00:01:51.100
Jadi dalam metodenya kita memiliki return
diikuti dengan nilai return.

00:01:51.100 --> 00:01:54.660
Nilai return adalah lebar variabel
kali tinggi variabel.

00:01:54.660 --> 00:01:56.610
Dan ini sama dengan satu angka.

00:01:56.610 --> 00:02:01.270
Dan angka itu dikembalikan sebagai
nilai keluaran untuk metode ini.

00:02:01.270 --> 00:02:02.760
Tidak seperti parameter masukan,

00:02:02.760 --> 00:02:05.890
di mana Anda dapat memiliki banyak
parameter masukan di antara

00:02:05.890 --> 00:02:10.389
kurung buka dan kurung tutup, Anda hanya
dapat memiliki satu nilai return.

00:02:10.389 --> 00:02:13.530
Dan jenis data nilai return
ditentukan di sini.

00:02:13.530 --> 00:02:18.300
Jadi kita bisa mengembalikan angka lain,
selama itu bilangan bulat.

00:02:18.300 --> 00:02:21.050
Misalnya, Anda tak dapat me-return string,

00:02:21.050 --> 00:02:24.170
karena itu tidak sesuai dengan
jenis data yang dimasukkan.

00:02:24.170 --> 00:02:27.930
Anda mungkin menyadari sekarang bahwa
Java memiliki arti khusus untuk

00:02:27.930 --> 00:02:29.550
kata return.

00:02:29.550 --> 00:02:33.480
Anda tidak dapat menggunakannya untuk
nama variabel atau metode.

00:02:33.480 --> 00:02:35.549
Ini disebut kata-kata kunci Java.

00:02:37.140 --> 00:02:38.960
Saya dapat mencari daftar kata kunci Java.

00:02:41.370 --> 00:02:43.740
Ini adalah daftar
semua kata kunci Java.

00:02:43.740 --> 00:02:46.880
Anda perhatikan ada beberapa kata
yang telah kita lihat sebelumnya,

00:02:46.880 --> 00:02:49.460
seperti int, public, dan private.

00:02:49.460 --> 00:02:50.710
Ini daftar yang cukup singkat.

00:02:50.710 --> 00:02:53.440
Semua kata ini memiliki makna khusus
di Java saat Anda memasukkannya

00:02:53.440 --> 00:02:53.940
ke kode.

00:02:53.940 --> 00:02:58.640
Itu berarti Anda tak dapat menggunakannya
untuk pengidentifikasi, seperti nama

00:02:58.640 --> 00:03:00.560
variabel, atau nama metode di aplikasi.

00:03:00.560 --> 00:03:04.140
Dan Anda juga akan melihat bahwa
return adalah kata kunci khusus Java.

00:03:04.140 --> 00:03:07.780
Ini disediakan bila Anda ingin
mengembalikan nilai keluaran metode.

00:03:09.140 --> 00:03:12.240
Kembali ke contoh awal kita
saat membuat pesan cuaca.

00:03:12.240 --> 00:03:17.150
Kita dapat membuat string lalu
mengembalikannya dengan return message.

00:03:17.150 --> 00:03:19.230
Tipe data variabel ini
adalah string.

00:03:19.230 --> 00:03:25.150
Apa yang akan terjadi jika saya menambah
kode setelah pernyataan return ini?

00:03:25.150 --> 00:03:28.390
Maka saya mendapatkan error yang
mengatakan pernyataan tidak terjangkau.

00:03:28.390 --> 00:03:31.230
Karena komputer tidak akan sampai
ke baris kode ini

00:03:31.230 --> 00:03:32.690
setelah pernyataan return.

00:03:32.690 --> 00:03:35.690
Karena itu akan mengakhiri
metode pada poin ini.

00:03:35.690 --> 00:03:38.570
Jadi, hapus baris kode yang muncul
setelah pernyataan return Anda.

00:03:39.640 --> 00:03:43.100
Bagaimana jika Anda tidak butuh metode
Anda untuk mengembalikan nilai keluaran?

00:03:43.100 --> 00:03:45.390
Nah mari kita lihat beberapa contoh
di MainActivity

00:03:45.390 --> 00:03:47.295
dari aplikasi JustJava.

00:03:47.295 --> 00:03:52.415
Metode kenaikan dan pengurangan adalah
contoh di mana tidak ada nilai return.

00:03:52.415 --> 00:03:53.905
Saat memanggil metode pengurangan,

00:03:53.905 --> 00:03:58.405
ia melakukan semua kerja kerasnya untuk
memperbarui UI di metode displayQuantity.

00:03:58.405 --> 00:04:01.045
Tak ada nilai keluaran untuk ditampilkan.

00:04:01.045 --> 00:04:04.185
Sama dengan metode kenaikan,
semua kerja keras dilakukan

00:04:04.185 --> 00:04:07.455
saat Anda memanggil displayQuantity
dan ia memperbarui layar.

00:04:07.455 --> 00:04:10.430
Anda mungkin bertanya, kalau begitu
di manakah pernyataan return-nya.

00:04:10.430 --> 00:04:14.180
Nah, metode ini akan selesai mengeksekusi
ketika semua baris kode telah selesai,

00:04:14.180 --> 00:04:17.089
atau ketika mencapai pernyataan return.

00:04:17.089 --> 00:04:20.320
Jadi, saya bisa saja menambahkan return;
seperti ini.

00:04:21.570 --> 00:04:24.870
Dengan begitu, metode ini akan selesai
segera saat ia mencapai baris ini.

00:04:24.870 --> 00:04:27.200
Ini memberi saya peringatan
di Android Studio.

00:04:27.200 --> 00:04:31.570
Katanya, return tidak dibutuhkan
di pernyataan terakhir di metode Avoid.

00:04:31.570 --> 00:04:35.900
Karena saya tidak mengembalikan apapun,
cukup saya hapus baris ini.

00:04:35.900 --> 00:04:38.080
Dengan begini, lebih sedikit kode,
lebih mudah dibaca,

00:04:38.080 --> 00:04:39.750
jadi saya lebih suka seperti ini.

00:04:39.750 --> 00:04:43.100
Untuk menunjukkan bahwa tidak ada
nilai return, sangat penting dalam

00:04:43.100 --> 00:04:46.570
signature metode untuk mengatakan bahwa
tipe data return adalah void.

00:04:46.570 --> 00:04:49.390
Void berarti bahwa
tidak ada nilai return.

00:04:49.390 --> 00:04:51.310
Java memiliki cara khusus
mewakili ini, sehingga

00:04:51.310 --> 00:04:53.940
itu sebabnya ini adalah kata kunci Java.

00:04:53.940 --> 00:04:56.720
Mari kita lihat kembali
daftar kata kunci Java, dan memang,

00:04:56.720 --> 00:04:58.280
kita melihat void ada di daftar ini.

00:04:59.310 --> 00:05:01.310
Jadi, jika Anda tidak memiliki
nilai return,

00:05:01.310 --> 00:05:04.130
pastikan Anda tidak membiarkannya
kosong seperti ini,

00:05:04.130 --> 00:05:07.470
karena jika tidak,
ada kesalahan sintaks Java.

00:05:07.470 --> 00:05:09.430
Cukup ketik void dengan huruf kecil v.

00:05:10.500 --> 00:05:12.310
Silakan baca artikel ini sekarang.

00:05:12.310 --> 00:05:17.190
Anda dapat menyaring informasi yang Anda
mengerti, atau cari di Google untuk

00:05:17.190 --> 00:05:18.090
informasi lanjut.

00:05:18.090 --> 00:05:21.310
Setelah Anda mempelajari beberapa hal
dari artikel ini, Anda dapat

00:05:21.310 --> 00:05:22.249
beralih ke tugas.

00:05:23.500 --> 00:05:24.560
Lalu periksa catatan Anda.

00:05:24.560 --> 00:05:28.290
Anda akan menemukan tautan ke
beberapa kode untuk empat metode berbeda.

00:05:28.290 --> 00:05:30.440
Setiap metode mengandung kesalahan.

00:05:30.440 --> 00:05:33.560
Dan tugas Anda adalah menemukan
kesalahan dalam setiap metode tersebut.

00:05:34.850 --> 00:05:37.110
Karena ada beberapa cara untuk
memperbaiki kode-kodenya,

00:05:37.110 --> 00:05:40.710
asumsikan bahwa komentar javadoc
di bagian atas setiap metode benar.

00:05:40.710 --> 00:05:42.210
Kita ingin kodenya
sesuai dengannya.

00:05:43.410 --> 00:05:44.680
Seperti inilah metodenya.

00:05:45.810 --> 00:05:48.120
Kenali nomor baris
di mana kesalahannya berada.

00:05:48.120 --> 00:05:51.060
Nomor barisnya terletak
di kolom sebelah kiri di sini.

00:05:51.060 --> 00:05:55.100
Kemudian tulis deskripsi singkat,
mengapa baris itu memiliki kesalahan.

00:05:55.100 --> 00:05:56.872
Jadi nomor baris di sini,
deskripsi di sini.

00:05:56.872 --> 00:05:57.993
Jika sudah selesai,
Anda dapat melanjutkan ke video solusi.

