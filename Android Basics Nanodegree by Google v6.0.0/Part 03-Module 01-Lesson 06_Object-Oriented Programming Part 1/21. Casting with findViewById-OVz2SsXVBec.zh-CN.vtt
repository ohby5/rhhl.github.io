WEBVTT
Kind: captions
Language: zh-CN

00:00:00.270 --> 00:00:01.540
先看第一个

00:00:01.540 --> 00:00:04.470
公布答案前我会先复制这段代码

00:00:04.470 --> 00:00:06.700
然后粘贴到 Android Studio 中

00:00:06.700 --> 00:00:09.060
看看会出现什么错误

00:00:09.060 --> 00:00:12.090
现在你要完成这个测试 不需要借助 Android Studio

00:00:12.090 --> 00:00:14.510
只看代码就能解决

00:00:14.510 --> 00:00:16.280
然后写下你的答案

00:00:16.280 --> 00:00:19.520
所以 用不用 Android Studio 都可以

00:00:19.520 --> 00:00:22.260
为了调通代码 我创建了一个新的项目

00:00:22.260 --> 00:00:25.270
然后修改 activity_main 布局文件

00:00:25.270 --> 00:00:30.080
为布局文件添加 View 并添加需要被引用的 ID

00:00:30.080 --> 00:00:31.780
我甚至不太确定这个布局会是什么样子

00:00:31.780 --> 00:00:36.060
我只是把这些带有相应 ID 的视图放在这

00:00:36.060 --> 00:00:38.210
这样 代码就调通了

00:00:38.210 --> 00:00:42.570
把第一个代码粘过来 它报错了

00:00:42.570 --> 00:00:46.270
不能解析 setText 方法

00:00:46.270 --> 00:00:47.780
如果你还记得上一个视频

00:00:47.780 --> 00:00:51.510
我提到过 setText 是一个 TextView 方法

00:00:51.510 --> 00:00:55.100
也就意味着你只能用 TextView 对象调用这个方法

00:00:55.100 --> 00:00:57.920
在这里 是用 nameTextView 调用的

00:00:57.920 --> 00:01:00.705
nameTextView 声明为一个 View对象

00:01:00.705 --> 00:01:04.057
我们需要把它变成 TextView 对象

00:01:05.990 --> 00:01:08.942
又报错了 说类型不兼容

00:01:08.942 --> 00:01:12.390
我们需要一个 TextView 类型

00:01:12.390 --> 00:01:15.700
但这是一个 View 的对象

00:01:15.700 --> 00:01:18.570
因为 findViewByID 的返回值是 View 类型

00:01:18.570 --> 00:01:21.950
而左边需要一个 TextView 类型

00:01:21.950 --> 00:01:24.860
意味着我们必须加上这个

00:01:24.860 --> 00:01:28.730
把 findViewById 返回的 View 转化成 TextView

00:01:28.730 --> 00:01:30.800
然后我们把这个整体保存起来

00:01:30.800 --> 00:01:35.090
存到左边 nameTextView 变量里

00:01:35.090 --> 00:01:40.760
不报错了 然后在 TextView 里设置文本为 Laura

00:01:40.760 --> 00:01:44.510
错误在第一行 把正确的代码写在下边

00:01:44.510 --> 00:01:49.540
我们需要把 View 格式转换成 TextView 格式

00:01:49.540 --> 00:01:53.050
然后保存在 nameTextView 变量里

00:01:53.050 --> 00:01:56.340
这样就可以调用 nameTextView.setText 方法了

00:01:56.340 --> 00:01:59.850
这是一个 TextView 方法

00:01:59.850 --> 00:02:00.830
来看第二个

00:02:00.830 --> 00:02:03.290
把代码复制粘贴到 Android Studio 中

00:02:04.540 --> 00:02:06.590
就是这

00:02:06.590 --> 00:02:09.620
第一行看起来是正确的

00:02:09.620 --> 00:02:11.550
但第二行被标记为红色了

00:02:11.550 --> 00:02:14.420
它说类型不兼容

00:02:14.420 --> 00:02:17.990
应该是字符串类型 但这却是整型

00:02:17.990 --> 00:02:19.290
为了更好地理解

00:02:19.290 --> 00:02:24.250
我们应该查查 TextView 文档里的 getMaxLines 方法

00:02:24.250 --> 00:02:26.580
在 TextView 文档里 我来搜一下

00:02:26.580 --> 00:02:28.650
getMaxLines 方法

00:02:28.650 --> 00:02:29.770
在这

00:02:29.770 --> 00:02:31.120
这里不需要输入参数

00:02:31.120 --> 00:02:33.520
返回值是整型

00:02:34.758 --> 00:02:38.194
这就是 Android studio 报错的原因 因为这个方法

00:02:38.194 --> 00:02:39.911
返回值是整型

00:02:39.911 --> 00:02:42.700
但我们却想把它存进 String 变量中

00:02:42.700 --> 00:02:47.870
所以我需要把这个数据类型转换为 int

00:02:47.870 --> 00:02:49.470
程序调通了

00:02:49.470 --> 00:02:52.620
这个方法的返回值是一个整数

00:02:52.620 --> 00:02:56.060
所以我们可以把它存到 maxLines 变量里了

00:02:56.060 --> 00:02:57.870
警告还存在

00:02:57.870 --> 00:03:00.870
说 maxLines 变量从来没被使用过

00:03:00.870 --> 00:03:02.260
但这只是一个代码片段

00:03:02.260 --> 00:03:04.760
我想如果是在一个常规应用里

00:03:04.760 --> 00:03:06.740
我们稍后会用到这个变量

00:03:07.800 --> 00:03:11.380
错误在第二行 这里是更新后的代码

00:03:11.380 --> 00:03:14.340
也就是说这个方法的返回值

00:03:14.340 --> 00:03:15.480
应该是一个整型

00:03:15.480 --> 00:03:16.620
来看第三个

00:03:17.980 --> 00:03:19.830
这是代码

00:03:19.830 --> 00:03:22.960
我把它们粘到 Android Studio 中

00:03:22.960 --> 00:03:25.812
报错说类型不匹配

00:03:25.812 --> 00:03:29.400
需要的是 ImageView 类型 但这是一个 View 类型

00:03:29.400 --> 00:03:32.740
这个错误跟之前的 TextView 很类似

00:03:32.740 --> 00:03:34.960
方法返回值是 View 类型

00:03:34.960 --> 00:03:38.270
在左边这 我们却想存到 ImageView 类型中

00:03:38.270 --> 00:03:42.370
我们需要把 View 类型转化成 ImageView 类型

00:03:42.370 --> 00:03:47.330
这是有效的 因为带有 icon ID 的视图是 ImageView

00:03:47.330 --> 00:03:49.630
所以可以把它转化成 ImageView 格式

00:03:49.630 --> 00:03:52.560
既然右边也是 ImageView 格式

00:03:52.560 --> 00:03:55.700
我们就能把它存到左边的变量里了

00:03:55.700 --> 00:03:59.770
这个变量就是 ImageView 格式 非常匹配

00:03:59.770 --> 00:04:01.430
错误修复了

00:04:01.430 --> 00:04:04.640
接下来 我们可以调用 ImageView 格式的方法了

00:04:04.640 --> 00:04:09.180
也就是 SetImageResource 方法 用 IconImageView 对象调用

00:04:09.180 --> 00:04:12.830
报错说无法解析这个 logo 符号

00:04:12.830 --> 00:04:17.310
因为我在应用里没有添加名字为 logo 的图片

00:04:17.310 --> 00:04:21.410
如果我加上 错误就会消失 代码就正确了

00:04:21.410 --> 00:04:25.400
这是转化格式后正确的代码

00:04:25.400 --> 00:04:27.330
现在看第四个

00:04:27.330 --> 00:04:32.080
把代码粘到 Android Studio 里 竟然没有报错

00:04:32.080 --> 00:04:35.960
代码想要找到带有 id 为 title的 View

00:04:35.960 --> 00:04:41.150
并且返回一个视图类型 然后存到 textView 变量里

00:04:41.150 --> 00:04:43.900
textView 是视图格式

00:04:43.900 --> 00:04:47.940
和右边的格式一样 所以代码没报错

00:04:47.940 --> 00:04:51.410
下一行 这有一个对象 是 View 类型

00:04:51.410 --> 00:04:54.410
我们正在调用一个 setVisibility 方法

00:04:54.410 --> 00:04:58.763
方法有一个输入参数 View.GONE

00:04:58.763 --> 00:05:02.790
我可以查阅一下文档来弄懂为什么是这样的

00:05:02.790 --> 00:05:06.050
在 View 类的文档里 搜索一下

00:05:06.050 --> 00:05:08.400
setVisibility 方法

00:05:08.400 --> 00:05:11.970
可以看到 setVisibility 是 View 类中的一个方法

00:05:11.970 --> 00:05:16.310
有一个输入 一个可见状态的整数

00:05:16.310 --> 00:05:21.175
它可能的值有 VISIBLE INVISIBLE 还有GONE

00:05:21.175 --> 00:05:24.490
因为 setVisibility 是 View 类中的方法

00:05:24.490 --> 00:05:26.320
这是一个有效的调用

00:05:26.320 --> 00:05:29.280
没有必要转化成 TextView 格式

00:05:29.280 --> 00:05:33.200
因为我们调用的方法是 View 类的

00:05:33.200 --> 00:05:36.010
如果我们想要调用 TextView 类的方法

00:05:36.010 --> 00:05:38.860
就需要类型转换了

00:05:38.860 --> 00:05:41.600
对于这个问题 你应该写没错误 因为

00:05:41.600 --> 00:05:45.930
setVisibility 是一个 View 类的方法 可以保持对象原有类型

00:05:45.930 --> 00:05:47.480
这些问题不简单

00:05:47.480 --> 00:05:48.860
没答对也没关系

00:05:48.860 --> 00:05:52.080
接下来 你还有机会做更多的练习

