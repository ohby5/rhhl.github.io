WEBVTT
Kind: captions
Language: ru

00:00:00.520 --> 00:00:03.700
Теперь мы знаем, что можем
обращаться к XML-ресурсам в коде Java.

00:00:04.710 --> 00:00:08.680
Но как именно связаны
ресурсы и код Java?

00:00:08.680 --> 00:00:11.380
Как они становятся частью
одного приложения?

00:00:12.460 --> 00:00:15.675
Начнём с того, что, когда вы кликните
на иконку приложения JustJava

00:00:16.335 --> 00:00:18.615
то откроется MainActivity.

00:00:18.615 --> 00:00:21.925
Вы пока ничего не видите,
потому что инициализация не закончена.

00:00:21.925 --> 00:00:25.835
Хорошо что большая часть сложных
операций инициализации

00:00:25.835 --> 00:00:28.565
выполняются за вас автоматически
системой Android.

00:00:28.565 --> 00:00:31.995
Что требует нашего внимания --
это файл MainActivity,

00:00:31.995 --> 00:00:34.875
алгоритм оnCreate вызывается
автоматически.

00:00:34.875 --> 00:00:37.590
Это когда создаётся операция.

00:00:37.590 --> 00:00:41.080
Много чего происходит, а затем
у нас появляется важная строка, в которой

00:00:41.080 --> 00:00:45.120
стоит <i>setContentView</i>, а затем следует
ID ресурса для файла макета.

00:00:45.120 --> 00:00:47.640
Это <i>R.layout.activity_main</i>.

00:00:47.640 --> 00:00:52.280
Это значит, что <i>content view</i> 
должен быть установлен в макете,

00:00:52.280 --> 00:00:55.720
как описано в главном XML-файле.

00:00:55.720 --> 00:00:59.700
Это вызов алгоритма и исходный
параметр -- вот этот ID ресурса.

00:00:59.700 --> 00:01:02.600
Как только макет установлен,
вы используете <i>content view</i>,

00:01:02.600 --> 00:01:07.660
и устройство Аndroid может продолжать
анализ этого XML-файла макета.

00:01:07.660 --> 00:01:09.850
Анализ похож на чтение файла
и интерпретацию,

00:01:09.850 --> 00:01:12.490
например, «да, это <i>LinearLayout</i>».

00:01:12.490 --> 00:01:13.570
«А это -- <i>text view</i>».

00:01:13.570 --> 00:01:15.270
«А вот атрибуты», и так далее.

00:01:15.270 --> 00:01:18.850
То есть попытка понять,
что содержится в файле.

00:01:18.850 --> 00:01:21.960
Устройство Аndroid начинает
чтение файла сверху.

00:01:21.960 --> 00:01:24.670
Оно распознаёт, что здесь <i>linear layout</i>.

00:01:24.670 --> 00:01:28.970
И оно создаёт объект Java
в соответствии с этим.

00:01:28.970 --> 00:01:30.790
Потом переходит к следующей строке,

00:01:30.790 --> 00:01:36.120
видит, что надо добавить <i>TextView</i> как 
дочернее представление <i>linear layout</i>.

00:01:36.120 --> 00:01:39.865
Это начинает походить на иерархию View
из второго урока.

00:01:39.865 --> 00:01:43.125
Я вам не сказала ранее,
что это на самом деле иерархия

00:01:43.125 --> 00:01:45.265
объектов Java.

00:01:45.265 --> 00:01:47.975
Мы узнаем больше про объекты
Java в следующих видео,

00:01:47.975 --> 00:01:50.515
не страшно, если вам пока
не всё понятно.

00:01:50.515 --> 00:01:53.085
В следующей строке мы видим,
что надо установить

00:01:53.085 --> 00:01:55.385
линейный объект Java.

00:01:55.385 --> 00:01:58.855
Он добавляется дочерним представлением
к этому корневому <i>LinearLayout</i>.

00:01:58.855 --> 00:02:00.480
Ещё у нас есть элемент <i>Button</i>.

00:02:00.480 --> 00:02:03.300
Мы добавляем его как дочернее 
представление в <i>LinearLayout</i>.

00:02:03.300 --> 00:02:07.470
И продолжаем до конца файла,
пока не обозначим всё, что нужно

00:02:07.470 --> 00:02:09.280
для нашей иерархии.

00:02:09.280 --> 00:02:13.740
Как только иерархия для объектов Java
готова, мы можем манипулировать ими

00:02:13.740 --> 00:02:15.470
и менять во время работы приложения.

00:02:16.570 --> 00:02:19.930
В объекте -- таком как <i>TextView</i>--
содержится информация состояния.

00:02:19.930 --> 00:02:23.070
Например текст, его цвет, размер.

00:02:23.070 --> 00:02:26.880
В объекте также есть алгоритмы,
которые мы можем вызвать и

00:02:26.880 --> 00:02:29.130
изменить их внутреннее состояние.

00:02:29.130 --> 00:02:32.050
Например, мы можем изменить текст
во время работы приложения.

00:02:32.690 --> 00:02:36.700
Работа со всеми этими объектами --
это объектное программирование.

00:02:36.700 --> 00:02:40.220
Мы поговорим об этом
в следующих видео.

00:02:40.220 --> 00:02:44.230
Повторим -- в <i>MainActivity</i>
вызываем <i>setContentView</i> в этот

00:02:44.230 --> 00:02:49.440
макет, затем читаем этот макет
и наполняем его группой объектов Java.

00:02:49.440 --> 00:02:53.590
Эти объекты Java составляют
иерархию приложения.

00:02:53.590 --> 00:02:56.920
<i>MainActivity</i> придерживается
этой иерархии и затем,

00:02:56.920 --> 00:03:00.400
когда вы работаете с <i>MainActivity</i>,
он может обновлять эти объекты.

