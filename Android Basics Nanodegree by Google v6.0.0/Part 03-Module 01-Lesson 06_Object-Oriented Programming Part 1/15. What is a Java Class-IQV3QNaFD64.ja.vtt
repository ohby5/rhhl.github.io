WEBVTT
Kind: captions
Language: ja

00:00:00.470 --> 00:00:03.770
単純かされたTextViewを作りました。

00:00:03.770 --> 00:00:06.810
そしてTextView.javaファイルに保存されました。

00:00:06.810 --> 00:00:08.290
その様子が見えやすいように、

00:00:08.290 --> 00:00:11.060
単純化しました。

00:00:11.060 --> 00:00:13.710
まずはアクセス変更子から始まります。

00:00:13.710 --> 00:00:15.100
inactivityなどがこのTextViewクラスを
使える様に、

00:00:15.100 --> 00:00:19.480
publicとなっています。

00:00:19.480 --> 00:00:21.040
そしてclassとあります。

00:00:21.040 --> 00:00:24.310
これはjavaに、これはクラスの定義だということを
知らせます。

00:00:24.310 --> 00:00:26.400
そしてクラスの名前がきます。

00:00:26.400 --> 00:00:30.590
Javaでのクラスの名前は、大文字で始まり、
キャメルケースになっています。

00:00:30.590 --> 00:00:34.360
単語の間にスペースがありません。

00:00:34.360 --> 00:00:36.800
他にもテキストがありますが、
また後で見ることにします。

00:00:36.800 --> 00:00:39.304
大事なことは、始めにかっこがあり、

00:00:39.304 --> 00:00:42.354
終わりには終結かっこがあることです。

00:00:42.354 --> 00:00:47.130
このTextViewクラスには、変数が
色要らあります。

00:00:47.130 --> 00:00:51.140
それぞれがTextViewのフィールドを表します。

00:00:51.140 --> 00:00:55.700
まずTextViewのテキストのためのフィールド、
そして色のためのフィールドがあります。

00:00:55.700 --> 00:00:57.850
他にもフィールドがありますが、

00:00:57.850 --> 00:00:59.928
これは単純化されたTextViewクラスです。

00:01:01.000 --> 00:01:04.239
アプリのコンテキストを関連付けるための

00:01:04.239 --> 00:01:05.740
変数もあります。

00:01:05.740 --> 00:01:08.750
下の指導書でコンテキストを学んでも
いいですが、

00:01:08.750 --> 00:01:13.170
基本的には、アプリの情報にアクセスするための
ものです。

00:01:13.170 --> 00:01:16.670
例えば、コンテキストを使ってアプリの
リソースにアクセスすることができます。

00:01:17.870 --> 00:01:19.990
これらがTextViewのメソッドになります。

00:01:19.990 --> 00:01:23.690
setTextメソッドは、入力されたものを
テキスト文字列にします。

00:01:23.690 --> 00:01:28.840
そしてグローバル変数であるmTextがその値を
使うようにします。

00:01:28.840 --> 00:01:32.480
同じようにsetTectColorは色を受け取り、

00:01:32.480 --> 00:01:36.080
内面がこのカラー値を使うようにします。

00:01:36.080 --> 00:01:38.045
getTextやgetTextColor

00:01:38.045 --> 00:01:42.920
などもあります。それらは、内側のテキスト文字列や
テキストカラーを返します。

00:01:44.080 --> 00:01:48.091
もう一つは、これらのグローバル変数は、

00:01:48.091 --> 00:01:49.651
小文字のmから始まっています。

00:01:49.651 --> 00:01:51.510
Mはメンバー変数だということを表します。

00:01:51.510 --> 00:01:55.330
すべてｋのTextViewクラスの変数です。

00:01:55.330 --> 00:01:58.580
メンバー変数は、TextViewクラスのフィールドや

00:01:58.580 --> 00:02:00.990
ステートを示すものです。

00:02:00.990 --> 00:02:03.380
これが単純化されたImageViewクラスです。

00:02:03.380 --> 00:02:05.320
ImageView.javaにあります。

00:02:06.400 --> 00:02:10.580
public classで始まり、ImageViewという名前があり、

00:02:10.580 --> 00:02:13.550
かっことかっこ閉じがあります。

00:02:13.550 --> 00:02:15.980
これがImageViewのステートを作ります。

00:02:15.980 --> 00:02:17.730
普通はこれよりもっとフィールドがありますが

00:02:17.730 --> 00:02:20.000
例として見てみます。

00:02:20.000 --> 00:02:25.680
これがmImageIdという整数の変数で、
mはメンバー変数だということを表します。

00:02:25.680 --> 00:02:28.340
これはImageViewに表示される

00:02:28.340 --> 00:02:31.160
画像のidを記憶します。

00:02:31.160 --> 00:02:34.470
ここには、新しくImageViewを作るための

00:02:34.470 --> 00:02:36.390
コンストラクターがあります。

00:02:36.390 --> 00:02:38.730
コンテキストを受け取り、

00:02:38.730 --> 00:02:40.809
そしてこれらの変数を初期化します。

00:02:42.120 --> 00:02:43.088
そしてメソッドです。

00:02:43.088 --> 00:02:47.190
setImageという名前で、ImageViewに表示される

00:02:47.190 --> 00:02:50.500
画像のリソースIDを受け取り、

00:02:50.500 --> 00:02:53.850
このメソッドでは、image IDの内側の変数を
更新します。

00:02:55.100 --> 00:02:57.691
このTextViewやImageViewクラスは、

00:02:57.691 --> 00:03:01.880
クラスのコンセプトを示すための
単純化されたものです。

00:03:01.880 --> 00:03:05.200
Androidの枠組みのなかの実際の

00:03:05.200 --> 00:03:06.110
クラスを見てみましょう。

00:03:07.950 --> 00:03:09.240
AndroidでのJavaクラスのコードを

00:03:09.240 --> 00:03:13.240
見るためには、このChrome extensionをダウンロードします。

00:03:13.240 --> 00:03:14.960
Chromeブラウザーを使用していない場合は、

00:03:14.960 --> 00:03:17.989
これらのファイルへのアクセス方法を
下の指導書から学んでください。

00:03:19.020 --> 00:03:19.520
はい。

00:03:21.840 --> 00:03:26.081
Chrome extensionがインストールされると、
TextView Androidなどを検索して、

00:03:26.081 --> 00:03:30.260
そのクラスのドキュメンテーションを参照するとき、

00:03:30.260 --> 00:03:34.830
view sourceというリンクが現れます。

00:03:34.830 --> 00:03:36.730
これは上級者のディベロッパー用です。

00:03:36.730 --> 00:03:41.420
このTextViewを作るコードに興味があれば
見てみてください。

00:03:41.420 --> 00:03:45.850
これはAndroidチームのメンバーが作った
TextView.javaファイルです。

00:03:45.850 --> 00:03:47.970
みてわかるように、とても長く、複雑です。

00:03:47.970 --> 00:03:49.739
しかしクラスの主な部分があります。

00:03:51.010 --> 00:03:55.330
publicから始まり、TextViewという名前があり、

00:03:55.330 --> 00:03:57.280
かっこがあり、

00:03:57.280 --> 00:03:59.500
一番最後にかっこ閉じが来ています。

00:04:00.930 --> 00:04:04.340
クラスの上部では、フィールドがたくさんあります。

00:04:04.340 --> 00:04:07.200
これがクラスのステート表します。

00:04:07.200 --> 00:04:13.470
例えば、TextColorやtextがフィールドであることが
分かります。

00:04:13.470 --> 00:04:17.560
これがコンテキストを受け取るTextViewの
コンストラクターです。

00:04:17.560 --> 00:04:22.560
Cmf+F、ウィンドウズではCtrl+Fを押すと、setTextを

00:04:22.560 --> 00:04:24.050
探すことができます。

00:04:24.050 --> 00:04:26.250
これがsetTextメソッドです。

00:04:26.250 --> 00:04:29.835
これがTextViewの文字列を決めます。

00:04:29.835 --> 00:04:31.205
GetTextを探すと、

00:04:31.205 --> 00:04:35.605
TextViewが表示しているテキストを返していることが
分かります。

00:04:35.605 --> 00:04:38.275
このように、見ていってもいいと思います。

00:04:39.545 --> 00:04:42.245
ImageViewのドキュメンテーションページを検索すると、

00:04:42.245 --> 00:04:46.750
view sourceをクリックして、ImageViewクラスの
コードを見ることができます。

00:04:46.750 --> 00:04:49.370
public class ImageViewとあり、

00:04:49.370 --> 00:04:52.460
これがImageViewのステートを作るフィールドです。

00:04:52.460 --> 00:04:55.810
そして下の方に様々メソッドがあります。

00:04:55.810 --> 00:04:57.810
このコードもとても複雑で、

00:04:57.810 --> 00:05:00.360
何千行というコードになっています。

00:05:00.360 --> 00:05:03.060
オブジェクト指向プログラミングのいいところは、

00:05:03.060 --> 00:05:06.500
この詳細を知らなくてもいいということです。

00:05:06.500 --> 00:05:10.200
ディベロッパーとして、この詳細を知らなくても、

00:05:10.200 --> 00:05:13.630
アプリでTextViewやImageViewを使うことができます。

