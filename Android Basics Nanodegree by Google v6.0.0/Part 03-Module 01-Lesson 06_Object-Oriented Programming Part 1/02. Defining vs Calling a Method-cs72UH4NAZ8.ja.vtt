WEBVTT
Kind: captions
Language: ja

00:00:00.670 --> 00:00:01.819
今日職場にどうやってきましたか？

00:00:02.240 --> 00:00:04.190
&gt;&gt; 私は自転車があるんです
便利ですよ

00:00:04.190 --> 00:00:05.280
あなたは？

00:00:05.280 --> 00:00:06.440
&gt;&gt;車でいきます

00:00:06.440 --> 00:00:07.660
&gt;&gt; いいですね！車はどんな調子ですか？

00:00:07.939 --> 00:00:08.980
&gt;&gt; まあまあです
&gt;&gt; そうですか

00:00:09.040 --> 00:00:10.920
車がどうやって動くか知っていますか？
ボンネットの下で何が起こっているのか？

00:00:11.840 --> 00:00:13.090
&gt;&gt; いいえ
知る必要なんてないでしょう

00:00:13.090 --> 00:00:15.630
鍵を入れて運転すればいいだけですから

00:00:15.630 --> 00:00:18.040
それってコードを書くようなものなんですよ

00:00:18.040 --> 00:00:19.140
&gt;&gt; どんな風に？
&gt;&gt; えーと

00:00:19.320 --> 00:00:21.220
すべてはコードを書くようなものなのです

00:00:21.220 --> 00:00:22.330
&gt;&gt; わかりました﻿
&gt;&gt; ちょっと聞いて下さい

00:00:22.330 --> 00:00:24.740
前のレッスンでは 皆さんに
一連のコードをご紹介しました

00:00:24.740 --> 00:00:26.670
&gt;&gt; そうですね
display メソッドや

00:00:26.670 --> 00:00:28.160
display priceメソッドのような
メソッドがありましたね

00:00:28.160 --> 00:00:30.220
&gt;&gt; はい そして繰り返し言っていますが
それがどう動作しているかは気にしないで

00:00:30.280 --> 00:00:31.720
後でそれについてはお話しします

00:00:31.720 --> 00:00:33.290
まあ 後っていうのは
これからっていうことなのですが

00:00:33.290 --> 00:00:34.120
&gt;&gt; あ そうですか
&gt;&gt; いいですか？

00:00:34.120 --> 00:00:36.520
これは車がどう動くか知っているのと
同じようなことです

00:00:36.520 --> 00:00:37.560
あなたは車を運転できますよね

00:00:37.560 --> 00:00:39.510
生徒の皆さんはメソッドを
使うことができました

00:00:39.510 --> 00:00:40.035
&gt;&gt;はい
&gt;&gt;いいですか？

00:00:40.035 --> 00:00:41.845
メソッドを書くというのは

00:00:41.845 --> 00:00:43.800
車のデザイナーであるということです
&gt;&gt;なるほど

00:00:43.800 --> 00:00:46.380
そして肝心なことは どこかにメソッドを
定義することですよね

00:00:46.380 --> 00:00:48.090
&gt;&gt; それは車を製造するようなものです

00:00:48.090 --> 00:00:49.590
&gt;&gt; そして後でそのメソッドを呼び出すことです

00:00:49.590 --> 00:00:51.860
&gt;&gt; それは車を運転するようなものです
&gt;&gt;そうですね

00:00:51.860 --> 00:00:53.200
&gt;&gt; それでは次にこれらの
考え方を使ってみましょう

00:00:53.200 --> 00:00:54.500
&gt;&gt; いいですね

00:00:54.500 --> 00:00:56.506
これは MainActivity.java
ファイル内で

00:00:56.506 --> 00:00:59.540
display メソッドが
定義されているところです

00:00:59.540 --> 00:01:02.956
そしてこれが incrementメソッドと
decrement メソッド内で

00:01:02.956 --> 00:01:04.769
それが呼び出されるところです

00:01:04.769 --> 00:01:08.640
display メソッドの指示には数が入り

00:01:08.640 --> 00:01:10.550
それが画面上に表示されます

00:01:10.550 --> 00:01:11.730
ここに こんな感じにですね

00:01:11.730 --> 00:01:16.360
メソッドを定義する代わりに
その中の指示を使うこともできます

00:01:16.360 --> 00:01:21.300
それをコピーして そのメソッドを
呼びだすところに貼り付けします

00:01:21.300 --> 00:01:25.580
ここでの number は変数ではないので
それを quantity に変更しましょう

00:01:25.580 --> 00:01:26.550
同じことを increment メソッドに
行いたい場合

00:01:26.550 --> 00:01:30.940
このコードをコピーしてここに貼り付けします

00:01:30.940 --> 00:01:33.740
このコードは以前のものと
同じように動作しますが

00:01:33.740 --> 00:01:35.950
displayメソッドは必要ありません

00:01:35.950 --> 00:01:40.060
この実装の欠点は 両方のメソッドで

00:01:40.060 --> 00:01:41.150
コードが重複してしまうことです

00:01:41.150 --> 00:01:46.170
代わりに displayメソッドを定義して
それをその名前で呼び出すと

00:01:46.170 --> 00:01:49.500
コードがより少なくなり
その方がアプリにはよいでしょう

00:01:49.500 --> 00:01:51.670
他にもよいことをご紹介します

00:01:51.670 --> 00:01:55.540
メソッドを参照する時は常に
それをクリックし右クリックします

00:01:55.540 --> 00:01:59.340
宣言に移動 か Mac をお使いの方は
Command + V を押します

00:02:00.610 --> 00:02:04.100
これはそのメソッドが定義したところに
ファイルをスクロールしてくれます

00:02:04.100 --> 00:02:07.650
そのメソッド内に含まれた 実際の指示を
参照することができるので

00:02:07.650 --> 00:02:09.490
これは便利です

00:02:09.490 --> 00:02:10.300
他の方法として

00:02:10.300 --> 00:02:14.480
Android のフレームワークコードで
宣言を開くこともできます

00:02:14.480 --> 00:02:18.940
これはAndroidチームによって書かれた
TextView.javaファイルです

00:02:18.940 --> 00:02:22.200
まるでマジックみたいに

00:02:22.200 --> 00:02:26.150
自分もしくは Android チームに
よって定義されたコードの行に

00:02:26.150 --> 00:02:29.970
いつでも戻ってそれを追跡することができます

00:02:29.970 --> 00:02:33.150
メソッドの定義と呼び出しの
違いについて理解するために

00:02:33.150 --> 00:02:35.930
MainActivity を
変更してみましょう

00:02:35.930 --> 00:02:38.960
メソッドの定義方法を変更するために
display メソッドの名前を

00:02:38.960 --> 00:02:42.585
displayQuantity に
変更します

00:02:42.585 --> 00:02:47.450
次にこのメソッドを呼び出すのですが
コードを何か変更する必要があるでしょうか？

00:02:47.450 --> 00:02:51.710
これらの変更でアプリにエラーが発生した場合

00:02:51.710 --> 00:02:53.770
自分の携帯電話で もう一度
アプリを実行してみて下さい

00:02:53.770 --> 00:02:55.100
完了したら これらのボックスを
チェックしてください

