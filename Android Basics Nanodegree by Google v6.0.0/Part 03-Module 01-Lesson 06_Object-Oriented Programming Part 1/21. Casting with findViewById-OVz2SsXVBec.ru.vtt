WEBVTT
Kind: captions
Language: ru

00:00:00.270 --> 00:00:01.540
Давайте посмотрим на номер 1.

00:00:01.540 --> 00:00:04.470
Перед тем как я скажу ответ,
я скопирую этот код

00:00:04.470 --> 00:00:06.700
и вставлю в Android Studio.

00:00:06.700 --> 00:00:09.060
Я хочу показать вам какая
ошибка появится.

00:00:09.060 --> 00:00:12.090
Сейчас, при решении задачи вам
не надо пользоваться Android Studio,

00:00:12.090 --> 00:00:14.510
вы сможете решить ее,
просто посмотрев на код здесь

00:00:14.510 --> 00:00:16.280
и записав ответ.

00:00:16.280 --> 00:00:19.520
Мне все равно - будете вы
использовать Android Studio, или нет.

00:00:19.520 --> 00:00:22.260
Чтобы код работал,
я создала новый проекти

00:00:22.260 --> 00:00:25.270
и изменила функционал
в главном файле сборок так, чтобы

00:00:25.270 --> 00:00:30.080
появилось несколько раскладок для
ID с которым мы будем работать.

00:00:30.080 --> 00:00:31.780
Я не уверена как это
будет выглядеть,

00:00:31.780 --> 00:00:36.060
я просто хотела поместить их тут
с нужными view ID.

00:00:36.060 --> 00:00:38.210
Так мой код будет здесь работать.

00:00:38.210 --> 00:00:42.570
Итак, для первой, я скопировала
код сюда и вижу что есть ошибка.

00:00:42.570 --> 00:00:46.270
Android Studios говорит что
не может определить алгоритм <i>setText</i>.

00:00:46.270 --> 00:00:47.780
Если вы помните из прошлого видео,

00:00:47.780 --> 00:00:51.510
я говорила что <i>setText</i>
это алгритм <i>TextView</i>.

00:00:51.510 --> 00:00:55.100
Это значит что вы можете вызвать этот
алгоритм только для объекта <i>ТextView</i>.

00:00:55.100 --> 00:00:57.920
В этом случае мы вызываем
его для <i>nameTextView</i>.

00:00:57.920 --> 00:01:00.705
<i>nameTextView</i> определен
как объект-представление,

00:01:00.705 --> 00:01:04.057
нам нужно изменить это
на объект <i>TextView</i>.

00:01:05.990 --> 00:01:08.942
Теперь у нас ошибка -
несовместимость типов.

00:01:08.942 --> 00:01:12.390
Для <i>textview</i>, нужен объект
типа <i>TextView</i>, но

00:01:12.390 --> 00:01:15.700
вместо этого есть
объект-представление.

00:01:15.700 --> 00:01:18.570
Это потому что <i>findViewByID</i>
вызывает представление, а

00:01:18.570 --> 00:01:21.950
с правой стороны требуется <i>TextView</i>.

00:01:21.950 --> 00:01:24.860
Значит нам нао добавить это в набор

00:01:24.860 --> 00:01:28.730
представлений вызываемых
<i>findViewById</i> в <i>TextView</i>.

00:01:28.730 --> 00:01:30.800
Теперь мы можем сохранит все целиком,

00:01:30.800 --> 00:01:35.090
где <i>nameTextView</i>,
в переменную с левой стороны.

00:01:35.090 --> 00:01:40.760
Ошибка ушла, и мы можем назначить
текст "Laura" в этом <i>TextView</i>.

00:01:40.760 --> 00:01:44.510
Ошибка в стоке 1 а значит
здесь я написла правильный код.

00:01:44.510 --> 00:01:49.540
Общее объяснение что нам надо назна- 
чить это представление в <i>ТextView</i>

00:01:49.540 --> 00:01:53.050
и сохранить его внутри
переменной <i>nameTextView</i>.

00:01:53.050 --> 00:01:56.340
Таким образом при вызове
<i>nameTextView.setText</i>,

00:01:56.340 --> 00:01:59.850
алгоритма <i>TextView</i>,
в следующей строке кода тут.

00:01:59.850 --> 00:02:00.830
Перейдем к номеру два.

00:02:00.830 --> 00:02:03.290
Я скопирую этот код в Android Studio.

00:02:04.540 --> 00:02:06.590
Вот код, кторый я скопировала.

00:02:06.590 --> 00:02:09.620
Первая строка кода верна -
в ней нет ошибок.

00:02:09.620 --> 00:02:11.550
Но вторая строка
подчеркнута красным и

00:02:11.550 --> 00:02:14.420
сказано что есть ошибка
несовместимости типов.

00:02:14.420 --> 00:02:17.990
Сказано что необходима <i>string</i>,
но вместо этого есть <i>int</i>.

00:02:17.990 --> 00:02:19.290
Чтобы лучше это понять,

00:02:19.290 --> 00:02:24.250
мы должны посмотреть на <i>getMaxLines</i>
алгоритм в документации по <i>TextView</i>.

00:02:24.250 --> 00:02:26.580
В документации по <i>TextView</i> я поищу

00:02:26.580 --> 00:02:28.650
алгоритм <i>getMaxLines</i>.

00:02:28.650 --> 00:02:29.770
Вот он.

00:02:29.770 --> 00:02:31.120
Параметров для ввода нет и

00:02:31.120 --> 00:02:33.520
вызываемое значение
этого алгоритма - <i>integer</i>.

00:02:34.758 --> 00:02:38.194
Вот почему Android studio выдала
ошибку, потому что этот алгоритм

00:02:38.194 --> 00:02:39.911
выдает число но

00:02:39.911 --> 00:02:42.700
мы пытались сохранить его
в строковой переменной.

00:02:42.700 --> 00:02:47.870
В результате нам надо изменить
этот тип данных переменной на <i>int</i>.

00:02:47.870 --> 00:02:49.470
Это исправит ошибку.

00:02:49.470 --> 00:02:52.620
Итак, этот алгоритм возвращает число.

00:02:52.620 --> 00:02:56.060
И мы можем записать его внутри
этой переменной <i>maxLines</i>.

00:02:56.060 --> 00:02:57.870
Но предупреждение осталось.

00:02:57.870 --> 00:03:00.870
В нем сказано что переменная
<i>maxLines</i> еще не использовалась.

00:03:00.870 --> 00:03:02.260
Но это лишь часть кода.

00:03:02.260 --> 00:03:04.760
Я представлю что в приложении мы бы

00:03:04.760 --> 00:03:06.740
использовали эту переменную позже.

00:03:07.800 --> 00:03:11.380
Итак, ошибка во втрой строке
и вот доделанный код.

00:03:11.380 --> 00:03:14.340
Решение в том что значени,
возвращаемое этим алгоритмом

00:03:14.340 --> 00:03:15.480
должно быть целочисленным.

00:03:15.480 --> 00:03:16.620
Перейдем к номеру три.

00:03:17.980 --> 00:03:19.830
Вот код для номера три.

00:03:19.830 --> 00:03:22.960
Я скопировала его в Android Studio.

00:03:22.960 --> 00:03:25.812
Есть сообщение об ошибке
несовместимости типов.

00:03:25.812 --> 00:03:29.400
Требовалось <i>ImageView</i>,
но вместо него есть <i>view</i>.

00:03:29.400 --> 00:03:32.740
Это похоже на ошибку что мы
только что видели с <i>TextView</i>.

00:03:32.740 --> 00:03:34.960
Этот алгоритм работает
с представлением.

00:03:34.960 --> 00:03:38.270
А с левой стороны мы пытаемся
сохранить его внутри <i>ImageView</i>.

00:03:38.270 --> 00:03:42.370
Поэтому мы должны назначить этот
объект-представление в <i>ImageView</i>.

00:03:42.370 --> 00:03:47.330
Это работает ведь на самом деле пред-
ставление с ID <i>icon</i> это <i>ImageView</i>,

00:03:47.330 --> 00:03:49.630
поэтому его можно
назначить в <i>ImageView</i>.

00:03:49.630 --> 00:03:52.560
Теперь правая сторона
вычисляет <i>ImageView</i>,

00:03:52.560 --> 00:03:55.700
и мы можем сохранить это
в переменной с правой стороны.

00:03:55.700 --> 00:03:59.770
Ти данных у этой переменной -
<i>ImageView</i>, поэтому все совпадает

00:03:59.770 --> 00:04:01.430
и ошибки больше нет.

00:04:01.430 --> 00:04:04.640
С другой стороны мы можем
вызвать алгоритм <i>ImageView</i>,

00:04:04.640 --> 00:04:09.180
<i>SetImageResource</i>,
для этого объекта <i>IconImageView</i>.

00:04:09.180 --> 00:04:12.830
Осталась одна ошибка - невозможность
определить значение символа <i>logo</i>.

00:04:12.830 --> 00:04:17.310
Потому что я не добавила в приложение
изображение с названием logo.

00:04:17.310 --> 00:04:21.410
Если я это добавлю, ошибка уйдет
и наш код здесь будет верным.

00:04:21.410 --> 00:04:25.400
Вот верный код где я
поместила это в <i>ImageView</i>.

00:04:25.400 --> 00:04:27.330
И последний - номер 4.

00:04:27.330 --> 00:04:32.080
Я скопировала код сюда в Android
Studio и на удивление ошибок нет.

00:04:32.080 --> 00:04:35.960
Код пытается найти
представление с id <i>title</i>,

00:04:35.960 --> 00:04:41.150
и полученное представление надо
сохранить в этой переменной <i>TextView</i>.

00:04:41.150 --> 00:04:43.900
У <i>TextView</i> тип данных <i>View</i>, и это

00:04:43.900 --> 00:04:47.940
совпадает с правой стороной,
поэтому весь код верен.

00:04:47.940 --> 00:04:51.410
В следующей строке
мы берем объект - <i>View</i> и

00:04:51.410 --> 00:04:54.410
запускаем его в алгоритме
<i>setVisibility</i>.

00:04:54.410 --> 00:04:58.763
Алгоритм берет один исходный
параметр - <i>View.GONE.</i>

00:04:58.763 --> 00:05:02.790
Я могу проверить документацию
чтобы проверить почему так.

00:05:02.790 --> 00:05:06.050
В документации для класса
представлений, я ищу

00:05:06.050 --> 00:05:08.400
алгоритм <i>setVisibility</i>.

00:05:08.400 --> 00:05:11.970
Я вижу что <i>setVisibility</i> это алгоритм
для класса представлений.

00:05:11.970 --> 00:05:16.310
Он берет эти исходные, число которое
представляет состояние видимости.

00:05:16.310 --> 00:05:21.175
Возможные значение видимости это
VISIBLE, INVISIBLE, и GONE.

00:05:21.175 --> 00:05:24.490
Поскольку <i>setVisibility</i> это алгоритм
для класса представлений,

00:05:24.490 --> 00:05:26.320
то эта операция работает.

00:05:26.320 --> 00:05:29.280
Нет необходимости назначать
это в <i>TextView</i>

00:05:29.280 --> 00:05:33.200
поскольку вызываемый алгоритм -
для класса представлений.

00:05:33.200 --> 00:05:36.010
Теперь если мы попытаемся
использовать алгоритм <i>TextView</i>,

00:05:36.010 --> 00:05:38.860
то надо будет
назначить его в <i>TextView</i>.

00:05:38.860 --> 00:05:41.600
Поэтому тут не будет
ошибок, поскольку

00:05:41.600 --> 00:05:45.930
setVisibility алгоритм представлений,
можно оставлять его как такой объект.

00:05:45.930 --> 00:05:47.480
Это были трудные вопросы.

00:05:47.480 --> 00:05:48.860
Не страшно если вы ошиблись.

00:05:48.860 --> 00:05:52.080
В следующем тесте вы сможете
больше потренироваться на этом.

