WEBVTT
Kind: captions
Language: vi

00:00:00.560 --> 00:00:04.010
Hãy cùng xem qua các phương thức này
và sau đó điền vào bảng.

00:00:04.010 --> 00:00:07.560
Đây là ý chính của bộ mã chúng tôi mà
cung cấp cho bạn trong bài giảng.

00:00:07.560 --> 00:00:09.120
Hãy cùng bắt đầu với phương thức 1.

00:00:09.120 --> 00:00:12.580
Phương thức này được dùng
để tạo ra một thông báo nhắc nhở

00:00:12.580 --> 00:00:14.490
về lịch chi tiết của các sự kiện.

00:00:14.490 --> 00:00:17.930
Thông báo này sẽ bao gồm
tên của sự kiện, và

00:00:17.930 --> 00:00:22.610
địa điểm của sự kiện cũng như số lượng
phút cho tới sự kiện.

00:00:22.610 --> 00:00:25.910
Vậy tên phương thức là
createCalendarEventReminder viết theo kiểu

00:00:25.910 --> 00:00:30.750
Camel Case, và sau đó là danh sách của
những đầu vào nằm giữa dấu ngoặc mở

00:00:30.750 --> 00:00:32.640
dấu ngoặc đóng.

00:00:32.640 --> 00:00:36.660
Có ba tham số đầu vào, đầu tiên là
tham số eventName kiểu chuỗi ký tự,

00:00:36.660 --> 00:00:40.340
sau đó là location kiểu chuỗi ký tự, và
cuối cùng là minutesAway kiểu số nguyên.

00:00:40.340 --> 00:00:42.150
Đầu ra của phương thức này hoặc

00:00:42.150 --> 00:00:46.660
giá trị trả về là thông báo
nhắc nhở, kiểu văn bản.

00:00:46.660 --> 00:00:49.200
Vậy đó là lý do vì sao kiểu
dữ liệu trả về là kiểu chuỗi ký tự.

00:00:50.380 --> 00:00:53.110
Và đây là những gì được điền trong bảng.

00:00:53.110 --> 00:00:56.740
Chính xác thì, đó phải là
một từ đơn không có khoảng cách, nhưng

00:00:56.740 --> 00:00:59.240
nó khá dài so với kích thước ô này.

00:00:59.240 --> 00:01:01.210
Và đây là phương thức thứ 2.

00:01:01.210 --> 00:01:05.540
Mục đích của phương thức này là trừ đi
một số lượng điểm đã được sử dụng.

00:01:05.540 --> 00:01:09.120
từ số lượng tất cả các điểm,
mà tổng số số điểm là 100.

00:01:09.120 --> 00:01:12.500
Vì vậy, nó trả về số lượng điểm còn lại.

00:01:12.500 --> 00:01:15.670
Tên phương thức
được gọi là deductPoints và

00:01:15.670 --> 00:01:18.730
Có một tham số đầu vào
ở giữa dấu ngoặc mở và

00:01:18.730 --> 00:01:25.000
dấu ngoặc đóng. Nó được gọi là
pointsUsed, và có kiểu dữ liệu số nguyên.

00:01:25.000 --> 00:01:28.680
Giá trị trả về là số lượng điểm
còn lại, và đó phải là 1 con số, vậy

00:01:28.680 --> 00:01:30.570
đó là vì sao kiểu dữ liệu
trả về là số nguyên.

00:01:31.880 --> 00:01:34.510
Ở trong bảng,
nó sẽ được điền như vậy.

00:01:34.510 --> 00:01:36.410
Và đây là phương thức thứ 3,

00:01:36.410 --> 00:01:40.900
mục đích của phương thức này là tạo ra
một chuỗi ký tự khai báo tổng

00:01:40.900 --> 00:01:46.490
của chiều dài của tất cả chuyến đi riêng,
tên phương thức là findTotalTripLength.

00:01:46.490 --> 00:01:49.920
Sau đó chúng ta sẽ cuộn sang phải
để nhìn tất cả tham số.

00:01:49.920 --> 00:01:52.550
Chúng ta có 3 tham số đầu vào
nằm ở giữa dấu ngoặc mở

00:01:52.550 --> 00:01:56.210
dấu ngoặc đóng, và
chúng được tách khỏi nhau bởi dấu phẩy.

00:01:56.210 --> 00:01:58.610
Tham số đầu tiên kiểu số nguyên là
distanceofFirstTrip,

00:01:58.610 --> 00:02:04.580
thứ 2 là distanceOfSecondTrip, và
thứ 3, distanceOfThirdTrip.

00:02:04.580 --> 00:02:09.520
Vậy, trong phương thức này,
chúng ta có thể đề cập đến các biến này.

00:02:09.520 --> 00:02:14.380
Bởi chúng là số nguyên, ta có thể cộng
dồn thành tổng chiều dài của cả chuyến đi.

00:02:14.380 --> 00:02:16.190
mà được gán giá trị đầu bằng 2 dặm.

00:02:16.190 --> 00:02:20.340
Và sau đấy, chúng ta có thế nối giá trị đó
với lời thông báo kiểu chuỗi ký tự.

00:02:21.460 --> 00:02:25.510
Vì lời thông báo là kiểu văn bản, giá trị
trả về của phương thức là một chuỗi ký tự.

00:02:26.800 --> 00:02:28.650
Và đây là tất cả những gì được điền trong bảng.

