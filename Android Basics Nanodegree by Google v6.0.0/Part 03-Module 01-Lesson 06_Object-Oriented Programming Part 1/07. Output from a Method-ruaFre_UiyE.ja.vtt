WEBVTT
Kind: captions
Language: ja

00:00:00.300 --> 00:00:03.370
メソッドを呼び出して
入力に渡す方法を学びました

00:00:03.370 --> 00:00:04.260
-ちょっと待って

00:00:04.260 --> 00:00:06.790
ええと culculatePriceメソッドに

00:00:06.790 --> 00:00:08.270
渡す方法のことですか？

00:00:08.270 --> 00:00:09.300
_その通りです

00:00:09.300 --> 00:00:11.850
今度はそこから返された値が
欲しいわけです

00:00:11.850 --> 00:00:12.765
-戻ってくる値ですね　面白そう

00:00:12.765 --> 00:00:13.930
何のことですか？

00:00:13.930 --> 00:00:15.300
価格でしょうか？

00:00:15.300 --> 00:00:16.550
だって価格計算という名のメソッド
ですから

00:00:16.550 --> 00:00:19.750
_正解　帰ってくる値は
注文の合計額です

00:00:19.750 --> 00:00:21.310
-OK じゃあやってみましょう！

00:00:21.310 --> 00:00:23.510
-OK
フォーク使わないの？

00:00:25.820 --> 00:00:26.980
-いらないんじゃない？

00:00:26.980 --> 00:00:31.340
_Javaでは
メソッドからの出力を戻り値といいます

00:00:31.340 --> 00:00:35.640
コードサンプル内か
またはその上のコメント内に

00:00:35.640 --> 00:00:39.090
returnという語が
あります

00:00:39.090 --> 00:00:42.170
ではメソッドの戻り値について
もう少し調べてみましょう

00:00:42.170 --> 00:00:46.900
Java メソッド 戻り値で
検索してみます

00:00:46.900 --> 00:00:48.780
最初のリンク 良さそうな感じです

00:00:48.780 --> 00:00:51.420
メソッドから値を返すことについての
記事ですね

00:00:52.710 --> 00:00:55.240
それによると
メソッドの実行が終了するのは

00:00:55.240 --> 00:00:59.510
メソッド内の文または行を
すべて完了させたときか

00:00:59.510 --> 00:01:04.319
またはreturn文に当たるか
どちらか先の方です

00:01:04.319 --> 00:01:07.370
例外を投げたりエラーになったりした場合でも
メソッドは終了しますが

00:01:07.370 --> 00:01:10.410
このコースではそれには触れません

00:01:10.410 --> 00:01:12.710
ここでは主に はじめの2つの場合を
見ていきましょう

00:01:14.240 --> 00:01:18.230
さて コードの中に 返却のセミコロンのような
ものがありますね

00:01:18.230 --> 00:01:21.100
これはメソッドが終了することを示し

00:01:21.100 --> 00:01:24.150
この後の行は
実行されません

00:01:25.440 --> 00:01:28.170
または このような場合もあります

00:01:28.170 --> 00:01:32.230
return 次に値　
そしてセミコロン

00:01:32.230 --> 00:01:35.280
この場合はメソッドからの
出力値を返します

00:01:36.470 --> 00:01:37.900
では例を見てみましょう

00:01:37.900 --> 00:01:40.140
これはgetAreaメソッドのコードです

00:01:40.140 --> 00:01:43.420
長方形の面積を計算するものです

00:01:43.420 --> 00:01:46.010
面積はタテxヨコです

00:01:46.010 --> 00:01:51.100
メソッドの中にはreturn
続いて戻り値があります

00:01:51.100 --> 00:01:54.660
戻り値は
変数width ｘ 変数heightです

00:01:54.660 --> 00:01:56.610
これが
1つの数と等しくなり

00:01:56.610 --> 00:02:01.270
その数がこのメソッドの
出力値として返されます

00:02:01.270 --> 00:02:02.760
入力パラメータとは異なりますね

00:02:02.760 --> 00:02:05.890
入力パラメータの場合はカッコ内の
入力を任意に好きなだけ得られますが

00:02:05.890 --> 00:02:10.389
ここで得られる戻り値は
１つだけです

00:02:10.389 --> 00:02:13.530
その戻り値のデータ型も
ここで指定されます

00:02:13.530 --> 00:02:18.300
整数であれば
どの数でも返すことができます

00:02:18.300 --> 00:02:21.050
文字列を返すことはできません

00:02:21.050 --> 00:02:24.170
入力されたデータ型と
合わないからです

00:02:24.170 --> 00:02:27.930
そろそろreturnという語が
Java では

00:02:27.930 --> 00:02:29.550
特別な意味を持つと
お気づきでしょう

00:02:29.550 --> 00:02:33.480
returnを変数やメソッドの名前として
使うことはできません

00:02:33.480 --> 00:02:35.549
このようなものを
Javaのキーワード といいます

00:02:37.140 --> 00:02:38.960
Javaのキーワード一覧を
検索してみましょう

00:02:41.370 --> 00:02:43.740
これはJavaのすべてのキーワードの
一覧です

00:02:43.740 --> 00:02:46.880
すでに解説した語も
ありますね

00:02:46.880 --> 00:02:49.460
int、 public、 private などがそうです

00:02:49.460 --> 00:02:50.710
この一覧は短いものです

00:02:50.710 --> 00:02:53.440
これらをコードに入力すると
Javaでは特別な意味を持ちます

00:02:53.940 --> 00:02:58.640
ですから アプリ内の変数やメソッドのidentifierに
使うことはできません

00:03:00.560 --> 00:03:04.140
returnもJavaキーワード
であることにお気づきでしょう

00:03:04.140 --> 00:03:07.780
returnはメソッドから出力値を返したい場合
に使います

00:03:09.140 --> 00:03:12.240
お天気メッセージを作成する
先ほどの例に戻りましょう

00:03:12.240 --> 00:03:17.150
まず文字列を作り
次にreturnメッセージを宣言してそれを返すことができます

00:03:17.150 --> 00:03:19.230
この変数のデータ型は
Stringです

00:03:19.230 --> 00:03:25.150
このreturn文の後にコードを1行追加すると
どうなるでしょう？

00:03:25.150 --> 00:03:28.390
到達不能文
というエラーになります

00:03:28.390 --> 00:03:31.230
return文以降の行のコードを
コンピューターは

00:03:31.230 --> 00:03:32.690
得ることができないからです

00:03:32.690 --> 00:03:35.690
メソッドは
そこで終了しているからです

00:03:35.690 --> 00:03:38.570
ですから return文以降のコードは
すべて削除しましょう

00:03:39.640 --> 00:03:43.100
ではもし メソッドに出力値を返してもらう
必要がない場合はどうしましょう？

00:03:43.100 --> 00:03:45.390
JustJava appアプリの
MainActivityから

00:03:45.390 --> 00:03:47.295
いくつか例を見てみましょう

00:03:47.295 --> 00:03:52.415
incrementおよびdecrementメソッドは
戻り値がない場合の例です

00:03:52.415 --> 00:03:53.905
decrementメソッドを呼び出すと

00:03:53.905 --> 00:03:58.405
displayQuantityメソッド内のUIが
すべて更新されます

00:03:58.405 --> 00:04:01.045
返す出力値はありません

00:04:01.045 --> 00:04:04.185
incrementメソッドの場合も同じです

00:04:04.185 --> 00:04:07.455
displayQuantityを呼ぶと
画面がすべて更新されます

00:04:07.455 --> 00:04:10.430
ではreturn文はどこにあるのか
疑問に思われるかもしれませんね

00:04:10.430 --> 00:04:14.180
すべてのコードが完了するか
return文に出あうと

00:04:14.180 --> 00:04:17.089
メソッドの実行は終了します

00:04:17.089 --> 00:04:20.320
つまり このように
returnを追加することができます

00:04:21.570 --> 00:04:24.870
こうすればメソッドは
この行にあい次第終了します

00:04:24.870 --> 00:04:27.200
Android Studio内で
警告が発せられます

00:04:27.200 --> 00:04:31.570
Avoidメソッド内の最後の文は
返却の必要がないという内容です

00:04:31.570 --> 00:04:35.900
私は何も返していないので
ここでこの行を削除します

00:04:35.900 --> 00:04:38.080
コードの行数が減り
読みやすくなりました

00:04:38.080 --> 00:04:39.750
この方が良いですね

00:04:39.750 --> 00:04:43.100
戻り値がないことを示すために
メソッド内に

00:04:43.100 --> 00:04:46.570
戻り値のデータ型はvoidであると
シグナチュアを残さなければなりません

00:04:46.570 --> 00:04:49.390
voidは単純に
戻り値がない ということを意味します

00:04:49.390 --> 00:04:51.310
Javaは独特の方法で
これを表します

00:04:51.310 --> 00:04:53.940
だからこの語が
Javaキーワードなのです

00:04:53.940 --> 00:04:56.720
Javaキーワード一覧を
もう一度見てみましょう

00:04:56.720 --> 00:04:58.280
voidも載っていますね

00:04:59.310 --> 00:05:01.310
戻り値がない場合

00:05:01.310 --> 00:05:04.130
このように空白にしないように
必ず気を付けてください

00:05:04.130 --> 00:05:07.470
さもなければ構文エラー
となってしまいます

00:05:07.470 --> 00:05:09.430
voidと入力してください
頭は小文字です

00:05:10.500 --> 00:05:12.310
さあ続いて
この記事を1人で読んでください

00:05:12.310 --> 00:05:17.190
理解できている内容は
流し読みできるでしょう

00:05:17.190 --> 00:05:18.090
より詳しくは
ネット検索してもよいでしょう

00:05:18.090 --> 00:05:21.310
この記事でいくつか
学んだら

00:05:21.310 --> 00:05:22.249
タスクに進んでください

00:05:23.500 --> 00:05:24.560
そして自分のメモも確認してください

00:05:24.560 --> 00:05:28.290
4つの異なるメソッドの
コードへのリンクがあります

00:05:28.290 --> 00:05:30.440
各メソッドには
それぞれエラーが含まれています

00:05:30.440 --> 00:05:33.560
各メソッド内のエラーを
探すのがタスクです

00:05:34.850 --> 00:05:37.110
コードを修復するには
いくつか方法がありますから

00:05:37.110 --> 00:05:40.710
各メソッド上のjavadoc
のコメントは正しいとして

00:05:40.710 --> 00:05:42.210
それとコードがマッチするように
ししましょう

00:05:43.410 --> 00:05:44.680
メソッドはこのようになっています

00:05:45.810 --> 00:05:48.120
エラーがある行の番号を
特定してください

00:05:48.120 --> 00:05:51.060
行番号は左側の列にあります

00:05:51.060 --> 00:05:55.100
次に その行にエラーがある理由を
簡潔に書いてください

00:05:55.100 --> 00:05:56.872
つまり行数はここ
理由を書くのはここです

00:05:56.872 --> 00:05:57.993
作業を終えたら 続けて
解答ビデオをご覧いただけます

