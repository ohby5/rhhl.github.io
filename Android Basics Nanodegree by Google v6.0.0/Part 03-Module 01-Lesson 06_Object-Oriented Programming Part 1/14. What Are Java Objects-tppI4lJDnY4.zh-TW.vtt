WEBVTT
Kind: captions
Language: zh-TW

00:00:00.490 --> 00:00:01.635
你還記得盒子嗎？

00:00:01.635 --> 00:00:02.809
&gt;&gt;什麼盒子？

00:00:02.809 --> 00:00:04.090
&gt;&gt;這些箱子。

00:00:04.090 --> 00:00:06.910
&gt;&gt;呵呵！
&gt;&gt;你仍記得它們嗎？

00:00:06.910 --> 00:00:07.480
&gt;&gt;哦，是的，是的。

00:00:07.480 --> 00:00:08.260
我當然還記得。

00:00:08.260 --> 00:00:10.380
他們是變量，
你可以把數值放進去。

00:00:10.380 --> 00:00:10.930
對啊，

00:00:10.930 --> 00:00:15.020
您可以將幾個這些
變量合併成更大的Java物體。

00:00:15.020 --> 00:00:16.790
&gt;&gt;哦，這樣你就可以把
多於兩個的變量，

00:00:16.790 --> 00:00:18.420
變成一個更大的東西。

00:00:18.420 --> 00:00:19.709
&gt;&gt;沒錯。
&gt;&gt;好

00:00:19.709 --> 00:00:21.751
&gt;&gt; [一些音效]像一個<i>TextView</i>。

00:00:21.751 --> 00:00:23.960
&gt;&gt;對。
因此，我們可以有一個整數。

00:00:23.960 --> 00:00:25.640
&gt;&gt;這是字體大小。

00:00:25.640 --> 00:00:26.210
&gt;&gt;沒錯。

00:00:26.210 --> 00:00:27.752
&gt;&gt;好。
[聲音]

00:00:27.752 --> 00:00:28.637
&gt;&gt;然後你也可以有

00:00:28.637 --> 00:00:29.460
一個字符串變量。

00:00:29.460 --> 00:00:31.830
&gt;&gt;而對於字符串變量中有著他
實際的文字。

00:00:31.830 --> 00:00:36.240
&gt;&gt;是的，這些都可以放到<i>TextView</i>裡面
成為<i>TextView</i>的狀態。

00:00:36.240 --> 00:00:38.970
&gt;&gt;我們可以使用我們將接下來要用的方法，

00:00:38.970 --> 00:00:39.900
與這些東西互動。

00:00:39.900 --> 00:00:40.500
&gt;&gt;沒錯。

00:00:40.500 --> 00:00:41.290
&gt;&gt;好。
讓我們開始做這一點。

00:00:42.480 --> 00:00:46.220
&gt;&gt;正如我們前面提到的，
在屏幕上顯示一個<i>TextView</i>

00:00:46.220 --> 00:00:49.690
實際上是透過在應用程序
中的<i>Java</i>物件控制。

00:00:49.690 --> 00:00:52.300
這是一個<i>TextView Java</i>
物件的例子。

00:00:52.300 --> 00:00:55.890
這就像一個盒子，在它的裡面，
它擁有著一種狀態。

00:00:55.890 --> 00:00:58.350
狀態是由一堆
<i>fields</i>組成。

00:00:58.350 --> 00:01:00.240
<i>fields</i>是一個變量，
就像在第二課提及的，

00:01:00.240 --> 00:01:02.760
當時我們學了全局變量。

00:01:02.760 --> 00:01:05.730
我們有一個文本<i>text field</i>
存儲著<i>today</i>這字串，

00:01:05.730 --> 00:01:09.220
這將最終顯示在屏幕上的文字。

00:01:09.220 --> 00:01:13.520
我們還可以有一個整數<i>fields</i>
用來存儲字體大小。

00:01:13.520 --> 00:01:14.910
還很多方面的<i>fields</i>，

00:01:14.910 --> 00:01:19.460
例如文字顏色，字體
等的<i>TextView</i>的狀態。

00:01:19.460 --> 00:01:21.900
我只是沒有把它畫在這張照片中。

00:01:21.900 --> 00:01:23.940
要使用此<i>Java</i>物件互動，

00:01:23.940 --> 00:01:28.420
及在應用程序運行時改變它，
我們稱為<i>TextView</i>上的<i>methods</i>。

00:01:28.420 --> 00:01:31.020
我們已在第三課了解過<i>methods</i>。

00:01:31.020 --> 00:01:35.120
<i>TextView</i>中<i>methods</i>
的例子有<i>setText</i>和<i>gettext</i>。

00:01:35.120 --> 00:01:39.910
還有<i>setTextSize</i>
或<i>getTextSize</i>，等等。

00:01:39.910 --> 00:01:43.190
所有這些<i>methods</i>只是
執行的一些指令。

00:01:43.190 --> 00:01:45.590
你可以有更複雜的
<i>methods</i>，如<i>OnDraw</i>，

00:01:45.590 --> 00:01:48.440
它會把<i>TextView</i>繪畫到屏幕上。

00:01:48.440 --> 00:01:53.350
總體來說，這個<i>TextView</i>的物件包含
<i>TextView</i>的狀態信息，

00:01:53.350 --> 00:01:57.850
並且可以用<i>methods</i>來
與<i>TextView</i>的互動，

00:01:57.850 --> 00:02:01.500
例如如修改狀態，
或者做更複雜的動作。

00:02:02.850 --> 00:02:06.565
要在屏幕上顯示一個<i>ImageView</i>，
實際上有一個

00:02:06.565 --> 00:02:08.838
<i>ImageView</i>的<i>Java</i>物件
在應用程序中。

00:02:08.838 --> 00:02:13.710
這個的<i>ImageView</i>的包含狀態
信息，如應該顯示出

00:02:13.710 --> 00:02:17.680
哪些圖像，以及它的大小，
中心位置等。

00:02:17.680 --> 00:02:20.490
同樣地，<i>ImageView</i>也有很多
不同的<i>field</i>

00:02:20.490 --> 00:02:22.250
我只是沒有把它們畫在這裡。

00:02:22.250 --> 00:02:25.759
還有像<i>setImage</i>及<i>setScaleType</i>
的<i>methods</i>，甚至更複雜的也有。

00:02:25.759 --> 00:02:30.330
如<i>OnDraw</i>這個<i>methods</i>，會把
這個<i>ImageView</i>的繪畫到螢幕上。

00:02:30.330 --> 00:02:31.560
需要注意的是，作為開發者，

00:02:31.560 --> 00:02:35.480
我們並沒有明確地說明要用<i>OnDraw</i>
來告訴它繪製到屏幕上。

00:02:35.480 --> 00:02:39.880
雖然<i>Android</i>已自動為我們完成了，

00:02:39.880 --> 00:02:43.910
但用這些<i>methods</i>來改變<i>ImageView</i>
仍然是十分有用的。

00:02:43.910 --> 00:02:47.580
那麼，我們如何知道<i>ImageView</i>
入面所有的<i>fields</i>

00:02:47.580 --> 00:02:50.530
及<i>ImageView</i>所有的<i>methods</i>呢？

00:02:50.530 --> 00:02:53.980
要回答這個問題，我們要看看
該對象的類定義。

00:02:55.010 --> 00:02:57.574
這是一個名為<i>TextView.java</i>文件，

00:02:57.574 --> 00:03:00.890
類似於我們定義
<i>MainActivity.java</i>般。

00:03:00.890 --> 00:03:05.130
在這個<i>TextView</i>的類文件，
我們有一堆代碼

00:03:05.130 --> 00:03:08.530
關於<i>TextView</i>的狀態及
<i>methods</i>。

00:03:08.530 --> 00:03:12.240
它不是說明確切的狀態及<i>methods</i>
只是列出它包含

00:03:12.240 --> 00:03:14.990
的狀態信息，及它包含
的<i>methods</i>等相關資料。

00:03:16.020 --> 00:03:19.970
這個你可以想像為一個為
<i>TextView</i>下定義的規則。

00:03:19.970 --> 00:03:25.750
而這個物件可以容納特定的
文字串，例如<i>today</i>。

00:03:25.750 --> 00:03:26.760
或是文本大小18。

00:03:26.760 --> 00:03:32.420
你也可以使用這類來創建
更多<i>TextView</i>的物件，

00:03:32.420 --> 00:03:34.290
他們可以有不同的文字串。

00:03:34.290 --> 00:03:37.010
我覺得這個可以包含
文字<i>hello</i>，

00:03:37.010 --> 00:03:39.800
而這一個可以容納
文字<i>goodbye</i>

00:03:39.800 --> 00:03:43.050
他們可以有不同的字體大小，
不同的顏色等等。

00:03:44.080 --> 00:03:47.520
然而，它們全都基於
同一個類別模板。

00:03:47.520 --> 00:03:50.670
你可能會發現很難區分
一類別和一個物件，

00:03:50.670 --> 00:03:51.890
不過沒關係。

00:03:51.890 --> 00:03:53.760
這需要一定的時間來適應。

00:03:53.760 --> 00:03:55.630
這裡有一個比喻。

00:03:55.630 --> 00:03:59.270
你可以把它看成
平面圖的房子。

00:03:59.270 --> 00:04:02.680
您可以使用此平面圖
來創建多個家。

00:04:02.680 --> 00:04:04.320
每個家都可以
略有不同。

00:04:04.320 --> 00:04:06.990
但它們都基於
這個平面圖。

00:04:06.990 --> 00:04:10.270
要注意，這平面圖亦不等於房子本身。

00:04:10.270 --> 00:04:12.110
這只是個計劃。

00:04:12.110 --> 00:04:17.079
同樣，<i>TextView</i>的類也於
創建這些對象。

00:04:17.079 --> 00:04:20.480
因此，這些<i>instances</i>擁有著
它本身的實際文字，

00:04:20.480 --> 00:04:23.350
文字顏色和文字大小。

00:04:23.350 --> 00:04:25.010
那麼，這個<i>classes</i>是什麼樣子？

