WEBVTT
Kind: captions
Language: es

00:00:00.700 --> 00:00:03.270
Ahora que ya sabes lo que son
los recursos en Android,

00:00:03.270 --> 00:00:05.600
y que los puedes guardar 
en carpetas diferentes,

00:00:05.600 --> 00:00:08.120
hablemos de cómo puedes acceder 
a los recursos

00:00:08.120 --> 00:00:10.580
que guardaste en esas carpetas.

00:00:10.580 --> 00:00:13.560
Cuando tu aplicación se compila,
hay una herramienta en Android

00:00:13.560 --> 00:00:17.340
llamada AAPT y eso genera la clase R.

00:00:17.610 --> 00:00:20.000
Eso es simplemente un archivo <i>R.java</i>

00:00:20.000 --> 00:00:22.090
que te mostraré en el siguiente ejemplo.

00:00:22.090 --> 00:00:23.960
Contiene el identificador de recursos

00:00:23.960 --> 00:00:26.350
para todos los recursos
en tu directorio S.

00:00:26.580 --> 00:00:30.790
Hay un identificador para referirse
a cada recurso añadido.

00:00:30.790 --> 00:00:34.840
El identificador está en un formato
basado en el tipo de recurso.

00:00:34.840 --> 00:00:37.640
Todos los recursos JAVA que sean gráficos

00:00:37.640 --> 00:00:40.640
seguirían el formato <i>R.drawable</i>.

00:00:40.640 --> 00:00:42.770
Para todas las cadenas que son recursos,

00:00:42.770 --> 00:00:46.735
seguirían el modelo <i>R.string.</i>
y el nombre del recurso,

00:00:46.735 --> 00:00:48.540
que en este caso es <i>hello</i>.

00:00:49.190 --> 00:00:52.230
Hay dos maneras de acceder a un recurso.

00:00:52.230 --> 00:00:54.450
En el código JAVA sigue el formato

00:00:54.450 --> 00:00:57.940
R, punto, tipo de recurso, punto,
nombre de recurso.

00:00:58.290 --> 00:01:01.290
En XML sigue la notación @,

00:01:01.720 --> 00:01:04.600
así que sería @ y después
el tipo de recurso,

00:01:04.600 --> 00:01:06.320
que sería <i>string</i>, barra diagonal

00:01:06.320 --> 00:01:08.790
y después nombre del recurso,
que es <i>hello</i>.

00:01:09.320 --> 00:01:11.840
Aquí hay más ejemplos
de diferentes tipos de recursos

00:01:11.840 --> 00:01:13.740
y cómo acceder a ellos.

00:01:13.740 --> 00:01:16.430
Estos son solo un par de tipos 
de recursos comunes,

00:01:16.430 --> 00:01:17.760
pero hay muchos más.

00:01:18.050 --> 00:01:22.040
Recuerda que el código JAVA
empieza siempre con R, un punto,

00:01:22.040 --> 00:01:24.060
después el tipo de recurso, un punto,

00:01:24.060 --> 00:01:25.890
y después el nombre del recurso.

00:01:25.890 --> 00:01:27.960
El nombre es el que tú le asignes.

00:01:28.280 --> 00:01:31.660
En XML tienes @, tipo de recurso,
barra diagonal,

00:01:31.660 --> 00:01:33.550
y después el nombre del recurso.

00:01:34.010 --> 00:01:35.450
Tomemos un momento para buscar

00:01:35.450 --> 00:01:36.940
los identificadores del recurso

00:01:36.940 --> 00:01:39.190
en nuestro archivo 
de actividad principal JAVA.

00:01:39.190 --> 00:01:41.660
Voy a abrir el comando de buscar 
en Android Studio.

00:01:41.940 --> 00:01:45.940
Utilizo <i>Cmd+F</i>, 
en Windows es <i>Ctrl+F</i>.

00:01:46.970 --> 00:01:48.630
Aparece un campo de búsqueda.

00:01:49.640 --> 00:01:52.910
Voy a buscar R mayúscula, punto,

00:01:52.910 --> 00:01:58.430
y después pulso <i>Match Case</i>,
así solo aparecen las R mayúsculas.

00:01:58.430 --> 00:02:03.650
Lo primero que encuentra
es la referencia <i>R.layout.activity_main</i>.

00:02:03.650 --> 00:02:05.670
Esto es interesante porque nos referimos

00:02:05.670 --> 00:02:08.070
a la carpeta del diseño 
de la actividad principal.

00:02:08.070 --> 00:02:09.810
Esto es cómo la actividad principal

00:02:09.810 --> 00:02:12.170
sabe cómo cargar el archivo XML.

00:02:12.170 --> 00:02:13.390
¿No es genial?

00:02:13.390 --> 00:02:15.179
Veamos la nueva referencia.

00:02:15.640 --> 00:02:17.910
Bien, en el método <i>displayQuantity</i>,

00:02:17.910 --> 00:02:22.360
tenemos la referencia
a <i>R.id.quantity_text_view</i>.

00:02:22.360 --> 00:02:25.270
Así que se refiere
a un identificador de vista.

00:02:25.270 --> 00:02:29.120
Específicamente, el <i>TextView</i>
que indica la cantidad.

00:02:29.120 --> 00:02:31.950
Afortunadamente, las piezas del puzzle 
comienzan a encajar.

00:02:31.950 --> 00:02:34.280
Al referirnos a esta visualización
en código JAVA,

00:02:34.280 --> 00:02:36.810
podemos actualizarla
mientras la aplicación se ejecuta

00:02:36.810 --> 00:02:38.550
para mostrar este <i>numberOfCoffees</i>.

00:02:38.550 --> 00:02:40.720
Vayamos a la siguiente aparición.

00:02:40.720 --> 00:02:43.180
Bien, en el método <i>displayMessage</i>

00:02:43.180 --> 00:02:47.470
vemos la referencia 
a <i>R.id.order_summary_text_view</i>.

00:02:47.470 --> 00:02:49.880
Aquí parece que tratamos de referirnos

00:02:49.880 --> 00:02:51.350
a esta visualización de texto

00:02:51.350 --> 00:02:52.990
que muestra el resumen del pedido,

00:02:52.991 --> 00:02:55.123
así podemos actualizarlo con este mensaje.

