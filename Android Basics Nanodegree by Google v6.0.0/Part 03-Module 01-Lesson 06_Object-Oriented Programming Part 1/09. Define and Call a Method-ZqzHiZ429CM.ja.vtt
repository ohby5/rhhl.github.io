WEBVTT
Kind: captions
Language: ja

00:00:00.640 --> 00:00:04.140
まずステップ1、MainActivityに
新しいメソッドを追加してみましょう。

00:00:04.930 --> 00:00:07.390
他のメソッドが定義された波括弧の外であれば、

00:00:07.390 --> 00:00:11.100
どこにでもメソッドを
追加することができます。

00:00:11.100 --> 00:00:14.230
すでに定義したcalculatePriceの下に

00:00:14.230 --> 00:00:16.300
新しいメソッドを追加してみます。

00:00:16.300 --> 00:00:19.530
変更へのアクセスは
privateにしておきます。

00:00:19.530 --> 00:00:22.960
ここにアクセスするのは
このMainActivity内だけだからです。

00:00:24.180 --> 00:00:27.060
次に、戻り値の種類を
String（文字列）とします。

00:00:27.060 --> 00:00:30.550
createOrderSummaryの
メソッドは、文字列を返すからです。

00:00:30.550 --> 00:00:34.660
メソッド名はcreateOrderSummary

00:00:36.230 --> 00:00:38.940
そして入力情報をpriceとし、
ここには数字が入力されます。

00:00:40.340 --> 00:00:42.890
メソッドのシグネチャーが完了しましたが

00:00:42.890 --> 00:00:47.060
今度はこのメソッドを実行させて
このメッセージを返さなければいけません。

00:00:47.060 --> 00:00:52.040
メッセージには
Name(名前)、Quantity(数量)、Total(合計)、
そしてThank you!が含まれます。

00:00:52.040 --> 00:00:54.580
これをコピーし、
createOrderSummaryの

00:00:54.580 --> 00:00:56.590
メソッド内にペースト。

00:00:56.590 --> 00:01:00.120
それではベースコードから始めます。

00:01:00.120 --> 00:01:01.150
ここでの違いは、

00:01:01.150 --> 00:01:05.090
注文内容は合計価格ではなく、
名前から始まっていることです。

00:01:05.090 --> 00:01:08.890
これは改行して、後で使います。

00:01:08.890 --> 00:01:12.350
price messageの変数を
"Name: Kaptain Kunal"と

00:01:12.350 --> 00:01:14.580
入力します。

00:01:14.580 --> 00:01:17.660
次の行に、
price messageを追加します。

00:01:18.690 --> 00:01:22.020
すでにあるメッセージに付け加えます。

00:01:22.020 --> 00:01:26.480
priceMessage、+、

00:01:26.480 --> 00:01:31.110
"Quantity: "、
そしてquantityの変数を追加します。

00:01:32.260 --> 00:01:34.090
quantityはグローバル変数なので

00:01:34.090 --> 00:01:36.740
このメソッド内でのアクセスが可能です。

00:01:36.740 --> 00:01:39.340
これで、名前と数量が加えられました。

00:01:39.340 --> 00:01:44.020
次の行に、priceMessageを
再度追加します。

00:01:44.020 --> 00:01:45.940
さらにテキストを付け加えます。

00:01:45.940 --> 00:01:48.700
ここには合計金額が表示されるので、

00:01:48.700 --> 00:01:50.270
すでに入力済みのものを使えます。

00:01:51.340 --> 00:01:55.080
最後の行に、price messageを
再度追加します。

00:01:55.080 --> 00:01:58.630
すでに存在するstringの値を入力して、
"Thank you!"と加えます。

00:01:59.740 --> 00:02:02.210
これで終わりのようですが、
まだエラーがあります。

00:02:02.210 --> 00:02:04.260
戻り値が欠けていると表示されています。

00:02:04.260 --> 00:02:07.090
summaryの文字列を
返す必要があるので、

00:02:07.090 --> 00:02:10.370
もう1行追加して、returnというコードを
加えなければなりません。

00:02:10.370 --> 00:02:12.240
そして、戻り値を入力します。

00:02:12.240 --> 00:02:15.210
ここで戻り値となるのはpriceMessageです。

00:02:15.210 --> 00:02:16.630
最後にセミコロンを付け加えます。

00:02:17.660 --> 00:02:19.440
これでエラーがなくなりました。

00:02:19.440 --> 00:02:22.150
全て良さそうなので、
実行してテストしてみましょう。

00:02:23.480 --> 00:02:26.300
QUANTITY（数量）を3に変更しました。

00:02:26.300 --> 00:02:28.930
ORDER（注文）のボタンを押しましたが
何も起こりません。

00:02:30.620 --> 00:02:32.320
何が問題なのか見てみましょう。

00:02:32.320 --> 00:02:35.260
コードを注意して見てみると、
何が問題なのかがわかります。

00:02:35.260 --> 00:02:38.660
privateのcreateOrderSummaryが
使われていない

00:02:38.660 --> 00:02:39.730
と警告が出ています。

00:02:39.730 --> 00:02:41.100
呼び出すのを忘れていました。

00:02:41.100 --> 00:02:42.450
最初のスライドに戻りましょう。

00:02:43.580 --> 00:02:46.910
最初のタスクは達成しましたが、
createOrderSummaryを

00:02:46.910 --> 00:02:50.010
submitOrderから
呼び出さなければなりません。

00:02:51.220 --> 00:02:55.300
Android Studioに戻って、
submitOrder を修正します。

00:02:55.300 --> 00:02:57.300
料金計算は正しく設定されていますが、

00:02:57.300 --> 00:03:00.320
値をcreateOrderSummaryへ
渡す必要があります。

00:03:00.320 --> 00:03:03.860
その命令をここに作るためには、
createOrderSummaryを入力して、

00:03:03.860 --> 00:03:05.690
変数をpriceに。

00:03:05.690 --> 00:03:08.340
このメソッドに返す値は

00:03:08.340 --> 00:03:10.380
priceMessageの変数に保存されます。

00:03:10.380 --> 00:03:13.190
この行に書かれているコードは不要です。

00:03:13.190 --> 00:03:15.260
Thank you!は下に
入力済みだからです。

00:03:15.260 --> 00:03:16.680
ですので、削除します。

00:03:16.680 --> 00:03:20.800
そしてスクリーンに正しく表示するために
displayMessageを

00:03:20.800 --> 00:03:23.230
priceMessageという変数で呼び出します。

00:03:23.230 --> 00:03:25.410
もう一度、アプリを試してみましょう。

00:03:25.410 --> 00:03:27.370
QUANTITY（数量）を3にして、

00:03:27.370 --> 00:03:30.100
ORDER（注文）ボタンを押してみると、
まだ正しく表示されません。

00:03:31.080 --> 00:03:34.970
改行なしで表示されてしまっています。

00:03:34.970 --> 00:03:37.210
もう一度、コーディングを修正しましょう。

00:03:37.210 --> 00:03:40.650
コードを見直してみると、
改行させる文字を入力し忘れています。

00:03:40.650 --> 00:03:43.950
Thank you!には入力されていますが、
他の行にはありません。

00:03:43.950 --> 00:03:46.340
従って、他の行にも改行を加えます。

00:03:47.510 --> 00:03:49.230
さぁ、これで再度試してみましょう。

00:03:50.370 --> 00:03:51.600
今度は正常に動きました。

00:03:51.600 --> 00:03:52.830
素晴らしい！

00:03:52.830 --> 00:03:56.050
これでKaptain Kunalは、
コーヒーカップを3つ注文できます。

00:03:56.050 --> 00:03:59.670
プログラミングを
さらに最適にする方法をいくつか紹介します。

00:03:59.670 --> 00:04:02.530
calculatePriceのメソッドを
引数として渡さずに

00:04:02.530 --> 00:04:07.170
createOrderSummaryメソッド内で
呼び出すことも可能でした。

00:04:07.170 --> 00:04:10.420
つまり、ここにcalculatePriceを書き出します。

00:04:10.420 --> 00:04:12.880
その方法でもうまくいくのですが、

00:04:12.880 --> 00:04:16.250
ここでは片方のメソッドの
アウトプットをインプットとし、

00:04:16.250 --> 00:04:18.370
もう一方のメソッドへ渡したかったのです。

00:04:18.370 --> 00:04:20.040
ですので、今回はそのままにしておきます。

00:04:21.440 --> 00:04:23.870
createOrderSummaryのメソッド内で

00:04:23.870 --> 00:04:27.920
他のやり方としては、
演算子「+=」を使うことです。

00:04:27.920 --> 00:04:29.240
これは速記法です。

00:04:29.240 --> 00:04:35.070
これはpriceMessage= priceMessage + 残りのコードを表します。

00:04:35.070 --> 00:04:40.660
従って、この部分を「+=」に変えると、
前に入力したものと同じことを表します。

00:04:40.660 --> 00:04:43.680
これによって、入力量がが減り、
コードが簡潔になります。

00:04:44.740 --> 00:04:46.120
calculatePriceで

00:04:46.120 --> 00:04:49.160
他に可能なのは
値を直接返すことです。

00:04:49.160 --> 00:04:54.030
ローカル変数に保存してから返す代わりに。

00:04:54.030 --> 00:04:56.840
これでコードが簡潔になります。

00:04:56.840 --> 00:05:00.340
そして、submitOrderメソッドの部分でも、

00:05:00.340 --> 00:05:03.880
Order Summaryを作って
変数に保存してすぐに使わずに、

00:05:03.880 --> 00:05:08.960
createOrderSummaryを
呼び出すことも可能です。

00:05:08.960 --> 00:05:11.290
ここも同じです。

00:05:11.290 --> 00:05:14.590
createOrderSummaryの
戻り値は、string（文字列）です。

00:05:14.590 --> 00:05:19.190
これが入力引数として
displayMessageメソッドに渡されます。

00:05:19.190 --> 00:05:21.600
わかりやすければ、
このままにしておいても構いません。

00:05:23.110 --> 00:05:25.860
今まで説明した方法や裏技は、
結局は同じ結果をもたらしますので。

00:05:27.030 --> 00:05:30.290
忘れずに言っておきたいのは、
メソッドの上にJavadocコメントを書き、

00:05:30.290 --> 00:05:33.680
ここで何が処理されるのかを
説明することです。

00:05:33.680 --> 00:05:36.820
専門的に言えば、privateのメソッドに
Javadocコメントは

00:05:36.820 --> 00:05:39.440
必要ありませんが、
メソッドの説明を書くといい練習になり、

00:05:39.440 --> 00:05:42.430
あなたが入力したコードを
他の人が読んだ時に

00:05:42.430 --> 00:05:44.380
何をしようとしたのか
理解できます。

00:05:44.380 --> 00:05:48.000
このメソッドの説明は、
注文内容を作ることです。

00:05:48.000 --> 00:05:51.560
入力パラメータは注文の料金、
それがテキストの要約を返します。

