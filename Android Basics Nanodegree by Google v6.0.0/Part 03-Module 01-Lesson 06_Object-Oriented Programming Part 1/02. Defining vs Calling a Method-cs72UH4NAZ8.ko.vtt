WEBVTT
Kind: captions
Language: ko

00:00:00.670 --> 00:00:02.760
오늘 뭘 타고 출근했나요?

00:00:02.760 --> 00:00:04.190
&gt;&gt; 자전거를 타고 왔어요. 별 문제 없이요.

00:00:04.190 --> 00:00:05.280
당신은요?

00:00:05.280 --> 00:00:06.440
&gt;&gt; 그렇군요.
전 차를 몰고 와요.

00:00:06.440 --> 00:00:08.020
&gt;&gt; 좋아요, 차는 잘 가나요?

00:00:08.020 --> 00:00:08.600
&gt;&gt; 물론이죠.

00:00:08.600 --> 00:00:09.870
&gt;&gt; 그래요?
차가 본넷 아래에서 어떻게 작동하는지

00:00:09.870 --> 00:00:11.840
혹시 아세요?

00:00:11.840 --> 00:00:13.090
&gt;&gt; 아니요, 그걸 제가 알 필요는 없죠.

00:00:13.090 --> 00:00:15.630
전 그냥 열쇠를 꽂아 시동을 걸고,
운전하기만 하면 돼요.

00:00:15.630 --> 00:00:18.040
아시다시피,
이 모두가 코딩 작업이랑 비슷해요.

00:00:18.040 --> 00:00:18.860
&gt;&gt; 어떤 점에서요?

00:00:18.860 --> 00:00:21.220
&gt;&gt; 음,
사실 모든 일이 코딩 작업이랑 비슷해요.

00:00:21.220 --> 00:00:22.330
&gt;&gt; 아, 그렇겠죠.
&gt;&gt; 조금만 더 들어봐요.

00:00:22.330 --> 00:00:24.740
이전 수업에서 저희는 학생들에게
코드에 대해 설명했죠.

00:00:24.740 --> 00:00:26.670
&gt;&gt; 맞아요.
디스플레이나 가격 표시 등에 쓰는

00:00:26.670 --> 00:00:28.160
메소드에 관해서도 설명했죠.

00:00:28.160 --> 00:00:28.940
&gt;&gt; 그래요.
저희가 그때 계속 했던 말이,

00:00:28.940 --> 00:00:30.200
"음, 지금은 걱정 안하셔도 돼요.

00:00:30.200 --> 00:00:31.720
나중에 다시 얘기할 거니까요" 였잖아요.

00:00:31.720 --> 00:00:33.290
그 나중이 바로 지금이예요.

00:00:33.290 --> 00:00:34.120
&gt;&gt; 알았어요.
&gt;&gt; 좋아요.

00:00:34.120 --> 00:00:36.520
그러니까 자동차 작동 원리를 아는 것과 같아요.

00:00:36.520 --> 00:00:37.560
자동차는 운전할 수 있죠.

00:00:37.560 --> 00:00:39.510
학생들도 메소드를 사용할 수 있어요.

00:00:39.510 --> 00:00:40.035
&gt;&gt; 그렇군요.
&gt;&gt; 맞죠?

00:00:40.035 --> 00:00:41.845
하지만 우리는 직접 메소드를 작성했어요. 그러니

00:00:41.845 --> 00:00:43.800
이 경우엔 자동차 디자이너가 된 거죠.
&gt;&gt; 알겠어요.

00:00:43.800 --> 00:00:46.380
중요한 건, 여러분들이 메소드를
어디선가에서 직접 정의할 수 있다는 거겠죠.

00:00:46.380 --> 00:00:48.090
&gt;&gt; 그건 자동차 제작과 같은 거고요.

00:00:48.090 --> 00:00:49.590
&gt;&gt; 그리고
나중에는 메소드를 호출할 수 있죠.

00:00:49.590 --> 00:00:51.100
&gt;&gt; 그건 자동차 운전과 같은 거예요.

00:00:51.100 --> 00:00:51.860
&gt;&gt; 예.

00:00:51.860 --> 00:00:53.200
&gt;&gt; 이제 이 아이디어를 한 번 써보죠.

00:00:53.200 --> 00:00:54.500
&gt;&gt; 좋아요.

00:00:54.500 --> 00:00:56.506
&gt;&gt; MainActivity.java 파일 내에서,

00:00:56.506 --> 00:00:59.540
여기가 바로 디스플레이 메소드를
정의한 곳입니다.

00:00:59.540 --> 00:01:02.956
그리고 호출은 여기서 이루어지죠.
증가(increment) 메소드랑

00:01:02.956 --> 00:01:04.769
감소(decrement) 메소드에서요.

00:01:04.769 --> 00:01:08.640
디스플레이 메소드의 지시사항은 
숫자로 입력되어

00:01:08.640 --> 00:01:10.550
스크린 상에 표시됩니다.

00:01:10.550 --> 00:01:11.730
바로 여기처럼 말이죠.

00:01:11.730 --> 00:01:16.360
메소드를 정의하는 대신, 이 안에 
지시사항을 바로 집어넣어도 무방해요.

00:01:16.360 --> 00:01:21.300
복사 후 메소드를 호출한 부분에 
붙여넣는 거죠.

00:01:21.300 --> 00:01:25.580
여기서 숫자는 변수가 아니므로,
수량이라고 바꿀께요.

00:01:25.580 --> 00:01:26.550
증가 메소드에서도 똑같이 하려면

00:01:26.550 --> 00:01:30.940
이 코드를 복사해서 
여기에 붙여넣는 거죠.

00:01:30.940 --> 00:01:33.740
이제 이 코드는 이전과 마찬가지로
작동하지만 이제 우리는

00:01:33.740 --> 00:01:35.950
디스플레이 메소드가 필요 없게 되는 겁니다.

00:01:35.950 --> 00:01:40.060
이런 방식의 단점이라면
두 가지 메소드 모두에

00:01:40.060 --> 00:01:41.150
중복 코드가 들어간다는 거예요.

00:01:41.150 --> 00:01:46.170
대신에, 디스플레이 메소드를 정의한 후
그 이름으로 호출하게 되면

00:01:46.170 --> 00:01:49.500
코드가 적게 들어가므로
앱으로서는 더 바람직하게 되죠.

00:01:49.500 --> 00:01:51.670
또다른 멋진 것 하나를
여러분들께 보여 드리죠.

00:01:51.670 --> 00:01:55.540
메소드를 발견 시, 클릭 후
다시 우클릭 해보세요.

00:01:55.540 --> 00:01:59.340
그리고 '선언'으로 가세요. 맥에서는 
Command + V를 하시면 됩니다.

00:02:00.610 --> 00:02:04.100
이렇게 하면 메소드가 정의된 곳으로
이동할 수 있습니다.

00:02:04.100 --> 00:02:07.650
메소드 내에 들어간 실제 지시사항을
볼 수 있게 해주므로

00:02:07.650 --> 00:02:09.490
유용한 기능이예요.

00:02:09.490 --> 00:02:10.300
다른 메소드에서는,

00:02:10.300 --> 00:02:14.480
안드로이드 프레임워크 코드 내의
선언부를 열어볼 수 있습니다.

00:02:14.480 --> 00:02:18.940
이건 안드로이드 팀이 작성한 건데요,
TextView.java 파일.

00:02:18.940 --> 00:02:22.200
이것으로 알 수 있는 건,
아무리 마법같아 보이는 효과라도,

00:02:22.200 --> 00:02:26.150
그것이 원래 정의된 코드로 추적해
가는 게 가능하다는 겁니다.

00:02:26.150 --> 00:02:29.970
여러분이 하든지, 안드로이드 팀의
누군가가 하든지 말이죠.

00:02:29.970 --> 00:02:33.150
메소드 정의와 메소드 호출의 차이를
다시 설명드리기 위해

00:02:33.150 --> 00:02:35.930
MainActivity를 살짝 수정해 봅시다.

00:02:35.930 --> 00:02:38.960
디스플레이 메소드의 이름을

00:02:38.960 --> 00:02:42.585
displayQuantity로 바꿔서
메소드 정의 방식에 변화를 줍니다.

00:02:42.585 --> 00:02:47.450
그리고 이 메소드를 호출하려면
코드 역시 바꿔야 하는 걸까요?

00:02:47.450 --> 00:02:51.710
이렇게 해서 앱 상에 에러가 났다면,
주소를 다시 확인해 보세요.

00:02:51.710 --> 00:02:53.770
그러면 스마트폰에서 다시 앱을
구동할 수 있을 겁니다.

00:02:53.770 --> 00:02:55.100
다 마치셨으면 이 박스에 체크하세요.

