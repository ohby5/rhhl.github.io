WEBVTT
Kind: captions
Language: ru

00:00:00.420 --> 00:00:02.590
Я на примере показажу
работу алгоритма с несколькими

00:00:02.590 --> 00:00:04.860
разными исходными параметрами.

00:00:04.860 --> 00:00:09.660
Я начала новое приложение
по шаблону в Android Studio,

00:00:09.660 --> 00:00:12.800
оно никак не относится
к приложению Just Java.

00:00:12.800 --> 00:00:15.460
Я добавила этот алгоритм
в <i>main activity</i>.

00:00:15.460 --> 00:00:17.420
Он называется <i>createWeatherMessage</i>.

00:00:17.420 --> 00:00:21.650
Исходных параметров нет, в результате
должна получиться строка.

00:00:21.650 --> 00:00:24.890
Этот алгоритм должен создавать
новое сообщение с названием города

00:00:24.890 --> 00:00:26.080
и температурой.

00:00:26.080 --> 00:00:29.590
Можете представить себе
что это шаблон из указаний.

00:00:29.590 --> 00:00:32.320
Я назначу температуру
исходным параметром.

00:00:33.550 --> 00:00:36.650
Это число, поэтому
я назову это <i>int temperature</i>.

00:00:36.650 --> 00:00:40.990
И использую вот здесь.

00:00:40.990 --> 00:00:43.540
Это строчный литерал и он

00:00:43.540 --> 00:00:46.000
объединен с температурой - числом.

00:00:46.000 --> 00:00:51.310
Потом он объединен с другой строкой:
<i>degrees Fahrenheit</i>.

00:00:51.310 --> 00:00:54.890
Теперь собщение можно менять
в зависимости от температуры

00:00:54.890 --> 00:00:56.380
потому что это исходный параметр.

00:00:56.380 --> 00:00:59.874
И да, я забыла сказать раньше
но в алгоритме <i>onCreate</i>

00:00:59.874 --> 00:01:03.198
в МainАctivity, который
вызываеся при работе,

00:01:03.198 --> 00:01:05.670
я могу вызвать <i>createWeatherMessage</i>.

00:01:05.670 --> 00:01:10.040
Ранее я не ставила аргументы,
но сейчас у нас есть один параметр.

00:01:10.040 --> 00:01:14.630
И я поставлю 77 для температуры.

00:01:14.630 --> 00:01:18.990
После этого пропадает ошибка
и алгоритм вызывается правильно.

00:01:18.990 --> 00:01:21.900
Мне еще надо изменить комментарий
для алгоритма.

00:01:22.940 --> 00:01:24.400
Я вставлю пустую строку
и опишу

00:01:24.400 --> 00:01:28.351
исходный параметр -
то есть температуру.

00:01:28.351 --> 00:01:31.385
Я напишу <i>@param temperature</i>, и

00:01:31.385 --> 00:01:34.265
добавлю описание,
что это температура в городе.

00:01:35.345 --> 00:01:38.555
Иногда названия параметров
трудно понять и поэтому

00:01:38.555 --> 00:01:39.801
описания полезны.

00:01:41.232 --> 00:01:44.832
Ваш алгоритм - public и другие люди могут

00:01:44.832 --> 00:01:46.212
его вызывать и могут

00:01:46.212 --> 00:01:49.352
не знать порядка действий
внутри алгоритма.

00:01:49.352 --> 00:01:50.642
Поэтому прочитать этот javadoc и

00:01:50.642 --> 00:01:52.952
описание параметров будет им полезно.

00:01:54.292 --> 00:01:57.242
Я ранее говорила что этот алгоритм
будет шаблоном.

00:01:57.242 --> 00:02:01.102
А если мы хотим изменить город чтобы
это не был все время Сан-Франциско?

00:02:02.130 --> 00:02:04.280
Я могу назначить город
исходным параметром.

00:02:04.280 --> 00:02:06.260
Просто добавлю вот здесь запятую.

00:02:06.260 --> 00:02:10.889
И поскольку название города это
текст - то тип данных - строчные.

00:02:10.889 --> 00:02:15.740
Посля я удалю Сан-Франциско
и заменю переменной <i>city name</i>.

00:02:16.870 --> 00:02:20.009
Не забудьте поставить пробел
здесь и еще здесь.

00:02:21.390 --> 00:02:24.410
Супер, теперь алгоритм
может создать сообщение

00:02:24.410 --> 00:02:26.970
которое меняется для города
и температуры.

00:02:26.970 --> 00:02:30.430
Я также помню что надо изменить java doc и

00:02:30.430 --> 00:02:34.050
дописать туда этот параметр
и описание для <i>city name</i>.

00:02:35.140 --> 00:02:39.100
Я изменила сигнатуру алгоритма
и поэтому вот тут есть ошибка.

00:02:39.100 --> 00:02:41.850
Алгоритм больше не работает
только с одним агрументом.

00:02:41.850 --> 00:02:44.130
Я должна представить два аргумента.

00:02:44.130 --> 00:02:48.230
Поэтому я ставлю запятую
и назначаю строку San Francisco.

00:02:49.430 --> 00:02:51.130
Это исправляет ошибку.

00:02:51.130 --> 00:02:56.140
При вызове createWeatherMessage(77,
это будет значение температуры

00:02:56.140 --> 00:02:58.300
а San Francisco будет
значением названия города.

00:02:59.390 --> 00:03:01.783
И так получится нужная строка здесь.

00:03:03.813 --> 00:03:06.874
А теперь вернемся
в алгоритм <i>calculate price</i>

00:03:06.874 --> 00:03:09.480
и изменим его сигнатуру так,
чтобы у него

00:03:09.480 --> 00:03:13.230
было разное количество
исходных параметров.

00:03:13.230 --> 00:03:18.710
Мы определим его с нулем
исходных параметров, с одним,

00:03:18.710 --> 00:03:22.079
и, наконец, попробуем с двумя
исходными параметрами.

00:03:23.350 --> 00:03:26.660
Вы увидите как изменения
сигнатуры метода здесь для различного

00:03:26.660 --> 00:03:30.720
числа исходных параметров
повлияет на его вызов.

00:03:30.720 --> 00:03:32.270
Обычно когда вы
выстраиваете приложение

00:03:32.270 --> 00:03:36.280
вы определяете один способ с
определенным числом исходных.

00:03:36.280 --> 00:03:39.360
И обычно это число исходных
определяется тем

00:03:39.360 --> 00:03:42.380
что поисходит внутри алгоритма.

00:03:42.380 --> 00:03:45.330
Лучше всего использовать
только те параметры,

00:03:45.330 --> 00:03:47.590
которые будут вам нужны в алгоритме.

00:03:47.590 --> 00:03:50.450
Нет смысла использовать
больше информации

00:03:50.450 --> 00:03:51.240
чем нужно.

00:03:51.240 --> 00:03:54.640
Вот указания для этого задания.

00:03:54.640 --> 00:03:58.568
Сначала определите алгоритм <i>calculate
price</i>в <i>main activity</i> приложения.

00:03:58.568 --> 00:04:01.470
Посмотрите указания для части кода
с которого вы можете начать.

00:04:01.470 --> 00:04:04.123
Мы изменим алгоритм
<i>calculatePrice</i> так что в нем

00:04:04.123 --> 00:04:06.690
будет только один исходный параметр.

00:04:06.690 --> 00:04:09.970
Потом в алгоритме <i>submitOrder</i>
вызовем <i>calculatePrice</i> и

00:04:09.970 --> 00:04:12.230
назначим количество
исходным значением.

00:04:12.230 --> 00:04:16.450
И изменим алгоритм <i>calculatePrice</i> на
использования двух исходных.

00:04:16.450 --> 00:04:21.714
Так в алгоритме <i>submitOrder</i>
вы подсчитаете количество и

00:04:21.714 --> 00:04:26.093
потом используете цену, которая
может быть $10, например.

00:04:26.093 --> 00:04:31.150
И наконец, изменим calculatePrice так
чтобы у него был ноль исходных.

00:04:31.150 --> 00:04:34.324
Так в алгоритме <i>submitOrder</i>
вы просто вызовете <i>calculatePrice</i>

00:04:34.324 --> 00:04:34.870
lвот так.

00:04:35.950 --> 00:04:38.530
Давайте сделаем первое вместе
чтобы вы поняли что я имею в виду.

00:04:38.530 --> 00:04:41.729
Я открою ссылку на заметки.

00:04:41.729 --> 00:04:46.080
В этой части мы прописали
код для алгоритма <i>calculatePrice</i>.

00:04:46.080 --> 00:04:50.480
А теперь скопируйте все.

00:04:50.480 --> 00:04:53.160
В Android Studio,
я вставлю этот алгоритм.

00:04:53.160 --> 00:04:56.580
Я вставлю его сразу после
<i>submitOrder</i>, и

00:04:56.580 --> 00:05:01.370
проверю чтобы здесь не было
пустых строк между алгоритмами.

00:05:01.370 --> 00:05:02.519
Так проще читать.

00:05:03.650 --> 00:05:07.140
Теперь я вызову этот алгоритм
из <i>submitOrder</i>.

00:05:07.140 --> 00:05:09.530
Я пропишу вызов в самом
низу алгоритма.

00:05:09.530 --> 00:05:12.430
Позже мы интегрируем
с кодом вот здесь.

00:05:12.430 --> 00:05:13.640
Пока все хорошо.

00:05:14.940 --> 00:05:19.000
Ой, я забыла что у нас один исходный
параметр, поэтому я назначу <i>quantity</i>.

00:05:20.790 --> 00:05:21.960
Теперь повторите все

00:05:21.960 --> 00:05:25.400
в двух других заданиях, меняя
исходные параметры здесь.

00:05:27.000 --> 00:05:29.740
Если вам надо посмотреть примеры
чтобы выполнить задания,

00:05:29.740 --> 00:05:33.761
вы всегда можете найти
Java алгоритмы в Google.

