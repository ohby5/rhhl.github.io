WEBVTT
Kind: captions
Language: pt-BR

00:00:00.300 --> 00:00:03.290
Nós terminamos de chamar
um método e lançar os dados.

00:00:03.290 --> 00:00:06.930
Oh espere, você está se referindo a
lançar as quantidades que haviam

00:00:06.930 --> 00:00:09.220
- para calcular o preço do método?
- Exatamente.

00:00:09.220 --> 00:00:11.750
E agora, queremos um
valor de retorno dele.

00:00:11.750 --> 00:00:13.760
Adoro valores de retorno.
O que ele será?

00:00:13.760 --> 00:00:16.570
Acho que, um prêmio?
Porque é o método pra calcular o preço.

00:00:16.570 --> 00:00:19.390
Sim, o valor total de compra será
o valor de retorno.

00:00:19.580 --> 00:00:21.740
- Certo, vamos lá!
- Certo.

00:00:22.820 --> 00:00:24.250
Você precisa de um garfo?

00:00:25.720 --> 00:00:26.850
Preciso?

00:00:26.900 --> 00:00:30.720
Em Java, a saída de um método é
conhecida como um valor de retorno.

00:00:31.000 --> 00:00:33.950
Em amostras de códigos,
você pode ter visto a palavra "retorno"

00:00:33.950 --> 00:00:38.710
dentro do método ou visto a palavra
"retorno" no comentário acima dele.

00:00:38.860 --> 00:00:42.230
Vamos procurar mais informações sobre
os valores de retorno para métodos.

00:00:42.230 --> 00:00:46.420
Vou procurar no Google por
método Java de valor de retorno.

00:00:46.840 --> 00:00:48.420
O primeiro link parece ser bom.

00:00:48.780 --> 00:00:51.880
Este artigo fala sobre:
Retornando um valor a partir de um método.

00:00:52.590 --> 00:00:55.110
Ele diz que um método
termina de ser executado

00:00:55.110 --> 00:00:57.570
quando já completamos
todas as instruções no método

00:00:57.570 --> 00:00:59.210
ou todas as linhas no método.

00:00:59.390 --> 00:01:03.819
Ou, quando já alcançamos a primeira
instrução de retorno, o que vier primeiro.

00:01:04.179 --> 00:01:07.100
Um método também irá terminar se
nós incluirmos uma exceção

00:01:07.100 --> 00:01:10.080
ou um erro, mas nós não iremos
cobrir isto neste curso.

00:01:10.250 --> 00:01:13.010
Nós iremos, principalmente,
focar nos dois primeiros casos.

00:01:14.140 --> 00:01:18.120
Então, no código, você pode ver algo
como "<i>return:</i>".

00:01:18.120 --> 00:01:20.520
Isso significa que
o método deveria terminar

00:01:20.520 --> 00:01:24.240
e qualquer linha de código que
venha depois disto não será executado.

00:01:25.260 --> 00:01:27.990
Alternativamente,
você pode ver algo como isto:

00:01:27.990 --> 00:01:31.510
<i>returnValue:</i>

00:01:32.100 --> 00:01:35.350
Isto está retornando
um valor de saída do método.

00:01:36.300 --> 00:01:37.670
Aqui temos um exemplo:

00:01:37.800 --> 00:01:40.520
Este código é do método <i>getArea</i>.

00:01:40.970 --> 00:01:43.280
Ele deve calcular a área de um retângulo,

00:01:43.280 --> 00:01:45.690
que é definida por
comprimento vezes a altura.

00:01:45.900 --> 00:01:50.910
Então dentro do método nós temos a palavra
"retorno" seguida pelo valor de retorno.

00:01:51.020 --> 00:01:54.360
O valor de retorno é a variável
comprimento vezes a variável altura

00:01:54.540 --> 00:01:56.510
e isso equivale a um único número.

00:01:56.510 --> 00:02:00.670
E esse número é retornado como
o valor de saída para este método.

00:02:00.940 --> 00:02:03.380
Oposto aos parâmetros de entrada,
onde você pode ter

00:02:03.380 --> 00:02:07.340
tantos parâmetros de entrada listados
entre os parêntesis aberto e fechado,

00:02:07.450 --> 00:02:10.259
você pode ter apenas
um único valor de retorno.

00:02:10.259 --> 00:02:13.310
E o tipo de dados desse
valor de retorno é especificado aqui.

00:02:13.310 --> 00:02:15.830
Assim, poderíamos ter retornado
qualquer outro número,

00:02:15.830 --> 00:02:17.780
desde que seja um inteiro.

00:02:18.150 --> 00:02:21.050
Por exemplo, você não pode retornar
uma cadeia de caracteres,

00:02:21.050 --> 00:02:23.890
por que isto não corresponde
com o tipo de dados de entrada.

00:02:24.000 --> 00:02:25.880
Você está provavelmente
percebendo agora

00:02:25.880 --> 00:02:29.260
que Java tem um significado especial
para a palavra "retorno".

00:02:29.470 --> 00:02:33.200
Você não pode usá-la para
o nome de variáveis ou métodos.

00:02:33.400 --> 00:02:35.759
Estas são chamadas de
palavras-chave do Java.

00:02:37.030 --> 00:02:39.620
Eu posso procurar pela
lista de palavras-chave do Java.

00:02:41.190 --> 00:02:43.590
Esta é a lista com
todas as palavras-chave do Java.

00:02:43.590 --> 00:02:46.790
Você notará que algumas palavras
nós já havíamos visto antes,

00:02:46.790 --> 00:02:49.190
como <i>int</i>, <i>public</i> e <i>private</i>.

00:02:49.250 --> 00:02:51.590
É uma lista muito curta
e todas essas palavras têm

00:02:51.590 --> 00:02:54.420
um significado especial em Java
quando usados em seu código.

00:02:54.420 --> 00:02:57.670
Assim isso quer dizer que você
não pode usá-los para identificadores,

00:02:57.670 --> 00:03:00.420
como nomes de variáveis ou métodos
em seu aplicativo.

00:03:00.420 --> 00:03:04.070
E você notará também que <i>return</i>
é uma palavra-chave especial em Java.

00:03:04.070 --> 00:03:07.990
Esta é reservada para quando você quer
retornar um valor de saída de um método.

00:03:08.990 --> 00:03:12.200
Voltando ao exemplo anterior
de criar uma mensagem sobre o clima.

00:03:12.200 --> 00:03:14.040
Podemos criar uma cadeia de caracteres

00:03:14.040 --> 00:03:16.920
e então retorná-la dizendo
<i>return message:</i>

00:03:17.140 --> 00:03:19.630
O tipo de dado dessa variável é
cadeia de caracteres.

00:03:20.300 --> 00:03:21.450
O que aconteceria se

00:03:21.450 --> 00:03:24.940
eu adicionasse uma linha de código
depois desta instrução de retorno?

00:03:25.120 --> 00:03:28.350
Bem, então eu teria um erro
que diria: <i>unreachable statement</i>.

00:03:28.350 --> 00:03:31.260
Por que o computador não vai chegar
até estas linhas de código

00:03:31.260 --> 00:03:35.010
depois da instrução de retorno,
por que teria encerrado o método alí.

00:03:35.450 --> 00:03:36.990
Então delete as linhas de código

00:03:36.990 --> 00:03:39.230
que vêm depois da
sua afirmação de retorno.

00:03:39.550 --> 00:03:42.880
E se você não precisar que
seu método retorne um valor de saída?

00:03:42.990 --> 00:03:46.800
Bem, vamos ver alguns exemplos
na <i>MainActivity</i> do aplicativo JustJava.

00:03:47.215 --> 00:03:51.755
Os métodos <i>increment</i> e <i>decrement</i> são
exemplos onde não há valor de retorno.

00:03:52.175 --> 00:03:53.955
Se você chama o método <i>decrement</i>,

00:03:53.955 --> 00:03:58.165
ele faz todo o trabalho duro de atualizar
a <i>UI</i> no método <i>displayQuantity</i>.

00:03:58.335 --> 00:04:00.565
Não há valor de saída para retornar.

00:04:00.915 --> 00:04:04.105
É o mesmo com o método de <i>increment</i>,
todo o trabalho pesado é feito

00:04:04.105 --> 00:04:06.925
quando você chama <i>displayQuantity</i>
e ele atualiza a tela.

00:04:07.195 --> 00:04:10.340
Você deve estar imaginando onde
a instrução de retorno está, então.

00:04:10.340 --> 00:04:13.850
Bem, o método terminará a execução
quando todas as linhas de código

00:04:13.850 --> 00:04:16.909
tenham sido completadas ou
quando chegar na instrução de retorno.

00:04:16.999 --> 00:04:20.630
Então, eu poderia ter adicionado
<i>return;</i> deste jeito.

00:04:21.350 --> 00:04:24.250
Assim o método finalizaria
tão logo quanto chegue nessa linha.

00:04:24.770 --> 00:04:27.100
Isto me dá um aviso no <i>Android Studio</i>.

00:04:27.100 --> 00:04:31.340
Ele diz, retorno não é necessário
na última instrução do método <i>Avoid</i>.

00:04:31.460 --> 00:04:35.570
Já que eu não estou retornando nada,
eu posso apenas deletar esta linha aqui.

00:04:35.800 --> 00:04:39.580
Isto significa menos linhas de código
e é mais fácil de ler, eu prefiro assim.

00:04:39.710 --> 00:04:44.130
Para indicar que não há valor de retorno,
é importante dizer na assinatura do método

00:04:44.130 --> 00:04:46.360
que o tipo de dado
do valor de retorno é <i>void</i>.

00:04:46.450 --> 00:04:48.930
<i>Void</i> quer dizer
que não há valor de retorno.

00:04:49.140 --> 00:04:51.240
Java tem um jeito especial
de representar isto,

00:04:51.240 --> 00:04:53.820
então, é por isso que esta é
uma palavra-chave em Java.

00:04:53.820 --> 00:04:56.740
Vamos olhar de novo a lista de
palavras-chave do Java e, de fato,

00:04:56.740 --> 00:04:58.480
nós vemos que <i>void</i> está nesta lista.

00:04:59.170 --> 00:05:01.290
Assim, se você não tem um valor de retorno

00:05:01.290 --> 00:05:04.020
certifique-se de não
deixá-lo em branco como este,

00:05:04.020 --> 00:05:06.980
porque, caso contrário,
terá um erro de sintaxe no Java.

00:05:07.440 --> 00:05:09.620
Apenas digite <i>void</i>, com V minúsculo.

00:05:10.290 --> 00:05:12.930
Vá em frente e leia esse artigo
por conta própria agora.

00:05:13.250 --> 00:05:16.060
Você pode pular as informações
que você já entende,

00:05:16.060 --> 00:05:18.450
ou procurar no Google
por mais informações online.

00:05:18.770 --> 00:05:21.210
Após você ter aprendido
algumas coisas deste artigo,

00:05:21.210 --> 00:05:22.919
você pode passar para as tarefas,

00:05:23.340 --> 00:05:24.560
e então, checar sua nota.

00:05:24.560 --> 00:05:28.070
Você encontrará o link para alguns códigos
para quatro métodos diferentes.

00:05:28.160 --> 00:05:30.120
Cada método contém um erro.

00:05:30.310 --> 00:05:33.780
E a tarefa é que você encontre o erro
em cada um destes métodos.

00:05:34.760 --> 00:05:37.050
Já que há múltiplas formas
de consertar o código,

00:05:37.050 --> 00:05:40.600
assuma que o comentário do <i>javadoc</i>
no topo de cada método está correto,

00:05:40.600 --> 00:05:42.790
e queremos que o código
corresponda àquilo.

00:05:43.270 --> 00:05:45.130
É assim que os métodos se parecem.

00:05:45.440 --> 00:05:48.060
Identifique o número da linha
em que se encontra o erro.

00:05:48.060 --> 00:05:51.000
O número da linha está localizado
na coluna da esquerda, aqui.

00:05:51.000 --> 00:05:54.520
Então escreva uma curta descrição
explicando porque esta linha tem um erro.

00:05:54.880 --> 00:05:57.372
O número da linha fica aqui,
e a descrição fica aqui.

00:05:57.812 --> 00:06:00.743
Quando tiver terminado,
continue para o vídeo da solução.

