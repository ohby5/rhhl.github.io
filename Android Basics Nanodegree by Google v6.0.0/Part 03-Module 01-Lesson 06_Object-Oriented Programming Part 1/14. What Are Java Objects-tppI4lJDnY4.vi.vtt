WEBVTT
Kind: captions
Language: vi

00:00:00.250 --> 00:00:01.635
Anh có nhớ các hộp đó không?

00:00:01.635 --> 00:00:02.809
Hộp nào cơ?

00:00:02.809 --> 00:00:04.090
Những chiếc hộp này.

00:00:04.090 --> 00:00:06.710
Ồ!
Anh còn nhớ chúng chứ?

00:00:06.710 --> 00:00:07.480
À có chứ.

00:00:07.480 --> 00:00:08.260
Tôi nhớ chúng.

00:00:08.260 --> 00:00:10.350
Chúng là các biến
mà bạn có thể gán giá trị.

00:00:10.350 --> 00:00:11.060
Đúng vậy,

00:00:11.060 --> 00:00:14.630
và bạn có thể kết hợp nhiều biến
để tạo ra một đối tượng Java lớn hơn.

00:00:14.630 --> 00:00:16.790
Ồ, vậy bạn có thể kết hợp 
hai hoặc nhiều biến

00:00:16.790 --> 00:00:18.420
làm thành một cái gì đó lớn hơn.

00:00:18.420 --> 00:00:19.709
Chính xác.
Được rồi

00:00:19.709 --> 00:00:21.751
[Âm thanh] Giống như một TextView.

00:00:21.751 --> 00:00:23.960
Đúng vậy.
Ta có thể có một biến số nguyên.

00:00:23.960 --> 00:00:25.640
Biến này cho kích thước font chữ.

00:00:25.640 --> 00:00:26.380
Chính xác.

00:00:26.380 --> 00:00:27.752
Được rồi.
[Âm thanh]

00:00:27.752 --> 00:00:28.637
Và sau đó bạn cũng

00:00:28.637 --> 00:00:29.840
có thể có một biến chuỗi.

00:00:29.840 --> 00:00:31.830
Và các biến chuỗi cho
các văn bản thực tế.

00:00:31.830 --> 00:00:35.120
Vâng, các biến chuỗi có thể đi vào
TextView như tậpTextView.

00:00:35.120 --> 00:00:38.970
Và sau đó chúng ta có thể tương tác 
sử dụng phương pháp khác nhau

00:00:38.970 --> 00:00:40.360
mà chúng ta sẽ bàn tiếp theo.

00:00:40.360 --> 00:00:41.080
Chính xác.

00:00:41.080 --> 00:00:42.310
Được rồi.
Hãy làm điều đó.

00:00:42.480 --> 00:00:46.220
Như chúng tôi đã đề cập trước đó, 
xuất TextView ra màn hình như thế này

00:00:46.220 --> 00:00:49.690
thực sự bị kiểm soát bởi
một đối tượng Java trong ứng dụng.

00:00:49.690 --> 00:00:52.300
Đây là một ví dụ về
một TextView Java.

00:00:52.300 --> 00:00:55.890
Nó giống như một cái hộp, 
và bên trong nó chứa một tập.

00:00:55.890 --> 00:00:58.270
Các tập được tạo thành
bởi một loạt các trường.

00:00:58.270 --> 00:01:00.240
Mỗi trường là một biến,
như trong bài hai,

00:01:00.240 --> 00:01:02.760
khi chúng ta biết về các biến toàn cục.

00:01:02.760 --> 00:01:05.730
Chúng tôi có một trường văn bản
để lưu trữ chuỗi today,

00:01:05.730 --> 00:01:09.220
là văn bản sẽ được hiển thị
cuối cùng trên màn hình.

00:01:09.220 --> 00:01:13.520
Ta cũng có thể có một trường số nguyên
lưu trữ kích thước font chữ văn bản này.

00:01:13.520 --> 00:01:14.910
Còn có nhiều trường khác,

00:01:14.910 --> 00:01:19.460
như màu chữ, font chữ 
tạo nên tập TextView.

00:01:19.460 --> 00:01:21.900
Tôi chỉ không vẽ chúng vào tranh này.

00:01:21.900 --> 00:01:23.940
Để tương tác với đối tượng Java này và

00:01:23.940 --> 00:01:28.420
thay đổi nó khi ứng dụng đang chạy,
ta có thể gọi phương pháp trên TextView.

00:01:28.420 --> 00:01:31.020
Ta đã học về các phương pháp
ở bài ba.

00:01:31.020 --> 00:01:35.120
Một số phương pháp ví dụ về TextView
là setText và gettext.

00:01:35.120 --> 00:01:39.910
Bạn cũng có thể có các phương pháp như
setTextSize hoặc getTextSize, vân vân.

00:01:39.910 --> 00:01:43.050
Mỗi phương pháp này chỉ
làm theo một danh sách các hướng dẫn.

00:01:43.050 --> 00:01:45.590
Bạn có thể có các phương pháp 
phức tạp hơn như OnDraw

00:01:45.590 --> 00:01:48.440
để xử lý việc vẽ một TextView
lên màn hình.

00:01:48.440 --> 00:01:53.350
Về tổng thể, đối tượng TextView này giữ
thông tin tâp mà TextView này chứa

00:01:53.350 --> 00:01:57.850
và bạn có thể gọi phương pháp
để tương tác với TextView này,

00:01:57.850 --> 00:02:01.500
chẳng hạn như để thay đổi tập,
hay thực hiện những thao tác phức tạp hơn.

00:02:02.850 --> 00:02:06.565
Để hiển thị một ImageView trên màn hình,
chúng tôi có một đối tượng Java cho

00:02:06.565 --> 00:02:08.838
ImageView trong ứng dụng.

00:02:08.838 --> 00:02:13.710
ImageView này có chứa trạng thái của tập, 
giống như hình ảnh nào nên được hiển thị,

00:02:13.710 --> 00:02:17.540
cũng như các loại kich cỡ,
hoặc cắt ở giữa.

00:02:17.540 --> 00:02:20.490
Một lần nữa có một loạt các trường khác
tạo nên tập ImageView,

00:02:20.490 --> 00:02:22.250
Tôi chỉ không vẽ chúng ở đây.

00:02:22.250 --> 00:02:25.759
Có các phương pháp như setImage,
setScaleType, và phức tạp hơn

00:02:25.759 --> 00:02:30.070
như OnDraw, để xử lý các việc vẽ
ImageView này lên màn hình.

00:02:30.070 --> 00:02:31.560
Lưu ý rằng, là nhà phát triển,

00:02:31.560 --> 00:02:35.480
chúng ta không cần phải gọi OnDraw
để vẽ lên màn hình.

00:02:35.480 --> 00:02:39.880
Android đã tự động xử lý thao tác này
cho chúng ta, nhưng rất hữu ích

00:02:39.880 --> 00:02:43.910
để gọi những phương pháp 
chẳng hạn như, khi thay đổi ImageView.

00:02:43.910 --> 00:02:47.580
Vậy làm thế nào chúng ta biết tất cả 
các trường ở trong tập ImageView này,

00:02:47.580 --> 00:02:50.530
và tất cả các phương pháp
là của ImageView này là gì?

00:02:50.530 --> 00:02:53.980
Để trả lời câu hỏi đó, chúng ta xem
lớp định nghĩa của đối tượng đó.

00:02:55.010 --> 00:02:57.574
Đó là một tập tin gọi là TextView.java,

00:02:57.574 --> 00:03:00.890
tương tự như cách chúng ta định nghĩa
MainActivity.java.

00:03:00.890 --> 00:03:05.130
Bên trong tập tin TextView này,
ta có một loạt các mã

00:03:05.130 --> 00:03:08.530
của tập TextView cũng như các phương pháp.

00:03:08.530 --> 00:03:12.240
Bây giờ, một cách chính xác nó không chứa
và phương pháp, mà nó chỉ chứa

00:03:12.240 --> 00:03:14.990
thông tin về tập và 
thông tin về các phương pháp.

00:03:16.020 --> 00:03:19.970
Bạn có thể cảm ơn điều này khi xác định
các quy tắc phản ứng của một TextView.

00:03:19.970 --> 00:03:25.750
Trường hợp đối tượng này có thể giữ 
thông tin cụ thể như các chuỗi "today".

00:03:25.750 --> 00:03:26.760
Hoặc cỡ chữ 18.

00:03:26.760 --> 00:03:32.140
Bạn cũng có thể sử dụng lớp này để tạo
nhiều trường hợp đối tượng TextView hơn,

00:03:32.140 --> 00:03:34.290
và có thể có 
một giá trị chuỗi văn bản khác.

00:03:34.290 --> 00:03:37.010
Tôi nghĩ rằng cái này có thể
chứa dòng chữ “hello”,

00:03:37.010 --> 00:03:39.800
và có thể chứa dòng “goodbye”.

00:03:39.800 --> 00:03:43.050
Chúng có thể có kích cỡ phông chữ,
màu sắc văn bản khác nhau, vv

00:03:44.080 --> 00:03:47.290
Tuy nhiên, tất cả chúng 
đều dựa trên lớp mẫu.

00:03:47.290 --> 00:03:50.670
Bạn có thể thấy phân biệt giữa một lớp
và một trường hợp là khó khăn,

00:03:50.670 --> 00:03:51.890
nhưng không sao cả.

00:03:51.890 --> 00:03:53.610
Phải mất một thời gian để làm quen.

00:03:53.610 --> 00:03:55.630
Sau đây là một ví dụ tương tự để giúp bạn.

00:03:55.630 --> 00:03:59.270
Bạn có thể nghĩ về nó như
việc vẽ thiết kế sàn cho một ngôi nhà.

00:03:59.270 --> 00:04:02.200
Bạn có thể sử dụng kế hoạch 
nó để tạo nên ngôi nhà thực sự.

00:04:02.200 --> 00:04:04.320
Mỗi một ngôi nhà có thể
khác nhau đôi chút.

00:04:04.320 --> 00:04:06.620
Nhưng tất cả chúng đều dựa trên
thiết kế sàn này.

00:04:06.620 --> 00:04:10.400
Điều quan trọng cần lưu ý là bản thân
thiết kế sàn không phải là một ngôi nhà.

00:04:10.420 --> 00:04:12.110
Nó chỉ là kế hoạch.

00:04:12.110 --> 00:04:17.079
Tương tự, lớp TextView được sử dụng
để tạo ra các trường hợp đối tượng này.

00:04:17.079 --> 00:04:20.480
Vậy những trường hợp này 
mang giá trị văn bản thực tế,

00:04:20.480 --> 00:04:23.350
giá trị màu chữ, và kích thước văn bản.

00:04:23.350 --> 00:04:25.010
Những lớp này trông như thế nào?

