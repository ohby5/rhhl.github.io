WEBVTT
Kind: captions
Language: es

00:00:00.510 --> 00:00:02.750
Ya hicimos juntos
un parámetro de entrada.

00:00:02.750 --> 00:00:04.909
Era el código
para el método <i>calculatePrice</i>

00:00:04.909 --> 00:00:07.110
que ya figuraba
en las notas del instructor.

00:00:07.110 --> 00:00:09.760
Ahora probaremos
con dos parámetros de entrada.

00:00:09.760 --> 00:00:11.450
En el método <i>submitOrder</i>,

00:00:11.450 --> 00:00:14.580
queremos consultar
<i>calculatePrice (quantity, 10)</i>.

00:00:15.040 --> 00:00:18.580
Donde 10 es 10$ por taza de café.

00:00:18.580 --> 00:00:20.590
Vamos hacer primero este cambio.

00:00:20.900 --> 00:00:22.460
En el método <i>submitOrder</i>

00:00:22.460 --> 00:00:26.544
voy a consultar
<i>calculatePrice (quantity, 10)</i>.

00:00:26.954 --> 00:00:29.380
Estoy pasando dos razones
a este método.

00:00:29.610 --> 00:00:30.780
Ya hay un error

00:00:30.780 --> 00:00:33.470
porque no coincide aquí
con la firma del método

00:00:33.470 --> 00:00:35.330
y estoy a punto de actualizarlo.

00:00:35.470 --> 00:00:38.860
Añado una coma dentro de los paréntesis,

00:00:38.860 --> 00:00:41.520
y luego escribo <i>int price</i>

00:00:41.520 --> 00:00:45.170
porque <i>price</i> pasa como la segunda entrada

00:00:45.170 --> 00:00:47.040
y esto es un número entero.

00:00:47.040 --> 00:00:49.390
En seguida, nos dice que hay un error

00:00:49.390 --> 00:00:52.390
porque no coincide
con la firma del método aquí

00:00:52.390 --> 00:00:54.470
que solo tiene un parámetro de entrada.

00:00:54.470 --> 00:00:57.200
Lo cambio para que tenga
un segundo parámetro de entrada.

00:00:57.200 --> 00:00:59.600
Dentro de los paréntesis
de apertura y cierre

00:00:59.600 --> 00:01:01.960
añado un segundo parámetro.

00:01:02.280 --> 00:01:04.850
Como 10 es el precio por taza de café

00:01:04.850 --> 00:01:07.160
voy a llamarlo <i>priceperCup</i>,

00:01:07.160 --> 00:01:10.330
es un número y voy a decir
que el tipo de dato es <i>int.</i>

00:01:11.050 --> 00:01:14.100
Puedes elegir el nombre del parámetro.

00:01:14.100 --> 00:01:16.850
Tendría que describir lo que contiene.

00:01:16.850 --> 00:01:20.530
Pero el tipo de dato tiene que ser
uno específico de JAVA,

00:01:20.530 --> 00:01:24.860
como <i>int, string</i> y otros 
que aún no hemos estudiado.

00:01:25.240 --> 00:01:29.320
Actualizo el documento JAVA
para describir ese segundo parámetro.

00:01:29.720 --> 00:01:31.420
Cuando miro dentro del método

00:01:31.420 --> 00:01:34.830
tomamos <i>quantity</i>
y lo multiplicamos por 5,

00:01:34.830 --> 00:01:36.760
los 5$ del precio por taza de café.

00:01:36.760 --> 00:01:38.650
Pero ahora el precio
de una taza de café

00:01:38.650 --> 00:01:40.350
ha cambiado a una variable.

00:01:40.350 --> 00:01:43.960
Así que usaremos <i>priceperCup</i>
en vez del valor numérico 5.

00:01:44.320 --> 00:01:46.090
Ahora el precio total de un pedido

00:01:46.090 --> 00:01:48.800
será <i>quantity</i> por <i>priceperCup</i>.

00:01:49.300 --> 00:01:52.230
Si pensamos en la plantilla
de la que hablábamos antes

00:01:52.230 --> 00:01:55.350
<i>quantity</i> y <i>priceperCup</i>
ahora son intercambiables

00:01:55.350 --> 00:01:58.499
por diferentes valores
porque son parámetros de entrada.

00:01:58.940 --> 00:02:00.510
Puedes consultar <i>calculatePrice</i>

00:02:00.510 --> 00:02:03.390
con diferente cantidad y precio por taza

00:02:03.390 --> 00:02:05.740
y este cálculo aún funcionará.

00:02:06.030 --> 00:02:08.840
Probemos ahora el caso
de cero parámetros de entrada.

00:02:08.840 --> 00:02:10.190
En el método <i>submitOrder</i>,

00:02:10.190 --> 00:02:13.400
debemos consultar <i>calculatePrice</i>
con paréntesis vacíos.

00:02:14.310 --> 00:02:17.200
En el método <i>submitOrder</i> 
cuando consulto <i>calculatePrice</i>

00:02:17.200 --> 00:02:19.319
elimino las razones.

00:02:19.620 --> 00:02:22.450
Ahora, no pasamos
ninguna entrada a este método.

00:02:22.790 --> 00:02:25.590
Aparece subrayado en rojo
porque no coincide

00:02:25.590 --> 00:02:27.480
con las signaturas de los métodos.

00:02:27.480 --> 00:02:30.620
Sigo y borro los parámetros de entrada.

00:02:31.110 --> 00:02:32.860
Señala también que hay un error

00:02:32.860 --> 00:02:34.540
porque estos parámetros no existen

00:02:34.540 --> 00:02:36.480
así que los borro también.

00:02:37.330 --> 00:02:38.980
Ahora tenemos un error

00:02:38.980 --> 00:02:41.460
porque no puede resolver
el símbolo <i>priceperCup</i>.

00:02:41.460 --> 00:02:44.720
Como ya no es una variable de entrada,
hay que volver a cambiarlo

00:02:44.720 --> 00:02:49.860
por el valor numérico del precio,
que es 5$ o elegir otro precio.

00:02:50.070 --> 00:02:52.120
El ordenador no dice nada
sobre <i>quantity</i>,

00:02:52.120 --> 00:02:54.570
porque es una variable global

00:02:54.570 --> 00:02:56.590
y puedes referenciar
esta variable <i>quantity</i>

00:02:56.590 --> 00:02:58.880
desde cualquier método
de la actividad principal.

00:02:58.880 --> 00:03:01.060
Siento haber elegido 
el nombre <i>quantity</i>

00:03:01.060 --> 00:03:02.660
como parámetro de entrada.

00:03:02.660 --> 00:03:05.830
Pero, quédate con la idea,
sin parámetros de entrada

00:03:05.830 --> 00:03:08.120
solo puedes referirte
a variables globales,

00:03:08.120 --> 00:03:12.049
usar valores númericos
o si creas variables locales aquí,

00:03:12.049 --> 00:03:13.461
puedes referirte a estas.

