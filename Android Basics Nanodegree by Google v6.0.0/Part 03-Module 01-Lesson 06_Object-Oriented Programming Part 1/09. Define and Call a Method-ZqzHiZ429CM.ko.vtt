WEBVTT
Kind: captions
Language: ko

00:00:00.640 --> 00:00:03.565
[MainActivity]에 새로운 [method]를 추가하는 
첫 번째 단계를 함께 해봅시다.

00:00:04.930 --> 00:00:07.390
[method]를 추가하기 위해 다른 
[method] [braces]의 외부를 포함하여

00:00:07.390 --> 00:00:11.100
파일의 어느 부분이든 선택할 수 
있습니다.

00:00:11.100 --> 00:00:14.230
[calculatePrice]로 규정된 다른 
[method]의 바로 아래에 추가해

00:00:14.230 --> 00:00:16.300
보도록 하겠습니다.

00:00:16.300 --> 00:00:19.530
이 [method] 접근에 필요한 것은 
[main activity] 내에 있기 때문에

00:00:19.530 --> 00:00:22.960
변경자 접근을 위해 [private]로 
나타내겠습니다.

00:00:24.180 --> 00:00:27.060
[createOrderSummary] [method]가 
문자열을 반환해야 하기 때문에 그

00:00:27.060 --> 00:00:30.550
다음은 반환 유형에 대한 문자열을 
만들도록 하겠습니다.

00:00:30.550 --> 00:00:34.665
그리고 나서 [method]의 명칭은
[createOrderSummary] 입니다.

00:00:36.230 --> 00:00:38.940
그 다음, 숫자인 가격을 
입력하겠습니다.

00:00:40.340 --> 00:00:42.890
좋습니다. [method signature]가 
완료되었습니다. 하지만 이제 이

00:00:42.890 --> 00:00:47.060
메시지를 반환할 수 있도록 
[method]를 실행해야만 합니다.

00:00:47.060 --> 00:00:52.040
메시지는 성명, 수량, 총계 등으로 
시작하며 다음은 감사합니다. 입니다.

00:00:52.040 --> 00:00:54.580
자 이제 다음 단계로 넘어가
이를 복사하고 나서

00:00:54.580 --> 00:00:56.590
[createOrderSummary] [method]에 
붙여 넣겠습니다.

00:00:56.590 --> 00:01:00.120
이제 기본 코드를 시작할 수 있습니다.

00:01:00.120 --> 00:01:01.150
이제 바꿀 내용은

00:01:01.150 --> 00:01:05.090
총 가격이 아닌 성명으로 주문이
시작하여야 한다는 것입니다.

00:01:05.090 --> 00:01:08.890
이를 다음 행으로 이동하고 다음을 
위해 저장하도록 하겠습니다.

00:01:08.890 --> 00:01:12.359
가격 메시지 변수를 성명으로 그리고 
나서 캅테인 쿠날로 초기화 할

00:01:12.359 --> 00:01:14.580
것입니다.

00:01:14.580 --> 00:01:17.660
그리고 다음 행에서
가격 메시지를 업데이트 할 것입니다.

00:01:18.690 --> 00:01:22.025
기존의 메시지에 첨부하도록 
하겠습니다.

00:01:22.025 --> 00:01:26.485
이제 가격 메시지, +, 그리고 새로운 
문자를 만들 것입니다. 그리고 수량을

00:01:26.485 --> 00:01:31.115
추가하며 마지막으로 수량 변수를 
추가할 것입니다.

00:01:32.265 --> 00:01:34.095
수량은 전역 변수이기 때문에,

00:01:34.095 --> 00:01:36.745
이 [method] 내에서 접근이 
가능합니다.

00:01:36.745 --> 00:01:39.340
자 이제, 성명과 수량을 추가하였습니다.

00:01:39.340 --> 00:01:44.020
다음 행에
[priceMessage]와 몇몇 문자를 다시 한

00:01:44.020 --> 00:01:45.940
번 업데이트 할 것입니다.

00:01:45.940 --> 00:01:48.700
실질적으로 이 문자는 총 가격이 될 
것입니다. 따라서 이전과 같은

00:01:48.700 --> 00:01:50.270
방법으로 진행하면 됩니다.

00:01:51.340 --> 00:01:55.080
좋습니다. 이제 마지막 행에
[priceMessage]를 다시 업데이트 합니다.

00:01:55.080 --> 00:01:58.639
문자열의 기존 값을 갖고 여기에 
감사합니다!를 추가하도록 합니다.

00:01:59.740 --> 00:02:02.210
자 이제 잘 된 것 같습니다. 하지만
아직 이곳에 오류가 있습니다.

00:02:02.210 --> 00:02:04.260
반환 명령이 없다는 오류입니다.

00:02:04.260 --> 00:02:07.090
요약 문자열을 
반환하도록 하였기 때문에

00:02:07.090 --> 00:02:10.370
반환에 대한 코드 행을 추가하여야 
합니다.

00:02:10.370 --> 00:02:12.240
그 다음 반환 값 입니다.

00:02:12.240 --> 00:02:15.210
여기서 반환 값은
[priceMessage] 입니다.

00:02:15.210 --> 00:02:16.630
역시 끝에는 세미콜론을 
추가하도록 하겠습니다.

00:02:17.660 --> 00:02:19.440
자 이제 오류가 사라졌습니다.

00:02:19.440 --> 00:02:22.150
코드에는 문제가 없는 것 같습니다.
이제 실행하고 확인해보도록 하겠습니다.

00:02:23.480 --> 00:02:26.300
좋습니다. 이제 수량을 3으로 변경하기 
위해 주문 버튼을 누릅니다. 작동하지

00:02:26.300 --> 00:02:28.930
않군요.

00:02:30.620 --> 00:02:32.320
무엇이 문제인지 살펴봅시다.

00:02:32.320 --> 00:02:35.260
코드를 더욱 자세히 살펴보도록 합시다.
문제를 발견하였습니다.

00:02:35.260 --> 00:02:38.660
이곳에 [private method] 
[createOrderSummary]가 사용되지

00:02:38.660 --> 00:02:39.730
않는다는 경고가 있습니다.

00:02:39.730 --> 00:02:41.100
이를 호출하는 것을 깜빡 하였군요.

00:02:41.100 --> 00:02:42.450
퀴즈 화면으로 돌아가 봅시다.

00:02:43.580 --> 00:02:46.910
좋습니다. 첫 번째 작업을 잘 끝냈습니다. 
하지만 이제 [submitOrder] [method]로부터

00:02:46.910 --> 00:02:50.010
[createOrderSummary] [method]를 
호출해야 합니다.

00:02:51.220 --> 00:02:55.300
안드로이드 스튜디오로 돌아가 봅시다.
[submitOrder] [method]를 수정하여야 합니다.

00:02:55.300 --> 00:02:57.300
정확한 가격을 
계산하였습니다.

00:02:57.300 --> 00:03:00.320
하지만 이제 [createOrderSummary] 
[method]에 입력하여야 합니다.

00:03:00.320 --> 00:03:03.860
이를 가격 변수가 더해진 이곳 
[createOrderSummary]에 해보도록

00:03:03.860 --> 00:03:05.690
하겠습니다.

00:03:05.690 --> 00:03:08.340
이 [method]의 반환 값은
[priceMessage] 변수에 저장될

00:03:08.340 --> 00:03:10.380
것입니다.

00:03:10.380 --> 00:03:13.190
"감사합니다"가 이곳 아래의 문자에 
있기 때문에 이 코드 행은 이제 더

00:03:13.190 --> 00:03:15.260
이상 필요 없습니다.

00:03:15.260 --> 00:03:16.680
따라서 이를 삭제하겠습니다.

00:03:16.680 --> 00:03:20.800
그리고 화면 업데이트를 위해 제가 할 일은 
이전과 같이 [priceMessage] 변수가 더해진

00:03:20.800 --> 00:03:23.230
[displayMessage]를 호출하는 것입니다.

00:03:23.230 --> 00:03:25.410
이제 앱을 다시 실행시켜 봅시다.

00:03:25.410 --> 00:03:27.370
수량을 3으로 바꾸고

00:03:27.370 --> 00:03:29.930
명령 버튼을 누르면,
아직도 작동하지 않습니다.

00:03:31.080 --> 00:03:34.970
대부분의 문자는 1행에 있지만 이는 
여러 행에 있어야 하기 때문에 되돌아

00:03:34.970 --> 00:03:37.210
가서 코드를 수정해 보도록 합시다.

00:03:37.210 --> 00:03:40.650
코드를 살펴보면, 새 행 지정을 해주지 
않은 것을 알 수 있습니다.

00:03:40.650 --> 00:03:43.950
다른 것이 아닌 감사합니다 에 대해 
이를 정확히 추가하였습니다.

00:03:43.950 --> 00:03:46.340
따라서 이제 이를 추가할 것입니다.
다른 행에도 추가할 것입니다.

00:03:47.510 --> 00:03:49.230
자 이제 다시 실행해 보도록 합시다.

00:03:50.370 --> 00:03:51.600
잘 되는군요.

00:03:51.600 --> 00:03:52.830
좋습니다.

00:03:52.830 --> 00:03:56.050
캅테인 쿠날은 세 잔의 커피를 구매할 
수 있습니다.

00:03:56.050 --> 00:03:59.670
코드에 할 수 있는 다른 최적화를 
보여드리겠습니다.

00:03:59.670 --> 00:04:02.530
입력 파라미터를 입력하는 대신에 
[createOrderSummary] [method]

00:04:02.530 --> 00:04:07.170
내에서 [calculatePrice] [method]를 
호출하였음을 숙지하십시오.

00:04:07.170 --> 00:04:10.420
이제 이곳에 
[calculatePrice]를 완성하였습니다.

00:04:10.420 --> 00:04:12.880
그리고 잘 작동합니다.

00:04:12.880 --> 00:04:16.250
하지만 1가지 [method]의 출력을 다른 
[method]에 입력하는 것을

00:04:16.250 --> 00:04:18.370
보여드리고자 합니다.

00:04:18.370 --> 00:04:20.040
따라서 이전과 같이 놓도록 하겠습니다.

00:04:21.440 --> 00:04:23.874
[createOrderSummary] [method]

00:04:23.874 --> 00:04:27.920
내에서 제가 할 수 있는 것은 += 
연산자를 사용하는 것입니다.

00:04:27.920 --> 00:04:29.240
이것은 약어 입니다. 그리고 이는

00:04:29.240 --> 00:04:35.070
priceMessage = priceMessage 
+ 전체와 같은 내용을 의미합니다.

00:04:35.070 --> 00:04:40.660
전체를 +=로 변경하면, 제가 이전에 
했던 것과 같게 될 것입니다.

00:04:40.660 --> 00:04:43.680
이는 더 적은 입력을 필요로 하고
코드는 더욱 간결하게 됩니다.

00:04:44.740 --> 00:04:46.120
[calculatePrice] [method]에서,

00:04:46.120 --> 00:04:49.160
제가 한 다른 작업은 
이를 지역 변수에 저장하고

00:04:49.160 --> 00:04:54.030
반환하는 대신 즉시 값을 반환시키는 
것입니다.

00:04:54.030 --> 00:04:56.840
이 역시 더 많은 간결한 코드를 
만들어 냅니다.

00:04:56.840 --> 00:05:00.340
다음으로 주문 요약을 만들고 변수에 
저장하는 대신 이 위쪽 [submitOrder]

00:05:00.340 --> 00:05:03.880
[method]에서 바로 사용하게 하여, 
[createOrderSummary]를 호출하고

00:05:03.880 --> 00:05:08.960
이것에 대한 [displayMessage]를 
호출할 수 있습니다.

00:05:08.960 --> 00:05:11.290
이는 같은 결과를 가져오게 합니다.

00:05:11.290 --> 00:05:14.590
[createOrderSummary] [method]의 
반환 값은 문자열이고 이는

00:05:14.590 --> 00:05:19.190
[displayMessage] [method]에 대한 
[input argument]로 입력될 수 있습니다.

00:05:19.190 --> 00:05:21.410
이것이 확인이 더 편하면 이처럼 
놓아둘 수 있습니다.

00:05:23.110 --> 00:05:25.630
이러한 팁과 요령들은
어쨌든 같은 논리를 만들어 냅니다.

00:05:27.030 --> 00:05:30.290
잊어버리기 전에, 어떻게 실행될 지에 
대한 설명을 위해 이 [method]의

00:05:30.290 --> 00:05:33.680
윗부분에 [Javadoc comment]를 
추가하도록 합니다.

00:05:33.680 --> 00:05:36.821
기술적으로 [private method]에 대한 
[Javadoc comment]가 필요하지는

00:05:36.821 --> 00:05:39.449
않습니다. 하지만 이는 코드를 
확인하는 다른 사람들이 무엇을

00:05:39.449 --> 00:05:42.437
하려고 했는지를 이해할 수 있도록 
[method]의 설명을 적는 좋은

00:05:42.437 --> 00:05:44.380
연습입니다.

00:05:44.380 --> 00:05:48.002
이 [method]에 대한 설명은
명령을 요약한다는 것입니다.

00:05:48.002 --> 00:05:51.560
주문의 가격에 대한 입력 파라미터는
문자 요약을 반환합니다.

