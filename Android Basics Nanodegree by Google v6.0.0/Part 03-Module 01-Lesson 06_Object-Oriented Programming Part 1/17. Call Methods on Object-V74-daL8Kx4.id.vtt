WEBVTT
Kind: captions
Language: id

00:00:00.860 --> 00:00:04.030
Mari kembali ke metode displayMessage
yang sudah kita lihat sebelumnya.

00:00:05.030 --> 00:00:07.570
Kita coba cari tahu apa yang
sebenarnya terjadi di sini.

00:00:08.630 --> 00:00:12.450
Dari apa yang telah kita pelajari sejauh
ini, terlihat seperti ada objek Textview

00:00:12.450 --> 00:00:15.670
dan nama variabel yang disebut
orderSummaryTextView.

00:00:15.670 --> 00:00:18.870
Dan disebutkan banyak sekali kode
yang tidak kita kenal.

00:00:18.870 --> 00:00:22.820
Tapi pada baris selanjutnya, kita gunakan
variabel orderSummaryTextView, dan

00:00:22.820 --> 00:00:25.030
kita coba setText padanya untuk
menjadi message ini.

00:00:26.250 --> 00:00:29.470
Mari cari tahu lebih lanjut tentang cara
memanggil metode seperti ini pada objek.

00:00:31.250 --> 00:00:34.920
Saat kita memanggil metode pada objek
dia harus mengikuti format ini.

00:00:34.920 --> 00:00:39.560
Pertama, kita tulis Nama Objek Variabel
dalam hal ini, titleTextView

00:00:39.560 --> 00:00:41.160
lalu tambahkan sebuah tanda titik.

00:00:41.160 --> 00:00:45.350
Lalu diikuti oleh nama metode
yang dalam hal ini adalah setText.

00:00:45.350 --> 00:00:49.390
Metode ini didefinisikan persis
seperti ini di dalam kelas TextView Java.

00:00:49.390 --> 00:00:53.250
Metode deklarasi juga menetapkan bahwa
terdapat parameter input dari

00:00:53.250 --> 00:00:58.060
string, sehingga kita letakkan
tanda kurung dan string sebagai input.

00:00:58.060 --> 00:00:59.700
Lalu kita akhiri dengan titik koma.

00:01:00.920 --> 00:01:05.459
Saat Anda menulis baris kode ini,
dia memodifikasi objek titleTextView

00:01:05.459 --> 00:01:08.100
sehingga ini menampilkan ini di layar.

00:01:08.100 --> 00:01:10.490
Alasan kita menggunakan
nama variabel objek di sini adalah

00:01:10.490 --> 00:01:13.600
karena terdapat kemungkinan adanya
TextView berganda dalam aplikasi Anda.

00:01:13.600 --> 00:01:16.379
Jadi, pastikan Anda memanggil metode
pada contoh objek yang tepat.

00:01:17.560 --> 00:01:20.980
Saat Anda menentukan argumen input,
pastikan Anda menentukan

00:01:20.980 --> 00:01:24.620
argumen yang tepat dalam urutan tepat
sesuai dengan metode deklarasi.

00:01:25.660 --> 00:01:29.460
Jadi, jika tidak ada input,
hanya akan ada tanda kurung yang kosong.

00:01:29.460 --> 00:01:32.820
Cara memasukkan input ke dalam metode
sama persis dengan yang kita pelajari

00:01:32.820 --> 00:01:34.110
pada pelajaran ketiga.

00:01:34.110 --> 00:01:36.140
Ingat untuk memisahkan nama
variabel objek dan

00:01:36.140 --> 00:01:38.450
nama metode dengan tanda titik.

00:01:38.450 --> 00:01:42.450
Inilah contoh lain, pada
objek titleTextView yang sama,

00:01:42.450 --> 00:01:45.190
Kita akan memanggil
metode setTextSize padanya.

00:01:45.190 --> 00:01:49.220
Metode ini mengambil integer
sebagai masukan untuk ukuran teks baru.

00:01:49.220 --> 00:01:51.830
Dalam hal ini,
kita masukan 18 sebagai ukuran teks.

00:01:52.980 --> 00:01:55.510
Saat perangkat Android mengeksekusi
baris kode ini,

00:01:55.510 --> 00:02:00.460
dia akan mengubah titleTextView memiliki
ukuran huruf 18, yang lebih besar.

00:02:00.460 --> 00:02:02.260
Dalam contoh ini,

00:02:02.260 --> 00:02:06.540
kita memanggil metode pada objek TextView
yang disebut warningTextView.

00:02:07.580 --> 00:02:11.140
Metodenya disebut setTextColor,
dan dibutuhkan sebagai input warna baru.

00:02:12.140 --> 00:02:16.010
Perhatikan bahwa warna
yang ditetapkan adalah Color.RED.

00:02:16.010 --> 00:02:17.670
Jadi, jika kita lihat dokumentasi

00:02:17.670 --> 00:02:22.030
kelas warna, gulir ke bawah dan
bisa dilihat kalau merah sudah ditetapkan.

00:02:22.030 --> 00:02:25.290
Ada banyak warna lain yang
juga dapat Anda pakai.

00:02:26.370 --> 00:02:30.850
Saat Anda memanggil setTextColor, Anda
bisa pilih Color.BLUE atau Color.BLACK.

00:02:30.850 --> 00:02:33.835
Terakhir, ini adalah contoh memanggil
metode pada ImageView.

00:02:34.882 --> 00:02:39.230
Objek ImageView ini memiliki nama variabel
dari welcomeImageView, dan

00:02:39.230 --> 00:02:41.260
kita panggil metode
pada setImageResource padanya.

00:02:42.380 --> 00:02:46.135
Metode ini mengambil input gambar baru
yang harus kita atur pada ImageView ini.

00:02:47.400 --> 00:02:51.580
Kita tentukan gambar baru sebagai
sumber ID, di dalam format R.drawable.

00:02:51.580 --> 00:02:53.000
dan ini adalah nama file,

00:02:54.100 --> 00:02:58.610
ini adalah contoh penggunaan sumber ID
lainnya di dalam kode Java

00:02:58.610 --> 00:03:02.059
Untuk mendapatkan daftar penuh metode
yang dapat dipanggil pada objek TextView,

00:03:02.059 --> 00:03:04.867
buka saja halaman dokumentasi
TextView Android.

00:03:04.867 --> 00:03:08.810
Anda bisa dapatkan dengan hanya mencari
TextView Android dan klik di sini.

00:03:09.840 --> 00:03:12.110
Kita sudah kenali halaman ini, dan

00:03:12.110 --> 00:03:15.740
kita sudah tahu tentang atribut XML
yang terdaftar di halaman ini.

00:03:16.830 --> 00:03:20.790
Jika saya gulir ke bawah lagi, ada daftar
seluruh metode publik di kelas textView.

00:03:21.910 --> 00:03:27.210
Jika ingin mencari sesuatu, gunakan saja
Cmd+F, atau Ctrl+F jika memakai Windows.

00:03:27.210 --> 00:03:29.900
Saya akan cari metode setTextColor
yang kita gunakan tadi.

00:03:31.200 --> 00:03:32.740
Inilah metode setTextColor dan

00:03:32.740 --> 00:03:35.310
dibutuhkan warna integer sebagai
parameter input.

00:03:36.420 --> 00:03:40.540
Semua metode ini dinyatakan sebagai
metode publik dalam kelas TextView.

00:03:40.540 --> 00:03:43.170
Itulah mengapa sekarang kita
bisa menyebutnya metode.

00:03:43.170 --> 00:03:44.910
Jika ini dinyatakan
sebagai metode privat,

00:03:44.910 --> 00:03:46.210
kita tidak bisa melihatnya.

00:03:47.400 --> 00:03:49.070
Saat Anda memanggil metode ini,

00:03:49.070 --> 00:03:52.370
pastikan untuk memeriksa parameter input
apa yang dibutuhkan dan

00:03:52.370 --> 00:03:55.680
meletakkan input ke dalam urutan
dan tipe data yang tepat.

00:03:56.910 --> 00:03:58.040
Saat melihat kode,

00:03:58.040 --> 00:04:02.130
terkadang Anda mungkin tidak melihat
tanda titik saat memanggil metode.

00:04:02.130 --> 00:04:06.150
Perbedaan penting meski Anda
berada di dalam atau luar kelas.

00:04:06.150 --> 00:04:08.730
Mari perhatikan contoh di dalam
kelas TextView.

00:04:08.730 --> 00:04:12.540
Metode setText dan metode lainnya
sudah didefinisikan.

00:04:12.540 --> 00:04:16.589
Misal, Anda ingin memanggil metode setText
dari metode lain ini.

00:04:16.589 --> 00:04:21.040
Anda bisa melakukannya dengan memanggil
setText dan memasukkan parameter input.

00:04:21.040 --> 00:04:24.070
Tapi dimanakah tanda titik dan
nama variabel objek berada?

00:04:24.070 --> 00:04:28.800
Sebenarnya baris ini adalah
singkatan dari this.setText("Hello").

00:04:28.800 --> 00:04:31.360
Ini mengacu pada
contoh objek saat ini dan

00:04:31.360 --> 00:04:34.800
kemudian setText dipanggil pada objek ini.

00:04:34.800 --> 00:04:38.880
Format ini yang lebih kita kenal untuk
memanggil metode pada objek.

00:04:38.880 --> 00:04:42.301
Namun this.part ini tersirat
dan sifatnya opsional,

00:04:42.301 --> 00:04:47.380
Jadi, untuk membuat kode kita
lebih ringkas, sebut saja setText("Hello).

00:04:47.380 --> 00:04:50.670
Jadi, perhatikan perbedaan antara
memanggil setTexts di dalam kelas

00:04:50.670 --> 00:04:53.800
dan memanggil setTexts di luar kelas.

00:04:53.800 --> 00:04:55.990
Jadi lebih masuk akal saat
Anda memikirkannya, karena

00:04:55.990 --> 00:04:59.380
sangat jelas menunjukkan TextView mana
yang ingin dijadikan tempat mengatur teks

00:04:59.380 --> 00:05:03.380
kalau Anda memiliki
TextViews berganda dalam kelas ini.

00:05:03.380 --> 00:05:06.280
Inilah perbedaan lain antara berada
di dalam kelas TextView,

00:05:06.280 --> 00:05:08.970
versus berada di luar kelas TextView.

00:05:08.970 --> 00:05:12.330
Di dalam kelas TextView,
Anda bisa mengakses variabel privat dan

00:05:12.330 --> 00:05:14.210
metode privat.

00:05:14.210 --> 00:05:16.060
Jika Anda berada di luar kelas TextView,

00:05:16.060 --> 00:05:21.150
Anda tidak bisa menggunakan metode privat
dan tidak bisa mengakses variabel privat.

00:05:21.150 --> 00:05:25.100
Di dalam kelas MainActivity, Anda hanya
dapat mengakses metode publik dan

00:05:25.100 --> 00:05:27.300
variabel publik dari
kelas TextView.

