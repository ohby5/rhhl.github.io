WEBVTT
Kind: captions
Language: ru

00:00:00.210 --> 00:00:04.370
Ранее мы увидели что можем
передать число в алгоритм <i>display</i>.

00:00:04.370 --> 00:00:08.350
Погооврим больше о разных
вводных и исходных алгоритма.

00:00:08.350 --> 00:00:11.460
Возьмем алгоритм <i>submitOrder</i>
в <i>MainActivity</i> как пример.

00:00:12.510 --> 00:00:15.000
Предположим что есть множество
строк кода в этом алгоритме.

00:00:15.000 --> 00:00:16.670
Когда пользователь
нажмет на кнопку Order,

00:00:16.670 --> 00:00:19.330
это вызовет алгоритм <i>submitOrder</i>.

00:00:19.330 --> 00:00:23.200
Устройство Android выполнит
все команды от верха до низа,

00:00:23.200 --> 00:00:26.980
а когда доберется до
вызова алгоритма <i>calculatePrice</i>

00:00:26.980 --> 00:00:30.400
то перейдет туда где
определен алгоритм <i>calculatePrice</i>.

00:00:30.400 --> 00:00:33.830
Допустим что он определен
внизу файла <i>MainActivity</i>.

00:00:33.830 --> 00:00:37.020
Устройство Android выполнит
все эти команды от верха до низа

00:00:37.020 --> 00:00:41.270
алгоритма, а потом вернется
в алгоритм <i>submitOrder</i>.

00:00:41.270 --> 00:00:44.340
И продолжит выполнение этих команд
пока не доберется до конца

00:00:44.340 --> 00:00:45.268
алгоритма.

00:00:45.268 --> 00:00:47.240
При вызове алгоритма <i>calculatePrice</i>,

00:00:47.240 --> 00:00:49.510
мы передаем множество
исходных так что

00:00:49.510 --> 00:00:53.620
при выполнении этих строк кода
мы можем ипользовать эти исходные.

00:00:53.620 --> 00:00:55.070
В рзуьтате этого алгоритма

00:00:55.070 --> 00:00:58.940
мы передаем одно значение
на выходе в вызывающую функцию.

00:00:58.940 --> 00:01:03.030
Так значение на выходе можно исполь-
зовать со следующей строки кода.

00:01:03.030 --> 00:01:07.090
В Java, мы называем исходные для
алгоритма исходными параметрами и

00:01:07.090 --> 00:01:09.520
их может быть 0 или больше.

00:01:10.550 --> 00:01:13.370
В Java, мы называем данные на
выходе значением на выходе,

00:01:13.370 --> 00:01:16.470
и их тоже может быть 0 или больше.

00:01:16.470 --> 00:01:20.420
Пример исходного параметра -
это <i>quantity</i>, которое передается

00:01:20.420 --> 00:01:22.840
в алгоритм <i>calculatePrice</i>.

00:01:22.840 --> 00:01:26.957
Так алгоритм может использовать
<i>quantity</i> для определения общей цены

00:01:26.957 --> 00:01:28.130
заказа целиком.

00:01:28.130 --> 00:01:31.350
Потом, мы можем передать общую цену
назад в качестве значения на выходе.

00:01:31.350 --> 00:01:34.046
И в алгоритме submitOrder вот здесь,

00:01:34.046 --> 00:01:38.253
мы можем использовать общую цену
для других операций - для показа

00:01:38.253 --> 00:01:40.930
на экране, создания чека и так далее.

00:01:40.930 --> 00:01:43.730
Подытожим - здесь мы определяем
алгоритм <i>calculatePrice</i>, а

00:01:43.730 --> 00:01:45.400
здесь мы его вызываем.

00:01:45.400 --> 00:01:49.490
Нам надо создать алгоритм
определения цены заказа кофе.

00:01:49.490 --> 00:01:53.410
Сейчас мы подсчитываем цену
в алгоритме <i>submitOrder</i>, но

00:01:53.410 --> 00:01:57.020
логика подсчета цены будет
немного более сложной.

00:01:57.020 --> 00:01:59.030
Поэтому, давайте создадим
отдельный алгоритм.

00:01:59.030 --> 00:02:01.948
И вызовем его столько раз,
сколько нужно без копирования

00:02:01.948 --> 00:02:04.080
кода везде.

00:02:04.080 --> 00:02:07.730
По мере получения опыта в разработке
на Android вы будете лучше понимать

00:02:07.730 --> 00:02:11.850
когда создавать надо новый
алгоритм и когда не надо.

00:02:11.850 --> 00:02:14.690
Это придет с опытом и временем.

00:02:14.690 --> 00:02:17.640
А сейчас мы в первый раз создадим

00:02:17.640 --> 00:02:20.800
новый алгоритм в <i>MainActivity</i>
самостоятельно.

00:02:20.800 --> 00:02:24.575
Вместо того чтобы писать код
с нуля мы начнем с понимания

00:02:24.575 --> 00:02:28.460
кусков кода чтобы определить
какой алгоритм нам подходит.

00:02:28.460 --> 00:02:31.700
В заметках мы предоставим
вам на выбор три варианта.

00:02:31.700 --> 00:02:35.830
Просмотри те эти три фрагмента
и определите какой

00:02:35.830 --> 00:02:40.330
из них верно внедряет алгоритм
вычисления цены заказа.

00:02:40.330 --> 00:02:42.330
Когда вы пройдете
по ссылке в заметках,

00:02:42.330 --> 00:02:46.850
вы увидите что есть код
для варианта А, В и С.

00:02:48.380 --> 00:02:49.290
Цель в том

00:02:49.290 --> 00:02:53.360
чтобы вы научились
читать незнакомый код.

00:02:53.360 --> 00:02:57.370
Мы еще не изучили все правила
составления правильного алгоритма но

00:02:57.370 --> 00:03:01.169
я хочу чтобы вы догадались
какой из вариантов правильный.

00:03:02.630 --> 00:03:05.091
Советую вам использовать
поиск Google для

00:03:05.091 --> 00:03:09.140
информации об определении
алгоритмов Java.

00:03:09.140 --> 00:03:11.450
Среди разных результатов
поиска вы найдете

00:03:11.450 --> 00:03:15.100
информациюиз справочника,
которую вы не поймете.

00:03:15.100 --> 00:03:18.290
Но яхочу чтобы не пугались того
что не понимаете все на этих

00:03:18.290 --> 00:03:21.950
страницыах, потому что это
нормально - понимать не все.

00:03:21.950 --> 00:03:25.780
Все что вам нужно - взять
из статей то что вы понимаете и

00:03:25.780 --> 00:03:28.030
что вы считаете относится
к вашей проблеме.

00:03:29.140 --> 00:03:30.610
Итак - прочитайте код для этих

00:03:30.610 --> 00:03:34.260
трех вариантов, поищите
информацию онлайн и решите

00:03:34.260 --> 00:03:37.627
как правильно назначить
алгоритм <i>calculatePrice</i>.

