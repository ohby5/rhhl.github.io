WEBVTT
Kind: captions
Language: es

00:00:00.079 --> 00:00:02.207
Te guiaré a través
de un ejemplo de un método

00:00:02.207 --> 00:00:04.750
con una cantidad diferente
de parámetros de entrada.

00:00:04.750 --> 00:00:07.205
Empecé creando una nueva aplicación

00:00:07.206 --> 00:00:09.660
con el asistente de proyectos
de <i>Android Studio</i>,

00:00:09.660 --> 00:00:12.646
así que no está relacionado
con la aplicación <i>Just Java</i>.

00:00:12.647 --> 00:00:15.460
Añadí este método
en la <i>MainActivity</i>.

00:00:15.460 --> 00:00:17.420
Se llama <i>createWeatherMessage</i>.

00:00:17.420 --> 00:00:21.158
No hay parámetros de entrada,
y el valor de retorno es un <i>string</i>.

00:00:21.158 --> 00:00:24.403
La intención de este método es crear
un nuevo mensaje que especifique

00:00:24.403 --> 00:00:26.340
el nombre de la ciudad y la temperatura.

00:00:26.340 --> 00:00:29.590
Se puede pensar en un método
como una plantilla de instrucciones.

00:00:29.590 --> 00:00:32.810
Entonces puedo hacer que la temperatura
sea un parámetro de entrada.

00:00:33.550 --> 00:00:36.650
Y es un número, así que pondré
<i>int temperature</i>.

00:00:36.650 --> 00:00:40.990
Y entonces puedo usar esto aquí.

00:00:40.990 --> 00:00:43.540
Así, esto es un literal <i>string</i>,

00:00:43.540 --> 00:00:46.150
y se concatena con el número entero
de la temperatura.

00:00:46.150 --> 00:00:51.090
Y luego se concatena con otro <i>string</i>
que dice grados Fahrenheit.

00:00:51.090 --> 00:00:54.620
Ahora el mensaje se puede personalizar
en base a la temperatura

00:00:54.620 --> 00:00:56.259
ya que es un parámetro de entrada.

00:00:56.267 --> 00:00:57.918
Olvidé mencionar esto antes,

00:00:57.919 --> 00:01:00.687
pero en el método <i>onCreate</i>
de la <i>MainActivity</i>,

00:01:00.688 --> 00:01:03.198
que se llama cuando se crea la actividad,

00:01:03.198 --> 00:01:05.670
puedo llamar al <i>createWeatherMessage</i>.

00:01:05.670 --> 00:01:10.040
Antes no pasé ningún argumento,
pero ahora requiere un parámetro.

00:01:10.040 --> 00:01:14.630
Así que pasaré 77 para la temperatura.

00:01:14.630 --> 00:01:18.990
Esto hace que el error desaparezca,
y esta llamada al método es correcta.

00:01:18.990 --> 00:01:22.360
La otra cosa que debo modificar
es este comentario sobre el método.

00:01:22.650 --> 00:01:24.226
Agregaré una línea en blanco,

00:01:24.227 --> 00:01:28.591
y luego describiré el parámetro de entrada
que es la temperatura aquí.

00:01:29.131 --> 00:01:32.735
Escribiré <i>@param temperature</i>, y luego
agregaré una descripción que diga

00:01:32.735 --> 00:01:34.726
que esta es la temperatura de la ciudad.

00:01:35.345 --> 00:01:38.555
A veces los nombres de parámetros
son un poco difícil de entender,

00:01:38.555 --> 00:01:40.592
por eso la descripción es útil.

00:01:41.232 --> 00:01:43.442
Otras veces si tu método es público

00:01:43.443 --> 00:01:46.132
otras personas podrán llamar
a este método,

00:01:46.132 --> 00:01:49.352
y puede ser que no conozcan
las instrucciones dentro de este método.

00:01:49.352 --> 00:01:50.642
Entonces leer este <i>java doc</i>

00:01:50.642 --> 00:01:53.698
y la descripción de los parámetros
es realmente útil para ellos.

00:01:54.220 --> 00:01:57.242
Mencioné antes que un método
es como una plantilla.

00:01:57.242 --> 00:01:59.677
Entonces, ¿qué pasa
si queremos cambiar la ciudad

00:01:59.678 --> 00:02:01.551
para que no sea siempre San Francisco?

00:02:01.817 --> 00:02:04.360
Puedo hacer que la ciudad
sea un parámetro de entrada.

00:02:04.360 --> 00:02:06.610
Entonces puedo simplemente
añadir una coma aquí,

00:02:06.610 --> 00:02:10.889
y como el nombre de la ciudad es un texto
haré que el tipo de dato sea <i>string</i>.

00:02:10.889 --> 00:02:15.740
Entonces puedo eliminar "San Francisco"
y reemplazarlo con una variable <i>cityName</i>.

00:02:16.870 --> 00:02:20.453
Recuerda agregar un espacio
antes y después de aquí también.

00:02:21.390 --> 00:02:25.238
Genial, ahora este método
puede crear un mensaje personalizable

00:02:25.239 --> 00:02:27.429
para determinada ciudad y temperatura.

00:02:28.001 --> 00:02:30.430
También recordé modificar el <i>java doc</i>

00:02:30.430 --> 00:02:33.191
para agregar este parámetro
y la descripción

00:02:33.192 --> 00:02:34.533
para <i>"cityname".</i>

00:02:35.140 --> 00:02:39.100
Como cambié la firma del método,
ahora tengo un error aquí.

00:02:39.100 --> 00:02:41.850
El método ya no funciona
con un solo argumento.

00:02:41.850 --> 00:02:44.130
Tengo que pasar dos argumentos.

00:02:44.130 --> 00:02:48.720
Así que añado una coma y luego paso
el <i>string</i> San Francisco.

00:02:49.374 --> 00:02:51.130
Ahora el error desaparece.

00:02:51.130 --> 00:02:53.215
Así que cuando llamo a
<i>createWeatherMessage</i>,

00:02:53.216 --> 00:02:56.140
el valor de <i>temperature</i> será 77,

00:02:56.140 --> 00:02:58.300
y San Francisco será el valor de <i>cityName</i>

00:02:59.390 --> 00:03:01.783
Y creará el <i>string</i> adecuado aquí

00:03:03.813 --> 00:03:06.874
Ahora volvemos al método <i>calculatePrice</i>,

00:03:06.874 --> 00:03:09.480
y modificaremos la firma del método

00:03:09.480 --> 00:03:13.230
para que tenga un diferente
número de parámetros de entrada

00:03:13.230 --> 00:03:16.178
Lo definiremos con cero
parámetros de entrada,

00:03:17.678 --> 00:03:19.250
un parámetro de entrada,

00:03:20.028 --> 00:03:22.425
y por último,
con dos parámetros de entrada.

00:03:23.350 --> 00:03:25.688
Verás cómo cambiar la firma del método

00:03:25.688 --> 00:03:28.271
para tener un diferente número
de parámetros de entrada

00:03:28.271 --> 00:03:30.336
afectará la forma
en que se llama al método.

00:03:30.336 --> 00:03:32.190
Normalmente al construir tu aplicación,

00:03:32.190 --> 00:03:34.143
la defines de una manera

00:03:34.144 --> 00:03:36.280
con cierto número
de parámetros de entrada.

00:03:36.280 --> 00:03:39.500
Por lo general, ese número
de parámetros de entrada será determinado

00:03:39.500 --> 00:03:42.320
con base en lo que sucede
dentro del método.

00:03:42.320 --> 00:03:45.200
La mejor práctica es pasar
solo parámetros de entrada

00:03:45.200 --> 00:03:47.888
que en realidad se van a necesitar
dentro de este método.

00:03:47.888 --> 00:03:51.631
No tiene sentido pasar más información
si no vas a usarla aquí dentro.

00:03:51.945 --> 00:03:54.064
Aquí están las instrucciones
para esta tarea.

00:03:54.640 --> 00:03:58.468
Primero define el método <i>calculatePrice</i>
en tu aplicación en la <i>MainActivity</i>.

00:03:58.468 --> 00:03:59.889
Mira las notas del instructor

00:03:59.897 --> 00:04:02.323
para obtener un fragmento de código
con que empezar.

00:04:02.323 --> 00:04:04.213
Modificaremos el método <i>calculatePrice</i>

00:04:04.213 --> 00:04:06.690
para que solo tenga
un parámetro de entrada.

00:04:06.690 --> 00:04:09.970
Luego, en el método <i>submitOrder</i>
llama a <i>calculatePrice</i>

00:04:09.970 --> 00:04:12.230
y pasa <i>quantity</i> como entrada.

00:04:12.230 --> 00:04:14.523
Luego, intenta modificar
el método <i>calculatePrice</i>

00:04:14.524 --> 00:04:16.500
para que tenga dos parámetros de entrada.

00:04:16.500 --> 00:04:21.714
De esta forma en el método <i>submitOrder</i>
llamarás <i>calculatePrice</i> con <i>quantity</i>

00:04:21.714 --> 00:04:26.093
y puedes pasar el precio
que podría ser de $10 por ejemplo.

00:04:26.093 --> 00:04:31.020
Y, por último, cambia <i>calculatePrice</i>
para que no tenga parámetros de entrada.

00:04:31.020 --> 00:04:32.898
De esta forma en el método <i>submitOrder</i>

00:04:32.899 --> 00:04:35.100
simplemente llamarás a <i>calculatePrice</i> así.

00:04:35.658 --> 00:04:39.101
Vamos a hacer la primera juntos
para que entiendas lo que quiero decir.

00:04:39.102 --> 00:04:41.729
Abriré el enlace
de las notas del instructor.

00:04:42.420 --> 00:04:46.080
En esta esencia proporcionamos código
para el método <i>calculatePrice</i>.

00:04:46.080 --> 00:04:49.838
Así que sigue adelante,
selecciona todo y luego cópialo.

00:04:50.480 --> 00:04:53.160
En <i>Android Studio</i>,
voy a pegar este método.

00:04:53.160 --> 00:04:56.285
Voy a pegarlo justo debajo de <i>submitOrder</i>

00:04:56.286 --> 00:04:59.076
y me aseguraré
de que haya una línea en blanco

00:04:59.077 --> 00:05:01.370
entre cada método aquí.

00:05:01.370 --> 00:05:03.206
Eso hace que sea más fácil de leer.

00:05:03.650 --> 00:05:07.140
Luego puedo llamar a este método
desde el método <i>submitOrder</i>.

00:05:07.140 --> 00:05:09.891
Voy a insertar la llamada
en la parte inferior del método.

00:05:09.897 --> 00:05:12.477
Más tarde vamos a integrarlo
con el código aquí arriba.

00:05:12.478 --> 00:05:14.271
Pero por ahora, esto es bueno.

00:05:14.644 --> 00:05:17.484
Vaya, olvidé que tenemos
un parámetro de entrada,

00:05:17.485 --> 00:05:19.509
así que necesito pasar una cantidad.

00:05:20.731 --> 00:05:23.579
Ahora haz lo mismo
para las dos tareas restantes

00:05:23.580 --> 00:05:25.826
modificando los parámetros
de entrada aquí.

00:05:26.850 --> 00:05:29.949
Para completar esta tarea,
si necesitas ejemplos de referencia,

00:05:29.949 --> 00:05:32.791
siempre puedes hacer
una búsqueda en Google de métodos Java.

