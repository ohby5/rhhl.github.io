WEBVTT
Kind: captions
Language: ko

00:00:00.270 --> 00:00:01.540
1번을 살펴봅시다.

00:00:04.470 --> 00:00:06.700
스튜디오에 붙여 넣을 것입니다.

00:00:06.700 --> 00:00:09.060
어떠한 종류의 오류가 나오는지를 
보여드릴 것입니다.

00:00:09.060 --> 00:00:12.090
이 문제를 해결하고자 할 때, 안드로이드 
스튜디오를 사용할 필요는 없습니다.

00:00:12.090 --> 00:00:14.510
단지 이곳의 코드 확인을 통해서 
해결이 가능합니다.

00:00:14.510 --> 00:00:16.280
그리고 답을 적으시면 됩니다.

00:00:16.280 --> 00:00:19.520
안드로이드 스튜디오의 사용은 아무
관련이 없습니다.

00:00:19.520 --> 00:00:22.260
코드가 작동하도록 하기 위해, 
새로운 프로젝트를 만들고

00:00:22.260 --> 00:00:25.270
[activity]
[main layout]을 변경하였습니다.

00:00:25.270 --> 00:00:30.080
따라서 우리가 참조하고자 하는 이들 
ID들을 가진 많은 뷰를 갖게 됩니다.

00:00:30.080 --> 00:00:31.780
이 레이아웃이 어떻게 될지는 잘 
모르겠습니다. 하지만

00:00:31.780 --> 00:00:36.060
해당 뷰 ID 명칭들과 함께 뷰들을 
이곳에 두고자 합니다.

00:00:36.060 --> 00:00:38.210
이 같은 방식으로 나의 코드는 
실행될 것입니다.

00:00:38.210 --> 00:00:42.570
1번에 대해, 코드를 이곳에 붙여 
넣고 오류를 살펴보았습니다.

00:00:42.570 --> 00:00:46.270
안드로이드 스튜디오는 [method] 
[setText]를 해결할 수 없음을 나타냅니다.

00:00:46.270 --> 00:00:47.780
[setText]가

00:00:47.780 --> 00:00:51.510
[TextView] [method]임을 언급한 
지난 영상을 기억하십니까?

00:00:51.510 --> 00:00:55.100
이는 [TextView] 객체에 이 [method]만을 
호출할 수 있다는 것을 의미합니다.

00:00:55.100 --> 00:00:57.920
이 같은 경우, 
이것을 [nameTextView]에 호출합니다.

00:00:57.920 --> 00:01:00.705
[nameTextView]는 뷰 객체로 
규정됩니다.

00:01:00.705 --> 00:01:04.057
이를 [TextView] 객체로 변경하여야 
합니다.

00:01:05.990 --> 00:01:08.942
잘못된 유형이 있음을 
나타내는 오류가 발생되었습니다.

00:01:08.942 --> 00:01:12.390
유형의 객체인 [TextView]가 
필요합니다. 하지만 [type view]의

00:01:12.390 --> 00:01:15.700
객체를 검색하였습니다.

00:01:15.700 --> 00:01:18.570
이로 인해 뷰를 반환하는 ID를 통해 
뷰를 검색하고 이 좌측은

00:01:18.570 --> 00:01:21.950
[TextView]를 필요로 합니다.

00:01:21.950 --> 00:01:24.860
이것은 [findViewById]에 의해

00:01:24.860 --> 00:01:28.730
[TextView]로 반환된 뷰의 캐스팅을 
추가하여야 함을 의미합니다.

00:01:28.730 --> 00:01:30.800
그리고 [nameTextView]인

00:01:30.800 --> 00:01:35.090
이 모든 것을 좌측 변수에 저장할 수 
있습니다.

00:01:35.090 --> 00:01:40.760
이제 오류가 사라지고 "Laura"라는 
문자를 이 [TextView]에 설정할 수 있습니다.

00:01:40.760 --> 00:01:44.510
오류는 1행에 발생하였습니다. 따라서 
정확한 코드를 이곳에 적었습니다.

00:01:44.510 --> 00:01:49.540
전반적인 설명은 이 뷰를 [TextView]로 
캐스팅 하는 것이 필요하고 이를

00:01:49.540 --> 00:01:53.050
[nameTextView] 변수 내부에 저장하는 
것입니다.

00:01:53.050 --> 00:01:56.340
이 같은 방식으로, 이곳의 코드 행 옆에 
[TextView] [method]인

00:01:56.340 --> 00:01:59.850
[nameTextView.setText]를 호출할 수 
있습니다.

00:01:59.850 --> 00:02:00.830
2번으로 넘어가 봅시다.

00:02:00.830 --> 00:02:03.290
이 코드를 복사하여 안드로이드 
스튜디오 붙여 넣을 것입니다.

00:02:04.540 --> 00:02:06.590
여기에 제가 붙여 넣은 코드가 있습니다.

00:02:06.590 --> 00:02:09.620
첫 코드 행은 정확한 것 같습니다.
오류가 없습니다.

00:02:09.620 --> 00:02:11.550
하지만 두 번째 행은 붉은 색 밑줄이 
있습니다. 그리고

00:02:11.550 --> 00:02:14.420
잘못된 유형의 오류가 있음을 
나타냅니다.

00:02:14.420 --> 00:02:17.990
문자열이 요구됨을 나타냅니다.
하지만, 대신 [int]를 검색하였습니다.

00:02:17.990 --> 00:02:19.290
이를 더 잘 이해하기 위해, [TextView]

00:02:19.290 --> 00:02:24.250
문서 내부에 있는 [method] 
[getMaxLines]를 살펴보도록 합니다.

00:02:24.250 --> 00:02:26.580
[TextView] 문서에서, 
[getMaxLines] [method]를 검색할

00:02:26.580 --> 00:02:28.650
것입니다.

00:02:28.650 --> 00:02:29.770
여기 있네요.

00:02:29.770 --> 00:02:31.120
입력 파라미터는 없고

00:02:31.120 --> 00:02:33.520
이 [method]의 반환 값은
정수입니다.

00:02:34.758 --> 00:02:38.194
안드로이드 스튜디오는 이 
[method]로 인해 문제를

00:02:38.194 --> 00:02:39.911
제기하였습니다. 이것은 정수를

00:02:39.911 --> 00:02:42.700
반환하였고 우리는 이를 문자열 
변수에 저장하려고 하였습니다.

00:02:42.700 --> 00:02:47.870
따라서, 이 변수의 데이터 유형을 
[int]로 변경해야 합니다.

00:02:47.870 --> 00:02:49.470
오류가 사라졌습니다.

00:02:49.470 --> 00:02:52.620
따라서 이 [method]의 반환 값은 
정수입니다.

00:02:52.620 --> 00:02:56.060
이제 이것을 이 [maxLines] 변수에 
저장할 수 있습니다.

00:02:56.060 --> 00:02:57.870
경고가 사라지지 않았습니다.

00:02:57.870 --> 00:03:00.870
변수 [maxLines]을 사용할 수 없다고 
나타냅니다.

00:03:00.870 --> 00:03:02.260
하지만 이것은 단지 코드 정보입니다.

00:03:02.260 --> 00:03:04.760
일반적인 앱에서는 
나중에 실질적으로 이 변수를

00:03:04.760 --> 00:03:06.740
사용할 것으로 
생각합니다.

00:03:07.800 --> 00:03:11.380
따라서 2행과 이곳의 오류는 
업데이트 된 코드입니다.

00:03:11.380 --> 00:03:14.340
이에 관한 전반적인 설명은 
이 [method]의 반환 값이

00:03:14.340 --> 00:03:15.480
정수여야 한다는 것입니다.

00:03:15.480 --> 00:03:16.620
3번으로 넘어가 봅시다.

00:03:17.980 --> 00:03:19.830
이곳에 3번에 대한 코드가 있습니다.

00:03:19.830 --> 00:03:22.960
안드로이드 스튜디오의 3번에 대한 
코드를 복사하고 붙여 넣었습니다.

00:03:22.960 --> 00:03:25.812
잘못된 유형이라는 오류 메시지가 
발생되었습니다.

00:03:25.812 --> 00:03:29.400
[ImageView]가 요구되었습니다.
하지만 대신 뷰를 검색하였습니다.

00:03:29.400 --> 00:03:32.740
이는 우리가 [TextView]에서 
발견하였던 오류와 비슷합니다.

00:03:32.740 --> 00:03:34.960
이 [method]는 뷰를 반환합니다.

00:03:34.960 --> 00:03:38.270
좌측 면에서 [ImageView]에 이를 
저장하려고 합니다.

00:03:38.270 --> 00:03:42.370
이 뷰 객체를 [ImageView]로 캐스팅 
해야 합니다.

00:03:42.370 --> 00:03:47.330
ID 아이콘을 가진 뷰가 [ImageView] 
이기 때문에 유효합니다.

00:03:47.330 --> 00:03:49.630
따라서 이것을 [image view]로 캐스팅 
하는데 문제가 없습니다.

00:03:49.630 --> 00:03:52.560
이제 우측 면은
[ImageView]를 평가합니다.

00:03:52.560 --> 00:03:55.700
이를 좌측의 변수에 저장할 수 
있습니다.

00:03:55.700 --> 00:03:59.770
이 변수는 데이터 유형 [ImageView]를 
갖습니다. 자 이제 모든 것이 일치하고

00:03:59.770 --> 00:04:01.430
오류는 사라졌습니다.

00:04:01.430 --> 00:04:04.640
다음 부분에서, [ImageView] 
[method], [SetImageResource]를

00:04:04.640 --> 00:04:09.180
이 [IconImageView] 객체에 호출할 수 
있습니다.

00:04:09.180 --> 00:04:12.830
상징 로고를 처리할 수 없다는 오류가 
하나 남아있습니다.

00:04:12.830 --> 00:04:17.310
이로 인해 명칭에 대한 로고를 가진 
앱의 이미지를 추가하지 않았습니다.

00:04:17.310 --> 00:04:21.410
추가하였다면, 오류가 사라질 것입니다.
그리고 이곳의 코드는 문제가 없습니다.

00:04:21.410 --> 00:04:25.400
여기 이 뷰를 [ImageView]로 캐스팅 
한 정확한 코드가 있습니다.

00:04:25.400 --> 00:04:27.330
마지막으로, 4번입니다.

00:04:27.330 --> 00:04:32.080
안드로이드 스튜디오에서 이곳에 코드를
붙여 넣었고 놀랍게도 오류가 없습니다.

00:04:32.080 --> 00:04:35.960
코드는 id 명을 가진 뷰를 검색하고 
뷰를 반환하려고 합니다.

00:04:35.960 --> 00:04:41.150
그리고 이는 [TextView]인 이 변수에 
저장됩니다.

00:04:41.150 --> 00:04:43.900
[TextView]는 뷰의 데이터 유형을 갖고

00:04:43.900 --> 00:04:47.940
이는 우측 면과 일치합니다.
따라서 이 전체 코드 행은 정확합니다.

00:04:47.940 --> 00:04:51.410
다음 행에서, 우리는
[View]인 이 객체를 가질 것입니다.

00:04:51.410 --> 00:04:54.410
그리고 여기에 [setVisibility] 
[method]를 호출할 것입니다.

00:04:54.410 --> 00:04:58.763
[method]는 [View.GONE]인 하나의 
입력 파라미터를 갖습니다.

00:04:58.763 --> 00:05:02.790
왜 이것을 갖는지를 알아보기 위해 
문서를 확인해 볼 수 있습니다.

00:05:02.790 --> 00:05:06.050
뷰 클래스에 대한 문서에서, 
[method] [setVisibility]를 검색할 수

00:05:06.050 --> 00:05:08.400
있습니다.

00:05:08.400 --> 00:05:11.970
[setVisibility]가 뷰 클래스 내에 있는 
[method]임을 확인할 수 있습니다.

00:05:11.970 --> 00:05:16.310
이것은 선명도를 나타내는 정수인 이 
입력 내용을 갖습니다.

00:05:16.310 --> 00:05:21.175
가능한 선명도 값들은 
[VISIBLE], [INVISIBLE], [GONE]입니다.

00:05:21.175 --> 00:05:24.490
뷰 클래스 내의 [setVisibility]가 
[method]이기 때문에

00:05:24.490 --> 00:05:26.320
이것은 이곳에서 유효한 호출입니다.

00:05:26.320 --> 00:05:29.280
우리가 호출한 [method]가 뷰 
클래스의 [method]이기 때문에 이를

00:05:29.280 --> 00:05:33.200
[TextView]로 캐스팅 할 필요가 
없습니다.

00:05:33.200 --> 00:05:36.010
이제 [TextView] [method]를 
사용하려고 했다면

00:05:36.010 --> 00:05:38.860
이것을 [TextView]로 캐스팅 했어야 
할 것입니다.

00:05:38.860 --> 00:05:41.600
이 문제에 대해, [setVisibility]은 [View] 
[method] 이기 때문에 오류가

00:05:41.600 --> 00:05:45.930
발생되지 않고 이것을 [View] 
객체로 두는 것은 문제가 없습니다.

00:05:45.930 --> 00:05:47.480
이것은 참 어려운 문제입니다.

00:05:47.480 --> 00:05:48.860
완전히 이해하지 못하여도 
괜찮습니다.

00:05:48.860 --> 00:05:52.080
다음 시험에서, 이에 관해 연습할 
기회가 더 있습니다.

