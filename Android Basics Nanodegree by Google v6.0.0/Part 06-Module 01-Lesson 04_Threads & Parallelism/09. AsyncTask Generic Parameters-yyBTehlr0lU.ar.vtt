WEBVTT
Kind: captions
Language: ar

00:00:00.200 --> 00:00:02.967
‫AsyncTask لها 3 باراميترات عامة..

00:00:03.167 --> 00:00:06.034
‫وهي params وprogress وresult

00:00:07.267 --> 00:00:10.300
‫وتستغل AsyncTask هذه العوام..

00:00:10.367 --> 00:00:13.667
‫كمالئات فراغ لأنواع البيانات الفعلية
‫التي نريد استخدامها

00:00:14.334 --> 00:00:19.235
‫ترى توقيع الوظائف يشير إلى أنواع
‫بيانات مالئة param وprogress وresult

00:00:19.534 --> 00:00:22.402
‫عندما نُفرع من الفئة AsyncTask
‫في تطبيقنا..

00:00:22.634 --> 00:00:26.667
‫يمكننا استبدال مالئات الفراغ بأنواع
‫البيانات التي نريد استخدامها

00:00:26.801 --> 00:00:30.101
‫مثل string أو earthquake
‫أو أنواع كائنات أخرى

00:00:30.467 --> 00:00:35.734
‫سأشرح الغرض من كل باراميتر عام
‫في مقتطف الكود أدناه

00:00:36.634 --> 00:00:40.868
‫فئة DownloadFilesTask تهدف
‫إلى أخذ رابط أو أكثر..

00:00:41.200 --> 00:00:44.400
‫وتحميل كل منهم،
‫بينما تعرض التقدم أثناء ذلك

00:00:44.701 --> 00:00:49.701
‫وأخيراً ترجع حجم ما تم تنزيله
‫من ملفات بوحدة البايت

00:00:50.534 --> 00:00:53.768
‫ما أن تُعرف هذه الفئة،
‫يمكننا استدعاء الدالة الإنشائية..

00:00:53.868 --> 00:00:57.068
‫لإنشاء نسخة كائن DownloadFilesTask

00:00:57.601 --> 00:01:00.768
‫ثم يمكننا تنفيذ المهمة فوراً..

00:01:00.934 --> 00:01:04.701
‫ونمرر أي عدد من روابط الملفات
‫التي نريد جلبها

00:01:05.300 --> 00:01:09.367
‫هنا نمرر ثلاثة
‫url1 وurl2 وurl3

00:01:09.767 --> 00:01:12.834
‫لنلقي نظرة أقرب على تعريف الفئة

00:01:13.033 --> 00:01:16.100
‫وهي فئة فرعية تُمدد AsyncTask

00:01:16.734 --> 00:01:21.801
‫لاحظ أن اسم AsyncTask يتبعه
‫أسماء 3 فئات أخرى بين أقواس مثنية

00:01:22.400 --> 00:01:24.767
‫أول نوع عام هو Params

00:01:24.868 --> 00:01:28.702
‫وهو نوع البيانات المرسل
‫إلى المهمة الخلفية

00:01:29.868 --> 00:01:31.102
‫في مقتطف الكود..

00:01:31.234 --> 00:01:33.367
‫فإن url هو نوع بيانات params

00:01:33.834 --> 00:01:38.234
‫هذا يعني أن وظيفة doInBackground
‫ستقبل قائمة مدخلات URL

00:01:38.701 --> 00:01:41.734
‫لم نر هذا التعبير ثلاثي النقاط بعد

00:01:42.000 --> 00:01:45.901
‫لكن كل ما يعنيه هو عدد متغير
‫من الوسطاء يمكننا وضعها هنا

00:01:46.601 --> 00:01:48.768
‫وهو ما يسمى عادة VarArgs
‫أو (وسطاء متغيرون)

00:01:48.868 --> 00:01:53.901
‫أي عدد من الدخلات مقبول طالما أنهم من
‫نفس نوع البيانات، وهو في هذه الحالة url

00:01:54.767 --> 00:01:57.834
‫هذا يعني أنه يمكنك تنفيذ
‫المهمة برابط واحد..

00:01:57.968 --> 00:02:01.936
‫أو اثنان أو أكثر اعتماداً على عدد
‫الملفات التي تريد تحميلها

00:02:02.367 --> 00:02:04.235
‫نعود إلى وظيفة doInBackground..

00:02:04.334 --> 00:02:08.401
‫وسطاء المدخل تخزن في
‫مصفوفة متغير تسمى urls

00:02:08.934 --> 00:02:12.601
‫يمكننا فحص طول مصفوفة
‫urls باستخدام urls.length

00:02:13.067 --> 00:02:17.668
‫ثم يمكننا الوصول لكل عنصر في المصفوفة
‫باستخدام الأقواس المربعة التي ألفناها

00:02:17.968 --> 00:02:22.335
‫يمنحنا URL وصولاً للعنصر الصفري
‫من المصفوفة وهكذا دواليك

00:02:22.868 --> 00:02:28.102
‫في هذا المثال نستخدم حلقة for
‫للتكرار عبر كل عنصر في مصفوفة الروابط

00:02:28.267 --> 00:02:31.367
‫ثم ننزل الملف بالفعل باستخدام فئة
‫Downloader

00:02:32.200 --> 00:02:35.367
‫كما نترك عداداً عاملاً
‫يحصي حجم كل الملفات

00:02:35.667 --> 00:02:37.734
‫في متغير العدد الصحيح totalSize

00:02:38.467 --> 00:02:42.268
‫تذكر أن doInBackground تحدث بعيداً
‫عن خيط واجهة المستخدم

00:02:42.501 --> 00:02:46.834
‫لذا ستبقى واجهة المستخدم مستجيبة
‫حتى لو استغرق تحميل الملفات وقتاً

00:02:47.868 --> 00:02:50.402
‫الباراميتر العام الثاني هو Progress

00:02:50.467 --> 00:02:55.034
‫وهو نوع البيانات المستخدم لقياس
‫التقدم في العمل المنجز في الخلفية

00:02:56.133 --> 00:02:57.667
‫في DownloadFilesTask..

00:02:57.801 --> 00:03:02.435
‫فإننا ننشر دورياً تحديثات ونحدث على
‫إثرها واجهة المستخدم بالنسبة المنجزة

00:03:02.868 --> 00:03:05.602
‫لنفعل هذا، نحدد (عدد صحيح)

00:03:05.801 --> 00:03:07.769
‫كباراميتر التقدم

00:03:08.200 --> 00:03:11.734
‫هذا يعني أننا نستدعي publishProgress
‫بقيمة عدد صحيح..

00:03:11.968 --> 00:03:14.168
‫بينما يجري العمل في الخلفية

00:03:14.701 --> 00:03:17.602
‫ثم وفي وظيفة onProgressUpdate..

00:03:17.734 --> 00:03:19.602
‫والتي يستدعيها الخيط الرئيسي..

00:03:19.701 --> 00:03:23.968
‫نتلقى تلك القيمة العددية الصحيحة
‫ويمكننا تعديل واجهة المستخدم

00:03:24.534 --> 00:03:29.035
‫مجدداً نرى التعبير ثلاثي النقاط
‫يتبع نوع بيانات المدخل هنا

00:03:29.634 --> 00:03:33.268
‫بمعنى أنه يمكننا قبول عدد متغير
‫من وسطاء المدخلات

00:03:33.968 --> 00:03:38.001
‫إذا استدعيت publishProgress
‫من خيط الخلفية بقيمتين..

00:03:38.367 --> 00:03:41.901
‫فستجد مدخلين في onProgressUpdate

00:03:42.367 --> 00:03:45.767
‫هذه الخاصية مفيدة
‫إذا كنت تنزل عدة ملفات..

00:03:45.801 --> 00:03:49.868
‫في الوقت نفسه، وتريد عرض
‫قيمة تقدم مستقلة لكل ملف

00:03:50.434 --> 00:03:52.634
‫شبيه بمدخلات url أعلاه..

00:03:52.801 --> 00:03:54.735
‫فإن متغير التقدم مصفوفة

00:03:55.033 --> 00:04:00.033
‫يمكننا الوصول إلى قيمة التقدم باستخدام
‫الأقواس المربعة مع مؤشر الموضع

00:04:00.300 --> 00:04:02.268
‫مثل
‫[0]progress

00:04:02.834 --> 00:04:06.101
‫ثم يمكننا تحديث واجهة
‫المستخدم بقيمة التقدم

00:04:06.968 --> 00:04:09.302
‫شبيه بمدخلات URL أعلاه..

00:04:09.501 --> 00:04:11.501
‫فإن متغير التقدم مصفوفة

00:04:12.400 --> 00:04:16.767
‫يمكننا الوصول إلى قيمة التقدم باستخدام
‫الأقواس المربعة مع مؤشر الموضع

00:04:16.868 --> 00:04:18.435
‫مثل
‫[0]progress

00:04:19.267 --> 00:04:22.235
‫ثم يمكننا تحديث واجهة
‫المستخدم بقيمة التقدم

00:04:23.834 --> 00:04:28.301
‫والآن بلغنا ثالث وآخر نوع بيانات عام
‫والمسمى result

00:04:29.200 --> 00:04:33.667
‫النتيجة result هي نوع بيانات قيمة
‫الإرجاع من وظيفة doInBackground

00:04:34.067 --> 00:04:37.868
‫يمكنك أن تنظر إليها كنوع بيانات
‫الإرجاع من عمل الخلفية

00:04:39.267 --> 00:04:43.467
‫في هذه الحالة فإننا نرجع totalSize
‫عند تنزيل كافة الملفات

00:04:43.901 --> 00:04:48.968
‫توقيع وظيفة doInBackground
‫يحدد Long كنوع بيانات المُرتجع

00:04:49.200 --> 00:04:52.168
‫لاحظ أن Long تكتب بحرف L كبير

00:04:52.567 --> 00:04:57.368
‫في الماضي رأينا أن Long هو أحد
‫أنواع بيانات جافا الأولية، مثل int

00:04:57.567 --> 00:04:59.901
‫ولكنه يغطي نطاق عددي أكبر

00:05:00.534 --> 00:05:04.868
‫رغم هذا، فإن أنواع البيانات العامة
‫يجب أن تكون نوع بيانات كائن هنا

00:05:05.167 --> 00:05:07.768
‫لذا نستخدم Long بحرف L كبير..

00:05:07.934 --> 00:05:12.101
‫وهو نسخة الكائن مغلفاً
‫نوع البيانات الأولي القديم

00:05:12.501 --> 00:05:14.102
‫في AsyncTask..

00:05:14.300 --> 00:05:17.700
‫يُمرر Long result
‫إلى onPostExectute

00:05:18.033 --> 00:05:20.233
‫ويكون الآن قد عاد إلى
‫خيط الواجهة الرئيسي

00:05:20.434 --> 00:05:23.968
‫لا نستخدم تأشير الوسطاء المتغيرون
‫ثلاثي النقاط في هذه الحالة

00:05:24.033 --> 00:05:26.567
‫مدخل وظيفة onPostExectute..

00:05:26.734 --> 00:05:31.335
‫يجب أن يكون قيمة مفردة من نوع
‫البيانات المحدد في إعلان الفئة

00:05:31.601 --> 00:05:36.502
‫في هذا المثال، نريد فقط عرض
‫مربع حوار بحجم الملف المُنزل

00:05:37.267 --> 00:05:39.868
‫اعتماداً على كيفية
‫كتابة الفئات الفرعية..

00:05:40.100 --> 00:05:42.767
‫فقد لا نحتاج كل أنواع البيانات العامة

00:05:43.100 --> 00:05:46.133
‫على سبيل المثال،
‫قد لا يكون هناك باراميتر مدخلات

00:05:46.267 --> 00:05:49.201
‫ولا قيمة مرتجع، ولا قيمة تقدم

00:05:49.434 --> 00:05:50.601
‫في تلك الحالات..

00:05:50.801 --> 00:05:53.435
‫استخدم Void لنوع الباراميتر العام

00:05:53.701 --> 00:05:56.768
‫تأكد من استخدام حرف V كبير في void..

00:05:56.868 --> 00:06:00.001
‫لأن الباراميتر العام
‫يجب أن يكون نوع بيانات كائن

00:06:00.434 --> 00:06:03.834
‫حان الوقت الآن لاختبار،
‫لتثبيت ما تعلمته لتوك

00:06:04.033 --> 00:06:05.767
‫انظر لمقتطف الكود هذا..

00:06:05.834 --> 00:06:11.001
‫واملأ الفراغات لأنواع الباينات العامة في
‫إعلان الفئة DownloadWebpageTask

