WEBVTT
Kind: captions
Language: ar

00:00:00.200 --> 00:00:02.434
‫مهام AsyncTask عظيمة
‫في أشياء كثيرة

00:00:02.701 --> 00:00:05.868
‫ولكنها ليست الخيار الأفضل
‫لتحديث بيانات الواجهة

00:00:06.033 --> 00:00:07.734
‫لهذا، نحتاج مُحملاً

00:00:08.167 --> 00:00:10.901
‫المحملات تحل المشكلة الموضحة
‫في الفيديو السابق

00:00:11.000 --> 00:00:14.234
‫أولاً، بغض النظر عن عدد
‫مرات طلبك البيانات من المحمل..

00:00:14.434 --> 00:00:17.302
‫فافتراضياً، سيجلب المحمل
‫البيانات مرة واحدة فقط

00:00:17.501 --> 00:00:20.402
‫بدون إنشاء عشرات نسخ
‫AsyncTasks وأنشطتها

00:00:20.767 --> 00:00:23.201
‫ثانياً، عندما يغلق نشاط..

00:00:23.567 --> 00:00:28.068
‫تُخطر كافة محملاته بالتوقف عما تفعله
‫حيث لن تستخدم البيانات

00:00:28.634 --> 00:00:29.634
‫أخيراً..

00:00:29.701 --> 00:00:33.635
‫تستمر المحملات عبر تغيرات
‫ضبط النشاط كالتدوير

00:00:33.934 --> 00:00:37.435
‫فإذا أطلقت محملاً ليجلب البيانات
‫وتم تدوير الهاتف..

00:00:37.767 --> 00:00:41.368
‫سيرجع المحمل بياناته
‫إلى النشاط متى انتهى

00:00:41.934 --> 00:00:44.168
‫لننظر إلى دليل المطورين
‫حول المُحملات

00:00:44.367 --> 00:00:48.268
‫مكونات إطار عمل آندرويد هذه صممت
‫خصيصاً لتحميل البيانات..

00:00:48.467 --> 00:00:50.667
‫لعرضها في الأنشطة أو النبذات

00:00:50.968 --> 00:00:54.368
‫وضعت الرابط أدناه لتقرأه تفصيلاً بنفسك

00:00:54.734 --> 00:00:57.201
‫سنبدأ بالقسم المعنون (بدأ المحمل)

00:00:58.534 --> 00:00:59.701
‫في نشاطك..

00:00:59.901 --> 00:01:02.735
‫يمكنك بدء محمل باستخدام
‫مدير المحملات LoaderManager

00:01:02.801 --> 00:01:05.568
‫كل نشاط آندرويد يأتي
‫مجهزاً بمدير محملات

00:01:05.901 --> 00:01:10.702
‫والذي يتولى إنشاء، إعادة استخدام ومسح
‫مجموعة محملات في التوقيتات المناسبة

00:01:10.868 --> 00:01:13.001
‫ما أن نحصل على
‫إشارة لمدير المحملات..

00:01:13.200 --> 00:01:15.267
‫يمكننا استدعاء وظيفة initLoader

00:01:15.801 --> 00:01:18.635
‫المُدخل الأول معرف عددي فريد

00:01:19.067 --> 00:01:20.801
‫في هذه الحالة نستخدم صفر

00:01:21.334 --> 00:01:23.334
‫هذا المعرف قد يكون أي عدد عشوائي..

00:01:23.434 --> 00:01:27.768
‫إذ لا تأثير له إلا إذا كان لديك عدة
‫مُحملات في التطبيق وأردت تمييزهم

00:01:28.234 --> 00:01:30.267
‫الباراميتران الآخران هما (واحد)

00:01:30.334 --> 00:01:33.401
‫إضافة لعدة مدخلات إلى المحمل،
‫وهي Null في حالتنا هذه

00:01:33.534 --> 00:01:35.135
‫ثم يُستدعى المحمل كائناً

00:01:35.434 --> 00:01:38.402
‫الآن، كتبنا (this)
‫لاستدعاء كائن المحمل..

00:01:38.701 --> 00:01:40.901
‫لأنه من الشائع في النشاط الحالي..

00:01:41.033 --> 00:01:44.634
‫والذي تشير (this) إليه..
‫أن يطبق استدعاء واجهة المحمل

00:01:44.868 --> 00:01:48.702
‫أي أن النشاط ذاته هو كائن الاستدعاء
‫LoaderCallback الذي نمرره

00:01:48.868 --> 00:01:51.068
‫سنتحدث عن LoaderCallback لاحقاً..

00:01:51.200 --> 00:01:53.934
‫لكني أريدك أن تفهم
‫أن استدعاء initLoader..

00:01:54.067 --> 00:01:57.467
‫يضمن أن المحمل تم بدءه وتنشيطه

00:01:57.634 --> 00:01:59.401
‫لذا فإن محمل بمعرف معين..

00:01:59.501 --> 00:02:01.868
‫لنفرض بالمعرف صفر موجود بالفعل..

00:02:02.100 --> 00:02:04.001
‫فسنستخدم ذاك المحمل الأخير

00:02:04.300 --> 00:02:07.168
‫أما إذا كان المحمل بذلك
‫المعرف غير موجود..

00:02:07.300 --> 00:02:10.367
‫فإن LoaderCallback ستطلق وظيفة
‫onCreateLoader

00:02:10.901 --> 00:02:12.568
‫والتي سترجع محملاً جديداً

00:02:12.901 --> 00:02:17.735
‫سلوك إعادة استخدام المحملات الموجودة
‫محوري تماماً

00:02:18.133 --> 00:02:20.900
‫لذا عند تدوير الجهاز،
‫مرات ومرات..

00:02:21.100 --> 00:02:22.701
‫سيستخدم المُحمل نفسه

00:02:22.801 --> 00:02:25.769
‫بدلاً من إنشاء واحد جديد
‫مع كل تغيير في التوجه

00:02:26.267 --> 00:02:28.834
‫حسناً، كيف يتم إنشاء المحمل؟

00:02:29.367 --> 00:02:32.934
‫نحن المطورين، فإننا المحظوظين
‫بتعريف هذا السلوك

00:02:33.133 --> 00:02:35.567
‫بتطبيق واجهة LoaderCallback..

00:02:35.801 --> 00:02:39.235
‫يحتاج نشاطنا إلى تجاوز وظائف
‫الاستدعاء الثلاثة التالية..

00:02:39.367 --> 00:02:41.400
‫ليتعامل مع مدير المحملات

00:02:41.767 --> 00:02:43.701
‫عند استدعاء onCreateLoader..

00:02:43.834 --> 00:02:46.101
‫نحتاج لإنشاء وإرجاع كائن محمل جديد

00:02:46.400 --> 00:02:48.533
‫والذي سيجلب البيانات من ملقم ويب

00:02:48.801 --> 00:02:50.669
‫يتم استدعاء onLoadFinished..

00:02:50.801 --> 00:02:53.602
‫عندما ينتهي المحمل من جلب البيانات
‫على خيط خلفي

00:02:53.667 --> 00:02:56.901
‫وهذا مكان جيد لتحديث واجهة المستخدم
‫بقائمة الزلازل

00:02:57.000 --> 00:03:01.267
‫تُستدعى onLoaderReset عند
‫إعادة ضبط محمل موجود سلفاً

00:03:01.901 --> 00:03:05.802
‫بالتالي في هذه الحالة تصبح بياناته
‫غير صالحة ولا يمكن استخدامها مجدداً

00:03:06.100 --> 00:03:10.367
‫مثلاً، يمكن إعادة ضبط المحمل
‫إذا قررنا جلب بيانات من رابط آخر

00:03:10.501 --> 00:03:14.568
‫في هذه الحالة، فإن بيانات الزلازل
‫الموجودة بالفعل لم تعد صالحة

00:03:14.901 --> 00:03:18.502
‫لذا في هذه الوظيفة، فإننا ننظف البيانات
‫من التحميل الأخير

00:03:18.601 --> 00:03:20.835
‫وهو ما يعني إخلاء القائمة من الزلازل

00:03:21.167 --> 00:03:24.334
‫للتذكير، عندما ترى وظائف
‫استدعاء كهذه..

00:03:24.734 --> 00:03:27.001
‫فهذا علامة سلوك غير مُزامن..

00:03:27.334 --> 00:03:31.434
‫وتذكر أن (غير مُزامن) تعني أن النظام
‫قد يؤدي عملاً آخر..

00:03:31.667 --> 00:03:34.134
‫قبل أن يتم تحميل البيانات كاملة
‫من المُحمل

00:03:34.868 --> 00:03:39.535
‫نقوم بإنشاء محمل فقط عندما يستدعينا
‫النظام عبر وظيفة onCreateLoader

00:03:40.133 --> 00:03:42.067
‫بعدها يمكن للنظام إنجاز عمل آخر

00:03:42.400 --> 00:03:47.134
‫لا نحدث الواجهة حتى يستدعي النظام
‫onLoadFinished ومعه نتيجة المحمل

00:03:47.667 --> 00:03:51.635
‫قد يكون الوقت قصيراً أو طويلاً
‫بين هذين الاستدعائين

00:03:52.200 --> 00:03:55.600
‫في الفيديو التالي،
‫سندخل في التفاصيل الدقيقة للكود

00:03:55.767 --> 00:03:57.634
‫وكيف ننشئ محملاً عملياً

00:03:57.868 --> 00:04:01.635
‫أما في الوقت الراهن، أريد التأكد
‫من فهمك لفوائد المحملات

00:04:02.133 --> 00:04:05.001
‫في مقال المدونة هذا بواسطة
‫مطور جوجل (إيان لايك)..

00:04:05.100 --> 00:04:07.767
‫يتحدث عن أفضل الممارسات
‫لتحميل بيانات في تطبيق ما

00:04:08.000 --> 00:04:11.000
‫في هذا القسم، يلقي الضوء
‫على مميزات المحملات

00:04:11.501 --> 00:04:14.668
‫عند تدوير الجهاز،
‫ورغم إعادة إنشاء النشاط..

00:04:14.767 --> 00:04:15.934
‫سيستمر المحمل..

00:04:16.267 --> 00:04:18.400
‫وستبقى البيانات التي جلبتها كذلك

00:04:18.667 --> 00:04:21.067
‫لذا لن تضطر لتكرار طلب الشبكة
‫غالي الثمن

00:04:21.300 --> 00:04:22.400
‫وأفضل من ذلك..

00:04:22.467 --> 00:04:24.268
‫لن تبقى المحملات موجودة للأبد

00:04:24.567 --> 00:04:27.934
‫إذا تم مسح النشاط،
‫فسيتم تنظيف المحمل تلقائياً

00:04:28.567 --> 00:04:30.600
‫فهو مقترن بدورة حياة النشاط

00:04:30.734 --> 00:04:34.001
‫وهو أكثر ملائمة لجلب بيانات
‫لعرضها على الشاشة

00:04:34.667 --> 00:04:37.535
‫مهمة AsyncTask
‫تحيا قدر ما تحيا المهمة..

00:04:37.868 --> 00:04:39.402
‫حتى لو مُسح النشاط

00:04:39.767 --> 00:04:42.534
‫أما المحمل فيحيا قدر ما يحيا النشاط..

00:04:42.701 --> 00:04:44.202
‫لذا فمحمل هو ما نريد

00:04:45.400 --> 00:04:46.400
‫حسناً..

00:04:46.734 --> 00:04:48.568
‫كان هذا دفقاً قوياً من المعلومات

00:04:48.968 --> 00:04:51.368
‫أعلم أن إبقاء كل هذا حاضراً
‫في ذهنك أمر صعب..

00:04:51.467 --> 00:04:53.867
‫لذا لخصت النقاط الرئيسية
‫في هذا الاختبار

00:04:54.000 --> 00:04:55.667
‫وتركت الفراغات لك لتملأها

00:04:56.033 --> 00:04:58.066
‫ساعدني في ملء الفراغات

00:04:59.200 --> 00:05:03.001
‫ما الذي يتفاعل مع النشاط ليدير
‫نسخة أو أكثر من المحملات؟

00:05:04.901 --> 00:05:08.435
‫ليكون نشاط ما عميلاً يتفاعل
‫مع مدير المحملات..

00:05:08.767 --> 00:05:12.368
‫نريد أن يطبق EarthquakeActivity
‫واجهة (فراغ)

00:05:13.667 --> 00:05:19.001
‫بعدها يجب تجاوز وظيفة (فراغ)
‫لإنشاء وإرجاع نسخة محمل

00:05:19.868 --> 00:05:23.736
‫وظيفة (فراغ) لتلقي البيانات
‫ما أن ينتهي المحمل من تحميلها

00:05:24.534 --> 00:05:29.567
‫وأخيراً، وظيفة (فراغ) لمعالجة محمل
‫مُنشأ مسبقاً عندما لا يعود مطلوباً

00:05:30.000 --> 00:05:32.267
‫وبهذا يمكن إزالة البيانات الموجودة

00:05:33.067 --> 00:05:34.067
‫وأخيراً

00:05:34.167 --> 00:05:36.868
‫لبدء محمل، وإطلاق وظائف الاستدعاء..

00:05:37.167 --> 00:05:38.401
‫وعند إطلاق التطبيق..

00:05:38.501 --> 00:05:42.369
‫في وظيفة onCreate في EarthquakeActivity
‫يجب أن نستدعي.. ماذا؟

00:05:44.267 --> 00:05:47.901
‫إن احتجت تلميحاً، فقد أضفت خيارات
‫محتملة يمكنك الانتقاء منها

00:05:48.000 --> 00:05:49.601
‫في الملاحظات أسفل الاختبار

00:05:49.701 --> 00:05:53.834
‫لك حرية مراجعة روابط التوثيق
‫وكذلك دليل تطوير المحملات

