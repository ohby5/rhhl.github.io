WEBVTT
Kind: captions
Language: zh-CN

00:00:00.460 --> 00:00:03.070
现在我们要知道

00:00:03.070 --> 00:00:06.280
AsyncTasks 定义了三个泛型数据 params、progress 和 result

00:00:07.280 --> 00:00:11.525
这些数据分别由 doInBackground onProgressUpdate 和 onPostExecute 方法

00:00:11.525 --> 00:00:14.420
进行处理

00:00:14.420 --> 00:00:17.390
我们可以用一个字符串对象 来替换第一个泛型数据

00:00:18.760 --> 00:00:22.830
根据 AsyncTask 参考 doInBbackground 方法

00:00:22.830 --> 00:00:26.090
用于处理第一个 泛型数据 params

00:00:26.090 --> 00:00:28.120
现在来看一下 doInBackground 方法

00:00:28.120 --> 00:00:31.150
这里我们可以看到 这个方法的输入类型是字符串

00:00:31.150 --> 00:00:33.620
那么 “字符串”就是这个问题的答案了

00:00:33.620 --> 00:00:37.280
第二个参数使用 onProgressUpdate 方法

00:00:37.280 --> 00:00:41.880
看一下这个代码 我们可以看到 完全没有任何使用

00:00:41.880 --> 00:00:44.630
onProgressUpdate 方法的迹象

00:00:44.630 --> 00:00:46.230
所以 这个告诉我们什么呢？

00:00:46.230 --> 00:00:49.370
对的 我们不能在这里使用这个方法

00:00:49.370 --> 00:00:53.810
在说明中显示如果我们 不使用数据类型 则使用 VOID

00:00:53.810 --> 00:00:56.510
因此 VOID 就是正确的答案

00:00:56.510 --> 00:01:00.160
注意 VOID 在这里使用大写 因为其是一个对象的数据类型

00:01:01.200 --> 00:01:05.280
用 onPostExecute 处理 第三个参数

00:01:05.280 --> 00:01:09.520
并且这里代码使用字符串 所以正确答案是“字符串”

00:01:09.520 --> 00:01:10.790
做的不错

00:01:10.790 --> 00:01:13.360
现在让我们来总结一下如何使用 AsyncTask

00:01:13.360 --> 00:01:17.110
你首先要创建一个 AsyncTask 子类

00:01:17.110 --> 00:01:22.035
你可以给它随便起个名字 可以是 DownloadWebpageTask

00:01:22.035 --> 00:01:25.655
SortDataTask 或者 SaveVideoTask 只要是你认为有意义的即可

00:01:25.655 --> 00:01:29.825
使用 doInBackground 来运行 你需要在后台运行的任何任务

00:01:29.825 --> 00:01:33.585
这些任务可能非常耗时 如呼叫服务器

00:01:33.585 --> 00:01:35.740
或者在照片上进行过滤

00:01:35.740 --> 00:01:39.140
使用 onProgressUpdate 来 给你的应用进行状态更新

00:01:39.140 --> 00:01:43.680
最后用 onPostExecute 得到 后台任务的结果

