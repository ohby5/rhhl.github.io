WEBVTT
Kind: captions
Language: zh-CN

00:00:00.330 --> 00:00:03.170
Chris 到目前为止 我们已经了解了 网络方面的许多知识

00:00:03.170 --> 00:00:05.110
那么你觉得把这些 可爱的网络代码

00:00:05.110 --> 00:00:07.710
加入我们的 Quake Report 应用怎么样?

00:00:07.710 --> 00:00:08.660
我也很希望这样

00:00:08.660 --> 00:00:10.570
目前我们已经取得了一些不错的进展

00:00:10.570 --> 00:00:12.925
我真的很想将款 应用与 USGS 对接

00:00:12.925 --> 00:00:14.435
这样就可以为这个应用 输入一些实时数据

00:00:14.435 --> 00:00:18.095
的确如此 但我们还需要了解 一些概念

00:00:18.095 --> 00:00:19.585
等一下 哪些概念?

00:00:19.585 --> 00:00:21.935
你知道的 处理网络调用时

00:00:21.935 --> 00:00:26.335
我们需要许多 操作及时发生

00:00:26.335 --> 00:00:28.995
设备需要与无线信号 连接并

00:00:28.995 --> 00:00:33.340
发送请求 然后服务器必须创建 响应并将其送回

00:00:33.340 --> 00:00:37.380
这不知道要花费多少时间 而我们希望应用能够同时

00:00:37.380 --> 00:00:41.060
执行其他任务 例如 响应用户输入

00:00:41.060 --> 00:00:44.912
同时处理多个不同的任务 被称为多任务处理

00:00:44.912 --> 00:00:47.126
是的 我很擅长多任务处理

00:00:47.126 --> 00:00:48.240
没错

00:00:48.240 --> 00:00:52.220
你可以将任务看做 Java 中的线程

00:00:52.220 --> 00:00:55.605
这节课 我们将为你介绍我们的 应用如何同时利用

00:00:55.605 --> 00:00:56.924
多个线程

00:00:56.924 --> 00:01:01.372
现在 一个线程按顺序 一次执行一个任务

00:01:01.372 --> 00:01:06.410
即使其中一项任务花费的时间比 预期长 亦是如此

00:01:06.410 --> 00:01:09.950
例如 假设你正在 烘烤一些东西

00:01:09.950 --> 00:01:11.870
第一步要做的就是预热烤箱

00:01:11.870 --> 00:01:12.720
嗯

00:01:12.720 --> 00:01:14.720
那么 如果你必须等到

00:01:14.720 --> 00:01:18.860
烤箱预热至 400 度才能 做别的事情 怎么办?

00:01:18.860 --> 00:01:20.660
那要浪费很多的时间 对吧?

00:01:20.660 --> 00:01:21.410
是的

00:01:21.410 --> 00:01:24.570
现在 如果可以在预热 烤箱的同时切好蔬菜

00:01:24.570 --> 00:01:28.080
并腌制肉类 就好了

00:01:28.080 --> 00:01:30.810
计算机也遵循同样的 理念 一直尝试能够

00:01:30.810 --> 00:01:34.120
同时执行任务 我们称之为多任务处理

00:01:35.260 --> 00:01:39.830
无论如何 线程和 并行都是计算机科学的

00:01:39.830 --> 00:01:42.900
基本概念 在本节课 你将 亲自了解这些概念

00:01:42.900 --> 00:01:46.180
我觉得最好是先介绍一个 简单的示例应用

00:01:46.180 --> 00:01:48.630
以便学生了解这些 概念

00:01:48.630 --> 00:01:49.600
等一下

00:01:49.600 --> 00:01:50.860
其他示例应用?

00:01:50.860 --> 00:01:52.230
是的 相信我

00:01:52.230 --> 00:01:55.640
这是一个非常简单的应用 叫做 Did You Feel It 应用

00:01:55.640 --> 00:02:00.045
等学生们了解了这些线程的 概念之后 我会把他们送到

00:02:00.045 --> 00:02:03.525
你那去 这样你就可以帮助他们更新 Quake Report 应用 可以吗?

00:02:03.525 --> 00:02:04.508
好的 就这么定了

00:02:04.508 --> 00:02:07.840
到那时 你将可以修改 Quake Report 应用以便

00:02:07.840 --> 00:02:10.366
从服务器中提取地震数据  同时

00:02:10.366 --> 00:02:12.920
可以响应用户输入

00:02:12.920 --> 00:02:16.620
即便是高级的开发人员 理解这些概念也有一定的难度

00:02:16.620 --> 00:02:19.520
所以 如果你不能立刻理解 请不要着急

00:02:19.520 --> 00:02:21.110
没错 另外

00:02:21.110 --> 00:02:24.965
构建应用中的另一个基本理念是 正确处理错误

00:02:24.965 --> 00:02:27.825
也就是 对于应用可能 无法按预期执行功能的

00:02:27.825 --> 00:02:30.225
特殊情况提前 进行计划

00:02:30.225 --> 00:02:33.595
所以考虑这些假设情景 然后对代码做出必要的调整以便

00:02:33.595 --> 00:02:36.962
做出得体的处理 一直是个好主意

00:02:36.962 --> 00:02:40.642
厉害 所以在第三节课 我们将会学习线程和

00:02:40.642 --> 00:02:43.642
并行 并最终 使用端到端网络代码

00:02:43.642 --> 00:02:47.132
更新 Quake Report 以便 从服务器提取数据

00:02:47.132 --> 00:02:47.742
听起来不错

