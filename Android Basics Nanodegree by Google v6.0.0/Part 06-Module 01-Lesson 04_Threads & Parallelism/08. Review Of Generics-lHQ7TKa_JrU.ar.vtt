WEBVTT
Kind: captions
Language: ar

00:00:00.367 --> 00:00:02.500
‫من مثال الكود في التوثيقات..

00:00:02.734 --> 00:00:07.201
‫ستلاحظ أن فئة DownloadFilesTask
‫تمدد AsyncTask

00:00:07.567 --> 00:00:10.600
‫والاسم يتبعه أسماء فئات وأقواس إضافية

00:00:10.767 --> 00:00:15.900
‫تذكر أن الأقواس تشير إلى 3 باراميترات
‫عامة في AsyncTask

00:00:16.501 --> 00:00:19.835
‫تعلمنا عن (العوام) لأول مرة أثناء
‫بناء تطبيق Miwok

00:00:20.367 --> 00:00:25.567
‫حيث أنشأنا قائمة مصفوفة من مفردات لغوية
‫وعرضناها باستخدام محول مصفوفة مخصص

00:00:26.167 --> 00:00:31.167
‫فئتا قائمة ومحول المصفوفات
‫تقبل باراميترات عامة النوع

00:00:31.667 --> 00:00:37.034
‫وحرفا E وT هما مالئا فراغ لأنواع
‫بيانات الكائن الذي نريد استخدامه

00:00:37.634 --> 00:00:40.502
‫باستخدام العوام، يمكننا
‫الاعتماد على لغة جافا..

00:00:40.534 --> 00:00:45.534
‫لنتأكد أن نوع البيانات الصحيح
‫يُمرر من وإلى الوظائف

00:00:46.300 --> 00:00:47.300
‫مثلاً..

00:00:47.501 --> 00:00:51.801
‫أياً كان نوع البيانات ممثلاً في E سيكون
‫هو نوع البيانات المطلوب للمدخل..

00:00:52.000 --> 00:00:54.067
‫في قائمة مصفوفة وظيفة add

00:00:54.200 --> 00:00:56.101
‫لإضافة عنصر آخر للقائمة

00:00:56.667 --> 00:00:59.368
‫إذا استدعيت وظيفة get على مؤشر معين..

00:00:59.434 --> 00:01:01.734
‫فسيُرجع كائن من النوع E

00:01:02.367 --> 00:01:04.068
‫يسمى هذا (تأمين النوع)

00:01:04.267 --> 00:01:07.768
‫تفرض لغة جافا تأمين النوع بعرض أخطاء..

00:01:08.033 --> 00:01:09.767
‫إذا مررت نوع بيانات خاطئ

00:01:10.067 --> 00:01:13.501
‫أو إذا خزنت القيمة المرتجعة
‫بنوع بيانات خاطئ

00:01:13.868 --> 00:01:17.369
‫لن تتمكن من تشغيل تطبيقك
‫حتى تصلح هذه الأخطاء

00:01:17.868 --> 00:01:19.935
‫عندما نستخدم فئة generic..

00:01:19.968 --> 00:01:23.635
‫بدلنا مالئ المكان العام E
‫بنوع بيانات محدد..

00:01:23.701 --> 00:01:25.068
‫مثل فئة السلسلة الحرفية

00:01:25.133 --> 00:01:27.001
‫لنحصل على قائمة مصفوفة منها

00:01:27.100 --> 00:01:30.434
‫وسنستبدل كل مكان ظهر فيه E
‫بكلمة String

00:01:32.701 --> 00:01:37.268
‫وكنتيجة نستطيع فقط إضافة كائنات
‫من نوع string إلى القائمة

00:01:37.534 --> 00:01:40.402
‫إذا طلبنا عنصراً عند مؤشر معين..

00:01:40.567 --> 00:01:43.234
‫فسترجع قائمة المصفوفة
‫نوع بيانات string

00:01:43.901 --> 00:01:45.034
‫في تطبيق Miwok..

00:01:45.100 --> 00:01:49.767
‫أردنا استخدام نوع بيانات أكثر
‫تعقيداً قليلاً من كائن string

00:01:50.501 --> 00:01:53.435
‫تذكر إنشائنا فئة word المخصصة

00:01:53.601 --> 00:01:56.601
‫لحفظ الكلمة وترجمتها في تطبيق Miwok

00:01:57.434 --> 00:02:02.168
‫لإنشاء قائمة، عرفنا الباراميتر
‫العام E ليكون كائن word

00:02:02.534 --> 00:02:04.934
‫لنحصل على قائمة مصفوفة من الكلمات

00:02:05.434 --> 00:02:09.035
‫ثم عندما أضفنا واسترجعنا
‫مدخلاً من قائمة المصفوفة..

00:02:09.334 --> 00:02:11.202
‫كنا واثقين أنه كائن word

00:02:11.534 --> 00:02:14.268
‫ثم أمكننا استدعاء وظائف معينة
‫على كائن word

00:02:14.334 --> 00:02:17.135
‫لاستخراج الكلمة وترجمة Miwok

00:02:17.601 --> 00:02:23.001
‫لم يكن هذا ممكناً لو استرجعت وظيفة get
‫سلسلة حرفية أو نوع بيانات كائن مختلف

00:02:23.734 --> 00:02:28.834
‫شبيه به في تطبيق Miwok، استخدمنا العوام
‫لإنشاء محول مصفوفة مخصص من الكلمات

00:02:29.534 --> 00:02:33.435
‫يمكننا توقع أن يكون كل عنصر في
‫مجموعة بيانات المحول أن تكون كائن word

00:02:34.968 --> 00:02:36.702
‫الآن وقد راجعنا العوام..

00:02:36.801 --> 00:02:39.468
‫لنعد إلى توثيقات AsyncTask

