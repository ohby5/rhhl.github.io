WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:01.567
Se precisar de ajuda,

00:00:01.601 --> 00:00:03.868
pesquise no guia de desenvolvedores
de loaders,

00:00:03.901 --> 00:00:06.534
que menciona todos
os componentes no api do loader.

00:00:06.567 --> 00:00:08.367
Aqui estão as soluções
para o quiz.

00:00:08.400 --> 00:00:10.601
O LoaderManager interage
com uma atividade

00:00:10.634 --> 00:00:13.000
para lidar com uma ou mais
instâncias de loader.

00:00:13.033 --> 00:00:17.501
Ela cria e destrói loaders
e os reutiliza, se necessário.

00:00:18.234 --> 00:00:21.501
Agora, para a atividade ser
um cliente interagindo

00:00:21.534 --> 00:00:22.734
com o LoaderManager,

00:00:22.767 --> 00:00:24.968
precisamos que a atividade
implemente

00:00:25.000 --> 00:00:28.167
a interface
LoaderManagerLoaderCallbacks.

00:00:28.701 --> 00:00:32.400
A interface contém três
métodos abstratos

00:00:32.434 --> 00:00:34.734
que precisamos override
e implementar.

00:00:34.767 --> 00:00:37.734
Isso inclui
o método onCreateLoader

00:00:37.767 --> 00:00:40.501
para criar e devolver
uma nova instância de Loader.

00:00:40.534 --> 00:00:42.968
O método onLoadFinished
que recebe os dados

00:00:43.000 --> 00:00:45.133
depois que o loader
termina de carregá-los.

00:00:45.167 --> 00:00:46.367
E, por último,

00:00:46.400 --> 00:00:47.968
o método onLoaderReset

00:00:48.000 --> 00:00:50.167
para lidar com um loader
previamente criado

00:00:50.200 --> 00:00:51.601
que não é mais necessário,

00:00:51.634 --> 00:00:54.067
então os dados existentes
podem ser descartados.

00:00:54.100 --> 00:00:56.467
Quando esses métodos de callback
são implementados,

00:00:56.501 --> 00:00:58.868
podemos iniciar um loader
quando a atividade é iniciada.

00:00:58.901 --> 00:01:01.834
Em EarthquakeActivity
no método onCreate,

00:01:01.868 --> 00:01:04.801
temos que chamar o método
getLoaderManager.inItLoader,

00:01:04.834 --> 00:01:09.534
incluindo "0", "null", e uma referência
à atividade de terremoto.

