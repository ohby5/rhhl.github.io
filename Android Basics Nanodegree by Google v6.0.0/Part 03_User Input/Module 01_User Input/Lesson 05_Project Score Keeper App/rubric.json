{
  "id": 157,
  "project_id": 157,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|kt|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2016-06-02T21:49:04.049Z",
  "updated_at": "2019-08-28T03:11:30.548Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd803-ent",
    "nd803-br",
    "nd803",
    "nd803-cn-basic",
    "nd803-connect",
    "nd803-ent-mena"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 754,
      "name": "Layout",
      "created_at": "2016-04-20T18:35:12.199Z",
      "updated_at": "2016-07-21T08:00:42.210Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 157,
      "rubric_items": [
        {
          "id": 2580,
          "section_id": 754,
          "passed_description": "The chosen game has either multiple amounts of points that can be scored, as in american football, or multiple important metrics to track, such as fouls, outs, and innings in baseball. ",
          "exceeded_description": "",
          "created_at": "2016-07-15T19:34:12.160Z",
          "updated_at": "2016-07-15T19:34:12.160Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Game Chosen",
          "exceedable": false
        },
        {
          "id": 2308,
          "section_id": 754,
          "passed_description": "App is divided into two columns, one for each team.",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:39:05.048Z",
          "updated_at": "2016-07-21T08:00:42.267Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Overall layout",
          "exceedable": false
        },
        {
          "id": 2309,
          "section_id": 754,
          "passed_description": "Each column contains a large TextView to keep track of the current score for that team.\r\n\r\nOptionally, a second TextView to track another important metric such as fouls can be added. ",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:39:26.208Z",
          "updated_at": "2016-07-21T08:00:42.284Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Column contents",
          "exceedable": false
        },
        {
          "id": 2310,
          "section_id": 754,
          "passed_description": "Each column contains multiple buttons. The buttons must track either:\r\n\r\nEach track a different kind of scoring\r\n\r\nOr \r\n\r\nEach track a different metric (one score, the other fouls, for instance). ",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:39:59.453Z",
          "updated_at": "2016-07-21T08:00:42.296Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Score buttons",
          "exceedable": false
        },
        {
          "id": 2311,
          "section_id": 754,
          "passed_description": "The layout contains a ‘reset’ button.",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:41:27.665Z",
          "updated_at": "2016-07-21T08:00:42.308Z",
          "deleted_at": null,
          "optional": false,
          "position": 4,
          "criteria": "Reset button",
          "exceedable": false
        },
        {
          "id": 2312,
          "section_id": 754,
          "passed_description": "\"The code adheres to all of the following best practices:\r\n- Text sizes are defined in sp\r\n- Lengths are defined in dp\r\n- Padding and margin is used appropriately, such that the views are not crammed up against each other.\"",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:42:18.954Z",
          "updated_at": "2016-07-21T08:00:42.322Z",
          "deleted_at": null,
          "optional": false,
          "position": 5,
          "criteria": "Best practices",
          "exceedable": false
        }
      ]
    },
    {
      "id": 755,
      "name": "Functionality",
      "created_at": "2016-04-20T18:36:52.388Z",
      "updated_at": "2016-07-21T08:00:42.334Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 157,
      "rubric_items": [
        {
          "id": 2313,
          "section_id": 755,
          "passed_description": "The code runs without errors.",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:44:13.070Z",
          "updated_at": "2016-04-20T18:44:13.070Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Errors",
          "exceedable": false
        },
        {
          "id": 2314,
          "section_id": 755,
          "passed_description": "Each score button updates the score TextView in its column by adding the correct number of points.",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:44:50.189Z",
          "updated_at": "2016-04-20T18:44:50.189Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Score Button Function",
          "exceedable": false
        },
        {
          "id": 2315,
          "section_id": 755,
          "passed_description": "The reset button resets the scores on both of the score TextViews.",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:45:39.520Z",
          "updated_at": "2016-04-20T18:45:39.520Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Reset Button Function",
          "exceedable": false
        }
      ]
    },
    {
      "id": 756,
      "name": "Code Readability",
      "created_at": "2016-04-20T18:37:05.520Z",
      "updated_at": "2016-07-21T08:00:42.357Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 157,
      "rubric_items": [
        {
          "id": 2316,
          "section_id": 756,
          "passed_description": "\"Any classes are named after the object they represent.All variables are named by their intended contents.\r\n\r\nAll methods are named by their intended effect or in the style required by a callback interface.\"",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:47:56.693Z",
          "updated_at": "2016-04-20T18:47:56.693Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Naming conventions",
          "exceedable": false
        },
        {
          "id": 2317,
          "section_id": 756,
          "passed_description": "\"There are no unnecessary blank lines.One variable is declared per declaration line.\r\n\r\nThe code within a method is indented with respect to the method declaration line.\"",
          "exceeded_description": "",
          "created_at": "2016-04-20T18:48:26.920Z",
          "updated_at": "2016-04-20T18:48:26.920Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Code style",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 157,
    "name": "Score Keeper",
    "nanodegree_key": "nd803",
    "is_cert_project": false,
    "audit_project_id": 72,
    "hashtag": "nanodegree, BeginningAndroid",
    "audit_rubric_id": 2899,
    "entitlement_required": null,
    "is_career": null,
    "recruitment_family_id": 2,
    "created_at": "2016-04-20T18:03:56.593Z",
    "updated_at": "2021-04-09T16:59:32.590Z",
    "price": "5.0",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}