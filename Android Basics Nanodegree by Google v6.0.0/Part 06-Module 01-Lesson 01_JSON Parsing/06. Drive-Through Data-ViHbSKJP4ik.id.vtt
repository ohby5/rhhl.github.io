WEBVTT
Kind: captions
Language: id

00:00:00.250 --> 00:00:02.719
Baik, sepertinya kita menemukan layanan
yang memiliki data yang kita butuhkan.

00:00:02.719 --> 00:00:06.050
Tapi untuk memperoleh data itu, tampaknya
kita perlu mengunduh formulir yang rumit,

00:00:06.050 --> 00:00:08.650
lalu membaca hasilnya dari peta,
atau mengunduh spreadsheet.

00:00:08.650 --> 00:00:10.720
Saya tidak yakin kita akan
menggunakan layanan ini.

00:00:10.720 --> 00:00:13.200
Kenapa kau tidak melekatkan saja
spreadsheet itu ke dalam aplikasi kita?

00:00:13.200 --> 00:00:15.890
Kurasa bisa, tapi akan jadi
mimpi buruk jika terjadi pembaruan.

00:00:15.890 --> 00:00:17.160
Terutama untuk pengguna.

00:00:17.160 --> 00:00:20.050
Maksudku, tiap kali ada data baru,
kita harus mengunduh ulang

00:00:20.050 --> 00:00:23.930
spreadsheet, menyusun ulang aplikasi,
lalu memublikasikan ulang di Google Play.

00:00:23.930 --> 00:00:27.360
Belum lagi, tiap kali ada data baru,
pengguna juga harus

00:00:27.360 --> 00:00:31.610
memperbarui aplikasinya tiap kali kita
memperbarui, yang bisa setiap hari.

00:00:31.610 --> 00:00:33.030
Ya, pengalaman buruk yang bisa sangat buruk.

00:00:34.660 --> 00:00:36.120
Itu bakal jadi masalah.

00:00:36.120 --> 00:00:39.826
Mungkin sebaiknya kita buat aplikasi
yang bisa menjemput data melalui drive-through

00:00:39.826 --> 00:00:41.680
[TERTAWA] Apa maksudmu?

00:00:41.680 --> 00:00:42.570
Coba begini.

00:00:42.570 --> 00:00:45.740
Bayangkan sumber data sebagai
restoran makanan cepat saji.

00:00:45.740 --> 00:00:48.850
Semacam, restoran yang punya tempat
duduk di dalam ruangan dan fasilitas drive through.

00:00:48.850 --> 00:00:49.670
Oke.
Jadi,

00:00:49.670 --> 00:00:52.380
saat kau tidak yakin dengan
apa yang kauinginkan di restoran,

00:00:52.380 --> 00:00:55.490
kau mungkin ingin masuk, melihat menu,
bicara kepada staf, dan

00:00:55.490 --> 00:00:58.020
mereka akan membawakan
makanan untukmu.

00:00:58.020 --> 00:00:58.990
Oke.

00:00:58.990 --> 00:01:03.020
Tapi saat kau tahu pasti makanan
apa yang kauinginkan, mungkin kau

00:01:03.020 --> 00:01:06.480
akan lewat drive-through saja, memesan,
lalu makanan akan

00:01:06.480 --> 00:01:09.290
diberikan kepadamu, sudah dikemas
rapi di jendela jemputan.

00:01:09.290 --> 00:01:11.670
Kau yakin kita masih bicara
tentang gempa bumi?

00:01:11.670 --> 00:01:12.910
Yakin sekali.

00:01:12.910 --> 00:01:16.858
Misalnya, saat kau menavigasi ke situs
web USGS dan mengisi formulir

00:01:16.858 --> 00:01:19.950
pencarian gempa bumi yang kauinginkan,
hal ini seperti masuk dan duduk

00:01:19.950 --> 00:01:23.770
di restoran. Kau mendapatkan
pengalaman berinteraksi dengan manusia.

00:01:23.770 --> 00:01:25.020
Oke, aku paham.

00:01:25.020 --> 00:01:27.360
Tapi, jika kau adalah
program komputer lain, atau

00:01:27.360 --> 00:01:31.300
aplikasi yang ingin menggunakan data dari
USGS, maka ada jendela drive-through itu.

00:01:31.300 --> 00:01:35.920
Jadi kau bisa menyesuaikan permintaan
untuk data dan data dikembalikan kepadamu

00:01:35.920 --> 00:01:39.010
dalam format sederhana yang dapat
dengan mudah dipahami program.

00:01:39.010 --> 00:01:40.820
Hmm, sebentar aku pikir dulu.

00:01:40.820 --> 00:01:46.290
Jadi maksudmu ada data yang sifatnya dine-in untuk
manusia, dan data drive-through untuk aplikasi?

00:01:46.290 --> 00:01:47.350
Benar sekali.

00:01:47.350 --> 00:01:51.074
Dan jendela drive-through itu semacam
antarmuka pemrograman

00:01:51.074 --> 00:01:51.780
aplikasi.

00:01:51.780 --> 00:01:52.780
Betul, sebuah API.

00:01:52.780 --> 00:01:54.280
Jadi, ini pada dasarnya sebuah cara untuk

00:01:54.280 --> 00:01:56.660
aplikasi lain bicara kepada
suatu layanan melalui kode.

00:01:56.660 --> 00:01:57.160
Yap.

00:01:58.280 --> 00:01:59.920
Jadi, mau burger?

00:01:59.920 --> 00:02:00.890
Pilihan yang tepat. Sini biar kutelepon.

00:02:00.890 --> 00:02:01.570
Ayo.

