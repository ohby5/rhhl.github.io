WEBVTT
Kind: captions
Language: pt-BR

00:00:00.101 --> 00:00:01.868
Temos que modificar nosso app

00:00:01.901 --> 00:00:04.368
para fazer o parsing
da resposta do USGS

00:00:04.401 --> 00:00:07.035
e convertê-la
numa ArrayList de tremores.

00:00:07.068 --> 00:00:11.501
Primeiro, copie a classe
"QueryUtils" neste link.

00:00:11.535 --> 00:00:14.201
Selecione todo este texto
e o copie.

00:00:14.235 --> 00:00:19.168
No Android Studio,
crie a nova classe Java "QueryUtils".

00:00:19.201 --> 00:00:23.468
Remova o código inicial
e cole o conteúdo novo.

00:00:23.501 --> 00:00:26.668
Vamos minimizar essa aba
para facilitar a leitura.

00:00:26.701 --> 00:00:29.201
Se você quiser,
se familiarize com o código.

00:00:29.235 --> 00:00:30.768
Vamos examiná-lo agora.

00:00:30.801 --> 00:00:33.601
Há uma string constante
em letras maiúsculas

00:00:33.635 --> 00:00:36.068
chamada
"SAMPLE_JSON_RESPONSE".

00:00:36.101 --> 00:00:38.368
Já que a string
é um valor final estático

00:00:38.401 --> 00:00:40.168
o valor é imutável.

00:00:40.201 --> 00:00:42.668
Lembre-se disso quando
assinalarmos esta constante

00:00:42.701 --> 00:00:44.668
para ser igual à resposta
do USGS.

00:00:44.701 --> 00:00:49.068
Caracteres especiais como as aspas
são marcados com a barra invertida.

00:00:49.101 --> 00:00:51.035
Há um construtor privado

00:00:51.068 --> 00:00:53.935
que significa que nenhuma instância
desta classe pode ser criada.

00:00:53.968 --> 00:00:57.868
Esta é uma classe utility que contém
variáveis e métodos estáticos

00:00:57.901 --> 00:00:59.735
podendo chamar
um método diretamente

00:00:59.768 --> 00:01:02.401
sem precisar chamar
uma instância das classes.

00:01:02.435 --> 00:01:07.335
O método estático mais importante
se chama "extractEarthquakes"

00:01:07.368 --> 00:01:11.668
que não recebe nenhum input
e retorna uma ArrayList de tremores.

00:01:11.701 --> 00:01:15.001
Neste método, criamos
uma ArrayList vazia de tremores

00:01:15.035 --> 00:01:17.635
e a retornamos
no final do método.

00:01:17.668 --> 00:01:19.535
Também há um bloco try/catch

00:01:19.568 --> 00:01:23.468
que interceptará as exceções
geradas no parseamento do JSON.

00:01:23.501 --> 00:01:27.068
Vamos detalhar os blocos try/catch
na próxima lição.

00:01:27.101 --> 00:01:31.101
Por enquanto, há uma tarefa aqui
que precisamos terminar.

00:01:31.135 --> 00:01:32.901
Vamos fazer isso agora.

00:01:32.935 --> 00:01:36.368
Você pode usar o código
que fornecemos como guia.

00:01:36.401 --> 00:01:40.068
Primeiro, criamos o objeto JSON raiz
chamando o construtor

00:01:40.101 --> 00:01:42.835
e passando a string
"SAMPLE_JSON_RESPONSE".

00:01:42.868 --> 00:01:46.968
Esta classe fará o parsing
da resposta geoJSON do USGS.

00:01:47.001 --> 00:01:50.968
Vamos armazenar este objeto
na variável "baseJsonResponse".

00:01:51.001 --> 00:01:54.701
Queremos a magnitude,
o local e o tempo do tremor.

00:01:54.735 --> 00:01:58.068
Para acharmos estes dados,
precisamos do arranjo "features".

00:01:58.101 --> 00:02:02.335
No objeto JSON raiz, queremos
o valor da chave "features"

00:02:02.368 --> 00:02:06.068
que deve mapear um arranjo JSON
com uma lista de tremores.

00:02:06.101 --> 00:02:10.235
Vamos usar o método getJSONArray
no objeto baseJsonResponse

00:02:10.268 --> 00:02:13.235
passando a chave "features"
como string.

00:02:13.268 --> 00:02:16.135
Podemos armazenar o resultado
na variável "earthquakeArray"

00:02:16.168 --> 00:02:18.301
que é do tipo de dado
JSONArray.

00:02:18.335 --> 00:02:21.601
Queremos fazer um loop
por todos os tremores no arranjo.

00:02:21.635 --> 00:02:23.168
Vamos usar o "for-loop".

00:02:23.201 --> 00:02:27.668
Se quiser revisar loops e for-loops,
veja o link nas notas abaixo.

00:02:27.701 --> 00:02:31.935
Para criar o loop, iniciamos
a variável de contagem "i" como zero.

00:02:32.035 --> 00:02:33.568
Antes de cada iteração,

00:02:33.635 --> 00:02:36.635
testamos a condição onde "i"
é menor do que o tamanho do arranjo

00:02:36.668 --> 00:02:37.968
segue como verdadeira.

00:02:38.001 --> 00:02:41.601
Se for verdadeira, podemos executar
as linhas de código no loop.

00:02:41.635 --> 00:02:44.935
No final de uma iteração,
aumentamos o valor de "i" por um,

00:02:44.968 --> 00:02:47.301
indicado aqui
pela sintaxe "i++".

00:02:47.335 --> 00:02:49.435
Podemos continuar com o loop.

00:02:49.468 --> 00:02:53.668
Depois, pegamos o objeto JSON
na posição específica no arranjo.

00:02:53.701 --> 00:02:57.968
Começamos na posição zero,
o valor inicial da variável "i".

00:02:58.001 --> 00:03:00.268
Assim que temos o objeto JSON
"currentEarthquake",

00:03:00.301 --> 00:03:04.068
podemos extrair o objeto JSON
associado com a chave "properties".

00:03:04.101 --> 00:03:07.068
Esta lista traz
vários atributos do tremor.

00:03:07.101 --> 00:03:11.368
Veja que objetos estão aninhados
profundamente na resposta.

00:03:11.401 --> 00:03:14.601
Finalmente podemos acessar
os valores individuais

00:03:14.635 --> 00:03:16.335
do objeto JSON "properties"

00:03:16.368 --> 00:03:18.868
referindo a chave "mag"
para magnitude,

00:03:18.901 --> 00:03:20.468
"place" para local

00:03:20.501 --> 00:03:23.935
e "time" para a data do tremor
em milissegundos.

00:03:23.968 --> 00:03:26.201
Por hora, extraímos
estes valores como strings

00:03:26.235 --> 00:03:28.501
porque vamos exibi-los
diretamente na tela

00:03:28.535 --> 00:03:31.635
e não vamos fazer cálculos
ou formatações adicionais.

00:03:31.668 --> 00:03:35.068
Criamos um novo objeto "earthquake"
destas 3 strings.

00:03:35.101 --> 00:03:38.668
Por último, adicionamos
este novo objeto para a lista.

00:03:38.701 --> 00:03:42.835
Depois que o loop passar
pelos tremores no arranjo "features",

00:03:42.868 --> 00:03:45.535
vamos encher uma ArrayList
de terremotos.

00:03:45.568 --> 00:03:48.968
Podemos retornar esta lista
como o valor do método.

00:03:49.001 --> 00:03:50.001
Belo trabalho.

00:03:50.035 --> 00:03:52.601
Foi um tarefa complicada
com muita programação.

00:03:52.635 --> 00:03:54.668
Orgulhe-se
por tê-la resolvido.

00:03:54.701 --> 00:03:57.268
Vamos voltar e adicionar
comentários ao código.

00:03:57.301 --> 00:03:59.035
Está ficando bom.

00:03:59.068 --> 00:04:01.235
Vamos testar o código
chamando o método.

00:04:01.268 --> 00:04:04.901
No 3º passo do quiz, você deveria
mudar o "EarthquakeActivity"

00:04:04.935 --> 00:04:07.868
para chamar o método
"extractEarthquakes" do QueryUtils.

00:04:07.901 --> 00:04:11.468
Vamos deletar a ArrayList
de tremores falsos que criamos

00:04:11.501 --> 00:04:14.035
e chamar o método
QueryUtils agora.

00:04:14.068 --> 00:04:17.935
Não há erros no código
então vamos testá-lo num aparelho.

00:04:17.968 --> 00:04:20.668
Fantástico. Nosso app
exibe a lista de tremores.

00:04:20.701 --> 00:04:22.901
Ele deve ser parecido
com o esboço que você fez

00:04:22.935 --> 00:04:25.268
quando fez o parsing
do JSON de forma manual.

00:04:25.301 --> 00:04:27.101
Se você quiser examinar
o código,

00:04:27.135 --> 00:04:29.099
veja o arquivo DIFF
nas notas abaixo.

