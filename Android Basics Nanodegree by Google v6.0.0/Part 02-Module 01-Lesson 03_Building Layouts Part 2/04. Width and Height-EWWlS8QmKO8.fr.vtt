WEBVTT
Kind: captions
Language: fr

00:00:00.300 --> 00:00:02.670
On a donc préparé
la liste des invités à la fête.

00:00:02.670 --> 00:00:05.660
&gt;&gt; Attends, c'est ça la liste
des invités à l'anniversaire, Katherine ?

00:00:05.660 --> 00:00:06.700
&gt;&gt; Oui.

00:00:06.700 --> 00:00:08.109
&gt;&gt; J'espère être sur cette liste.

00:00:09.140 --> 00:00:10.470
&gt;&gt; Ouais, c'est à envisager.

00:00:11.930 --> 00:00:14.010
&gt;&gt; Aouh. Je me sens
tout petit, tout à coup.

00:00:14.010 --> 00:00:15.160
&gt;&gt; En parlant de « petit »,

00:00:15.160 --> 00:00:18.010
parlons un peu des dimensions
des vues à l'écran.

00:00:18.010 --> 00:00:21.180
&gt;&gt; Oh, c'est quand on a fixé la largeur
et la hauteur avec les dp, hein ?

00:00:21.180 --> 00:00:23.720
&gt;&gt; Oui, la largeur et la hauteur.

00:00:23.720 --> 00:00:25.640
On aurait aussi pu avoir
<i>wrap_content</i> de la vue.

00:00:25.640 --> 00:00:28.275
&gt;&gt; Oui c'est l'étrange formule
pour dire que la vue va

00:00:28.275 --> 00:00:29.684
« enlacer le contenu »

00:00:29.684 --> 00:00:30.549
donc si le contenu grossit,

00:00:30.549 --> 00:00:32.880
la vue aussi et
si le contenu rétrécit, la vue aussi.

00:00:32.880 --> 00:00:35.300
&gt;&gt; Oui, et il existe
une troisième valeur, « <i>match_parent</i> ».

00:00:35.300 --> 00:00:37.930
&gt;&gt; Ça fait un peu étrange.

00:00:37.930 --> 00:00:41.840
Ça sonne comme le nom d'un site de
rencontres pour parents sans conjoints.

00:00:41.840 --> 00:00:42.600
&gt;&gt; Pas tellement.

00:00:42.600 --> 00:00:47.370
<i>match_parent</i> veut dire que la vue sera
aussi large ou longue que la vue parente.

00:00:47.370 --> 00:00:48.446
&gt;&gt; Oh, c'est logique.

00:00:48.446 --> 00:00:51.400
Je suis une vue, j'ai un père,
et j'aurais donc la même carrure

00:00:51.400 --> 00:00:53.840
et la même taille
que mon père.

00:00:53.840 --> 00:00:55.920
Ok.
&gt;&gt; Exactement. Donc pour résumer,

00:00:55.920 --> 00:00:59.800
les différentes valeurs pour dimensionner
une vue sont la larg--une valeur fixe

00:00:59.800 --> 00:01:01.090
de dp en largeur ou en hauteur.

00:01:01.090 --> 00:01:02.910
&gt;&gt; Voilà. On peut aussi
avoir <i>wrap_content</i>.

00:01:02.910 --> 00:01:04.986
Et la prochaine
qu'on va essayer est…

00:01:04.986 --> 00:01:06.780
&gt;&gt; <i>match_parent</i>.

00:01:06.780 --> 00:01:10.160
Voici des exemples pour voir en quoi
différentes largeurs de vues filles

00:01:10.160 --> 00:01:13.770
dans une disposition linéaire peuvent
impacter l'interface utilisateur finale.

00:01:13.770 --> 00:01:17.780
Dans cet exemple, on a réglé chaque vue
enfant avec une largeur fixe de 200 dp.

00:01:19.070 --> 00:01:22.590
Si le contenu d'une vue
dépasse la largeur de 200 dp,

00:01:22.590 --> 00:01:26.330
on cours le risque de tronquer
du contenu comme ici.

00:01:26.330 --> 00:01:30.460
Dans cet exemple, on a réglé la largeur
de chaque vue fille à <i>wrap_content</i>.

00:01:31.600 --> 00:01:33.500
Ceci affiche
tout le contenu,

00:01:33.500 --> 00:01:36.930
mais la largeur d'une vue varie beaucoup
suivant ce qu'elle peut contenir.

00:01:38.090 --> 00:01:42.020
Dans cet exemple, chaque vue fille
a une largeur de valeur <i>match_parent</i>.

00:01:42.020 --> 00:01:46.650
On voit ici que les vues enfants
ont la même largeur de la vue parente,

00:01:46.650 --> 00:01:48.540
quel que soit le contenu
de la vue enfant.

00:01:49.680 --> 00:01:54.070
On peut appliquer les mêmes valeurs
à la hauteur <i>height</i> de chaque vue.

00:01:54.070 --> 00:01:59.240
Dans cet exemple, on a réglé la hauteur
de cette vue enfant à 200 dp.

00:01:59.240 --> 00:02:01.570
Si le contenu de la vue
est plus grand qu'elle,

00:02:01.570 --> 00:02:04.250
on cours alors le risque
de tronquer une partie du contenu.

00:02:05.400 --> 00:02:09.919
Dans cet exemple, on a réglé la hauteur
de la <i>TextView</i> enfant à <i>wrap_content</i>.

00:02:09.919 --> 00:02:12.040
Ainsi le contenu sera affiché
à l'écran sans

00:02:12.040 --> 00:02:15.650
rien tronquer parce que
la taille de la <i>TextView</i> dépendra

00:02:15.650 --> 00:02:16.920
de son contenu.

00:02:17.940 --> 00:02:22.790
Dans cet exemple, on règle la hauteur
de la <i>TextView</i> enfant à <i>match_parent</i>.

00:02:22.790 --> 00:02:25.300
Ainsi, la vue fille sera
aussi grande que la vue parente,

00:02:25.300 --> 00:02:26.720
quel que soit son contenu.

00:02:27.730 --> 00:02:29.980
Lançons maintenant le Visualiseur XML et

00:02:29.980 --> 00:02:32.980
essayons d'être plus comme
nos parents ; dans le code.

00:02:32.980 --> 00:02:36.670
Un lien vers le Visualiseur XML
vous est fourni avec du code de départ

00:02:36.670 --> 00:02:37.910
dans les consignes ci-dessous.

00:02:39.050 --> 00:02:41.570
Dans notre cas, <i>LinearLayout</i>
est la « vue racine » de

00:02:41.570 --> 00:02:44.460
notre disposition car c'est
la première et plus externe des vues.

00:02:45.580 --> 00:02:49.390
Si on règle la largeur et la hauteur
de la vue racine sur <i>match_parent</i>,

00:02:49.390 --> 00:02:51.870
et qu'on en fait la disposition
principale de l'application,

00:02:51.870 --> 00:02:55.400
alors cette <i>LinearLayout</i> aura
les dimensions de l'écran de l'appareil.

00:02:56.840 --> 00:03:00.300
Je peux vous le montrer en passant
le fond de cette disposition linéaire

00:03:00.300 --> 00:03:04.400
sur une couleur
autre que transparente.

00:03:04.400 --> 00:03:07.100
Si je règle la couleur de fond
de <i>LinearLayout</i> sur gris,

00:03:07.100 --> 00:03:11.660
on voit que ce gris prend toute la
largeur et toute la hauteur de l'écran.

00:03:11.660 --> 00:03:13.370
Qu'arriverait-il
si je changeais la largeur

00:03:13.370 --> 00:03:15.980
et la hauteur de ces <i>TextViews</i>
à <i>match_parent</i> ?

00:03:15.980 --> 00:03:18.450
Pour mieux visualiser
les bords de chaque vue,

00:03:18.450 --> 00:03:21.510
je vais mettre un fond à chaque vue.

00:03:21.510 --> 00:03:25.660
Je vais maintenant changer la hauteur
de cette <i>TextView</i> à <i>match_parent</i>.

00:03:25.660 --> 00:03:28.270
Au fait, ça s'épelle
<i>match</i>, tiret bas, <i>parent</i>.

00:03:28.270 --> 00:03:32.530
On remarque que cette <i>TextView</i> occupe
toute la hauteur de la vue parente.

00:03:32.530 --> 00:03:35.550
Malheureusement, elle pousse
du coup tout le reste hors de l'écran,

00:03:35.550 --> 00:03:36.580
ce n'est pas ce qu'on veut.

00:03:36.580 --> 00:03:38.320
Remettons donc <i>wrap_content</i>.

00:03:39.330 --> 00:03:39.950
Ok.

00:03:39.950 --> 00:03:42.539
Réglons maintenant la largeur à
<i>match_parent</i> pour voir.

00:03:43.750 --> 00:03:48.580
Maintenant la <i>TextView</i> est aussi large
que sa vue parente, qui elle-même

00:03:48.580 --> 00:03:50.260
est aussi large que l'écran
de l'appareil.

00:03:51.750 --> 00:03:54.940
Si je change la valeur
des autres <i>TextView</i> en <i>match_parent</i>,

00:03:54.940 --> 00:03:58.610
on voit qu'elles vont également prendre
toute la largeur de la vue parente.

00:03:58.610 --> 00:04:01.740
J'aimerais aussi souligner autre chose :

00:04:01.740 --> 00:04:04.860
chaque fois qu'on a un attribut
qui débute par « <i>layout_</i> », comme

00:04:04.860 --> 00:04:10.080
<i>layout_height</i> ou <i>layout_width</i>, il s'agit
de paramètre de disposition de groupes.

00:04:10.080 --> 00:04:13.480
Ils servent en fait au groupe parent
de vues à déterminer la taille et

00:04:13.480 --> 00:04:14.849
la position de ses vues.

00:04:16.190 --> 00:04:19.110
Par comparaison, les autres attributs
comme <i>background</i>, <i>textSize</i> et

00:04:19.110 --> 00:04:23.630
<i>text</i> sont gérés par la <i>TextView</i>
afin de se styliser elle-même.

00:04:23.630 --> 00:04:27.360
Ces paramètres de disposition de vue
sont, eux, exploités par la parente.

00:04:27.360 --> 00:04:30.460
À votre tour d'essayer différentes
valeurs de largeur et de hauteur.

00:04:30.460 --> 00:04:33.890
Pour vous rendre sur le Visualiseur XML
avec un code de départ,

00:04:33.890 --> 00:04:35.820
lisez les consignes ci-dessous.

00:04:35.820 --> 00:04:38.970
Changez les valeurs de largeur
et de hauteur de chaque <i>TextView</i>.

00:04:38.970 --> 00:04:43.270
Vous pouvez fixer la valeur en dp,
ou mettre <i>wrap_content</i> ou <i>match_parent</i>.

00:04:43.270 --> 00:04:46.730
N'oubliez pas que la largeur et la hauteur
ne sont pas forcés d'être de même valeur.

00:04:46.730 --> 00:04:48.600
À la fin, cochez cette case
pour la suite.

