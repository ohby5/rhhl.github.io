WEBVTT
Kind: captions
Language: zh-TW

00:00:00.390 --> 00:00:03.980
到目前為止，我們知道線性佈置

00:00:03.980 --> 00:00:06.140
可以是往垂直方向或水平方向的

00:00:06.140 --> 00:00:09.380
亦學到個別檢視框可設定權重值

00:00:09.380 --> 00:00:11.350
以佔用母元件的額外空間

00:00:12.710 --> 00:00:14.520
現在就花點時間認識

00:00:14.520 --> 00:00:16.450
相對佈置檢視框組

00:00:16.450 --> 00:00:19.910
這有助建立更具彈性的佈置

00:00:19.910 --> 00:00:22.140
還記得相對佈置 Ray 嗎？

00:00:22.140 --> 00:00:25.590
他是一家之主，以這個檢視框組所表示

00:00:25.590 --> 00:00:29.250
他協助子檢視框在這個範圍內定位

00:00:29.250 --> 00:00:32.360
使用相對佈置，即可因應母元件而為子元件定位

00:00:32.360 --> 00:00:34.840
例如：置於母元件的頂部或底部

00:00:35.850 --> 00:00:39.680
另一選擇是因應其他子元件而定位

00:00:39.680 --> 00:00:40.920
就像這樣

00:00:40.920 --> 00:00:44.520
現在先集中來看因應母元件而定位

00:00:44.520 --> 00:00:45.780
的做法

00:00:45.780 --> 00:00:50.220
在這個例子中，這個母元件相對佈置的高、寬度

00:00:50.220 --> 00:00:53.550
設定為 <i> match_parent</i>，即如裝置般大小

00:00:53.550 --> 00:00:56.660
相對佈置裡的子元件可因應

00:00:56.660 --> 00:01:00.880
母元件的左、上、右或下方邊緣來定位

00:01:00.880 --> 00:01:04.519
編碼如下：在子元件檢視框的 XML 元素裡

00:01:04.519 --> 00:01:08.540
如 ImageView 或 TextView，加上這些屬性

00:01:08.540 --> 00:01:14.440
屬性名字的格式為 <i>android:layout_alignParentTop</i>

00:01:14.440 --> 00:01:17.120
這個屬性決定子元件檢視框

00:01:17.120 --> 00:01:19.400
是否跟母元件的頂部邊緣對齊

00:01:19.400 --> 00:01:22.640
可能值為 <i>true</i> 或 <i>false</i>

00:01:22.640 --> 00:01:25.780
如為 <i>true</i>，則檢視框該與母元件的頂部邊緣對齊

00:01:25.780 --> 00:01:28.540
如為 <i>false</i>，則不會跟頂部邊緣對齊

00:01:28.540 --> 00:01:30.990
這些是所有其他邊緣的屬性

00:01:30.990 --> 00:01:34.800
如 <i>alignParentBottom</i> 與母元件的底部邊緣對齊

00:01:34.800 --> 00:01:37.460
<i>alignParentLeft</i> 與母元件的左方邊緣對齊

00:01:37.460 --> 00:01:41.000
<i>alignParentRight</i> 與母元件的右方邊緣對齊

00:01:42.050 --> 00:01:44.970
你可混合配搭，同時使用多個屬性

00:01:45.980 --> 00:01:47.680
以這個 ImageView 為例

00:01:47.680 --> 00:01:52.370
屬性 <i>alignParentTop</i> 設定為 <i>true</i>

00:01:52.370 --> 00:01:54.850
因為它與母元件的頂部邊緣對齊

00:01:54.850 --> 00:01:57.510
同時亦與母元件的左、右方邊緣對齊

00:01:57.510 --> 00:02:00.220
所以左、右屬性亦設定為 <i>true</i>

00:02:01.270 --> 00:02:04.896
它並非與母元件的底部邊緣對齊，所以設定為 <i>false</i>

00:02:04.896 --> 00:02:08.410
而下方的這個 TextView

00:02:08.410 --> 00:02:11.430
跟母元件的底部及左、右方邊緣對齊

00:02:12.580 --> 00:02:15.910
所以 <i>alignParentBottom</i> 設定為 <i>true
alignParentLeft</i> 設定為 <i>true</i>

00:02:15.910 --> 00:02:19.809
<i>alignParentRight</i> 設定為 <i>true</i>
但 <i>alignParentTop</i> 設定為 <i>false</i>

00:02:21.280 --> 00:02:24.640
除了將子元件置於螢幕上方或下方外

00:02:24.640 --> 00:02:28.440
另可置於指定角落

00:02:28.440 --> 00:02:31.850
想將 Birthday TextView 置於左上角

00:02:31.850 --> 00:02:36.190
則設定 <i>alignParentTop</i> 為 <i>true
alignParentLeft</i> 為 <i>true</i>

00:02:37.350 --> 00:02:39.560
將檢視框置於右上角的話

00:02:39.560 --> 00:02:43.450
則要跟母元件的頂部和右方邊緣對齊

00:02:43.450 --> 00:02:46.280
則設定 <i>alignParentTop</i> 為 <i>true
alignParentRight</i> 為 <i>true</i>

00:02:46.280 --> 00:02:50.850
置於左下角的話，則要跟母元件的左方和

00:02:50.850 --> 00:02:51.430
底部邊緣對齊

00:02:52.780 --> 00:02:54.490
所以設定 <i>alignParentBottom</i> 為 <i>true</i>

00:02:54.490 --> 00:02:56.210
及設定 <i>alignParentLeft</i> 為 <i>true</i>

00:02:57.240 --> 00:03:00.480
這些屬性值為 <i>false</i>，而其默認值亦為 <i>false</i>

00:03:00.480 --> 00:03:02.240
所以毋需寫入 XML 編碼中

00:03:02.240 --> 00:03:06.170
而最後一個角落，則要跟母元件的右方

00:03:06.170 --> 00:03:07.030
和底部邊緣對齊
bottom edge.

00:03:07.030 --> 00:03:10.940
所以設定 <i>alignParentBottom</i> 及
<i>alignParentRight</i> 為 <i>true</i>

00:03:10.940 --> 00:03:12.210
其餘兩個為 <i>false</i>

00:03:12.210 --> 00:03:14.180
所以不用寫入編碼中

00:03:14.180 --> 00:03:17.140
還有更多屬性可以設定呢！

00:03:17.140 --> 00:03:20.190
可將檢視框水平置中

00:03:20.190 --> 00:03:23.030
設定 <i>android:layout_centerHorizontal</i> 
為 <i>true</i> 即可

00:03:23.030 --> 00:03:27.530
亦可將它加到之前學過的屬性之中

00:03:27.530 --> 00:03:30.550
置於底部並水平置中

00:03:30.550 --> 00:03:32.220
就會是這個樣子

00:03:32.220 --> 00:03:34.870
我要介紹的最後一個屬性是 <i>layout_centerVertical</i>

00:03:34.870 --> 00:03:39.445
如設定為 <i>true</i>，則會於母元件中垂直置中

00:03:39.445 --> 00:03:43.015
這個 TextView 靠左對齊的原因是

00:03:43.015 --> 00:03:47.085
即使沒有設定這屬性值，所有加入相對佈置中的

00:03:47.085 --> 00:03:51.550
檢視框均會默認置於檢視框組的左上角

00:03:51.550 --> 00:03:54.300
所有這些屬性稱為檢視框組佈置參數

00:03:54.300 --> 00:03:58.100
雖然在子元件的 XML 元素中設定

00:03:58.100 --> 00:04:02.440
但母元件檢視框組會用以得知如何為子元件定位

00:04:02.440 --> 00:04:05.098
所以全部以 <i>layout_</i> 起首

00:04:05.098 --> 00:04:08.050
這跟 <i>layout_width</i> 和 <i>layout_height</i> 的格式一樣

00:04:08.050 --> 00:04:10.960
那兩個屬性你該也熟悉

00:04:10.960 --> 00:04:14.810
那兩個屬性同為檢視框組佈置參數

00:04:14.810 --> 00:04:17.920
檢視框組母元件用以控制子元件的位置和大小

00:04:17.920 --> 00:04:22.089
這是相對佈置及其子元件的 XML

00:04:22.089 --> 00:04:24.450
你可參考相關連結

00:04:24.450 --> 00:04:28.110
這裡有相對佈置的開始標籤，底部有結束標籤

00:04:28.110 --> 00:04:30.740
而所有子元件就在兩者之間

00:04:30.740 --> 00:04:31.250
相對佈置的寬度和

00:04:31.250 --> 00:04:34.490
高度設為 <i>match_parent</i>

00:04:34.490 --> 00:04:35.620
因為這是整個應用程式的佈置

00:04:35.620 --> 00:04:39.070
所以會佔用整個螢幕

00:04:39.070 --> 00:04:42.310
相對佈置裡有三個子元件文字

00:04:42.310 --> 00:04:45.380
第一個是寫上「Happy」的 TextView

00:04:45.380 --> 00:04:49.090
寬度和高度為 <i>wrap_content</i>，還有附加屬性

00:04:49.090 --> 00:04:53.520
讓相對佈置得知如何為子元件 TextView 定位

00:04:53.520 --> 00:04:56.060
將它與母元件的右邊邊緣和

00:04:56.060 --> 00:04:58.290
頂部邊緣對齊

00:04:58.290 --> 00:05:01.900
即顯示 Happy TextView 於螢幕的右上角

00:05:01.900 --> 00:05:05.670
Birthday TextView 的寬度和高度亦為 <i>wrap_content</i>

00:05:05.670 --> 00:05:09.100
將它與母元件的底部和左方邊緣對齊

00:05:09.100 --> 00:05:12.750
所以顯示於左下角這裡

00:05:12.750 --> 00:05:16.690
最後一個 TextView 寫上「To You」

00:05:16.690 --> 00:05:19.750
沒有任何具體屬性指明其相對於母元件的位置

00:05:19.750 --> 00:05:22.410
只知道寬度和高度是 <i>wrap_content</i>

00:05:22.410 --> 00:05:25.703
正如之前所說，如沒有指明子元件檢視框的位置

00:05:25.703 --> 00:05:29.267
則會默認置於螢幕的左上角

