WEBVTT
Kind: captions
Language: ko

00:00:01.884 --> 00:00:03.574
앱에서 리니어 레이아웃(linear layout)을 사용하는

00:00:03.574 --> 00:00:04.933
예를 말씀해주실 수 있나요?

00:00:05.363 --> 00:00:08.391
음, 여기에 있는
cluster of three cards도

00:00:09.981 --> 00:00:12.141
수평적인 리니어 레이아웃을
가지고 있습니다.

00:00:12.831 --> 00:00:16.643
three cards와 같은
child뷰를 추가한 것이죠.

00:00:16.923 --> 00:00:23.810
레이아웃의 너비를 0dp로
레이아웃의 웨이트를 1로 설정했습니다.

00:00:23.810 --> 00:00:26.569
기본적으로 이것은 실행시간 동안
리니어 레이아웃이

00:00:26.569 --> 00:00:28.969
얼마나 많은 웨이트를
가지고 있는지에 상관없이

00:00:29.579 --> 00:00:31.763
그것을 받아들이도록 지시합니다.

00:00:31.763 --> 00:00:34.763
그리고 그 그룹 안에 있는
모든 child뷰 사이에서

00:00:34.763 --> 00:00:37.190
균일하게 분배된
다른 relative 웨이트를

00:00:38.610 --> 00:00:41.750
기반으로 하여 균일하게
분배하도록 지시합니다.

00:00:42.100 --> 00:00:43.160
이것이 첫 번째 예였습니다.

00:00:43.160 --> 00:00:44.800
그리고 또 다른 예는
여기에 있습니다.

00:00:45.360 --> 00:00:47.110
새로운 업데이트된 게임이네요.

00:00:47.110 --> 00:00:49.690
그리고 더 많은 버튼이 있는 것은
cluster header입니다.

00:00:49.690 --> 00:00:52.490
이것 또한 단순한
수평적인 리니어 레이아웃입니다.

00:00:52.910 --> 00:00:54.980
이러한 것들이 단순하면,

00:00:54.980 --> 00:00:57.740
반드시 커스텀 레이아웃을
사용할 필요는 없습니다.

00:00:57.740 --> 00:01:00.380
렐러티브 레이아웃(relative layout)을
모든 곳에서 사용하지 마세요.

00:01:01.320 --> 00:01:05.320
리니어 레이아웃보다
더욱 용도가 많기 때문입니다.

00:01:05.980 --> 00:01:08.700
더욱 단순한 것들에게는
지나친 것이죠.

00:01:09.800 --> 00:01:11.748
디자이너가 mock를 줄 때,

00:01:11.748 --> 00:01:14.990
어떻게 그 앱을 만들기 시작하시나요?

00:01:15.660 --> 00:01:17.640
우리가 얘기했던 이 단계에서,

00:01:17.640 --> 00:01:19.660
우리는 하나의 mock만
가지고 있는 것이 아닙니다.

00:01:19.660 --> 00:01:22.200
오히려 작은 화면과
큰 화면 사이의

00:01:22.200 --> 00:01:24.340
디자인 규모가
어떤지를 보여주는

00:01:24.340 --> 00:01:26.630
적어도 두 가지 또는
세 가지 이상의

00:01:26.630 --> 00:01:29.380
mock를 가지고 있습니다.

00:01:29.880 --> 00:01:33.330
그 후에 building block을
확인하죠.

00:01:33.560 --> 00:01:38.150
card와 같은 단어가
앱의 많은 곳에서 나타날 때,

00:01:38.350 --> 00:01:40.630
반드시 같은 카드를

00:01:40.630 --> 00:01:45.740
많은 다양한 형태로 만들지는 않습니다.

00:01:45.740 --> 00:01:47.370
제가 작은 이미지를
보여줘야 할지

00:01:47.370 --> 00:01:49.040
큰 이미지를 보여줘야 할지

00:01:49.040 --> 00:01:50.430
또는 한 줄의 타이틀을 써야 할지

00:01:50.430 --> 00:01:52.930
두 줄의 타이틀을
써야 하는 지에 기반으로 둡니다.

00:01:52.930 --> 00:01:56.188
이 block을 확인해서
그것들을 stand-alone class,

00:01:56.188 --> 00:01:59.398
stand-alone 레이아웃으로 만듭니다.

00:01:59.648 --> 00:02:02.320
그 후에 이 모든 것들을
기반으로 하여 만들기 시작합니다.

00:02:02.580 --> 00:02:07.484
텍스트뷰에서 시작해서,
이미지뷰, 스피너,

00:02:07.484 --> 00:02:11.055
더 작은 block을 만드는 것과
같은 것들 다루는 것이죠.

00:02:11.055 --> 00:02:14.721
바라건대, 여러분이
이 작은 block을 파악할 수 있고

00:02:14.721 --> 00:02:18.381
똑같은 기본적인 block들을
재사용하는 동안

00:02:18.381 --> 00:02:22.450
더 큰 block도
만들 수 있기를 바랍니다.

00:02:22.450 --> 00:02:23.763
이 방법의 장점은

00:02:24.230 --> 00:02:26.840
당장은 여러분이 더 많은
시간을 들이는 것 같아도,

00:02:28.110 --> 00:02:31.080
디자인이 앱을 발달시키고
새로운 특징을 추가하는

00:02:31.080 --> 00:02:34.110
언어를 적용하는 방법과 일관되면

00:02:34.110 --> 00:02:37.280
이 방법은 더욱 쉬워진다는 것입니다.

00:02:37.280 --> 00:02:39.422
디자인이 일관되면,
여러분은 같은 block이

00:02:39.422 --> 00:02:42.352
다른 구성에서
반복적으로 사용되는 것을

00:02:42.352 --> 00:02:44.461
계속해서 볼 수 있습니다.

00:02:45.021 --> 00:02:47.639
이것이 새로운 화면의 구성을

00:02:47.639 --> 00:02:49.789
완전히 새로운 것으로
다루지 않으면서,

00:02:50.599 --> 00:02:55.430
여러분이 초기에 공들인 것이
결실을 맺는 때입니다.

00:02:55.430 --> 00:03:01.190
하지만 오히려, 아마 50, 60, 70,
얼마나 많은 퍼센트가 있든지 간에,

00:03:01.190 --> 00:03:05.450
색상 또는 타이포그래피나
다른 것들을 약간의 수정만 해주면 됩니다.

00:03:05.450 --> 00:03:07.272
하지만 디자인이 일관되면,

00:03:07.272 --> 00:03:11.442
구성하는 것 또한
진행하기 더 쉽습니다.

00:03:12.202 --> 00:03:14.098
만약 여러분이 이미 구성되도록
만들어놨다면 말이죠.

00:03:14.688 --> 00:03:19.893
시각적인 수준에서 새로운 디자인을
적용하는 것 또한 더 쉬워집니다.

00:03:20.303 --> 00:03:22.179
색상을 수정하길 원하거나,

00:03:22.179 --> 00:03:24.099
타이포그래피를
수정하기를 원하거나,

00:03:24.099 --> 00:03:26.521
롤리팝에서 여러분이
무언가를 눌렀을 때

00:03:26.521 --> 00:03:28.941
물결효과가 나타나도록

00:03:28.941 --> 00:03:31.880
우리가 했던 것과 같은 것을
추가하기를 원하거나

00:03:31.880 --> 00:03:36.870
여러분의 스타일이나
레이아웃처럼 계속해서

00:03:36.870 --> 00:03:39.250
재사용할만한 것들을
가지고 있다면,

00:03:39.250 --> 00:03:42.250
여러분은 보다 적은 곳에서
visual refresh를 하면 됩니다.

00:03:42.250 --> 00:03:47.720
그러면 그러한 것들이
어디에서나 일관되게 적용됩니다.

00:03:48.030 --> 00:03:51.550
음, 제가 처음부터 중점을 두는 곳은
올바른 정보를 얻는 것입니다.

00:03:51.550 --> 00:03:57.808
특히 외부의 소스에서
정보를 얻는 앱을 위해서는 말이죠.

00:03:58.348 --> 00:04:02.512
그리고 픽셀에 관련된
면밀한 작업을 합니다.

00:04:02.512 --> 00:04:04.532
얼마나 많은 시간이 걸리든지,

00:04:04.532 --> 00:04:06.752
일단 그리드를 설치할
데이터를 가지고 있다면

00:04:06.752 --> 00:04:09.022
픽셀을 개선시키고, 타이포그래피,

00:04:09.022 --> 00:04:12.575
색상, 애니메이션, 변경사항을
적용하는 것과 같은 것들을 작업합니다.

00:04:12.575 --> 00:04:16.338
제 생각에 이것은 트위터 클라이언트를
가지고 있는 것과 똑같은 것 같습니다.

00:04:16.338 --> 00:04:18.991
몇 가지 거짓된 데이터를 가지고

00:04:18.991 --> 00:04:21.991
레이아웃에 픽셀 퍼펙트
작업을 하면서 시작합니다.

00:04:21.991 --> 00:04:24.112
그 후에 여러분은 트위터에서
데이터를 가져오는 것에 대해서

00:04:26.262 --> 00:04:30.032
여러분이 아무것도 알지
못한다는 것을 발견합니다.

00:04:30.032 --> 00:04:32.520
그리고 그 데이터를 가져오는 데만
3달이 걸리게 되죠.

00:04:33.520 --> 00:04:37.240
예를 들어, 제가 데이터부터
시작하기를 선호한다면 말이죠.

00:04:37.240 --> 00:04:41.180
저는 여러분이 보는 멋진 픽셀이
표면 위 빙산의 일각에서는

00:04:41.180 --> 00:04:43.130
아마 5%에서 10% 정도만 차지하며

00:04:43.130 --> 00:04:47.640
표면 아래에는 많은 일이
진행되는 것이라고 생각합니다.

00:04:47.640 --> 00:04:50.800
이 모든 것을 지원하는 것들이죠.

00:04:50.800 --> 00:04:53.820
사람들이 보는 것은 빙산의
일각이라는 것을 말하셨는데요,

00:04:53.820 --> 00:04:57.210
그러면 표면 아래에 있는 것은
정확히 무엇인가요?

00:04:57.210 --> 00:05:00.020
그리고 구글 플레이 앱을
어떻게 생각하시나요?

00:05:00.620 --> 00:05:02.940
표면 아래에서 일어나는 일은 첫 번째로,

00:05:02.940 --> 00:05:05.940
네트워크로부터 정보를 얻는 것입니다.

00:05:05.940 --> 00:05:11.643
그러면 서버에서 정보를 얻는데
진짜임을 증명할 수 있죠

00:05:11.643 --> 00:05:13.969
그 후에 그것을 국지적으로
캐시에 저장합니다.

00:05:13.969 --> 00:05:16.142
그 다음은 세부사항 페이지에서

00:05:16.142 --> 00:05:19.242
스트림 처리하기 위해서
우리는 캐시에 저장된 데이터와

00:05:20.212 --> 00:05:22.820
캐시에 저장된 이미지를 사용합니다.

00:05:22.820 --> 00:05:26.616
배터리에 너무 많은 무리를 주지 않고

00:05:26.616 --> 00:05:30.284
앱이 이미 가지고 있는
정보를 보여주기 위해서입니다.

00:05:31.204 --> 00:05:33.430
그 후에 다양한 이용계정을
지원하도록 합니다.

00:05:33.830 --> 00:05:37.540
그 후에 데이터베이스에서
이것 저것 집중해서 작업합니다.

00:05:38.670 --> 00:05:41.380
그리고 billing flow를 다룹니다.

00:05:41.380 --> 00:05:44.380
다양한 지불 방법을
통합하기 위해서

00:05:44.380 --> 00:05:48.840
대다수의 일은 서버에서 다뤄집니다.

00:05:48.840 --> 00:05:50.970
클라이언트에 대한 일도 또한 다룹니다.

00:05:53.160 --> 00:05:56.460
플레이 스토어의 또 다른 큰 부분은

00:05:56.460 --> 00:05:59.010
다운로드, 앱 설치 그리고 게임입니다.

00:05:59.660 --> 00:06:04.530
우리는 플레이 스토어에서,
다운로드, 설치,

00:06:04.530 --> 00:06:06.840
앱을 업데이트 하는 일을
책임지고 있습니다.

00:06:06.840 --> 00:06:08.946
이러한 것들이, 다시 한번 말씀 드리지만

00:06:08.946 --> 00:06:11.556
거의 대다수의 일입니다.

00:06:11.556 --> 00:06:16.052
화면에 나타나는 픽셀에 관련된
표면적인 면에서 말이죠.

00:06:16.522 --> 00:06:21.945
올바른 계정의 정보를 얻고
그것을 화면에 나타내기 위해서

00:06:22.505 --> 00:06:27.388
표면 아래에도 많은 일이
이뤄지고 있습니다.

00:06:28.288 --> 00:06:32.610
구글 플레이 앱에서 많은 다양한 일을
반복적으로 작업하시는 것 같은데요,

00:06:32.610 --> 00:06:35.755
안드로이드의 가장 최근 뉴스에 대한
최신 상황을 어떻게 알고 계시나요?

00:06:37.385 --> 00:06:39.657
많은 튜토리얼을 올리는

00:06:40.507 --> 00:06:42.657
매우 활동적인
안드로이드 개발자로 인해

00:06:42.657 --> 00:06:47.295
많은 정보가 Google+에 있습니다.

00:06:47.295 --> 00:06:49.092
그리고,

00:06:52.332 --> 00:06:54.795
다양한 블로거들로부터 정보를 얻죠.

00:06:54.795 --> 00:06:58.142
때때로 저는 리사이클뷰나
또는 뷰페이지에서

00:06:58.142 --> 00:07:01.142
툴바와 액션바를
설정하는 방법에 대한

00:07:01.142 --> 00:07:07.350
특정한 시리즈를 찾아내서
상세하게 읽지는 않습니다.

00:07:07.430 --> 00:07:09.200
이러한 것들을 찾아보면,

00:07:10.270 --> 00:07:12.810
많은 정보를 볼 수 있다는 걸
알고 있습니다.

00:07:12.810 --> 00:07:16.740
심도 있는 수준의 정보가 필요할 때면

00:07:17.340 --> 00:07:20.130
이러한 소스들을 찾아봅니다.

00:07:20.130 --> 00:07:21.960
이렇게 시간 내주셔서 감사합니다.

00:07:21.960 --> 00:07:25.110
학생들이 안드로이드 앱
엔지니어로 일하는 것이 어떤지

00:07:25.110 --> 00:07:27.010
kirill의 관점을 듣게 되어서
기쁩니다.

