WEBVTT
Kind: captions
Language: ko

00:00:00.490 --> 00:00:01.260
복습합시다

00:00:01.260 --> 00:00:04.080
지금까지 우리는 LinearLayout이
수직과 수평 방향을

00:00:04.080 --> 00:00:05.650
가진다는 것을 배웠어요

00:00:06.890 --> 00:00:09.610
이제 이 뷰들이 화면의
부동산을 완전히 사용하는지에

00:00:09.610 --> 00:00:11.240
대해서 생각해봅시다.

00:00:11.240 --> 00:00:13.750
부동산이라고 말한 것은,
화면의 가능한 공간을 뜻해요

00:00:14.930 --> 00:00:16.490
우리 Nexus 6 폰에

00:00:16.490 --> 00:00:20.740
수직 LinearLayout 안에 세 child
텍스트 뷰를 가지고 있다고 합시다

00:00:20.740 --> 00:00:22.420
Tom, Tim, Todd요

00:00:22.420 --> 00:00:25.500
우리 손 안에 인물 사진 모드로
이렇게 폰을 들고 있을 때,

00:00:25.500 --> 00:00:28.380
모든 텍스트 뷰들은
화면의 왼쪽 위에 묶여 있어요

00:00:29.380 --> 00:00:32.320
공백이 사용되지 않은 채로 있어요

00:00:32.320 --> 00:00:35.480
비슷하게 우리가 기기를
풍경 모드로 돌리면

00:00:35.480 --> 00:00:40.120
텍스트는 왼쪽 위편에 있고
이 공백이 남아 있어요

00:00:40.120 --> 00:00:42.110
화면이 더욱 큰 태블릿 기기에서는

00:00:42.110 --> 00:00:44.260
더 알아차리기 쉽죠

00:00:44.260 --> 00:00:47.280
우린 오직 적은 양의
화면 부동산을 사용하고

00:00:47.280 --> 00:00:48.252
나머지는 공백이에요

00:00:48.252 --> 00:00:51.680
우리가 이 뷰들을 화면에
더 고르게 분포시켜서

00:00:51.680 --> 00:00:55.190
가능한 공간을 사용하도록 하는
방법을 배울 것입니다

00:00:55.190 --> 00:00:56.560
이는 다른 뷰들에도 적용되죠

00:00:56.560 --> 00:00:59.500
정말 작은 사진을 왼쪽 위에
두는 대신에

00:00:59.500 --> 00:01:03.460
더 나은 경험을 위해서
더 큰 이미지를 화면에 두세요

00:01:04.489 --> 00:01:05.180
버튼도 마찬가지죠

00:01:05.180 --> 00:01:09.785
더 큰 버튼을 만들면
버튼을 누르기 쉬워요

00:01:09.785 --> 00:01:13.155
예시를 위해
텍스트 뷰로 고정시키겠습니다

00:01:13.155 --> 00:01:14.825
XML 비주얼라이저로 가서

00:01:14.825 --> 00:01:17.725
어떻게 이 뷰들을
퍼뜨릴 수 있는지 봅시다

00:01:18.115 --> 00:01:20.545
여기 Tom, Tim, Todd를 위한
코드가 있어요

00:01:20.545 --> 00:01:23.975
수직 LinearLayout에
세 개의 텍스트 뷰가 있어요

00:01:23.975 --> 00:01:25.819
이는 기기에서 보이는 겁니다

00:01:26.570 --> 00:01:29.810
이제 당신에게 텍스트 뷰를
퍼뜨리는 방법을 보여드릴게요

00:01:29.810 --> 00:01:31.060
Tom은 여기 있어요

00:01:31.060 --> 00:01:31.980
Tim은 여기 있고요

00:01:31.980 --> 00:01:33.910
Todd는 여기 아래에 있죠

00:01:33.910 --> 00:01:37.950
분명히 wrap_content의 높이 지정은
이걸 구현하는 게 아니죠

00:01:37.950 --> 00:01:41.350
우리가 배운 다른 것은 고정된
dp값을 높이로 지정하는 거예요

00:01:41.350 --> 00:01:44.510
높이를, 예를 들어, 200dp로
설정해볼게요

00:01:45.760 --> 00:01:48.340
좋아요
Tom에게 공간이 더 생겼어요

00:01:48.340 --> 00:01:51.320
다른 TextView에게 그렇게 하면

00:01:51.320 --> 00:01:54.570
그것들도 화면에서 균등하게
퍼져나갑니다

00:01:54.570 --> 00:01:57.920
하지만 이 해결책은
화면의 가장자리에서만 작동해요

00:01:57.920 --> 00:02:01.510
제가 앞서 보여드린 것 같은
태블릿이 있다면 뷰들은 여전히

00:02:01.510 --> 00:02:04.640
왼쪽 위 구석에
묶여 있을 겁니다

00:02:04.640 --> 00:02:08.880
높이 설정의 다른 선택지는
앞서 배웠던 match parent입니다

00:02:08.880 --> 00:02:11.750
Tom TextView를 위한
match parent를 설정하면

00:02:11.750 --> 00:02:15.540
화면 전체인 전체 parent의
높이를 갖게 됩니다

00:02:15.540 --> 00:02:19.230
이는 다른 텍스트 뷰들을 화면 밖으로
밀어내서, 볼 수 없어요

00:02:19.230 --> 00:02:20.930
그건 하지 말죠

00:02:20.930 --> 00:02:22.180
이제 아이디어가 바닥났네요

00:02:22.180 --> 00:02:25.490
우리는 고정 DP값을 가진 높이용의
wrap content도 사용 해봤고

00:02:25.490 --> 00:02:27.300
match parent도 사용해 보았어요

00:02:27.300 --> 00:02:32.930
이 중 아무것도 모든 기기에서
적당한 공백을 주지 않았어요

00:02:32.930 --> 00:02:36.420
Google 검색을 해서 이 문제에 대해
그럴만한 해결책을 찾아 봅시다

00:02:36.420 --> 00:02:38.360
우리는 LinearLayout 뷰 그룹을
사용하고 있어요

00:02:38.360 --> 00:02:40.580
우리는 children view의
균일한 공백을 원해요

00:02:40.580 --> 00:02:42.260
그걸 검색해 봅시다

00:02:42.260 --> 00:02:44.680
좋아요, 검색 결과가 많지만

00:02:44.680 --> 00:02:46.920
첫번째 것을 클릭해 봅시다

00:02:46.920 --> 00:02:49.358
Stackoverflow 사이트의 링크입니다

00:02:49.358 --> 00:02:51.780
여기는 질문을 올리고
다른 Android 개발자들에게

00:02:51.780 --> 00:02:53.785
답을 얻을 수 있는 Q&amp;A 사이트죠

00:02:53.785 --> 00:02:58.005
문제를 풀다가 막혀서
도움이 필요할 때 항상 이걸 써요

00:02:58.005 --> 00:03:00.505
종종 다른 사람들이 이미
제가 궁금해하고 있는 질문을

00:03:00.505 --> 00:03:01.975
해 놓을 것입니다

00:03:01.975 --> 00:03:05.425
이 질문은 LinearLayout에서
버튼을 고르게 분산시키는

00:03:05.425 --> 00:03:07.657
방법에 대한 것이네요

00:03:07.657 --> 00:03:09.677
이것은 우리가 찾던 것과 비슷해요

00:03:09.677 --> 00:03:12.627
우리는 버튼 대신
텍스트 뷰를 사용한다는 것과

00:03:12.627 --> 00:03:15.877
또 LinearLayout의 너비 대신
우리는 LinearLayout의

00:03:15.877 --> 00:03:17.767
세로에서 이것을
퍼뜨린다는 점을 제외하면요

00:03:17.767 --> 00:03:20.710
우리는 질문을 통해 읽거나
그것을 뽑아낼 수 있어요

00:03:20.710 --> 00:03:23.070
보통 저는 답을 뽑아내죠

00:03:23.070 --> 00:03:27.590
또 이 해결책은 88개의 투표를 받았고
초록 체크표시가 있네요

00:03:27.590 --> 00:03:30.840
이것은 layout_width를 0dp로
설정하는 방법과

00:03:30.840 --> 00:03:33.880
각 버튼의 layout_weight를
1로 설정하는 법을 알려줘요

00:03:33.880 --> 00:03:36.899
이것은 가능한 너비를
버튼에 따라 나누어 줍니다

00:03:37.910 --> 00:03:41.170
지금 이 답을 완전히 이해하지
못하겠지만, 괜찮아요

00:03:41.170 --> 00:03:44.620
우리가 보는 하나의 핵심 구절은
linear layout_weight입니다.

00:03:44.620 --> 00:03:47.950
이것을 한번도 마주친 적은 없지만
이 답변에 중요한 것 같네요

00:03:47.950 --> 00:03:49.640
이것을 복사해
Google 검색해봅시다

00:03:49.640 --> 00:03:52.005
layout_weight에 대한
더 많은 정보를 위해서요

00:03:52.005 --> 00:03:55.205
linear layout layout_weight를
검색해 봅시다

00:03:55.205 --> 00:03:57.605
첫번째 결과는 
linear layout에 대한 글이고

00:03:57.605 --> 00:04:00.085
developer.android.com에 있네요.
클릭해 봅시다

00:04:01.285 --> 00:04:03.845
이 글은 LinearLayout에 관한 겁니다

00:04:03.845 --> 00:04:08.015
Android 오리엔테이션 속성에 관한
위의 것은 이미 배웠어요

00:04:08.015 --> 00:04:11.230
하지만 Layout Weight라 불리는 것의
새 정보가 있네요

00:04:11.230 --> 00:04:14.270
여기 화면 아래에는 코드와 화면이
함께 있는 예가 있어요

00:04:15.650 --> 00:04:17.149
모든 것을 요약해드릴 수 있지만

00:04:17.149 --> 00:04:21.260
먼저 당신이 이 문서를 읽을
기회를 드릴게요

00:04:21.260 --> 00:04:23.710
스스로 해결하도록 노력해 보세요

00:04:23.710 --> 00:04:26.180
이는 코스가 끝난 후에
문제를 해결하는 방법과

00:04:26.180 --> 00:04:28.220
더 비슷할 겁니다

00:04:28.220 --> 00:04:30.510
당신은 온라인에서 정보를 찾고

00:04:30.510 --> 00:04:33.350
그것이 문제 해결에 어떻게
사용되는지 알아볼 것입니다

00:04:34.500 --> 00:04:37.340
좋아요, 이건은 우리가
기기에 갖고 있는 레이아웃입니다

00:04:37.340 --> 00:04:39.120
이것은 우리가 얻고자 하는 것이죠

00:04:39.120 --> 00:04:42.780
세 텍스트는 화면 높이에
균일하게 퍼져있죠

00:04:42.780 --> 00:04:43.720
이 문제를 해결하기 위해

00:04:43.720 --> 00:04:46.760
아래에 링크된 LinearLayout
관련 글을 읽길 바랍니다

00:04:47.830 --> 00:04:50.260
글 속의 모든 것을 이해하지
못하는 것은

00:04:50.260 --> 00:04:51.720
매우 정상적인 것입니다

00:04:52.490 --> 00:04:57.910
종종 글 속의 개념이
당신 작업에 도움이 되는 방법을

00:04:57.910 --> 00:04:59.500
모호하게라도 이해하고 싶을 겁니다

00:05:00.320 --> 00:05:03.390
XML에서 원하는 레이아웃을
짓는 방법에 대한

00:05:03.390 --> 00:05:05.100
아이디어를 제공해주세요

00:05:05.100 --> 00:05:07.550
완전한 XML 레이아웃 코드를
제공 할 필요는 없어요

00:05:07.550 --> 00:05:10.420
왜냐하면 다음 비디오에서
그것을 해 나갈 것이기 때문이죠

00:05:10.420 --> 00:05:13.780
기사가 우리의 문제와
어떻게 연관되어 있는지에 대해

00:05:13.780 --> 00:05:16.920
몇 문장이나 주요 항목만
여기에서 적어주세요

