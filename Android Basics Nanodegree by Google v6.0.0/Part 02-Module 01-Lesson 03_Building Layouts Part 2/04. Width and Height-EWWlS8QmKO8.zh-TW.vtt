WEBVTT
Kind: captions
Language: zh-TW

00:00:00.300 --> 00:00:02.670
我們已經列出了一個參加派對的
人員名單

00:00:02.670 --> 00:00:05.660
&gt;&gt; 等等 這是參加生日派對的人員名單
是嗎 Catherine?

00:00:05.660 --> 00:00:06.700
&gt;&gt; 是的

00:00:06.700 --> 00:00:08.109
&gt;&gt; 我真的希望我也在這個名單上

00:00:09.140 --> 00:00:10.470
&gt;&gt; 好的 讓我們來看一看

00:00:11.930 --> 00:00:14.010
&gt;&gt; 我覺得它看起來很小

00:00:14.010 --> 00:00:15.160
&gt;&gt; 說到小

00:00:15.160 --> 00:00:18.010
讓我們來說說螢幕上的
檢視圖大小

00:00:18.010 --> 00:00:21.180
&gt;&gt; 是的 我們使用的是固定文字高度
單位是dp對吧

00:00:21.180 --> 00:00:23.720
&gt;&gt;是的 寬度和高度

00:00:23.720 --> 00:00:25.640
我們稱為檢視圖
包裹文字

00:00:25.640 --> 00:00:28.275
&gt;&gt; 是的 也就是說
檢視圖把文字內容

00:00:28.275 --> 00:00:29.684
包裹在其內

00:00:29.684 --> 00:00:30.549
當文字變大時

00:00:30.549 --> 00:00:32.880
檢視圖也變大
內容變小時 檢視圖也變小

00:00:32.880 --> 00:00:35.300
&gt;&gt; 實際上還有第三個設定
也就是match parent.

00:00:35.300 --> 00:00:37.930
&gt;&gt; 這看上去似乎有點奇怪

00:00:37.930 --> 00:00:41.840
聽上去像是為單身父母設計的
相親網站

00:00:41.840 --> 00:00:42.600
&gt;&gt; 不是的

00:00:42.600 --> 00:00:47.370
Match parent的含義是檢視圖的
寬度和高度與父級檢視圖保持一致

00:00:47.370 --> 00:00:48.446
&gt;&gt; 這樣就好理解了

00:00:48.446 --> 00:00:51.400
我是一個檢視圖 我有父級檢視圖
我的寬度和

00:00:51.400 --> 00:00:53.840
高度將與我的父級檢視圖
保持相同

00:00:53.840 --> 00:00:55.920
好的 
&gt;&gt; 總而言之

00:00:55.920 --> 00:00:59.800
你可以為檢視圖設定
不同的寬度值

00:00:59.800 --> 00:01:01.090
寬度和高度設定為固定dp值

00:01:01.090 --> 00:01:02.910
&gt;&gt; 是的
還可以設定為 wrap_content

00:01:02.910 --> 00:01:04.986
接下來
我們要嘗試的是

00:01:04.986 --> 00:01:06.780
&gt;&gt; match_parent.

00:01:06.780 --> 00:01:10.160
這里有一些例子 
介紹怎樣為子檢視圖設定不同的寬度值

00:01:10.160 --> 00:01:13.770
在線性版面中 這將會影響
最終的使用者介面

00:01:13.770 --> 00:01:17.780
在這個例子中 我們可以將
每個檢視圖的寬度設定為200 dp

00:01:19.070 --> 00:01:22.590
如果每個檢視圖中的內容
寬度大於200 DP

00:01:22.590 --> 00:01:26.330
可能會導致一部分的內容
被剪切掉 就像這樣

00:01:26.330 --> 00:01:30.460
在這個例子中 我們將每個子視圖的
寬度設定為wrap content.

00:01:31.600 --> 00:01:33.500
現在 全部內容都已經顯示
但是

00:01:33.500 --> 00:01:36.930
每個檢視圖的寬度會根據其內部的
內容發生變化

00:01:38.090 --> 00:01:42.020
在這個例子中 我們把每個子檢視圖
的寬度設定為match parent

00:01:42.020 --> 00:01:46.650
現在你可以看到每個子檢視圖的寬度
與父檢視圖群組相同

00:01:46.650 --> 00:01:48.540
無論檢視圖內有多少文字

00:01:49.680 --> 00:01:54.070
現在 可以把這些相同的設定值
用於每個檢視圖的高度

00:01:54.070 --> 00:01:59.240
在這個例子中 我們把
每個檢視圖的高度設定為200 dp

00:01:59.240 --> 00:02:01.570
如果檢視圖內的文字高度
大於此設定高度

00:02:01.570 --> 00:02:04.250
一些文字可能會
被剪掉

00:02:05.400 --> 00:02:09.919
在這個例子中 我們把子文字檢視圖的
高度設定為 wrap content

00:02:09.919 --> 00:02:12.040
這樣 所有內容
將顯示在螢幕上 而且

00:02:12.040 --> 00:02:15.650
不會剪掉任何內容 
因為文字檢視圖的大小取決於

00:02:15.650 --> 00:02:16.920
其內部的內容

00:02:17.940 --> 00:02:22.790
在這個例子中 我們把子文字檢視圖
的高度設定為match parent.

00:02:22.790 --> 00:02:25.300
這樣子檢視圖的高度
將與父檢視圖相同

00:02:25.300 --> 00:02:26.720
無論其內部的文字有多少

00:02:27.730 --> 00:02:29.980
讓我們打開XML檢視器

00:02:29.980 --> 00:02:32.980
在代碼中模擬
父檢視圖

00:02:32.980 --> 00:02:36.670
在下面的指導教程中，
我們提供一個XML檢視器連結

00:02:36.670 --> 00:02:37.910
和一些初始代碼

00:02:39.050 --> 00:02:41.570
在這個例子中
LinearLayout是這個版面的

00:02:41.570 --> 00:02:44.460
根視圖 因為它是
第一個也是最外層的檢視圖

00:02:45.580 --> 00:02:49.390
如果我們把這個根視圖
的寬度和高度設定為match_parent

00:02:49.390 --> 00:02:51.870
我們把它設定為應用程式
的主版面

00:02:51.870 --> 00:02:55.400
然後這個線性版面的高度和寬度
將會與設備螢幕相同

00:02:56.840 --> 00:03:00.300
我可以展示給你看
我把這個線性版面的背景設定為

00:03:00.300 --> 00:03:04.400
一種不透明顏色

00:03:04.400 --> 00:03:07.100
如果我在這個線性版面上
設定一個灰色背景顏色

00:03:07.100 --> 00:03:11.660
你可以看到灰色延伸到
設備的整個寬度和高度

00:03:11.660 --> 00:03:13.370
現在 如果我把這些文字檢視圖的
寬度或

00:03:13.370 --> 00:03:15.980
高度設定為match parent
將會發生什麼

00:03:15.980 --> 00:03:18.450
為了顯示
每個檢視圖的邊界位置

00:03:18.450 --> 00:03:21.510
我在每個檢視圖上
設定一個背景顏色

00:03:21.510 --> 00:03:25.660
現在我把這個文字檢視圖的高度設定
更改為 match parent

00:03:25.660 --> 00:03:28.270
順便說一下 應該寫作match_parent.

00:03:28.270 --> 00:03:32.530
現在你看到這個文字檢視圖
占據父檢視圖的整個高度

00:03:32.530 --> 00:03:35.550
不幸的是 它把所有其他
內容推出到屏幕之外

00:03:35.550 --> 00:03:36.580
這並不是我們想要的

00:03:36.580 --> 00:03:38.320
現在 我們把改回為wrap content

00:03:39.330 --> 00:03:39.950
好的

00:03:39.950 --> 00:03:42.539
現在把寬度改為
match parent 看看是什麼效果

00:03:43.750 --> 00:03:48.580
現在 TextView的寬度變得與
父檢視圖相同 進而

00:03:48.580 --> 00:03:50.260
與設備螢幕寬度相同

00:03:51.750 --> 00:03:54.940
如果我把其他TextView
也更改為match_parent

00:03:54.940 --> 00:03:58.610
你可以看到 它也開始占據
整個父檢視圖寬度

00:03:58.610 --> 00:04:01.740
我還要指出另外一件事情

00:04:01.740 --> 00:04:04.860
所有以layout和下劃線開頭的屬性

00:04:04.860 --> 00:04:10.080
比如layout_height或layout_width
都是檢視圖群組版面參數

00:04:10.080 --> 00:04:13.480
父級檢視圖群組使用這些參數
來確定這些檢視圖的大小

00:04:13.480 --> 00:04:14.849
和位置

00:04:16.190 --> 00:04:19.110
同時 其他屬性
例如背景 文字大小

00:04:19.110 --> 00:04:23.630
和文字等 由TextView
根據它自己的檢視圖樣式進行處理

00:04:23.630 --> 00:04:27.360
但是這些檢視圖群組版面參數
由父級檢視圖處理

00:04:27.360 --> 00:04:30.460
現在 請你嘗試
設定不同的寬度和高度值

00:04:30.460 --> 00:04:33.890
請找到含有部分初始代碼的
XML檢視圖的連結

00:04:33.890 --> 00:04:35.820
請參閱下面的指導說明

00:04:35.820 --> 00:04:38.970
嘗試更改每個TextView的
寬度和高度

00:04:38.970 --> 00:04:43.270
可以設定固定dp值
wrap-content或match_parent.

00:04:43.270 --> 00:04:46.730
請記住 對於每個檢視圖 
寬度值和高度值不必相等

00:04:46.730 --> 00:04:48.600
完成之後
請選擇這個方塊並繼續

