WEBVTT
Kind: captions
Language: ru

00:00:00.330 --> 00:00:03.090
Итак, мы увидели, что эта
линейная разметка содержит два

00:00:03.090 --> 00:00:05.270
дочерних текстовых представления.

00:00:05.270 --> 00:00:08.480
Кстати, эти цвета фона — только
инструмент обучения, помогающий понять,

00:00:08.480 --> 00:00:13.210
что эти два дочерних представления
находятся внутри этого родительского.

00:00:13.210 --> 00:00:16.140
Красный и синий цвета на самом деле
не будут отображаться на устройстве,

00:00:16.140 --> 00:00:20.100
если вы не установите их в качестве
цветов фона для этих представлений.

00:00:20.100 --> 00:00:23.110
Чтобы показать, что я имею в виду,
перейдем в XML Visualizer.

00:00:23.110 --> 00:00:25.770
Если мы вставим код в XML Visualizer,
вот как это будет выглядеть

00:00:25.770 --> 00:00:27.570
на устройстве.

00:00:27.570 --> 00:00:30.020
Итак, сначала есть
группа представлений LinearLayout.

00:00:30.020 --> 00:00:33.850
Она прозрачная, поскольку
не задан цвет фона.

00:00:33.850 --> 00:00:36.680
Первое дочернее представление —
текстовое, со списком гостей.

00:00:36.680 --> 00:00:38.280
Оно появляется вверху здесь.

00:00:38.780 --> 00:00:41.580
Второе дочернее представление —
текстовое со словом Куналь.

00:00:41.580 --> 00:00:44.020
Оно появляется под первым текстом.

00:00:44.020 --> 00:00:47.540
Если скопировать это текстовое
представление и вставить его ниже этого,

00:00:47.540 --> 00:00:49.460
то что произойдет, по вашему мнению?

00:00:49.760 --> 00:00:53.770
Да, у нас есть еще один Куналь,
непосредственно под первым.

00:00:53.770 --> 00:00:56.840
Итак, получается, что если мы добавляем
текстовые представления здесь,

00:00:56.840 --> 00:01:01.070
они просто появляются
одно за другим в этом списке.

00:01:01.570 --> 00:01:03.570
Давайте рассмотрим код более внимательно.

00:01:03.570 --> 00:01:05.655
Он начинается с открывающей
угловой скобки,

00:01:05.655 --> 00:01:08.230
затем имя представления,
то есть LinearLayout.

00:01:08.230 --> 00:01:12.260
Затем перечисляются атрибуты,
и в конце закрывающая угловая скобка.

00:01:12.260 --> 00:01:15.220
Отметим, что тут нет прямой косой черты,
потому что это просто открывающий

00:01:15.220 --> 00:01:16.910
тег LinearLayout.

00:01:16.910 --> 00:01:19.790
Закрывающий тег находится
вот тут внизу, потому что мы

00:01:19.790 --> 00:01:24.470
хотим вставить дочерние элементы
между открывающим и закрывающим тегами.

00:01:24.470 --> 00:01:28.430
Но для этого текстового представления,
поскольку тут нет дочерних элементов,

00:01:28.430 --> 00:01:31.330
мы можем просто
использовать одиночный тег.

00:01:31.330 --> 00:01:35.330
Аналогично для этого текстового
представления и для представления здесь.

00:01:35.330 --> 00:01:38.410
Итак, если группа представлений
содержит дочерние элементы,

00:01:38.410 --> 00:01:42.850
мы должны вставить их между
открывающим и закрывающим тегами.

00:01:42.850 --> 00:01:45.900
Далее, вы, возможно, заметили
атрибут с именем Android orientation,

00:01:45.900 --> 00:01:48.670
который равен vertical.

00:01:48.670 --> 00:01:51.330
Мы не видели его раньше, поэтому
давайте обратимся к документации

00:01:51.330 --> 00:01:53.310
по Android, как я показывала вам ранее.

00:01:54.680 --> 00:01:58.575
Я открываю новое окно браузера
и ввожу android orientation.

00:01:59.075 --> 00:02:01.735
Первый результат поиска связан с
LinearLayout, и находится

00:02:01.735 --> 00:02:03.555
на сайте developer.android.com.

00:02:03.555 --> 00:02:04.595
Нажимаю на него.

00:02:04.595 --> 00:02:07.505
Как и документация по текстовым
представлениям, она немного перегружена.

00:02:07.505 --> 00:02:09.935
Мы можем игнорировать
большую часть текста тут.

00:02:09.935 --> 00:02:13.610
Нам просто нужно убедиться, что это
действительно страница по LinearLayout,

00:02:13.610 --> 00:02:16.150
и тогда мы прокрутим страницу
и рассмотрим атрибуты XML.

00:02:17.210 --> 00:02:21.790
Теперь ищем атрибут,
который называется Android orientation,

00:02:21.790 --> 00:02:22.790
вот он.

00:02:22.790 --> 00:02:24.530
Нажимаем на него,
чтобы узнать подробности.

00:02:25.390 --> 00:02:27.960
В описании говорится,
что этот атрибут определяет,

00:02:27.960 --> 00:02:31.660
является ли разметка столбцом или строкой.

00:02:31.660 --> 00:02:35.060
Значение этого атрибута —
horizontal для строки

00:02:35.060 --> 00:02:37.330
и vertical для столбца.

00:02:37.830 --> 00:02:40.480
Эти два значения показаны здесь.

00:02:40.480 --> 00:02:45.530
Отлично. В коде указано, что значение
android orientation равно vertical.

00:02:45.530 --> 00:02:49.410
Это объясняет, почему представления
отображаются в столбце.

00:02:49.410 --> 00:02:53.950
Чтобы удовлетворить наше любопытство,
надо попробовать и другое значение.

00:02:53.950 --> 00:02:57.460
Установим горизонтальную ориентацию
и посмотрим на результат.

00:02:57.460 --> 00:03:01.810
Перехожу к коду, стираю значение vertical.
Набираю значение horizontal.

00:03:01.810 --> 00:03:05.650
Теперь представления расположены
в горизонтальной строке.

00:03:05.650 --> 00:03:07.710
Не знаю, как насчет вас,
но мне не нравится читать

00:03:07.710 --> 00:03:09.310
список гостей по горизонтали.

00:03:09.310 --> 00:03:12.000
Но есть много других случаев,
когда вам понадобится

00:03:12.000 --> 00:03:15.040
горизонтальная линейная разметка.

00:03:15.040 --> 00:03:18.490
Например, при создании списка
можно расположить изображение слева,

00:03:18.490 --> 00:03:21.190
а описание справа.

00:03:21.190 --> 00:03:25.200
Вы сможете попробовать сделать
это сами через секунду,

00:03:25.200 --> 00:03:28.210
но сначала я хочу обратить внимание на
эту дополнительную строку кода.

00:03:28.210 --> 00:03:31.260
Это объявление пространства имен XML.

00:03:31.260 --> 00:03:36.020
Мы используем его, чтобы
указать, что все эти атрибуты

00:03:36.020 --> 00:03:38.200
относятся к Android.

00:03:38.200 --> 00:03:40.940
Вот почему все они начинаются с
android и двоеточия.

00:03:40.940 --> 00:03:45.580
Это сокращение для
уникального URL для Android.

00:03:45.580 --> 00:03:48.390
Вы также можете создавать
собственные атрибуты.

00:03:48.390 --> 00:03:52.840
Чтобы избежать конфликта имен, когда два
атрибута называются одинаково,

00:03:52.840 --> 00:03:57.595
но ведут себя по-разному,
мы всегда добавляем эту приставку,

00:03:57.595 --> 00:04:02.430
android:, чтобы указать
на атрибуты Android.

00:04:02.430 --> 00:04:06.970
Так что всегда добавляйте
объявление пространства имен XML

00:04:06.970 --> 00:04:10.110
в открывающем теге корневого
представления в файле XML.

00:04:11.710 --> 00:04:12.910
Теперь ваш черед.

00:04:12.910 --> 00:04:16.860
Теперь вы сможете поэкспериментировать
с кодом линейной разметки.

00:04:16.860 --> 00:04:19.890
Добавьте текстовые представления,
чтобы в столбце было больше элементов.

00:04:19.890 --> 00:04:23.350
Кого вы включите в список
гостей вашей вечеринки?

00:04:24.500 --> 00:04:28.450
Также попробуйте изменить атрибут
ориентации линейной разметки.

00:04:28.450 --> 00:04:30.770
Помните, что можно задать значение
vertical или horizontal.

