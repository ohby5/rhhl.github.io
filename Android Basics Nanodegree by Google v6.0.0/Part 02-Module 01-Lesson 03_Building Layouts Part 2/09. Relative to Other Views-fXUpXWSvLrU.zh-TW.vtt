WEBVTT
Kind: captions
Language: zh-TW

00:00:00.420 --> 00:00:03.469
因應其他同級檢視框配置子元件時

00:00:03.469 --> 00:00:06.190
可就其位置加入限制

00:00:06.190 --> 00:00:09.885
例如，一個 TextView 必須在另一 TextView 之上

00:00:09.885 --> 00:00:14.090
或一個 ImageView 必須在另一 TextView 的左方

00:00:14.090 --> 00:00:17.280
這些限制好比為安排

00:00:17.280 --> 00:00:17.900
晚宴派對座位表一般

00:00:18.910 --> 00:00:21.380
我們快要舉行生日派對

00:00:21.380 --> 00:00:23.540
就來看看派對的座位表

00:00:23.540 --> 00:00:25.140
我們邀請這些人參加晚宴

00:00:25.140 --> 00:00:28.330
但是他們想入座的位置是有所限制的

00:00:28.330 --> 00:00:30.550
有些人必須坐在好朋友旁

00:00:30.550 --> 00:00:33.490
另一些人有所謂的友敵

00:00:33.490 --> 00:00:36.120
因而不想坐在某些人旁邊

00:00:36.120 --> 00:00:39.860
考慮以上種種，我想出這個安排

00:00:39.860 --> 00:00:41.880
Kunal、Ben 和 Kagure 在上方

00:00:41.880 --> 00:00:45.900
Natalie、Lyla 和我在下方
而 Amy、Omoju 和 Jennie 則在這個角落

00:00:45.900 --> 00:00:49.400
那麼我們可在 XML 裡用 TextView

00:00:49.400 --> 00:00:51.040
和相對佈置來建立這個座位安排嗎？

00:00:51.040 --> 00:00:53.270
我們知道如何將檢視框置於角落

00:00:53.270 --> 00:00:57.398
Lyla TextView 會跟母元件的左邊邊緣和底部邊緣對齊

00:00:57.398 --> 00:01:01.390
Jennie TextView 會跟母元件的右邊邊緣和底部邊緣對齊

00:01:01.390 --> 00:01:04.510
Ben 則會跟母元件的頂部邊緣對齊

00:01:04.510 --> 00:01:07.280
順帶一提，我們假設母元件是整個螢幕般的大小

00:01:07.280 --> 00:01:11.360
所以我們將寬度和高度設為 <i>match_parent</i>

00:01:11.360 --> 00:01:12.430
好，回到 Ben 這裡

00:01:12.430 --> 00:01:14.550
他跟母元件的頂部對齊

00:01:14.550 --> 00:01:16.970
我們亦想將他水平置中

00:01:16.970 --> 00:01:20.320
而這三個檢視框可稱為錨點檢視框

00:01:20.320 --> 00:01:23.750
因為其他人的位置都因應這些人而編排的

00:01:23.750 --> 00:01:27.670
而無論其他人坐在哪，這些人都不會移動

00:01:27.670 --> 00:01:29.360
現在來加上其他人

00:01:29.360 --> 00:01:32.810
這裡有 Kunal，在 Ben 的左方

00:01:32.810 --> 00:01:35.259
但怎樣在 XML 表達呢？

00:01:35.259 --> 00:01:39.552
沒有具體屬性用於指明一個檢視框要在

00:01:39.552 --> 00:01:40.655
名叫 Ben 的檢視框之左方

00:01:40.655 --> 00:01:43.363
所有 Android 屬性名稱都是通用的

00:01:43.363 --> 00:01:46.940
可按你的意思用於任何情況中

00:01:46.940 --> 00:01:49.410
我們想將 Kunal 置於 Ben 的左方

00:01:49.410 --> 00:01:52.580
我們不認識任何已有屬性可這樣做

00:01:52.580 --> 00:01:53.768
但好在

00:01:53.768 --> 00:01:58.780
RelativeLayout 有一屬性
<i>android: layout_toLeftof</i>

00:01:58.780 --> 00:02:03.520
可將 Kunal TextView 置於另一檢視框的左方

00:02:03.520 --> 00:02:08.020
指明檢視框的做法是使用檢視框 ID

00:02:08.020 --> 00:02:10.000
我們可以給任何檢視框設定檢視框 ID 名稱

00:02:10.000 --> 00:02:13.110
亦不只限於 RelativeLayout

00:02:13.110 --> 00:02:16.275
在 RelativeLayout 或 LinearLayout

00:02:16.275 --> 00:02:18.200
或其他檢視組裡亦可

00:02:18.200 --> 00:02:21.710
在 Ben TextView，我們可以加入這個屬性 <i>android:id</i>

00:02:21.710 --> 00:02:23.860
屬性值便是 ID 名稱

00:02:23.860 --> 00:02:29.500
格式以 @ 符號為首，@ 專指 Android 應用程式的資源

00:02:29.500 --> 00:02:34.263
我們亦用過這個 @ 符號專指應用程式裡的圖像

00:02:34.263 --> 00:02:36.516
例如 @drawable

00:02:36.516 --> 00:02:38.950
然後指明資源類型

00:02:38.950 --> 00:02:41.017
這裡的資源類型為 <i>id</i>

00:02:41.017 --> 00:02:44.197
因為首次指定這個 id

00:02:44.197 --> 00:02:45.219
所以要同時加上加號

00:02:45.219 --> 00:02:50.120
然後為斜線，接著是檢視框的名稱

00:02:50.120 --> 00:02:53.190
這是用作 Ben TextView 的名稱

00:02:53.190 --> 00:02:55.240
名叫 <i>ben_text_view</i>

00:02:56.320 --> 00:02:59.470
基本要求是名稱不含空格

00:02:59.470 --> 00:03:00.937
所以我們使用底線間隔

00:03:00.937 --> 00:03:02.883
另需以字母開首

00:03:02.883 --> 00:03:06.229
並不含任何標點符號

00:03:07.250 --> 00:03:08.990
數字則不成問題

00:03:08.990 --> 00:03:14.500
這裡給 Ben 加上 <i>ben_text_view</i> 這個 ID

00:03:14.500 --> 00:03:16.130
其後可用於專指這個檢視框

00:03:16.130 --> 00:03:20.460
在 Kunal TextView，可以加上屬性 <i>layout_toLeftof</i>

00:03:20.460 --> 00:03:22.920
說明是在 Ben TextView 的左方

00:03:24.190 --> 00:03:28.390
用 @id 專指 Ben TextView 的 ID

00:03:28.390 --> 00:03:32.322
毋需用加號，因為之前已定義了那個 ID

00:03:32.322 --> 00:03:34.692
這是第二次使用那個 ID

00:03:34.692 --> 00:03:38.910
謹記檢視框 ID 名稱必須為獨一無二

00:03:38.910 --> 00:03:42.550
取名有關其內容會比較方便

00:03:42.550 --> 00:03:45.920
好，這樣就可將 Kunal 置於 Ben 的左方

00:03:45.920 --> 00:03:49.740
現在想將 Omoju 置於 Jennie 之上

00:03:49.740 --> 00:03:51.760
我們將要專指 Jennie

00:03:51.760 --> 00:03:53.980
所以該為 Jennie 建立 ID

00:03:53.980 --> 00:03:58.240
在 Jennie TextView 指明這個屬性並加入屬性值

00:03:58.240 --> 00:04:01.880
ID 名稱為 <i>jennie_text_view</i>

00:04:01.880 --> 00:04:04.550
在 Omoju TextView 加入這個屬性

00:04:04.550 --> 00:04:09.680
說明 Omoju 應在 <i>jennie_text_view</i> 的上方

00:04:09.680 --> 00:04:11.380
這是之前所建立的 ID

00:04:12.570 --> 00:04:13.850
來看看 XML 佈置

00:04:13.850 --> 00:04:18.010
這裡有相對佈置，其寬度和高度設為 <i>match_parent</i>

00:04:18.010 --> 00:04:19.870
然後有 <i>lyla_text_view</i>

00:04:19.870 --> 00:04:22.267
跟母元件的左下角對齊

00:04:22.267 --> 00:04:23.600
亦即我們在這裡所看到的

00:04:24.770 --> 00:04:26.314
然後有 <i>jennie_text_view</i>

00:04:26.314 --> 00:04:29.010
跟母元件的右下角對齊

00:04:29.010 --> 00:04:29.720
亦即是這裡

00:04:31.300 --> 00:04:32.876
然後有 <i>ben_text_view</i>

00:04:32.876 --> 00:04:35.900
跟母元件的頂部邊緣對齊

00:04:35.900 --> 00:04:38.290
同時水平置中

00:04:38.290 --> 00:04:39.880
這些是錨點檢視框

00:04:39.880 --> 00:04:42.460
現在就可以在他們四周編排其他檢視框的位置

00:04:42.460 --> 00:04:45.720
留意一下，我已為每個檢視框加上 ID

00:04:45.720 --> 00:04:48.040
這是 Ben TextView ID

00:04:48.040 --> 00:04:50.970
然後可將 Kunal TextView 置於 Ben 的左方

00:04:50.970 --> 00:04:56.930
Kunal 跟母元件頂部對齊，並置於 Ben 的左方

00:04:56.930 --> 00:04:58.525
我在這裡使用 Ben 的檢視框 ID

00:04:58.525 --> 00:05:02.025
然後將 Omoju TextView 置於 Jennie 上方

00:05:02.025 --> 00:05:04.915
Omoju 跟母元件的右邊邊緣對齊

00:05:04.915 --> 00:05:06.435
並置於 Jennie TextView 上方

00:05:07.505 --> 00:05:08.245
好

00:05:08.245 --> 00:05:11.465
更多朋友正確配置於這個佈置中

00:05:12.925 --> 00:05:15.475
以下的導師備註中附有 XML Visualizer 的連結

00:05:15.475 --> 00:05:19.270
內裡已有部份初始編碼

00:05:19.270 --> 00:05:20.910
查看一下，然後修改 XML

00:05:20.910 --> 00:05:24.200
以完成這個理想的佈置

00:05:24.200 --> 00:05:26.840
有些已配置的檢視框位置不正確

00:05:26.840 --> 00:05:28.060
所以你需加以修正

00:05:29.310 --> 00:05:32.490
順帶一提，我們剛介紹了許多新屬性

00:05:32.490 --> 00:05:34.680
不用急著牢記所有新屬性

00:05:34.680 --> 00:05:36.446
你可以隨即翻查

00:05:36.446 --> 00:05:40.460
只要搜尋「relativelayout layout params」即可

00:05:40.460 --> 00:05:45.260
點擊首個連結，即可查閱有關文本

00:05:45.260 --> 00:05:48.870
這裡的 XML 屬性全部可用於相對佈置裡的子檢視框

00:05:48.870 --> 00:05:53.290
用以指示相對佈置如何作出佈置

00:05:53.290 --> 00:05:54.755
有些是你所熟悉的

00:05:54.755 --> 00:06:00.370
如：<i>Layout_above</i>、<i>alignParentbottom</i>、
<i>alignParentright</i> 等等

00:06:00.370 --> 00:06:00.890
要注意一點，作教學之用

00:06:00.890 --> 00:06:05.510
XML Visualizer 不一定支援這裡全部的屬性

00:06:05.510 --> 00:06:08.630
然而，在 Android Studio 開發程式時

00:06:08.630 --> 00:06:10.050
則應能使用這裡全部的屬性

