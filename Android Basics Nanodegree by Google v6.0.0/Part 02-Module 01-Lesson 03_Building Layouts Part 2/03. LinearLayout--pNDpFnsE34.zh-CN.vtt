WEBVTT
Kind: captions
Language: zh-CN

00:00:00.330 --> 00:00:03.090
我们已经看到 LinearLayout

00:00:03.090 --> 00:00:05.270
怎样包含两个子 TextView

00:00:05.270 --> 00:00:08.480
顺便提一下 这些背景颜色 仅仅是用来帮助你

00:00:08.480 --> 00:00:13.210
理解父 TextView 中存在两个子 TextView 的教学工具

00:00:13.210 --> 00:00:15.940
实际在设备上不会显示红色和蓝色

00:00:15.940 --> 00:00:20.100
除非你在视图中特意将它们设为背景颜色

00:00:20.100 --> 00:00:23.110
为了让你明白我说什么 我们看一下 XML 可视化工具

00:00:23.110 --> 00:00:25.270
如果我们在 XML 可视化工具中写入代码

00:00:25.270 --> 00:00:27.570
这就是它在设备上显示的样子

00:00:27.570 --> 00:00:30.020
首先我们有一个 LinearLayout 的 ViewGroup 

00:00:30.020 --> 00:00:33.850
它是透明的 因为没有给它设置背景颜色

00:00:33.850 --> 00:00:36.680
第一个子视图是设定客户列表的 TextView

00:00:36.680 --> 00:00:38.780
在顶部显示

00:00:38.780 --> 00:00:41.580
第二个子视图是显示 Kunal 的 TextView

00:00:41.580 --> 00:00:44.020
在第一个 TextView 下显示

00:00:44.020 --> 00:00:47.540
现在 如果我复制这个 TextView 并且粘贴在它的下面

00:00:47.540 --> 00:00:49.760
你认为会发生什么？

00:00:49.760 --> 00:00:54.270
我们看到在第一个下面又显示一个 Kunal 

00:00:54.270 --> 00:00:57.340
这个模式是这样的 如果我们添加更多的 TextView

00:00:57.340 --> 00:01:01.570
它们就会一个接一个地显示

00:01:01.570 --> 00:01:03.570
现在 我们仔细地看一下代码

00:01:03.570 --> 00:01:05.655
它以一个左尖括号开始

00:01:05.655 --> 00:01:08.230
然后是视图名称 也就是 LinearLayout

00:01:08.230 --> 00:01:12.260
再然后一系列属性 最后有一个右尖括号

00:01:12.260 --> 00:01:15.220
注意 这里没有斜线 因为它本身就是

00:01:15.220 --> 00:01:16.910
LinearLayout 的起始标签

00:01:16.910 --> 00:01:19.790
结束标签在这 因为我们

00:01:19.790 --> 00:01:24.470
想在这两个标签之间插入子元素

00:01:24.470 --> 00:01:28.430
但是示例中 对于 TextView 中 因为没有子视图

00:01:28.430 --> 00:01:31.330
我们能用自结束标签作为结束

00:01:31.330 --> 00:01:35.330
这个 还有这个与上面的一样

00:01:35.330 --> 00:01:38.410
当我们说一个 ViewGroup 中含子视图时

00:01:38.410 --> 00:01:42.850
我们需要将他们插入在在开始和结束标签之间

00:01:42.850 --> 00:01:45.900
现在 你要注意的是这个

00:01:45.900 --> 00:01:48.670
值为垂直的 Android:orientation 属性

00:01:48.670 --> 00:01:50.330
在此之前我们没有见过

00:01:50.330 --> 00:01:53.310
我们看一下 Android 文档 之前给你看过

00:01:54.680 --> 00:01:59.075
我打开一个浏览器窗口 然后输入 android orientation

00:01:59.075 --> 00:02:01.735
搜索结果的第一行是关于 LinearLayout 

00:02:01.735 --> 00:02:03.555
它的网址是 developer.android.com

00:02:03.555 --> 00:02:04.495
点击一下

00:02:04.495 --> 00:02:07.505
像一个 TextView 文档 它有点难懂

00:02:07.505 --> 00:02:09.935
我们可以忽略大多数文本

00:02:09.935 --> 00:02:13.610
我们只需要校验 LinearLayout 这部分

00:02:13.610 --> 00:02:16.150
我们向下滚动鼠标 找到 XML 属性

00:02:17.210 --> 00:02:21.790
现在我们看一下 Android orientation 这个属性

00:02:21.790 --> 00:02:22.390
在这

00:02:22.390 --> 00:02:24.230
点进去 看一下更多细节

00:02:25.390 --> 00:02:27.960
描述说 这个属性

00:02:27.960 --> 00:02:31.660
决定布局是一列还是一行

00:02:31.660 --> 00:02:34.560
属性值为 horizontal 表示一行

00:02:34.560 --> 00:02:37.330
属性值为 vertical 表示一列

00:02:37.330 --> 00:02:40.480
两个值列举在这里

00:02:40.480 --> 00:02:45.530
我们的代码将 android orientation 的值设为垂直

00:02:45.530 --> 00:02:49.410
这就解释了视图为什么是以列显示

00:02:49.410 --> 00:02:53.950
为了满足我们的好奇心 我们试试另一个值

00:02:53.950 --> 00:02:57.960
我们将 orientation 的值设为水平 看看发生什么

00:02:57.960 --> 00:02:59.910
我进入代码编辑界面 删除垂直这个属性值

00:02:59.910 --> 00:03:05.150
然后键入水平 看 现在这个视图变成一行

00:03:05.150 --> 00:03:06.810
我不知道你怎么想

00:03:06.810 --> 00:03:09.310
但是我真的不喜欢横向阅读这些列表

00:03:09.310 --> 00:03:12.000
但有很多其他有用的例子

00:03:12.000 --> 00:03:15.040
你想要使用水平的 LinearLayout 

00:03:15.040 --> 00:03:18.490
例如 你想创建一个项目列表

00:03:18.490 --> 00:03:21.190
图片在左边 右边是描述

00:03:21.190 --> 00:03:25.200
一会我会让你自己试试这个例子 但是

00:03:25.200 --> 00:03:28.210
首先 我想指出另一行代码

00:03:28.210 --> 00:03:31.260
这就是 XML 命名空间声明

00:03:31.260 --> 00:03:36.020
我们使用这个命名空间就是为了指定所有属性

00:03:36.020 --> 00:03:38.200
都属于 android

00:03:38.200 --> 00:03:40.940
这就是以 android 冒号开始的原因

00:03:40.940 --> 00:03:45.580
实质上是很简单的操作 给 android 指定一个唯一的 URL

00:03:45.580 --> 00:03:48.390
你可以创建自己的自定义属性

00:03:48.390 --> 00:03:52.840
为了防止命名冲突 也就是两个属性名字相同

00:03:52.840 --> 00:03:57.595
但是行为不同 我们会在这添加前缀

00:03:57.595 --> 00:04:02.430
android: 表明这些是 android 属性

00:04:02.430 --> 00:04:06.970
基本上 时刻记住在你的 XML 文件的根视图中

00:04:06.970 --> 00:04:10.110
在起始标签后添加 XML 命名空间的声明

00:04:11.710 --> 00:04:12.910
现在轮到你了

00:04:12.910 --> 00:04:16.860
我们想让你完成 LinearLayout 代码的试验

00:04:16.860 --> 00:04:19.690
试着在这添加更多的 TextView 让它能有更多的项

00:04:19.690 --> 00:04:23.150
你想给你的派对呈上一份独特的嘉宾名单吗？

00:04:24.500 --> 00:04:28.450
尝试改变 LinearLayout 的 orientation 属性

00:04:28.450 --> 00:04:30.770
记住 它能够设置是垂直还是水平

