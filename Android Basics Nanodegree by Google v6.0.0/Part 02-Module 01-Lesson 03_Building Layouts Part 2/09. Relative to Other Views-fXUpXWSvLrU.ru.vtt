WEBVTT
Kind: captions
Language: ru

00:00:00.420 --> 00:00:03.469
Размещая дочерние элементы относительно
других представлениям одного уровня,

00:00:03.469 --> 00:00:06.190
можно добавить ограничения
на их расположение.

00:00:06.190 --> 00:00:09.885
Например, одно текстовое представление
должно быть выше другого,

00:00:09.885 --> 00:00:14.090
или одно изображение должно быть
слева от другого текстового представления.

00:00:14.090 --> 00:00:16.280
Все эти ограничения напоминают мне
рассаживание гостей

00:00:16.280 --> 00:00:17.900
на званном ужине.

00:00:18.010 --> 00:00:20.280
Намечается вечеринка в честь
дня рождения, поэтому

00:00:21.380 --> 00:00:23.540
давайте посмотрим план рассадки гостей
на ней.

00:00:23.540 --> 00:00:25.140
Мы пригласили всех этих людей на

00:00:25.140 --> 00:00:28.330
ужин, но существуют ограничения
на то, кто где хочет сидеть.

00:00:28.330 --> 00:00:30.550
Кто-то должен сидеть рядом
со своим лучшим другом.

00:00:30.550 --> 00:00:33.490
Других людей
можно назвать заклятыми друзьями.

00:00:33.490 --> 00:00:36.120
Поэтому они, возможно, не захотят
сидеть рядом.

00:00:36.120 --> 00:00:39.860
Принимая все это во внимание,
я пришла к этому макету.

00:00:39.860 --> 00:00:41.880
Здесь Кунал, Бен и Кагур.

00:00:41.880 --> 00:00:45.900
Натали, Лайла и я здесь внизу, а
Эмми, Омоджу и Дженни в этом углу.

00:00:45.900 --> 00:00:49.400
Смогли бы мы создать эту рассадку
в XML, используя текстовые представления и

00:00:49.400 --> 00:00:51.040
относительное расположение?

00:00:51.040 --> 00:00:53.270
Мы знаем, как располагать
представления в углах.

00:00:53.270 --> 00:00:56.298
Текстовое представление Лайла 
будет выровнено

00:00:56.398 --> 00:00:58.290
Текстовое представление Дженни
будет выровнено

00:00:58.291 --> 00:00:59.689
по базовому левому и нижнему краю.

00:01:01.390 --> 00:01:04.510
Для Бена выравниваем по
базовому верхнему краю.

00:01:04.510 --> 00:01:07.280
Мы предполагаем, что
базой является полная ширина и

00:01:07.280 --> 00:01:11.360
высота экрана, и устанавливаем
соответствие по ширине и высоте.

00:01:11.360 --> 00:01:12.430
Итак, вернемся к Бену.

00:01:12.430 --> 00:01:14.550
Он выравнивается по верхнему краю
базового элемента.

00:01:14.550 --> 00:01:16.970
Мы также хотим центрировать
его по горизонтали.

00:01:16.970 --> 00:01:20.320
Раньше можно было бы назвать эти
три представления привязками.

00:01:20.320 --> 00:01:23.750
Потому что все остальные располагаются
по отношению к этим людям.

00:01:23.750 --> 00:01:27.670
Эти люди не будут двигаться, независимо 
от того, где сидят все остальные.

00:01:27.670 --> 00:01:29.360
Давайте добавим еще одного человека.

00:01:29.360 --> 00:01:32.810
Здесь у нас Кунал,
который находится слева от Бена.

00:01:32.810 --> 00:01:35.259
Но как это выразить в XML-коде?

00:01:35.259 --> 00:01:37.752
Нет конкретного атрибута, который 
указывает, что представление

00:01:37.753 --> 00:01:39.051
должно быть слева

00:01:39.552 --> 00:01:40.655
от представления Бена.

00:01:40.655 --> 00:01:43.363
Все имена атрибутов для
Android являются общими,

00:01:43.363 --> 00:01:46.940
поэтому работают для
любых случаев использования.

00:01:46.940 --> 00:01:49.410
Мы хотим расположить Кунала
слева от Бена, но

00:01:49.410 --> 00:01:52.580
мы не знаем ни одно из существующих
имен атрибутов, которое может это сделать.

00:01:52.580 --> 00:01:53.768
К счастью,

00:01:53.768 --> 00:01:58.780
относительный макет имеет атрибут
android: layout_toLeftof.

00:01:58.780 --> 00:02:01.220
Это означает, что текстовое
представление Кунал

00:02:01.221 --> 00:02:03.119
должно быть слева 
от некоторого представления.

00:02:03.520 --> 00:02:08.020
А чтобы указать представление,
мы используем идентификаторы.

00:02:08.020 --> 00:02:10.100
Можно присвоить идентификатор
любому представлению.

00:02:10.100 --> 00:02:12.810
Они не должны быть специально
адресованы относительному макету.

00:02:13.110 --> 00:02:16.275
Они могут быть расположены в
относительном или линейном макете или

00:02:16.275 --> 00:02:18.200
в любой другой группе представлений.

00:02:18.200 --> 00:02:21.710
Для текстового представления Бен
можно добавить атрибут android:id.

00:02:21.710 --> 00:02:23.860
Значением будет идентификатор.

00:02:23.860 --> 00:02:29.500
Формат начинается с символа @. @
относится к ресурсу в приложении Android.

00:02:29.500 --> 00:02:34.263
Мы также видели этот символ @
для ссылок на изображения в приложении.

00:02:34.263 --> 00:02:36.516
Например, в приложении Drawable.

00:02:36.516 --> 00:02:38.950
Затем мы указываем тип ресурса.

00:02:38.950 --> 00:02:41.117
В данном случае
типом ресурса является идентификатор.

00:02:41.117 --> 00:02:43.797
Мы также добавим символ плюс,
поскольку впервые

00:02:43.897 --> 00:02:45.119
объявляем этот идентификатор.

00:02:45.219 --> 00:02:50.120
Затем идет косая черта и
имя представления.

00:02:50.120 --> 00:02:53.190
Это имя, которое мы выбираем для
текстового представления Бен.

00:02:53.190 --> 00:02:55.240
Назовем его ben_text_view.

00:02:56.320 --> 00:02:58.470
Основные требования:
имя не должно содержать пробелы.

00:02:58.470 --> 00:03:00.637
Вот почему мы используем
здесь символы подчеркивания.

00:03:00.937 --> 00:03:02.883
Имя должно начинаться с буквы и

00:03:02.883 --> 00:03:06.229
не может содержать никакие
непонятные символы пунктуации.

00:03:07.250 --> 00:03:08.990
Цифры можно использовать.

00:03:08.990 --> 00:03:14.500
В данном случае мы присваиваем Бену
идентификатор ben_text_view.

00:03:14.500 --> 00:03:16.130
Так мы сможем ссылаться на него позже.

00:03:16.130 --> 00:03:20.460
В представлении Кунал мы можем добавить
атрибут layout_toLeftof и

00:03:20.460 --> 00:03:22.920
указать, что оно должно быть слева от
представления Бен.

00:03:24.190 --> 00:03:28.390
Мы ссылаемся на идентификатор
представления Бен, используя @id.

00:03:28.390 --> 00:03:31.122
Тут не нужно использовать символ плюс,
потому что мы уже определили

00:03:31.123 --> 00:03:32.221
этот идентификатор.

00:03:32.322 --> 00:03:34.692
Мы во второй раз
используем идентификатор.

00:03:34.692 --> 00:03:38.910
Назначая идентификаторы для представлений,
убедитесь, что они уникальны.

00:03:38.910 --> 00:03:42.550
Обычно выбирается что-то связанное с
контентом представления.

00:03:42.550 --> 00:03:45.920
Таким образом можно
разместить Кунала слева от Бена.

00:03:45.920 --> 00:03:49.740
Теперь, например,
расположим Омоджу выше Дженни.

00:03:49.740 --> 00:03:51.760
Поскольку мы собираемся
ссылаться на Дженни,

00:03:51.760 --> 00:03:53.980
нужно создать идентификатор для Дженни.

00:03:53.980 --> 00:03:56.440
В представлении Дженни мы указываем
этот атрибут

00:03:56.641 --> 00:03:57.939
и присваиваем ему это значение.

00:03:58.240 --> 00:04:01.880
Имя идентификатора — jennie_text_view.

00:04:01.880 --> 00:04:04.550
В представлении Омоджу
мы добавляем этот атрибут.

00:04:04.550 --> 00:04:08.980
Он указывает, что Омоджу надо
расположить выше jennie_text_view.

00:04:08.980 --> 00:04:10.880
Это тот идентификатор, который
мы создали здесь.

00:04:12.570 --> 00:04:13.850
Посмотрим на макет XML.

00:04:13.850 --> 00:04:18.010
У нас есть относительный макет с
шириной и высотой match_parent.

00:04:18.010 --> 00:04:19.870
Затем есть представление lyla_text_view.

00:04:19.870 --> 00:04:22.367
Оно выравнивается по левому нижнему
углу базового элемента, что

00:04:22.367 --> 00:04:23.700
мы и видим здесь.

00:04:24.770 --> 00:04:26.514
Затем есть представление jennie_text_view.

00:04:26.514 --> 00:04:28.910
Оно выравнивается по правому нижнему
углу базового элемента.

00:04:29.010 --> 00:04:30.020
Вот тут.

00:04:31.300 --> 00:04:32.876
Затем есть представление ben_text_view.

00:04:32.876 --> 00:04:35.900
Оно выравнивается по верхнему
краю базового элемента.

00:04:35.900 --> 00:04:38.290
А также центрируется по горизонтали.

00:04:38.290 --> 00:04:39.880
Это представления-привязки, и

00:04:39.880 --> 00:04:42.460
теперь можно располагать
другие представления вокруг них.

00:04:42.460 --> 00:04:45.720
Для каждого из представлений
я уже добавила идентификатор.

00:04:45.720 --> 00:04:48.040
Это идентификатор представления Бен.

00:04:48.040 --> 00:04:50.970
Теперь можно разместить
представление Кунал слева от Бена.

00:04:50.970 --> 00:04:54.530
Я выравниваю Кунала
по верхней границе базового элемента

00:04:54.554 --> 00:04:56.554
и слева от представления Бена.

00:04:56.930 --> 00:04:58.925
Тут я использую идентификатор
представления Бена.

00:04:58.925 --> 00:05:01.525
Расположим
представление Омоджу над Дженни.

00:05:02.025 --> 00:05:04.915
Омоджу выравнивается по правому
краю базового элемента и

00:05:04.915 --> 00:05:06.435
выше представления Дженни.

00:05:07.505 --> 00:05:08.645
Хорошо.

00:05:08.645 --> 00:05:11.565
Итак, больше друзей
правильно расположены в этом макете.

00:05:12.925 --> 00:05:15.475
В примечаниях инструктора ниже
есть ссылка

00:05:15.475 --> 00:05:19.270
на XML Visualizer, где уже есть
некоторый исходный код.

00:05:19.270 --> 00:05:20.910
Двигаемся дальше и изменяем XML, чтобы

00:05:20.910 --> 00:05:22.200
сделать
желаемый макет для всех.

00:05:22.200 --> 00:05:24.440
Некоторые из представлений уже
расположены неправильно,

00:05:26.440 --> 00:05:27.760
поэтому вам нужно их исправить.

00:05:29.310 --> 00:05:32.490
Кстати, мы только что представили
множество новых атрибутов.

00:05:32.490 --> 00:05:34.680
Но вы не должны
запоминать их.

00:05:34.680 --> 00:05:36.446
Вы можете посмотреть их в любое время.

00:05:36.446 --> 00:05:40.460
Можно просто просмотреть
параметры относительного макета.

00:05:40.460 --> 00:05:45.260
Если нажать на первую ссылку,
откроется необходимая документация.

00:05:45.260 --> 00:05:48.870
Это все атрибуты XML, которые можно
использовать для дочерних представлений

00:05:48.870 --> 00:05:53.290
в относительном макете, чтобы
он знал, как их расположить.

00:05:53.290 --> 00:05:55.055
Вот некоторые, которые вам
уже знакомы.

00:05:55.055 --> 00:05:57.570
Layout_above, alignParentbottom,
alignParentright и так далее.

00:06:00.370 --> 00:06:01.390
Отметим, что для

00:06:01.390 --> 00:06:04.110
целей обучения XML Visualizer
может поддерживать не все эти атрибуты.

00:06:04.210 --> 00:06:06.530
Тем не менее, при разработке
приложения в Android Studio вы

00:06:06.630 --> 00:06:08.150
сможете использовать все эти атрибуты.

