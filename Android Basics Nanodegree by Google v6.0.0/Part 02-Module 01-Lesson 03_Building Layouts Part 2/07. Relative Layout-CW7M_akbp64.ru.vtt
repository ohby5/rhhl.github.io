WEBVTT
Kind: captions
Language: ru

00:00:00.390 --> 00:00:03.980
Мы знаем, что в линейной
разметке может быть вертикальная

00:00:03.980 --> 00:00:06.140
или горизонтальная ориентация.

00:00:06.140 --> 00:00:09.380
Мы также знаем, что отдельные
представления могут иметь значения ширины

00:00:09.380 --> 00:00:12.150
для заполнения дополнительного
пространства родительского элемента.

00:00:12.710 --> 00:00:15.020
Сейчас мы собираемся потратить
некоторое время на изучение

00:00:15.020 --> 00:00:16.850
группы представлений
относительной разметки.

00:00:16.850 --> 00:00:19.510
Это позволит вам
создавать более гибкие разметки.

00:00:19.910 --> 00:00:22.140
Вспомним относительную разметку Рэя.

00:00:22.140 --> 00:00:25.590
Он папа и представлен
здесь этой группой представлений.

00:00:25.590 --> 00:00:29.250
Он помогает разместить дочерние
представления внутри этого контейнера.

00:00:29.250 --> 00:00:32.360
С помощью относительной разметки
можно разместить дочерний элемент

00:00:32.360 --> 00:00:34.940
относительно родительского, например,
в верхней или нижней части.

00:00:35.850 --> 00:00:39.680
Также можно размещать одни дочерние
элементы относительно других.

00:00:39.680 --> 00:00:40.920
Например, вот так.

00:00:40.920 --> 00:00:44.520
Сначала рассмотрим
размещение представлений

00:00:44.520 --> 00:00:45.780
относительно родительского.

00:00:45.780 --> 00:00:50.220
В этом примере этот элемент
соответствует по ширине

00:00:50.220 --> 00:00:53.550
и высоте родительскому,
поэтому имеет размер экрана устройства.

00:00:53.550 --> 00:00:56.660
Дочерние элементы внутри
относительной разметки можно расположить

00:00:56.660 --> 00:01:00.880
по левому, верхнему, правому или нижнему
краю родительского элемента.

00:01:00.880 --> 00:01:04.519
Вот код для него,
XML для дочерних представлений.

00:01:04.519 --> 00:01:08.540
Например, для изображения или текстового
представления можно добавить эти атрибуты.

00:01:08.540 --> 00:01:14.440
Имя атрибута соответствует следующему
формату — android:layout_alignParentTop.

00:01:14.440 --> 00:01:17.120
Этот атрибут определяет,
будет ли дочернее представление

00:01:17.120 --> 00:01:19.400
выровнено по верхнему краю родительского.

00:01:19.400 --> 00:01:22.640
Возможные значения для него:
true или false.

00:01:22.640 --> 00:01:25.780
Если значение равно true, представление
выравнивается по верху родительского.

00:01:25.780 --> 00:01:28.540
Если false, выравнивание не выполняется.

00:01:28.540 --> 00:01:30.990
Эти атрибуты предназначены
для других границ.

00:01:30.990 --> 00:01:34.800
Например, alignParentBottom
для выравнивания по нижнему краю.

00:01:34.800 --> 00:01:37.960
alignParentLeft для выравнивания по левому
краю родительского представления.

00:01:37.960 --> 00:01:41.500
А также alignParentRight для
выравнивания по правому краю.

00:01:42.050 --> 00:01:44.970
Можно комбинировать и использовать
несколько атрибутов одновременно.

00:01:45.980 --> 00:01:47.980
Например, рассмотрим
это представление изображения.

00:01:48.680 --> 00:01:52.070
Установим для атрибута
alignParentTop значение true,

00:01:52.070 --> 00:01:54.850
потому что оно выравнивается
по верхнему краю родительского элемента.

00:01:54.850 --> 00:01:57.110
Оно также выравнивается по
левому и правому краям.

00:01:57.510 --> 00:02:00.220
Установим слева и справа значения true.

00:02:01.270 --> 00:02:04.896
Оно не выравнивается по нижнему
краю, поэтому выбираем значение false.

00:02:06.060 --> 00:02:08.374
Текстовое представление здесь
выравнивается по нижнему,

00:02:08.410 --> 00:02:11.430
правому и левому краям
родительского элемента.

00:02:12.580 --> 00:02:15.910
Итак, alignParentBottom должно быть
равно true, alignParentLeft — true,

00:02:15.910 --> 00:02:19.809
alignParentRight должно быть true,
но значение alignParentTop — false.

00:02:21.280 --> 00:02:25.540
Помимо размещения дочернего элемента
в верхней или нижней части экрана

00:02:25.540 --> 00:02:27.940
можно также указать конкретные углы.

00:02:28.440 --> 00:02:31.850
Чтобы разместить текстовое представление
birthday в верхнем левом углу,

00:02:31.850 --> 00:02:36.190
укажем для alignParentTop значение true и
для alignParentLeft также значение true.

00:02:37.350 --> 00:02:39.560
Чтобы разместить представление в
правом верхнем углу,

00:02:39.560 --> 00:02:43.450
мы хотим выровнять его по верхнему
и правому краю родительского элемента.

00:02:43.450 --> 00:02:46.280
Итак, значение alignParentTop равно true
и alignParentRight равно true.

00:02:47.180 --> 00:02:50.850
Для нижнего левого угла мы
выравниваем по левому и нижнему краю

00:02:50.850 --> 00:02:51.930
родительского элемента.

00:02:52.780 --> 00:02:54.990
Поэтому указываем для alignParentBottom
значение true.

00:02:54.990 --> 00:02:56.710
И для alignParentLeft значение true.

00:02:57.240 --> 00:03:00.480
Эти значения равны false, это
значения по умолчанию,

00:03:00.480 --> 00:03:02.240
поэтому их не нужно включать в код XML.

00:03:03.140 --> 00:03:06.170
И для последнего угла
выравниваем по правому и нижнему краям

00:03:06.170 --> 00:03:07.330
родительского элемента.

00:03:07.330 --> 00:03:10.940
Поэтому значения alignParentBottom
и alignParentRight равны true.

00:03:10.940 --> 00:03:12.210
Остальные два значения false.

00:03:12.210 --> 00:03:14.180
Их можно не включать в код.

00:03:14.180 --> 00:03:17.140
Верите вы или нет, есть еще много
атрибутов, которые можно установить.

00:03:17.140 --> 00:03:20.190
Также можно отцентрировать представление
по горизонтали, указав для атрибута

00:03:20.190 --> 00:03:23.030
android:layout_CenterHorizonta
значение true.

00:03:23.030 --> 00:03:27.530
Также можно добавить его к атрибутам,
изученным нами ранее.

00:03:27.530 --> 00:03:29.350
Итак, если элемент выровнен
по нижнему краю

00:03:29.350 --> 00:03:31.520
и отцентрирован по горизонтали,
он будет выглядеть так.

00:03:32.220 --> 00:03:34.870
Последний атрибут, который я покажу —
layout_centerVertical.

00:03:34.870 --> 00:03:37.218
При значении true он
центрирует представление

00:03:37.230 --> 00:03:39.445
по вертикали внутри
родительского представления.

00:03:39.545 --> 00:03:42.135
Это текстовое представление
выровнено по левому краю,

00:03:42.147 --> 00:03:43.915
хотя мы не задали это значение.

00:03:44.015 --> 00:03:47.085
Это потому, что все представления,
добавленные в относительную

00:03:47.085 --> 00:03:51.550
разметку, по умолчанию располагаются
в левом верхнем углу группы представлений.

00:03:51.550 --> 00:03:54.400
Все эти атрибуты называются
параметрами разметки группы представлений.

00:03:54.400 --> 00:03:58.100
Хотя они и объявлены
в дочерних элементах XML,

00:03:58.100 --> 00:04:00.384
они используются родительской
группой представлений

00:04:00.384 --> 00:04:02.128
для размещения дочерних элементов.

00:04:02.440 --> 00:04:05.098
Все они начинаются 
с layout и подчеркивания.

00:04:05.098 --> 00:04:08.950
Это также соответствует структуре
layout_width и layout_height,

00:04:08.950 --> 00:04:10.960
с которыми вы уже знакомы.

00:04:10.960 --> 00:04:13.030
Эти два атрибута также
являются параметрами разметки

00:04:13.042 --> 00:04:14.810
группы представлений,
поскольку используются

00:04:14.810 --> 00:04:16.785
родительской группой
представлений для определения

00:04:16.797 --> 00:04:18.519
расположения и размера дочерних элементов.

00:04:18.519 --> 00:04:22.089
Вот XML для относительной разметки
и ее дочерних элементов.

00:04:22.089 --> 00:04:24.450
Вы можете перейти по ссылке ниже.

00:04:24.450 --> 00:04:28.110
Есть открывающий тег относительной
разметки и закрывающий тег здесь внизу,

00:04:28.110 --> 00:04:30.740
а также дочерние элементы между ними.

00:04:30.740 --> 00:04:34.490
Для ширины и высоты RelativeLayout
задано значение match_parent.

00:04:34.490 --> 00:04:36.320
Так как это разметка для всего приложения,

00:04:36.320 --> 00:04:38.970
она займет весь экран.

00:04:39.070 --> 00:04:42.310
Есть три дочерних текста
внутри RelativeLayout.

00:04:42.310 --> 00:04:45.380
Первый из них — Happy.

00:04:45.380 --> 00:04:47.536
Значения ширины и высоты
равны wrap_content,

00:04:47.548 --> 00:04:49.090
и есть дополнительные атрибуты,

00:04:49.090 --> 00:04:51.347
указывающие относительной разметке,
где расположить

00:04:51.359 --> 00:04:53.420
это дочернее текстовое представление.

00:04:53.520 --> 00:04:56.060
Мы говорим выровнять
по правому и верхнему краю

00:04:56.060 --> 00:04:58.290
родительского элемента.

00:04:58.290 --> 00:05:01.900
Итак, текст Happy размещается
в правом верхнем углу экрана.

00:05:01.900 --> 00:05:05.670
Для текстового представления birthday
ширина и высота также равны wrap_content.

00:05:05.670 --> 00:05:09.100
Далее мы хотим выровнять его по нижнему
и левому краям родительского элемента.

00:05:09.100 --> 00:05:12.750
Нижний и левый края
формируют вот этот угол.

00:05:12.750 --> 00:05:16.690
Это последнее представление с текстом
To You не имеет конкретных

00:05:16.690 --> 00:05:19.750
атрибутов, указывающих на расположение
относительно родительского элемента.

00:05:19.750 --> 00:05:22.410
Нам известно только, что ширина и
высота равны wrap_content.

00:05:22.410 --> 00:05:25.703
Как я говорила ранее, если вы не
указываете размещение дочернего элемента,

00:05:25.703 --> 00:05:29.267
по умолчанию оно добавляется
в левый верхний угол экрана.

