WEBVTT
Kind: captions
Language: zh-CN

00:00:00.300 --> 00:00:02.670
我们已经为派对写好了一个客户列表

00:00:02.670 --> 00:00:05.660
等等 这是生日派对的列表 对吗 Catherine?

00:00:05.660 --> 00:00:06.700
对

00:00:06.700 --> 00:00:08.109
我真希望自己在列表里

00:00:09.140 --> 00:00:10.470
我们来看看吧

00:00:11.930 --> 00:00:14.010
我感觉它很小

00:00:14.010 --> 00:00:15.160
说到小的话

00:00:15.160 --> 00:00:18.010
我们讨论一下在屏幕上视图的尺寸

00:00:18.010 --> 00:00:21.180
我们使用固定的高度值 就是 dp 对吗？

00:00:21.180 --> 00:00:23.720
宽和高

00:00:23.720 --> 00:00:25.640
我们也可以在视图中设置 wrap_content

00:00:25.640 --> 00:00:28.275
对 一种奇怪的说法 这个视图将会根据

00:00:28.275 --> 00:00:29.684
内容的多少来改变大小

00:00:29.684 --> 00:00:30.549
内容变大

00:00:30.549 --> 00:00:32.880
视图变大 内容变小 视图会变小

00:00:32.880 --> 00:00:35.300
还有第三个 叫做 match parent

00:00:35.300 --> 00:00:37.930
看起来有点奇怪

00:00:37.930 --> 00:00:41.840
听起来像是给单身父母的相亲网站

00:00:41.840 --> 00:00:42.600
并不是这样的

00:00:42.600 --> 00:00:47.370
Match parent 的意思是这个视图和它的父视图等宽或等高

00:00:47.370 --> 00:00:48.446
也就是说

00:00:48.446 --> 00:00:51.400
我是视图 我有一个父视图 我的宽和高

00:00:51.400 --> 00:00:53.833
与我的父视图一样

00:00:53.840 --> 00:00:55.920
确实 这是总结

00:00:55.920 --> 00:00:59.800
你设置的一系列视图的不同值就是宽度

00:00:59.800 --> 00:01:01.090
宽和高的固定单位是 dp

00:01:01.090 --> 00:01:02.910
对 你也可以设成 wrap_content

00:01:02.910 --> 00:01:04.986
下一个我们要尝试的是

00:01:04.986 --> 00:01:06.780
match_parent

00:01:06.780 --> 00:01:10.160
这有一些关于如何在线性布局中设置子视图中不同宽

00:01:10.160 --> 00:01:13.770
能影响最后的用户界面的例子

00:01:13.770 --> 00:01:17.780
在示例中 我们设置每一个子视图的宽度为固定值 200dp

00:01:19.070 --> 00:01:22.590
如果每个视图中的内容大于 200dp

00:01:22.590 --> 00:01:26.330
你会有缺少某些内容的风险 像这样

00:01:26.330 --> 00:01:30.460
在这个例子中 我们设置子视图的宽度为 wrap_content

00:01:31.600 --> 00:01:33.500
现在所有的内容都显示出来了 但是

00:01:33.500 --> 00:01:36.930
每个视图的宽度都是根据它里面的内容来改变的

00:01:38.090 --> 00:01:42.020
在这个例子中 我们设置子视图的宽度为 match_parent

00:01:42.020 --> 00:01:46.650
现在你能看到子视图的宽度和父 ViewGroup 的宽度一样

00:01:46.650 --> 00:01:48.540
不管它里面的内容是什么

00:01:49.680 --> 00:01:54.070
这些值同样适用于视图的高度

00:01:54.070 --> 00:01:59.240
在示例中 我们设置每一个子视图的高度为固定值 200dp

00:01:59.240 --> 00:02:01.570
如果它的内容比这个高度值大

00:02:01.570 --> 00:02:04.250
你就有缺少某些内容的风险

00:02:05.400 --> 00:02:09.919
在这个示例中 我们设置子视图的高度为 wrap_content

00:02:09.919 --> 00:02:12.040
所有的内容都会显示在屏幕上

00:02:12.040 --> 00:02:15.650
而且不会有缺少的内容 因为 TextView 的大小

00:02:15.650 --> 00:02:16.920
取决于里面内容

00:02:17.940 --> 00:02:22.790
在这个示例中 我们设置子视图的高度为 match_parent

00:02:22.790 --> 00:02:25.300
这种方式的话 子视图就会和父视图一样高

00:02:25.300 --> 00:02:26.720
不管里面的内容是什么

00:02:27.730 --> 00:02:29.980
现在我们打开 XML可视化工具

00:02:29.980 --> 00:02:32.980
试试父视图中的代码

00:02:32.980 --> 00:02:36.670
我们给你一个有起始代码的 XML 可视化工具的链接

00:02:36.670 --> 00:02:37.910
在讲师注释下面

00:02:39.050 --> 00:02:41.570
在这个例子中 LinearLayout 是这个布局的根视图

00:02:41.570 --> 00:02:44.460
它是第一个和最外面的视图

00:02:45.580 --> 00:02:49.390
如果我们把根视图的宽和高都设为 match_parent

00:02:49.390 --> 00:02:51.870
并且我们把它设为应用的主要布局

00:02:51.870 --> 00:02:55.400
这个线性布局和设备屏幕的大小是一样的

00:02:56.840 --> 00:03:00.300
我给你展示一下设置线性布局的背景

00:03:00.300 --> 00:03:04.400
为不透明颜色

00:03:04.400 --> 00:03:07.100
如果在线性布局中 将背景设为灰色

00:03:07.100 --> 00:03:11.660
然后你会看到 灰色延伸满整个设备屏幕

00:03:11.660 --> 00:03:13.370
现在 如果我将这些视图的的宽和高

00:03:13.370 --> 00:03:15.980
改为 match_parent 会发生什么？

00:03:15.980 --> 00:03:18.450
为了使每个视图的边界更清晰

00:03:18.450 --> 00:03:21.510
我会给每个视图设置一个背景颜色

00:03:21.510 --> 00:03:25.660
现在 我将这个 TextView 的高设为 match_parent

00:03:25.660 --> 00:03:28.270
顺便 你拼写一下 match_parent

00:03:28.270 --> 00:03:32.530
你会看到这个 TextView 占据这个父视图的全部高度

00:03:32.530 --> 00:03:35.550
不幸的是 它将屏幕上的其他东西都掩盖

00:03:35.550 --> 00:03:36.580
我们不想这样

00:03:36.580 --> 00:03:38.320
我们将它改回 wrap_content

00:03:39.330 --> 00:03:39.950
好

00:03:39.950 --> 00:03:42.539
我们将宽改为 match_parent 来看看它是什么样子

00:03:43.750 --> 00:03:48.580
现在 TextView 的宽度和父视图一样

00:03:48.580 --> 00:03:50.260
也就是说 和设备屏幕一样宽

00:03:51.750 --> 00:03:54.940
如果我将其他的 TextView 也改为 match_parent

00:03:54.940 --> 00:03:58.610
你会看到它也开始占据父视图的整个宽度

00:03:58.610 --> 00:04:01.740
我想指出的还有一件事

00:04:01.740 --> 00:04:04.860
每次你看到一个以 layout_ 开始的属性

00:04:04.860 --> 00:04:10.080
像 layout_height 或者 layout_weight 它们实际上是 ViewGroup 的布局参数

00:04:10.080 --> 00:04:13.480
父视图使用它们来决定

00:04:13.480 --> 00:04:14.849
这些视图的大小和位置

00:04:16.190 --> 00:04:19.110
同时 其他的属性 像背景 文字大小和文本

00:04:19.110 --> 00:04:23.630
是由 TextView 就自己本身的样式来操作的

00:04:23.630 --> 00:04:27.360
但是视图组布局参数是由父视图来操作的

00:04:27.360 --> 00:04:30.460
现在 该你尝试设置不同的宽和高的值了

00:04:30.460 --> 00:04:33.890
起始代码的 XML 可视化工具的链接

00:04:33.890 --> 00:04:35.820
在教学笔记下面

00:04:35.820 --> 00:04:38.970
试着改变每个 TextView 的宽和高的值

00:04:38.970 --> 00:04:43.270
你可以设置固定 dp 值 wrap_content 或 match_parent

00:04:43.270 --> 00:04:46.730
记住对于每个视图 当你做的时候 宽和高的值不必相称

00:04:46.730 --> 00:04:48.600
当你完成后
点击这个复选框继续

