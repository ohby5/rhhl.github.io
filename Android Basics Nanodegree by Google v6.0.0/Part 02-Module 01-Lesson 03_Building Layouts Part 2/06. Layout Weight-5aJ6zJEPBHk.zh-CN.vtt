WEBVTT
Kind: captions
Language: zh-CN

00:00:00.920 --> 00:00:04.230
要建立这个布局 我喜欢首先概括性的想一下

00:00:04.230 --> 00:00:08.850
在敲代码之前 先确保有将要做什么

00:00:08.850 --> 00:00:11.890
首先 我们注意到这是一个竖直 LinearLayout

00:00:11.890 --> 00:00:13.010
因为控件是垂直一列

00:00:13.010 --> 00:00:14.680
我们有三个子视图

00:00:14.680 --> 00:00:17.910
一个 ImageView、一个 TextView 和一个 TextView

00:00:17.910 --> 00:00:21.590
首先确定每个视图的宽度

00:00:22.680 --> 00:00:26.130
因为整个视图占据了设备全部宽度和高度

00:00:26.130 --> 00:00:30.270
这个竖直 Linear Layout 的高和宽都是 match_parent

00:00:30.270 --> 00:00:33.810
对于 ImageView 我们想让它和父视图一样宽

00:00:33.810 --> 00:00:35.920
这样就和设备一样宽了

00:00:35.920 --> 00:00:38.170
因此我们设置成 match_parent

00:00:38.170 --> 00:00:39.670
另外两个 TextView 也一样

00:00:39.670 --> 00:00:43.190
我们希望它们匹配设备的整个宽度 因此设置为 match_parent

00:00:43.190 --> 00:00:45.330
然后设置每个视图的高度

00:00:45.330 --> 00:00:49.430
这两个 TextView 很简单 因为它们是根据里面内容匹配的

00:00:49.430 --> 00:00:53.080
因此我们设置每个 TextView 为 wrap_content

00:00:53.080 --> 00:00:56.540
并且权值设为0 因为我们并不想改变这些值

00:00:56.540 --> 00:01:00.400
即使父视图中有可用空间

00:01:00.400 --> 00:01:02.800
现在 ImageView 是最困难的部分

00:01:02.800 --> 00:01:06.290
我们想让图片的高度随着父视图可用空间的变化而变化

00:01:06.290 --> 00:01:10.229
这取决于设备设备大小的变化

00:01:11.250 --> 00:01:13.190
我们用权重来实现

00:01:13.190 --> 00:01:16.180
设置 ImageView 的高度初始值为 0dp

00:01:16.180 --> 00:01:18.160
权重设为1

00:01:18.160 --> 00:01:20.720
因为其他子视图没有权重

00:01:20.720 --> 00:01:24.350
所以父视图中的任何可用空间都会被赋予 

00:01:24.350 --> 00:01:27.920
ImageView 高度设为 0dp 的原因是

00:01:27.920 --> 00:01:29.840
它是一个竖直LinearLayout

00:01:29.840 --> 00:01:32.040
所以它会垂直填充

00:01:32.040 --> 00:01:35.400
要先确定宽度我们才能确定高度

00:01:36.530 --> 00:01:38.280
这个是说明链接

00:01:38.280 --> 00:01:39.940
里面有一些代码

00:01:39.940 --> 00:01:43.590
尽管视图的位置并不对 那我们一起修改一下

00:01:43.590 --> 00:01:46.200
首先由 TextView 开始 因为它们简单

00:01:46.200 --> 00:01:48.740
可以看到 这些 TextView 并没有将宽度扩展

00:01:48.740 --> 00:01:49.400
到整个设备

00:01:49.400 --> 00:01:50.810
所以需要修改

00:01:50.810 --> 00:01:53.410
宽度应该设为 match_parent

00:01:53.410 --> 00:01:54.180
这样更好

00:01:54.180 --> 00:01:56.780
现在是蓝绿色的背景

00:01:56.780 --> 00:01:59.300
宽度横跨整个设备

00:01:59.300 --> 00:02:02.670
下面写有 Bonfire at the beach 的 textview
也一样

00:02:02.670 --> 00:02:03.580
酷
然后高度

00:02:03.580 --> 00:02:05.860
也满足条件

00:02:05.860 --> 00:02:09.650
现在在竖直 LinearLayout 中 我们有了多余的垂直空间

00:02:10.669 --> 00:02:12.140
噢 顺便一提 LinearLayout 的宽度和高度

00:02:12.140 --> 00:02:15.270
设置成 match_parent

00:02:15.270 --> 00:02:18.780
这样布局会最终扩展成整个屏幕的高和宽

00:02:18.780 --> 00:02:21.880
那么现在来使用父视图中的剩余高度

00:02:21.880 --> 00:02:24.880
我们把它赋值给一个有权重的子视图

00:02:24.880 --> 00:02:28.820
修改 ImageView 让它有一个权重

00:02:28.820 --> 00:02:31.300
首先 设置宽度为 match_parent

00:02:31.300 --> 00:02:33.390
然后宽度扩展到整个屏幕

00:02:34.430 --> 00:02:38.940
之后设置高度为 0dp 权重为1

00:02:38.940 --> 00:02:42.200
这是我们想要的屏幕截图

00:02:42.200 --> 00:02:43.330
不错

00:02:43.330 --> 00:02:47.400
注意 如果我把权重改的很大像7

00:02:47.400 --> 00:02:50.410
或10 它不一定真的会改变设备视图

00:02:51.500 --> 00:02:54.720
因为这里只有一个子视图有权重

00:02:54.720 --> 00:02:57.980
它是高权重还是低权重真的没关系

00:02:57.980 --> 00:03:01.530
父视图的所有额外高度都会赋予这个子视图

00:03:02.680 --> 00:03:04.290
让我们把它改成1

00:03:05.500 --> 00:03:06.270
干得漂亮

