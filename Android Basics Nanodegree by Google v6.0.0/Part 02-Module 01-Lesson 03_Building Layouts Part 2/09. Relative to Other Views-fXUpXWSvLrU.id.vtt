WEBVTT
Kind: captions
Language: id

00:00:00.420 --> 00:00:03.469
Saat menempatkan anak tampilan
relatif terhadap saudaranya,

00:00:03.469 --> 00:00:06.190
Anda bisa tambahkan batasan
pada posisi mereka.

00:00:06.190 --> 00:00:09.885
Contohnya, satu TextView harus berada
di atas TextView lainnya,

00:00:09.885 --> 00:00:14.090
atau ImageView harus berada
di sisi kiri TextView lainnya.

00:00:14.090 --> 00:00:18.220
Batasan ini mengingatkan saya saat
mengatur tempat duduk pesta makan malam.

00:00:18.630 --> 00:00:21.220
Memang ada pesta perayaan
ulang tahun yang akan datang,

00:00:21.220 --> 00:00:23.540
jadi mari lihat susunan tempat duduknya.

00:00:23.540 --> 00:00:25.710
Kami undang semua orang ini makan malam,

00:00:25.710 --> 00:00:28.170
tapi tak ada batasan di mana mereka duduk.

00:00:28.170 --> 00:00:30.350
Ada yang harus duduk
di sebelah teman baiknya.

00:00:30.350 --> 00:00:33.250
Beberapa orang lainnya
punya teman tapi musuh.

00:00:33.250 --> 00:00:36.120
Jadi, mereka mungkin tak mau
duduk di sebelah orang tertentu.

00:00:36.120 --> 00:00:39.860
Dengan mempertimbangkan semua itu,
saya ajukan rancangan tata letak ini.

00:00:39.860 --> 00:00:41.880
Kunal, Ben, dan Kagure di atas sini.

00:00:41.880 --> 00:00:45.900
Natalie, Lyla, dan saya di bawah sini.
Dan Amy, Omoju, dan Jenny di pojok sini.

00:00:45.900 --> 00:00:48.390
Bisakah kita atur susunan
tempat duduk ini dalam XML

00:00:48.390 --> 00:00:50.820
menggunakan TextView dan RelativeLayout?

00:00:50.820 --> 00:00:53.270
Kita tahu bagaimana
memposisikan tampilan di sudut.

00:00:53.270 --> 00:00:57.398
Jadi TextView Lyla akan sejajar
dengan sudut kiri dan bawah induknya.

00:00:57.398 --> 00:01:01.390
TextView Jenny akan sejajar
dengan sudut kanan dan bawah induknya.

00:01:01.390 --> 00:01:04.410
Ben akan kita sejajarkan
di sudut atas induknya.

00:01:04.410 --> 00:01:08.260
Omong-omong, kita asumsikan
lebar dan tinggi induknya sepenuh layar,

00:01:08.260 --> 00:01:11.360
jadi kita atur &lt;i&gt;match_parent&lt;/i&gt;
untuk lebar dan tingginya.

00:01:11.360 --> 00:01:12.430
Kembali ke Ben.

00:01:12.430 --> 00:01:14.480
Ia sejajar dengan
bagian atas induknya.

00:01:14.480 --> 00:01:16.970
Kita mau menempatkannya
di tengah secara horizontal.

00:01:16.970 --> 00:01:20.340
Dan sebelumnya, Anda mungkin menyebut
tiga tampilan ini tampilan acuan.

00:01:20.340 --> 00:01:23.750
Karena tampilan lain diposisikan
relatif terhadap ketiganya.

00:01:23.750 --> 00:01:27.400
Dan ketiganya tak akan bergerak,
terlepas di mana tampilan lain berada.

00:01:27.590 --> 00:01:29.300
Jadi mari tambah orang lagi.

00:01:29.300 --> 00:01:32.739
Ada Kunal di sini, di sebelah kiri Ben.

00:01:32.739 --> 00:01:35.502
Tapi bagaimana kita menuliskannya di XML?

00:01:35.502 --> 00:01:38.185
Tak ada atribut spesifik
yang mengatakan bahwa tampilan

00:01:38.185 --> 00:01:41.303
harus berada di sebelah kiri
tampilan yang bernama Ben.

00:01:41.303 --> 00:01:43.440
Semua nama atribut Android itu umum

00:01:43.440 --> 00:01:46.940
agar dapat digunakan untuk
kasus apapun yang diinginkan.

00:01:46.940 --> 00:01:49.200
Kita mau memposisikan Kunal
di sebelah kiri Ben,

00:01:49.200 --> 00:01:52.358
tapi kita tak tahu nama atribut
yang bisa melakukannya.

00:01:52.358 --> 00:01:58.670
Untungnya, RelativeLayout punya atribut
yang disebut android:layout_toLeftof.

00:01:58.670 --> 00:02:03.790
Ini artinya TextView Kunal harus berada
di sebelah kiri suatu tampilan.

00:02:03.790 --> 00:02:07.780
Dan cara memberi nama suatu tampilan
adalah dengan menggunakan ID tampilan.

00:02:07.780 --> 00:02:10.350
Kita bisa sematkan beberapa
nama ID ke tampilan apapun.

00:02:10.350 --> 00:02:12.925
Mereka tak perlu ditujukan
khusus untuk RelativeLayout.

00:02:12.925 --> 00:02:16.070
Mereka bisa ditempatkan di dalam
RelativeLayout atau LinearLayout

00:02:16.070 --> 00:02:18.020
atau kelompok tampilan lainnya.

00:02:18.020 --> 00:02:21.700
Jadi pada TextView Ben, kita bisa
tambahkan atribut android:id.

00:02:21.700 --> 00:02:23.710
Nilainya adalah nama ID.

00:02:23.710 --> 00:02:26.083
Formatnya diawali
dengan simbol a keong (@),

00:02:26.083 --> 00:02:29.243
@ menunjuk pada sumber
dalam aplikasi Android kita.

00:02:29.243 --> 00:02:34.796
Kita juga telah menjumpai simbol @ untuk
merujuk pada gambar di aplikasi kita.

00:02:34.796 --> 00:02:36.590
Contohnya aplikasi Drawable.

00:02:36.590 --> 00:02:38.847
Kemudian kita beri nama jenis sumbernya.

00:02:38.847 --> 00:02:41.737
Dalam kasus ini,
jenis sumbernya adalah suatu ID.

00:02:41.737 --> 00:02:43.509
Kita juga tambahkan tanda tambah (+)

00:02:43.509 --> 00:02:46.110
karena ini adalah pertama kali
kita memunculkan ID ini.

00:02:46.110 --> 00:02:50.170
Lalu ada garis miring (/)
dan nama tampilan.

00:02:50.170 --> 00:02:53.180
Ini adalah nama yang kita pilih
untuk TextView Ben.

00:02:53.180 --> 00:02:56.400
Kita sebut saja ben_text_view.

00:02:56.400 --> 00:02:59.267
Syarat dasarnya, nama tak boleh ada spasi.

00:02:59.267 --> 00:03:01.993
Itu sebabnya kita gunakan
simbol garis bawah (_) di sini.

00:03:02.183 --> 00:03:06.719
Harus diawali huruf dan
tak boleh ada tanda baca yang aneh.

00:03:06.990 --> 00:03:08.990
Tapi angka dibolehkan.

00:03:08.990 --> 00:03:14.340
Jadi pada kasus ini, kita berikan Ben,
ID ben_text_view.

00:03:14.340 --> 00:03:16.130
Maka kita bisa merujuknya nanti.

00:03:16.130 --> 00:03:20.110
Jadi pada TextView Kunal, kita bisa
tambahkan atribut layout_toLeftof

00:03:20.110 --> 00:03:23.340
dan kita bisa tahu bahwa
ia berada di sebelah kiri TextView Ben.

00:03:23.910 --> 00:03:28.390
Kita merujuk ke ID TextView Ben
menggunakan @id.

00:03:28.390 --> 00:03:32.692
Kita tak perlu memakai tanda tambah (+)
karena ID tersebut sudah diberi nama.

00:03:32.692 --> 00:03:35.032
Ini adalah yang kedua kalinya
kita menggunakan ID.

00:03:35.032 --> 00:03:38.910
Ketika memberi nama ID tampilan,
pastikan namanya unik.

00:03:38.910 --> 00:03:42.550
Biasanya dari sesuatu yang berhubungan
dengan isi sangat membantu.

00:03:42.550 --> 00:03:45.920
Bagus, begitulah Anda memposisikan
Kunal ke sebelah kiri Ben.

00:03:45.920 --> 00:03:49.740
Nah, contoh, kita mau memposisikan
Omoju di atas Jenny.

00:03:49.740 --> 00:03:51.760
Karena kita perlu merujuk ke Jenny,

00:03:51.760 --> 00:03:53.980
kita harus membuat ID untuk Jenny.

00:03:53.980 --> 00:03:58.240
Pada TextView Jennie,
kita beri nama dan nilai atribut ini.

00:03:58.240 --> 00:04:01.880
Nama ID-nya adalah jenny_text_view.

00:04:01.880 --> 00:04:04.550
Pada TextView Omoju,
kita tambahkan atribut ini.

00:04:04.550 --> 00:04:09.680
Ini berkata bahwa Omoju harus diposisikan
di atas jennie_text_view.

00:04:09.680 --> 00:04:11.990
Dan inilah ID yang kita buat di sini.

00:04:12.160 --> 00:04:14.250
Mari lihat pada &lt;i&gt;layout&lt;/i&gt; XML-nya.

00:04:14.250 --> 00:04:18.010
Kita punya RelativeLayout di mana
lebar dan tingginya &lt;i&gt;match_parent&lt;/i&gt;.

00:04:18.010 --> 00:04:19.870
Lalu kita punya lyla_text_view.

00:04:19.870 --> 00:04:22.267
Ia sejajar dengan
pojok kiri bawah induknya,

00:04:22.267 --> 00:04:24.280
dan itulah yang kita lihat di bawah sini.

00:04:24.580 --> 00:04:26.314
Lalu ada jennie_text_view.

00:04:26.314 --> 00:04:29.010
Ia sejajar dengan
pojok kanan bawah induknya.

00:04:29.010 --> 00:04:30.130
Itu di sini.

00:04:31.060 --> 00:04:32.876
Lalu ada ben_text_view.

00:04:32.876 --> 00:04:35.900
Ia sejajar dengan sudut atas induknya,

00:04:35.900 --> 00:04:38.290
yang juga berada di tengah
secara horizontal.

00:04:38.290 --> 00:04:39.590
Ini adalah tampilan acuan

00:04:39.590 --> 00:04:42.460
dan sekarang kita bisa posisikan
tampilan lain di sekitarnya.

00:04:42.460 --> 00:04:45.780
Perhatikan, untuk setiap tampilannya
saya langsung tambahkan suatu ID.

00:04:45.780 --> 00:04:48.040
Jadi ini adalah ID TextView Ben.

00:04:48.040 --> 00:04:51.360
Lalu kita bisa posisikan
TextView Kunal di sebelah kiri Ben.

00:04:51.700 --> 00:04:56.700
Saya sejajarkan Kunal di atas induknya
dan di sebelah kiri TextView Ben.

00:04:56.700 --> 00:04:59.145
Saya gunakan ID tampilan Ben di sini.

00:04:59.145 --> 00:05:02.025
Lalu kita posisikan
TextView Omoju di atas Jenny.

00:05:02.025 --> 00:05:04.575
Omoju sejajar terhadap
sudut kanan induknya,

00:05:04.575 --> 00:05:06.945
dan di atas TextView Jenny.

00:05:07.285 --> 00:05:08.245
Bagus.

00:05:08.245 --> 00:05:12.005
Jadi ada lagi teman untuk diposisikan
dengan tepat di &lt;i&gt;layout&lt;/i&gt; ini.

00:05:12.765 --> 00:05:15.475
Pada catatan instruktur di bawah
kami berikan Anda tautan

00:05:15.475 --> 00:05:19.060
ke XML Visualizer dengan beberapa
kode awal yang telah tersedia.

00:05:19.060 --> 00:05:20.830
Silakan lakukan modifikasi pada XML

00:05:20.830 --> 00:05:24.200
sehingga kita bisa berhasil membuat &lt;i&gt;layout&lt;/i&gt;
yang diinginkan semua orang.

00:05:24.200 --> 00:05:26.610
Beberapa tampilan sudah salah posisinya,

00:05:26.610 --> 00:05:28.130
jadi harus dibetulkan.

00:05:29.310 --> 00:05:32.490
Omong-omong, kita baru saja
memperlihatkan banyak atribut baru.

00:05:32.490 --> 00:05:34.680
Tapi tak perlu dihafal semua.

00:05:34.680 --> 00:05:36.866
Anda bisa melihatnya setiap waktu.

00:05:36.866 --> 00:05:40.840
Anda bisa cari
'RelativeLayout, &lt;i&gt;layout params&lt;/i&gt;.'

00:05:41.050 --> 00:05:45.260
Jika Anda klik tautan pertama, Anda akan
menuju dokumentasi untuk yang ini.

00:05:45.260 --> 00:05:48.870
Jadi ini semua adalah atribut XML
di mana anak tampilan bisa diletakkan

00:05:48.870 --> 00:05:53.180
di dalam RelativeLayout sehingga
RelativeLayout tahu bagaimana menatanya.

00:05:53.180 --> 00:05:54.755
Inilah beberapa yang Anda tahu.

00:05:54.755 --> 00:06:00.140
Layout_above, alignParentbottom,
alignParentright, dan seterusnya.

00:06:00.140 --> 00:06:02.000
Catat bahwa untuk tujuan belajar,

00:06:02.000 --> 00:06:05.510
XML Visualizer mungkin
tak menunjang semua atribut ini.

00:06:05.510 --> 00:06:08.560
Tapi, jika Anda membuat aplikasi
pada Android Studio,

00:06:08.560 --> 00:06:10.360
Anda harus bisa gunakan semuanya.

