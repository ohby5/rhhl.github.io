WEBVTT
Kind: captions
Language: ru

00:00:00.670 --> 00:00:04.560
В предыдущем видео я показала вам,
что будет, если задать ширину каждого

00:00:04.560 --> 00:00:07.270
дочернего View, используя match_parent.

00:00:07.270 --> 00:00:10.860
Тогда TextView растягивается
по всей ширине родительского элемента.

00:00:10.860 --> 00:00:14.650
Нельзя сказать, что в этом эксперименте
были правильные и неправильные решения.

00:00:14.650 --> 00:00:16.570
Вот еще один возможный способ решения.

00:00:16.570 --> 00:00:20.350
Если задать горизонтальную
ориентацию разметки LinearLayout,

00:00:20.350 --> 00:00:23.510
то элементы View расположатся
в горизонтальный ряд.

00:00:23.510 --> 00:00:26.530
Если использовать match_parent
для указания ширины Vip List,

00:00:26.530 --> 00:00:29.670
то, к сожалению, этот элемент
столкнет другие View с экрана.

00:00:30.750 --> 00:00:34.140
Если использовать match_parent
для указания высоты TextView,

00:00:34.140 --> 00:00:38.700
то TextView Vip List растянется по
высоте корневого элемента LinearLayout.

00:00:38.700 --> 00:00:41.420
То же можно сделать и
для других дочерних элементов View,

00:00:41.420 --> 00:00:43.730
либо высоту можно зафиксировать.

00:00:43.730 --> 00:00:46.580
В предыдущем видео мы показали,
что будет, если задать ширину каждого

00:00:46.580 --> 00:00:49.570
из этих дочерних элементов View,
используя параметр match_parent.

00:00:49.570 --> 00:00:54.050
TextView растягивается по всей
ширине корневого элемента LinearLayout.

00:00:54.050 --> 00:00:57.750
Если задать фиксированную высоту
TextView, например 300 dp,

00:00:57.750 --> 00:01:00.390
то вот как это будет выглядеть
на экране устройства.

00:01:00.390 --> 00:01:02.950
Правильных или неправильных решений
у этой задачи нет.

