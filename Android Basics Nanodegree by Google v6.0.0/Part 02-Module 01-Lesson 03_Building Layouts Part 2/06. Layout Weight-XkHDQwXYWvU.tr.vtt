WEBVTT
Kind: captions
Language: tr

00:00:00.970 --> 00:00:05.250
Son sorumuzda Tom, Tim ve
Todd TextView'lerini

00:00:05.250 --> 00:00:08.240
cihazın yüksekliğine göre
eşit şekilde

00:00:08.240 --> 00:00:12.010
nasıl yerleştireceğimizi 
bulmaya çalışmıştık.

00:00:13.380 --> 00:00:15.740
Sabit bir dp değeri denedik,

00:00:15.740 --> 00:00:19.900
ancak tablet gibi daha uzun 
bir cihazda bu işe yaramayacaktır.

00:00:19.900 --> 00:00:24.300
Sonra match_parent denedik
ancak bu durumda Tom TextView'i

00:00:24.300 --> 00:00:27.390
çok alan kaplayıp diğer iki TextView'i
ekran dışına itti.

00:00:27.390 --> 00:00:31.440
Sonra LinearLayout_weight 
hakkında araştırma yaptık.

00:00:31.440 --> 00:00:34.660
Dokümantasyonda
dikey linear layout'da

00:00:34.660 --> 00:00:37.820
child'ları eşit uzunlukta 
dizmek için, height 0 dp'ye

00:00:37.820 --> 00:00:42.320
ve weight değeri her child için 1 olması
gerektiği söyleniyordu.

00:00:43.590 --> 00:00:46.480
Child görüntüye weight(ağırlık) atamak,

00:00:46.480 --> 00:00:49.490
özelliğe bir önem değeri
atamak gibi.

00:00:49.490 --> 00:00:50.930
Ağırlık değeri yükseldikçe,

00:00:50.930 --> 00:00:55.520
eğer parent'den alan kalırsa,
daha fazla alan kaplıyor.

00:00:56.280 --> 00:00:57.510
Örneğin,

00:00:57.510 --> 00:01:01.920
bu dikey linear layout
dikey şekilde sıralanmış.

00:01:01.920 --> 00:01:04.590
Öyle ki bu linear layout
fazla boş alana sahip

00:01:04.590 --> 00:01:08.900
ve bu alan ağırlık değeri olan child'lar
arasında dağıtılacaktır.

00:01:08.900 --> 00:01:11.020
Bir child'ın 
ne kadar büyük ağırlığı olursa,

00:01:11.020 --> 00:01:14.450
müsait alandan daha büyüğü
o child'a verilecektir.

00:01:14.450 --> 00:01:17.180
Child'ın çok küçük
bir ağırlık değeri olursa,

00:01:17.180 --> 00:01:19.900
ona göre daha küçük bir alana
sahip olacaktır.

00:01:19.900 --> 00:01:21.340
Nasıl olduğunu gösterebilirim.

00:01:21.340 --> 00:01:24.130
Bu child'ın yükseklğini
0 dp'ye ayarlıyorum,

00:01:24.130 --> 00:01:26.020
ağırlığa da 1 değerini veriyorum.

00:01:26.020 --> 00:01:29.642
Linear layout ilk önce Tim ve Todd
TextView'lerini aşağı çekiyor,

00:01:29.642 --> 00:01:33.880
çünkü içlerinde yüksekliğe
belli bir değer verilmiş.

00:01:33.880 --> 00:01:37.829
Son yükseklik değeri 0 dp,
ağırlık değeri 1 dp olan

00:01:37.829 --> 00:01:38.880
Tom TextView'i var.

00:01:38.880 --> 00:01:41.266
Diğer child'ların 
ağırlık değeri yok,

00:01:41.266 --> 00:01:45.000
çünkü bu değer belirlenmediğinde
varsayılan değer 0.

00:01:45.000 --> 00:01:47.150
Yani yalnızca bu child
ağırlık değerine sahip.

00:01:47.150 --> 00:01:50.480
Bu durumda parent 
geri kalan tüm ekran alanını

00:01:50.480 --> 00:01:51.900
Tom TextView'ine atıyor.

00:01:51.900 --> 00:01:55.610
İşte bu yüzden 
Tom TextView çok büyük.

00:01:55.610 --> 00:01:58.810
Diğer child'lara da 
ağlırlık değeri vereyim.

00:01:58.810 --> 00:02:02.660
Şimdi her child 0 dp yükseklik
1 ağırlık değerine sahip.

00:02:02.660 --> 00:02:04.980
Linear layout'un geçeceği
işlem bu.

00:02:04.980 --> 00:02:08.250
İlk önce her görüntüye 
verilecek olan yüksekliği bulacak.

00:02:08.250 --> 00:02:10.889
Bunların yükseklikleri 
0 dp'den başlıyor.

00:02:10.889 --> 00:02:13.950
Yani geride kalan 
parent'in boş yüksekliği

00:02:13.950 --> 00:02:16.410
temelde tüm ekranın
yüksekliğine eşit.

00:02:16.410 --> 00:02:20.260
Ekranı yüksekliğini
ağırlıklar toplamına bölecek, o da üç.

00:02:20.280 --> 00:02:24.215
Sonra yüksekliğin 1/3 parçasını
Tom TextView'e,

00:02:24.215 --> 00:02:27.220
1/3 parçasını Tim TextView'e,

00:02:27.220 --> 00:02:29.680
son 1/3 parçayı da 
Todd TextView'e verecek.

00:02:29.680 --> 00:02:32.840
Ekranı daha büyük olan cihazlarda bile
ağırlık değeri sayesinde

00:02:32.840 --> 00:02:37.250
yüksekliler eşit bir şekilde
bölümlenecektir.

00:02:37.250 --> 00:02:40.130
Ağırlık değerini 
daha büyük bir sayıya değiştirirsem,

00:02:40.130 --> 00:02:44.920
Tim TextView için parent 
daha fazla yer verecektir.

00:02:44.920 --> 00:02:47.560
Ağırlık değerini daha yüksek
bir değere değiştirirsem

00:02:47.560 --> 00:02:51.380
serbest olan yükseklikten
en büyük dilimi aldığını görebilirsiniz.

00:02:51.380 --> 00:02:54.240
Bu durumda,
Tim TextView 8 ağırlık değerine sahip

00:02:54.240 --> 00:02:56.910
Tom 1 ve Todd 1 
ağırlık değerine sahip.

00:02:56.910 --> 00:03:00.340
Toplamda ağırlık
8, 9, 10 olmuş oldu.

00:03:00.340 --> 00:03:03.930
Parent serbest yüksekliği 10'a
bölüyor.

00:03:03.930 --> 00:03:06.710
1/10'u Tom, 8/10'u Tim,

00:03:06.710 --> 00:03:08.750
1/10'u Todd
arasında paylaştırılıyor.

00:03:09.450 --> 00:03:13.020
3 child'a sahip 
dikey linear layout için,

00:03:13.020 --> 00:03:15.410
önce yüksekliği 0'a ayarladık.

00:03:15.410 --> 00:03:19.400
Bu durumda hepsi en üstte 0 dp
yükseklikle yukarıda toplandı.

00:03:19.400 --> 00:03:23.290
Bu durumda parent
tüm boş alana sahip.

00:03:23.290 --> 00:03:26.480
Child TextView'lerin ağırlığını
1'e ayarlarsak,

00:03:26.480 --> 00:03:31.420
geriye kalan parent yükseliği child'lar
arasında eşit şekilde dağılacaktır.

00:03:32.810 --> 00:03:35.400
Aynısı yatay linear layout'da 
da işe yarayacaktır.

00:03:35.400 --> 00:03:37.550
Üç child TextView olduğunu varsayalım.

00:03:37.550 --> 00:03:39.820
0 dp genişlikle başlıyoruz.

00:03:39.820 --> 00:03:43.300
Bu durumda parent'e 
daha fazla genişlik kalıyor.

00:03:43.300 --> 00:03:46.960
Eğer ağırlık değerini
her child'a 1 olacak şekilde ayarlarsam,

00:03:46.960 --> 00:03:50.110
parent'ten arta kalan alanı alıp

00:03:50.110 --> 00:03:52.740
her child'a eşit şekilde 
dağıtmış olurum.

00:03:52.740 --> 00:03:54.910
Ve yine, ağırlık değeri
1 olmak zorunda değil.

00:03:54.910 --> 00:03:57.740
2, 3 ya da başka bir değer olabilir.

00:03:57.740 --> 00:03:59.960
Hatta 0 değerini bile alabilir.

00:03:59.960 --> 00:04:04.440
Bir görünüm ağırlığı 0 değerine sahipse
bu durumda parent'ten kalan alana göre

00:04:04.440 --> 00:04:06.230
değişmeyecek demektir.

00:04:06.230 --> 00:04:09.560
Sizin vermiş olduğunuz genişlik
ve yükseklik değerine bağlı kalacaktır.

00:04:09.560 --> 00:04:12.490
Bahsetmek istediğim 
başka bir nokta da ne zaman

00:04:12.490 --> 00:04:14.370
yüksekliğin ya da genişliğin 0 olacağı.

00:04:14.370 --> 00:04:15.890
Dikey linear layout'unuz varsa,

00:04:15.890 --> 00:04:18.950
bu yönde dikey olarak doldurursunuz.

00:04:18.950 --> 00:04:21.240
Yüksekliğin ne olması gerektiğini
bilmiyorsanız,

00:04:21.240 --> 00:04:24.160
önce yüksekliğe 0 değerini verin
sonra ağırlık değerini verin.

00:04:24.620 --> 00:04:28.760
Yatay layout benzer biçimde
yatay olarak dolduruyoruz.

00:04:28.760 --> 00:04:31.920
Bu durumda child
genişliklerini bilmiyorsunuz.

00:04:31.920 --> 00:04:34.930
Genişliğe 0 dp değerini,
sonra ağırlık değerini veriyoruz.

00:04:36.660 --> 00:04:39.820
Özünde ağırlık değerini 
görünüme atamayı,

00:04:39.820 --> 00:04:44.840
parent'in büyüklüğüne göre
uzatmak olduğunu düşünebilirsiniz.

00:04:44.840 --> 00:04:49.790
Böyle olması büyük ya da küçük bir cihazda
müsait olan alanı doldurması için iyi.

00:04:50.620 --> 00:04:54.140
Ağırlık özeliğini kullanışlı olduğu
birkaç gerçek örnek

00:04:54.980 --> 00:04:57.210
Bu Google Hangouts uygulaması.

00:04:57.210 --> 00:05:01.750
Arkadaşlarınızla sohbet edebilir
ya da uykucu penguenler gönderebilirsiniz.

00:05:01.750 --> 00:05:05.620
Ekranın bu alt köşesinde
buradan mesaj gönderiyorsunuz.

00:05:05.620 --> 00:05:08.950
Bu yerleşime biraz daha
yakından bakalım.

00:05:08.950 --> 00:05:13.490
Yatay linear layout çünkü
yatay sırada dizilmiş.

00:05:13.490 --> 00:05:16.367
Bir ImageView, bir EditText alanı,
metin girmek için,

00:05:16.367 --> 00:05:19.090
başka bir ImageView
ile yapılmış.

00:05:19.090 --> 00:05:22.520
Bu elemanların yükselikleri
wrap_content

00:05:22.520 --> 00:05:25.410
çünkü içeriği sarıyor.

00:05:25.410 --> 00:05:28.480
Bu iki ImageView genişiliği
wrap_content

00:05:28.480 --> 00:05:30.870
çünkü içerik kadar 
genişliğe sahip.

00:05:31.460 --> 00:05:33.980
Ağırlığa 0 değerini veriyoruz
çünkü bundan daha büyük

00:05:33.980 --> 00:05:37.890
olmasını istemiyoruz,
parent'den yer kalsa bile.

00:05:37.890 --> 00:05:40.980
Ağırlığı 0 değerine ayarlayarak
genişlik ve yükseklik için

00:05:40.980 --> 00:05:43.280
yalnızca wrap_content 
olduğundan emin oluruz.

00:05:43.280 --> 00:05:47.070
Bunu büyük ekranlı cihazlarda
biraz daha genişlemesini

00:05:47.070 --> 00:05:50.640
ve küçük ekranlı cihazlarda
daralmasını istiyoruz.

00:05:50.640 --> 00:05:54.250
Genişliği 0 dp değerine ve
ağırlığı 1'e ayarlıyoruz.

00:05:54.250 --> 00:05:59.314
Parent linear layout önce bu görüntüyü
sonra diğerini yerleştirmeye çalışacak.

00:05:59.340 --> 00:06:05.050
Geriye kalan genişlik ise
bu alana atanacak.

00:06:05.050 --> 00:06:07.000
Maps uygulamasından bir örnek.

00:06:07.000 --> 00:06:09.570
Bu lokasyonun detay sayfası.

00:06:09.570 --> 00:06:12.480
Burada 3 buton var,
Call, Save, ve Website.

00:06:12.480 --> 00:06:14.450
Biraz daha yakından inceleyelim.

00:06:14.450 --> 00:06:18.610
Bu TextView'leri iconları
bağlı bir şekilde yapabiliriz,

00:06:18.610 --> 00:06:21.370
daha fazla detay için 
eğitmen notlarına bakınız.

00:06:21.370 --> 00:06:23.540
Ancak bu teğet noktası.

00:06:23.540 --> 00:06:26.520
Bu alıştırma için,
üç TextView olduğunu varsayalım.

00:06:26.520 --> 00:06:29.710
Her TextView'in yüksekliği
wrap_content olacak

00:06:29.710 --> 00:06:33.000
çünkü yükseklik içerik 
ayarında olacak.

00:06:33.000 --> 00:06:34.980
Genişlik ayarlamak biraz daha çetrefilli.

00:06:34.980 --> 00:06:38.485
Her TextView'in büyük ya da
küçük cihaz farketmeksizin

00:06:38.485 --> 00:06:42.470
ekran genişliğince eşit bir şekilde
yayılmasını istiyoruz.

00:06:42.470 --> 00:06:44.980
Üç TextView'in 
ekranın sol üst köşesinde

00:06:44.980 --> 00:06:46.530
toplanmasını istemiyoruz.

00:06:47.350 --> 00:06:50.640
Bu child'ları eşit dağıtmak için
onlara eşit ağırlık değeri veriyoruz.

00:06:50.640 --> 00:06:53.200
Genişliklere 0 dp ve
ağırlıklara 1 değerini veriyoruz.

00:06:54.058 --> 00:06:57.240
Bu şekilde boşta kalan genişlik
üç child arasında

00:06:57.240 --> 00:06:58.490
eşit şekilde bölünecektir.

00:06:59.790 --> 00:07:02.170
Son örnek bir e-posta uygulaması.

00:07:02.170 --> 00:07:05.420
Burası G-mail'in yeni mail 
yazabildiğiniz kısmı.

00:07:06.460 --> 00:07:09.160
Bu dikey linear layout 
çünkü ögeler bir sütun içinde.

00:07:10.230 --> 00:07:13.380
Dört farklı EditText alanından
oluşuyor.

00:07:13.380 --> 00:07:16.546
Her child'ın genişliği 
match_parent ayarlı

00:07:16.546 --> 00:07:18.760
bunu tüm ekranın genişliğine
yaymak istiyoruz.

00:07:18.760 --> 00:07:22.845
Yükseklik için bu üç EditText alanını
wrap_content olarak ayarlıyoruz

00:07:22.845 --> 00:07:25.475
böylece içlerindeki metni sarıyor.

00:07:25.475 --> 00:07:27.115
Ağırlıkları 0'a ayarlıyoruz çünkü

00:07:27.115 --> 00:07:32.620
parent'de yeterli yükseklik varsa bile
boyutlar artsın istemiyoruz.

00:07:32.620 --> 00:07:35.870
Son EditText alanında ise
burada mesaj yazıyoruz, ayrıca

00:07:35.870 --> 00:07:40.710
Ninesine uzun mektup yazabilsin diye
kullanıcıya geniş alan vermek istiyoruz.

00:07:40.710 --> 00:07:44.870
Yüksekliğe 0 dp
ağırlığa 1 değerini veriyoruz.

00:07:44.870 --> 00:07:46.700
Parent'de yeterli alan kaldıysa,

00:07:46.700 --> 00:07:50.070
bu child EditText alanına verilecek.

00:07:50.070 --> 00:07:54.120
Büyük ekranlı cihazlarda e-posta
yazma alanı biraz daha uzun olacak

00:07:54.120 --> 00:07:57.140
ve küçük ekranlı cihazlarda
biraz daha küçük.

00:07:58.620 --> 00:08:00.150
Pratik yapma sırası şimdi sizde.

00:08:00.150 --> 00:08:03.840
XML visualizer'ı açıp 
bu düzeni kurun.

00:08:03.840 --> 00:08:06.550
Aşağıda vermiş olduğumuz
XML koduyla başlayabilirsiniz.

00:08:06.550 --> 00:08:08.140
Birkaç tavsiye vereyim.

00:08:08.140 --> 00:08:11.517
Böyle bir şey üzerinde çalışırken
önce tüm görüntülerin genişliğini

00:08:11.517 --> 00:08:15.500
ve sonra da yüksekliğini
saptamaya çalışın.

00:08:15.500 --> 00:08:17.990
Sonra resmin 
parent linear layout'dan kalan

00:08:17.990 --> 00:08:19.730
yüksekliği kapsadığından emin olun.

00:08:19.730 --> 00:08:22.550
Küçük ekranlı bir cihazda
daha yükseklik kaplayacaktır.

00:08:22.550 --> 00:08:25.140
Daha büyük ekranlı bir cihazda
daha çok alan alacaktır.

00:08:25.140 --> 00:08:27.990
Gidin, deneyin.
İşiniz bitince bu kutuyu işaretleyin.

