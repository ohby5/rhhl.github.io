WEBVTT
Kind: captions
Language: ja

00:00:00.490 --> 00:00:01.260
おさらいです

00:00:01.260 --> 00:00:04.080
これまで リニアレイアウトは
水平にも垂直にも

00:00:04.080 --> 00:00:05.650
適応できることを学びました

00:00:06.890 --> 00:00:09.610
ここではそれらのビューが
スクリーン不動産を十分に活用できるかどうか

00:00:09.610 --> 00:00:11.240
考えてみましょう

00:00:11.240 --> 00:00:13.750
ここでいう「不動産」とは スクリーン上の
利用可能スペースという意味です

00:00:14.930 --> 00:00:16.490
スマホ Nexus 6 の場合

00:00:16.490 --> 00:00:20.740
３つの子テキストビューの入った
垂直リニアレイアウトがあります

00:00:20.740 --> 00:00:22.420
トムとティムとトッドです

00:00:22.420 --> 00:00:25.500
私たちがデバイスをこの様に
縦向きに持った場合

00:00:25.500 --> 00:00:28.380
全てのテキストビューが
スクリーンの左上の角に集まっています

00:00:29.380 --> 00:00:32.320
残りの空白が全て使われていません

00:00:32.320 --> 00:00:35.480
同様に デバイスを横向きに回転させると

00:00:35.480 --> 00:00:40.120
テキストが左上の角にあり
他は全て空白のままです

00:00:40.120 --> 00:00:42.110
スクリーンがより大きな
タブレットデバイス上では

00:00:42.110 --> 00:00:44.260
そのことがもっと目立ちます

00:00:44.260 --> 00:00:47.280
ほんの小さなスクリーン不動産だけを
使っていることになり

00:00:47.280 --> 00:00:48.252
残りは空白です

00:00:48.252 --> 00:00:51.680
これから利用可能なエリアを
もっと活用するためにビューを均一に

00:00:51.680 --> 00:00:55.190
スクリーンいっぱいに
分散させる方法を学んでいきます

00:00:55.190 --> 00:00:56.560
これは他のビューにも同様に適用します

00:00:56.560 --> 00:00:59.500
あなたは快適に使うために
左上角に配置された小さなビューではなく

00:00:59.500 --> 00:01:03.460
より大きな画像を
スクリーンいっぱいに設置できます

00:01:04.489 --> 00:01:05.870
ボタンもそうです

00:01:05.870 --> 00:01:09.785
大きいボタンにすれば
タップするのが簡単になります

00:01:09.785 --> 00:01:13.155
そのための例として
テキストビューを扱っていきます

00:01:13.155 --> 00:01:16.325
では ビューの拡散方法を明確にするため
XML ビジュアライザーに

00:01:16.325 --> 00:01:17.635
行きましょう

00:01:18.115 --> 00:01:20.545
これがトムとティム、トッドのコードです

00:01:20.545 --> 00:01:23.975
垂直リニアレイアウトになっている
３つのテキストビューと

00:01:23.975 --> 00:01:25.389
デバイス上の見え方です

00:01:26.570 --> 00:01:29.810
では これら３つのテキストビューを
分散させる方法をお見せします

00:01:29.810 --> 00:01:31.060
トムは上のこちら

00:01:31.060 --> 00:01:31.980
ティムはここ

00:01:31.980 --> 00:01:33.910
トッドは下のここです

00:01:33.910 --> 00:01:37.950
明らかに「 wrap_content 」の
height （高さ）の設定ではうまくいってません

00:01:37.950 --> 00:01:41.350
以前に学びましたが 任意の dp 値を
この height に設定します

00:01:41.350 --> 00:01:44.510
では 私は height を
仮に200 dp に設定していきます

00:01:45.760 --> 00:01:48.340
いいですね
これでトムの所により空間ができました

00:01:48.340 --> 00:01:51.320
同じことを他のテキストビューにも行うと

00:01:51.320 --> 00:01:54.570
同じようにスクリーンいっぱいに
拡散しましたね

00:01:54.570 --> 00:01:57.920
しかし この方法はデバイスの
こちらのサイドのみに働きます

00:01:57.920 --> 00:02:01.510
以前にお見せしたようなタブレットだと
これらのビューは

00:02:01.510 --> 00:02:04.640
依然として左上隅に
片寄ってしまうことになります

00:02:04.640 --> 00:02:08.880
他に高さを設定する方法は
match parentを適用させることです

00:02:08.880 --> 00:02:11.750
トム（子）テキストビューに
対応するmatch parentを設定すると

00:02:11.750 --> 00:02:15.540
親ビューの高さは
全スクリーンサイズとなってしまいます

00:02:15.540 --> 00:02:19.230
それが他のテキストビューをスクリーンから
押し出して見えなくさせてしまいます

00:02:19.230 --> 00:02:20.930
なので それはしないでください

00:02:20.930 --> 00:02:22.320
さて どうしましょうか？

00:02:22.320 --> 00:02:25.490
私たちはdp 値を入力するtwrap_content の
高さ設定を試しましたし

00:02:25.490 --> 00:02:27.300
match parentの適用も試みました

00:02:27.300 --> 00:02:32.930
どちら方法でも 任意のデバイスでの
丁度良いスペースが取れません

00:02:32.930 --> 00:02:36.420
この問題の解決になりそうなものを
Google 検索しましょう

00:02:36.420 --> 00:02:38.360
私たちはリニアレイアウトの
ビューグループを使っています

00:02:38.360 --> 00:02:40.580
そして 均一のスペースを
子ビューの間に作りたい

00:02:40.580 --> 00:02:42.260
さあ それについて検索しましょう

00:02:42.260 --> 00:02:44.680
OK 
検索結果が出ました

00:02:44.680 --> 00:02:46.920
一番上をクリックしましょう

00:02:46.920 --> 00:02:49.358
これは Stackoverflow サイトのリンクです

00:02:49.358 --> 00:02:51.780
これは質問を投稿して
他のアンドロイド開発者から

00:02:51.780 --> 00:02:53.785
答えてもらう Q&amp;A サイトです

00:02:53.785 --> 00:02:58.005
私は行き詰って 助けが必要な時
いつもここを利用しています

00:02:58.005 --> 00:03:00.515
同じことが既に他の人から
質問されていることが

00:03:00.515 --> 00:03:01.975
よくあります

00:03:01.975 --> 00:03:05.425
ここにある質問は
「どうすればリニアレイアウトの幅に対し

00:03:05.425 --> 00:03:07.657
均一にボタンを分配できるか」です

00:03:07.657 --> 00:03:09.677
これは私たちの探しているものに似ています

00:03:09.677 --> 00:03:12.627
しかし 私たちが努力しているのは
ボタンの代わりにテキストビューを

00:03:12.627 --> 00:03:15.877
リニアレイアウトの幅ではなく
高さに対して

00:03:15.877 --> 00:03:17.767
拡散させることです

00:03:17.767 --> 00:03:20.710
ここではその質問に目を通したり
拾い読みができます

00:03:20.710 --> 00:03:23.070
普段 私は答えを拾い読みするだけです

00:03:23.070 --> 00:03:27.590
この回答は88票を獲得していますし
緑のチェックマークがついています

00:03:27.590 --> 00:03:30.840
これは 「 layout_width を 0 dp にセットして 
ボタンの layout_weight を

00:03:30.840 --> 00:03:33.240
それぞれ１に設定できる方法」
について話しています

00:03:33.240 --> 00:03:36.899
その上「等間隔でボタンを配置したい」
とのことです

00:03:37.910 --> 00:03:41.170
この時点では 完全に答えを
理解できないかもしれませんが 大丈夫です

00:03:41.170 --> 00:03:44.620
ここで分かった重要な文章は
「 linear layout_weight 」です

00:03:44.620 --> 00:03:47.950
初めて出会う文章ですが
どうやら重要そうです

00:03:47.950 --> 00:03:49.640
では 「 layout_weight 」について

00:03:49.640 --> 00:03:52.005
もっと情報収集するために
これをコピーしてGoogle 検索しましょう

00:03:52.005 --> 00:03:55.205
では 「 linear layout layout_weight 」を
検索しましょう

00:03:55.205 --> 00:03:57.605
最初にある検索結果は
リニアレイアウトに関する記事で

00:03:57.605 --> 00:04:00.085
「 developer.android.com 」という
サイトのものです　クリックしましょう

00:04:01.285 --> 00:04:03.845
リニアレイアウトについての記事が出ました

00:04:03.845 --> 00:04:08.015
この上の方にあるアンドロイドの属性については
既に学びました

00:04:08.015 --> 00:04:11.230
しかし レイアウトウェイトと呼ばれる
新たな情報がここにあります

00:04:11.230 --> 00:04:14.270
また いくつかのコードと
キャプチャ画像の使用例が

00:04:14.270 --> 00:04:15.650
下にあります

00:04:15.650 --> 00:04:17.149
これをあなたのために
まとめることもできたのですが

00:04:17.149 --> 00:04:21.260
まず最初に あなたにはこの資料を
読んでいただきたいです

00:04:21.260 --> 00:04:23.710
そして あなた自身で理解してもらいたいです

00:04:23.710 --> 00:04:26.180
このコースが終了した後も
問題解決しなくてはならない

00:04:26.180 --> 00:04:28.220
似たようなことは沢山起こります

00:04:28.220 --> 00:04:30.510
あなたはオンライン上で情報を見て

00:04:30.510 --> 00:04:33.350
問題解決に使えるか
判断しようとするでしょう

00:04:34.500 --> 00:04:37.340
OK では これが今 
デバイス上にあるレイアウトです

00:04:37.340 --> 00:04:39.120
そして これが達成したいことです

00:04:39.120 --> 00:04:42.780
3つのテキストが均等な高さで
デバイス内に配置されている

00:04:42.780 --> 00:04:44.110
その問題解決のために

00:04:44.110 --> 00:04:46.760
下にリンクを貼ったので
そのリニアレイアウトの記事を読んで下さい

00:04:47.830 --> 00:04:48.980
その記事の内容の

00:04:48.980 --> 00:04:52.490
全てを理解できないのは
いたって普通のことです

00:04:52.490 --> 00:04:55.390
何度もその記事の概念について
なんとなく理解したいと思うだけでも

00:04:55.390 --> 00:04:59.250
作業の助けになるかもしれません

00:05:00.320 --> 00:05:03.390
そして この実行したいレイアウトを XMLで
組み立てるアイデアを

00:05:03.390 --> 00:05:05.100
いくつか提出して下さい

00:05:05.100 --> 00:05:07.550
全体の XML レイアウトコードを
提出する必要ありません

00:05:07.550 --> 00:05:10.420
次のビデオで一緒に
作業していく予定です

00:05:10.420 --> 00:05:12.350
しかし 記事の中で
この問題に関するだろう情報を

00:05:12.350 --> 00:05:17.280
２～３行の文章や要点にして
ここに書いてください

