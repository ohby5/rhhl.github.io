WEBVTT
Kind: captions
Language: ko

00:00:00.390 --> 00:00:03.980
지금까지 linear layout이
수직 또는 수평 방향성을

00:00:03.980 --> 00:00:06.140
가진다는 것을 배웠습니다.

00:00:06.140 --> 00:00:09.040
또한 각 뷰들이 parent의
빈 공간을 채우기 위한

00:00:09.040 --> 00:00:12.010
무게(weight) 값을
가진다는 것도 배웠습니다.

00:00:12.710 --> 00:00:16.340
이제 relative layout 뷰 그룹을
배우는 시간을 갖겠습니다.

00:00:16.450 --> 00:00:19.910
이는 더 유연한 레이아웃을
만드는 데 도움이 될 겁니다.

00:00:19.910 --> 00:00:22.140
relative layout인
Ray을 기억하세요

00:00:22.140 --> 00:00:25.590
그는 아빠이고 여기
뷰 그룹에 의해 대표됩니다.

00:00:25.590 --> 00:00:29.250
그는 children 뷰가
이 용기 안에 들어있게 합니다.

00:00:29.250 --> 00:00:32.360
relative layout으로, children을
parent와 연관지어 놓을 수 있어요.

00:00:32.360 --> 00:00:35.520
parent의 맨위, parent의 아래
같은 식으로요.

00:00:35.850 --> 00:00:39.680
다른 선택은 children 뷰들을
다른 children에 연관짓는 거예요.

00:00:39.680 --> 00:00:40.920
이렇게요.

00:00:40.920 --> 00:00:45.400
뷰들이 parent와 연관된
첫 번째 경우에 초점을 맞춰보죠.

00:00:45.780 --> 00:00:50.460
이 parent relative layout은
match parent의 너비와

00:00:50.460 --> 00:00:53.550
높이를 갖도록 설정되어 기기만큼 크죠.

00:00:53.550 --> 00:00:56.660
relative layout 안의
children은 parent의

00:00:56.660 --> 00:01:00.880
왼쪽, 위, 오른쪽, 아래 모서리와
상대적으로 위치합니다.

00:01:00.880 --> 00:01:04.519
child view XML 요소에서
이를 위한 코드입니다.

00:01:04.519 --> 00:01:08.540
예를 들어 이미지뷰와 텍스트뷰에
이 속성들을 추가할 수 있어요.

00:01:08.540 --> 00:01:14.440
속성 이름은 이 형식을 따릅니다.
android:layout_alignParentTop

00:01:14.440 --> 00:01:17.980
이 속성은 child 뷰가
parent의 상단 모서리에 있는지

00:01:17.980 --> 00:01:19.400
아닌지를 결정합니다.

00:01:19.400 --> 00:01:22.640
가능한 값은 참, 또는 거짓이죠.

00:01:22.640 --> 00:01:25.780
이게 참이라면 뷰는 parent의
최상단 모서리에 위치해야 합니다.

00:01:25.780 --> 00:01:28.540
거짓이라면, 이것은 그렇게
정렬[align]되지 않겠죠.

00:01:28.540 --> 00:01:30.990
다른 모든 모서리를 위한
속성도 있습니다.

00:01:30.990 --> 00:01:34.800
예를 들어 alignParentBottom은
parent의 아래 모서리로 정렬합니다.

00:01:34.800 --> 00:01:38.120
alignParentLeft는
parent의 왼쪽으로 정렬하고

00:01:38.120 --> 00:01:41.390
alignParentRight는 parent의
오른쪽으로 정렬합니다.

00:01:42.050 --> 00:01:45.520
당신은 혼합하고, 연결짓고,
한 번에 여러 속성을 사용할 수 있어요.

00:01:45.980 --> 00:01:48.180
이 이미지 뷰를 예로 드리죠.

00:01:48.650 --> 00:01:52.370
속성 alignParentTop을
참으로 설정하고 싶어요.

00:01:52.370 --> 00:01:54.850
이것이 parent의 위쪽
모서리에 정렬되니까요.

00:01:54.850 --> 00:01:57.510
이는 parent의 왼쪽, 
오른쪽으로도 정렬됩니다.

00:01:57.510 --> 00:02:00.730
그래서 우리는 왼쪽, 오른쪽도
참으로 설정합니다.

00:02:01.270 --> 00:02:05.676
이는 parent의 아래에 정렬되지
않았으므로 그건 거짓으로 설정합니다.

00:02:06.836 --> 00:02:08.410
여기 아래의 텍스트 뷰는

00:02:08.410 --> 00:02:11.980
parent의 아래 모서리, 오른쪽,
왼쪽에 정렬되어 있어요.

00:02:12.580 --> 00:02:15.910
alignParentBottom은 참,
alignParentLeft는 참,

00:02:15.910 --> 00:02:20.579
alignParentRight은 참이지만
alignParentTop은 거짓입니다.

00:02:21.280 --> 00:02:25.710
child를 화면의 위나 아래에
위치시키는 것과 더불어

00:02:25.710 --> 00:02:28.440
이 특정 구석으로 놓을 수도 있어요.

00:02:28.440 --> 00:02:31.850
생일 텍스트 뷰를 왼쪽 위 구석에
위치시키고 싶다면

00:02:31.850 --> 00:02:36.740
alignParentTop은 참이고,
alignParentLeft도 참이라고 할 수 있죠.

00:02:37.350 --> 00:02:39.560
오른쪽 위 구석에
뷰를 위치시키기 위해서

00:02:39.560 --> 00:02:43.450
이것을 parent의 위쪽 모서리와
오른쪽 모서리에 정렬하고 싶어요.

00:02:43.450 --> 00:02:46.850
그래서 alignParentTop는 참,
alignParentRight는 참입니다.

00:02:47.410 --> 00:02:50.090
아래 왼쪽 구석을 위해,
parent의 왼쪽, 아래 모서리에

00:02:50.090 --> 00:02:52.290
정렬시킵니다.

00:02:52.780 --> 00:02:54.700
alignParentBottom은
참이란 뜻이죠.

00:02:54.700 --> 00:02:56.680
alignParentLeft는
참입니다.

00:02:57.240 --> 00:03:00.480
이 값들은 거짓이고
그들은 기본적으로 거짓입니다.

00:03:00.480 --> 00:03:02.550
그래서 그것들을 XML 코드에
포함시킬 필요는 없어요.

00:03:03.130 --> 00:03:07.040
제일 끝 구석은 parent의
오른쪽아래에 정렬되어 있어요.

00:03:07.040 --> 00:03:10.940
alignParentBottom과
alignParentRight은 참이죠.

00:03:10.940 --> 00:03:12.210
다른 두 개는 거짓입니다.

00:03:12.210 --> 00:03:14.180
그것들은 코드에 쓰지 않아도 됩니다.

00:03:14.180 --> 00:03:17.140
믿든 말든 당신이 설정할 수 있는
속성은 더 있습니다.

00:03:17.140 --> 00:03:20.190
또한 당신은 뷰를 수평에서
가운데에 정렬할 수도 있고

00:03:20.190 --> 00:03:23.560
android:layout_centerHorizontal이
참이라고 하면 됩니다.

00:03:23.560 --> 00:03:27.530
당신은 이것을 우리가 이미 배웠던
기존 속성들에 추가할 수 있어요.

00:03:27.530 --> 00:03:30.550
만약 이 행이 아래에,
이것이 수평에서 가운데에 있다면

00:03:30.550 --> 00:03:32.220
이런 식으로 보일 겁니다.

00:03:32.220 --> 00:03:34.870
제가 보여드릴 마지막은
layout_centerVertical입니다.

00:03:34.870 --> 00:03:37.775
이것이 참으로 설정되었다면
parent 안의 뷰를 수직적으로

00:03:37.775 --> 00:03:39.465
가운데로 정렬합니다.

00:03:39.465 --> 00:03:43.015
우리가 값을 설정하지 않았는데도
이 텍스트 뷰가 parent의

00:03:43.015 --> 00:03:47.655
왼쪽에 정렬된 이유는, 모든 뷰가
relative layout에 추가되었고

00:03:47.655 --> 00:03:51.550
기본적으로 뷰 그룹의 상단 왼쪽
구석에 위치되었기 때문입니다.

00:03:51.550 --> 00:03:54.710
이 모든 속성들은 뷰 그룹
레이아웃 파라미터라 불립니다.

00:03:54.840 --> 00:03:58.100
그것들은 child XML 요소에서
선언되지 않았지만

00:03:58.100 --> 00:04:02.440
children을 위치시키기 위해
parent 뷰 그룹에 의해 사용됩니다.

00:04:02.440 --> 00:04:05.098
따라서 그것들은 모두
layout_ 으로 시작됩니다.

00:04:05.098 --> 00:04:08.050
또한 이는
여러분이 이미 익숙해진

00:04:08.050 --> 00:04:10.960
layout_width,
layout_height의 형식을 따라요.

00:04:10.960 --> 00:04:14.810
그 두 속성 또한 뷰 레이아웃
파라미터인데, 그들이 children을

00:04:14.810 --> 00:04:18.460
위치시킬 때, 뷰 그룹 parent에
의해 사용되기 때문입니다.

00:04:18.460 --> 00:04:22.089
relative layout과 child를 위한
XML이 여기 있습니다.

00:04:22.089 --> 00:04:24.450
이 링크를 따라갈 수 있습니다.

00:04:24.450 --> 00:04:28.570
우리에게 열린 relative layout 태그와
여기 아래에 닫힌 태그가 있고,

00:04:28.570 --> 00:04:30.810
사이에 있는 children이 있습니다.

00:04:30.820 --> 00:04:34.490
RelativeLayout의 너비와 높이는
match_parent로 설정되어 있죠.

00:04:34.490 --> 00:04:37.080
이것이 우리 앱 전체를 위한
레이아웃이므로

00:04:37.080 --> 00:04:39.070
이는 화면 전체를 차지할 것입니다.

00:04:39.070 --> 00:04:42.310
RelativeLayout에 사용된
세 child 텍스트가 있습니다.

00:04:42.310 --> 00:04:45.380
첫 번째는 Happy를 말하는
텍스트 뷰입니다.

00:04:45.380 --> 00:04:49.090
너비와 높이는 wrap_content이고
이 추가적인 속성을 사용하여

00:04:49.090 --> 00:04:53.520
relative layout을 돕고, child
텍스트 뷰를 어디 둘지 정합니다.

00:04:53.520 --> 00:04:58.280
우리는 이것이 parent의 오른쪽,
상단 모서리로 정렬되게 합니다.

00:04:58.290 --> 00:05:01.900
그렇게 하면 Happy 텍스트는
화면의 상단 오른쪽에 놓여지죠.

00:05:01.900 --> 00:05:05.670
birthday 텍스트 뷰의 너비와
높이도 wrap_content입니다.

00:05:05.670 --> 00:05:09.100
이것이 parent의 왼쪽 아래에
위치하도록 하고 싶어요.

00:05:09.100 --> 00:05:12.750
왼쪽 아래 모서리는
아래의 이 구석으로 이끌죠.

00:05:12.750 --> 00:05:16.690
마지막 텍스트 뷰 To You는
parent와 관련하여

00:05:16.690 --> 00:05:19.750
어디에 있을지에 대한
특정한 속성을 갖고 있지 않아요.

00:05:19.750 --> 00:05:22.410
너비와 높이가 wrap_content가
되어야 한다는 것을 압니다.

00:05:22.410 --> 00:05:26.033
앞서 말씀드렸듯, child 뷰가
어디로 갈지 특정화하지 않았다면

00:05:26.033 --> 00:05:29.329
기본적으로 relative는 이것을
화면의 왼쪽 상단 구석에 둘 것입니다.

