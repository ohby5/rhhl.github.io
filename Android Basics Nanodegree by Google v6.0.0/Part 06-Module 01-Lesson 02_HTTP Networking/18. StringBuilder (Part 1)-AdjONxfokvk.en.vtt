WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:02.020
Here's a summary of
what we just learned.

00:00:02.020 --> 00:00:05.424
A string is immutable, which means it
can't change once it's been created.

00:00:05.424 --> 00:00:07.978
You have to create a brand new
string object if you want a slightly

00:00:07.978 --> 00:00:09.640
different string.

00:00:09.640 --> 00:00:13.320
On the other hand, a StringBuilder is
also a sequence of characters, but

00:00:13.320 --> 00:00:14.570
it is mutable.

00:00:14.570 --> 00:00:16.990
So it can change after
you've created it.

00:00:16.990 --> 00:00:20.290
Now, there are pros and
cons of when to use each one.

00:00:20.290 --> 00:00:23.090
But if you're trying to build up
a longer text string gradually over

00:00:23.090 --> 00:00:26.550
several steps, then StringBuilder
is a much more efficient data type,

00:00:26.550 --> 00:00:27.980
because it is mutable.

00:00:27.980 --> 00:00:31.508
Otherwise, if you had to create a new
string object at each intermediate step,

00:00:31.508 --> 00:00:33.309
you'd be wasting memory on the device.

00:00:33.309 --> 00:00:36.962
And those additional memory allocations
would need to be cleaned up once those

00:00:36.962 --> 00:00:38.960
string objects were no longer used.

00:00:38.960 --> 00:00:41.590
It's much cleaner to have
a single StringBuilder object and

00:00:41.590 --> 00:00:43.630
then modify it as needed.

00:00:43.630 --> 00:00:47.220
Okay, so let's look at the code for
how to use the StringBuilder class.

00:00:47.220 --> 00:00:50.970
We can declare and instantiate
a new StringBuilder as usual, and

00:00:50.970 --> 00:00:52.740
then proceed to put the word,

00:00:52.740 --> 00:00:58.798
world spelled W-O-R-L-D into
the builder using the append method.

00:00:58.798 --> 00:01:01.370
Now, the StringBuilder is currently
holding the sequence of characters

00:01:01.370 --> 00:01:02.960
that spells world.

00:01:02.960 --> 00:01:05.900
Actually, let's make that say word

00:01:05.900 --> 00:01:09.500
instead of world by removing the L
character at position three.

00:01:09.500 --> 00:01:15.800
When we do this the builder now contains
the characters W-O-R and D, or word.

00:01:15.800 --> 00:01:18.860
Then the code appends more
characters on the StringBuilder.

00:01:18.860 --> 00:01:23.190
First, we add space builder and
then finally a period.

00:01:23.190 --> 00:01:26.700
Note that the append method returns
a builder object, so what's neat

00:01:26.700 --> 00:01:30.370
is that we can actually have multiple
calls to append on a single line.

00:01:30.370 --> 00:01:33.660
This sequence of multiple meta calls
on a single line is known as method

00:01:33.660 --> 00:01:35.470
chaining in programmer speak.

00:01:35.470 --> 00:01:39.370
So as you can see, the second time
we call append, we can add a period.

00:01:39.370 --> 00:01:42.690
When we're done building we can
get a frozen immutable string

00:01:42.690 --> 00:01:44.700
by simply calling the two string method.

00:01:44.700 --> 00:01:47.970
So as we finish we can see
that the String variable built

00:01:47.970 --> 00:01:50.620
now contains the contents word builder.

