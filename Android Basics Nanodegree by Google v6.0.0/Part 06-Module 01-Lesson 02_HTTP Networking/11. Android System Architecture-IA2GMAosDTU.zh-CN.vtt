WEBVTT
Kind: captions
Language: zh-CN

00:00:00.230 --> 00:00:03.476
现在让我们先退一步 谈一下 Android 系统结构

00:00:03.476 --> 00:00:06.934
Android Framework 为了帮助我们 与系统进行交互

00:00:06.934 --> 00:00:07.527
提供了很多有用的类

00:00:07.527 --> 00:00:11.713
如 Activity 的使用周期 和设备权限

00:00:11.713 --> 00:00:15.020
或帮助你访问设备的一些功能 如照相机、收音机

00:00:15.020 --> 00:00:16.810
Wi-Fi 和蓝牙

00:00:16.810 --> 00:00:19.507
以及陀螺仪之类的传感器

00:00:19.507 --> 00:00:23.056
访问设备硬件的路径 在 Framework 中是通过

00:00:23.056 --> 00:00:24.725
一系列抽象层来实现的

00:00:24.725 --> 00:00:26.400
这是什么意思呢?

00:00:26.400 --> 00:00:30.630
每一个层都负责 解决问题的一部分

00:00:30.630 --> 00:00:34.370
相应地 下级的层负责 解决下层更小的问题

00:00:34.370 --> 00:00:37.230
最后将这些层合并 就能够实现所需的功能

00:00:38.320 --> 00:00:41.274
现在我们不具体解释 每一层负责的内容

00:00:41.274 --> 00:00:44.148
我们仅集中讲解那些 你必须要掌握的的层

00:00:44.148 --> 00:00:45.375
让我们来看一下

00:00:45.375 --> 00:00:48.511
你可以将 Android 设备的 每一个功能都看成

00:00:48.511 --> 00:00:50.085
是由不同的层编制的

00:00:50.085 --> 00:00:53.535
现在 在这里我们把装配图 简化成几个要点

00:00:53.535 --> 00:00:55.685
但你可以随时通过单击 Android Open Source Project

00:00:55.685 --> 00:00:58.585
网站上的链接 查看详细的图示

00:00:59.835 --> 00:01:03.420
最高层是应用层 像你和我这样的开发人员

00:01:03.420 --> 00:01:07.050
建立的所有应用程序 所在的层

00:01:07.050 --> 00:01:08.270
在应用中

00:01:08.270 --> 00:01:13.440
我们使用一些 Android Framework 类 如 Textview 和 Activity

00:01:13.440 --> 00:01:16.330
当我们使用这些类的时候 我们仅仅需要通过一小行代码

00:01:16.330 --> 00:01:19.700
就可以完成很多复杂 和重要的事情

00:01:19.700 --> 00:01:22.910
例如 显示文本或者 打开一个新的页面

00:01:22.910 --> 00:01:24.980
等等还有很多

00:01:26.030 --> 00:01:27.910
那么 这些事是如何实现的呢?

00:01:27.910 --> 00:01:31.516
Framework 类通过调用 Android 低级层

00:01:31.516 --> 00:01:35.188
来避免很多不必要的 复杂事物

00:01:35.188 --> 00:01:37.471
并把低级层作为起重设备

00:01:37.471 --> 00:01:41.646
这在控制设备硬件的过程中 是一项艰苦且复杂的工作

00:01:41.646 --> 00:01:47.310
最后 一切得以运行 这就是我们所说的层阻碍

00:01:47.310 --> 00:01:49.649
核心操作系统或者简称为 OS

00:01:49.649 --> 00:01:54.024
有一套自己的复杂的代码 来规范应用和系统进程

00:01:54.024 --> 00:01:58.942
如何访问设备硬件的 有限资源

00:01:58.942 --> 00:02:03.502
现在 为了保护系统整体的 有效性和响应性

00:02:03.502 --> 00:02:07.685
在运行应用的同时 必须共享设备资源

00:02:07.685 --> 00:02:11.654
最低层是 实际物理设备硬件

00:02:11.654 --> 00:02:15.530
像是硅片 应用于无线设备

00:02:15.530 --> 00:02:17.847
如蜂窝、Wi-Fi 和蓝牙

00:02:17.847 --> 00:02:22.668
或是显卡、CPU、 内存条和 GPU

00:02:22.668 --> 00:02:25.350
等等很多…

00:02:25.350 --> 00:02:28.288
装配在 你设备上的

00:02:28.288 --> 00:02:28.924
物理电器元件

00:02:28.924 --> 00:02:31.152
如果你想拿走 其中任何一层

00:02:31.152 --> 00:02:35.001
要注意这些层的魅力 就在于其为开发人员

00:02:35.001 --> 00:02:38.463
简化或者避免了 系统的复杂性

00:02:38.463 --> 00:02:41.919
且允许你通过划分 应用等级

00:02:41.919 --> 00:02:44.630
使用更多的设备硬件

00:02:44.630 --> 00:02:49.228
所以你可以把 Framework 看作是 连接应用和设备

00:02:49.228 --> 00:02:50.143
的绳索

00:02:50.143 --> 00:02:53.810
Framework 类使我们清晰地 展示了当用户使用应用时

00:02:53.810 --> 00:02:55.062
设备是如何表现的

00:02:55.062 --> 00:02:58.879
现在 通过 developer.android.com 可找到所有这些

00:02:58.879 --> 00:03:02.496
Java 类的 Framework 构成 以及 C 语言编写的

00:03:02.496 --> 00:03:06.340
一些库 和一些相关内容

00:03:06.340 --> 00:03:09.110
让我们来讨论一些例子 一些我们已经

00:03:09.110 --> 00:03:11.650
在不自觉的情况下 使用了这些不同的层的例子

00:03:11.650 --> 00:03:15.390
例如 在我们的应用代码中 我们将 Framework 称为 API

00:03:15.390 --> 00:03:20.168
还有 在我们建立 Me Walk 应用的时候 我们使用媒体

00:03:20.168 --> 00:03:24.225
Framework 类从设备的 扬声器播放声音

00:03:24.225 --> 00:03:28.446
在本节课中 我们使用 HTTP URL 连接类

00:03:28.446 --> 00:03:33.103
来建立网络请求 使用设备上的无线装置

00:03:33.103 --> 00:03:35.307
在 Internet 上发送信息数据包

00:03:35.307 --> 00:03:38.988
现在我们不需要直接操作 Android 操作系统

00:03:38.988 --> 00:03:42.609
Framework 类是 阻碍发生在硬件上的

00:03:42.609 --> 00:03:45.430
实现的详细内容的 Java 类

00:03:45.430 --> 00:03:48.599
HTTP URL 连接中的 即时播放器

00:03:48.599 --> 00:03:53.136
或者通过与 Framework 类的交互

00:03:53.136 --> 00:03:56.102
使用 Android 设备 物理功能的类的两个示例

00:03:56.102 --> 00:03:58.160
如果你继续学习 Android 开发

00:03:58.160 --> 00:04:00.315
你还会看到 更多的示例

