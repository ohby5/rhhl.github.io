WEBVTT
Kind: captions
Language: ar

00:00:00.167 --> 00:00:02.367
‫في وظيفة makeHttpRequest..

00:00:02.701 --> 00:00:06.502
‫يفترض بنا تنفيذ HttpRequest
‫فقط إن لم يكن الرابط فارغاً

00:00:06.968 --> 00:00:09.968
‫إذ ليس من المعقول إنشاء
‫اتصال برابط غير صالح

00:00:10.467 --> 00:00:13.534
‫لذا في بداية الوظيفة،
‫لنتأكد أن الرابط فارغ

00:00:13.968 --> 00:00:19.435
‫وإن كان كذلك، فإننا نخرج من الوظيفة
‫مبكراً باستجابة JSON تحتوي نصاً فارغاً

00:00:19.934 --> 00:00:24.534
‫والآن لنتابع إلى المهمة الرئيسية في
‫الاختبار، وهي فحص رمز الاستجابة

00:00:25.234 --> 00:00:27.035
‫بعد إنشاء الاتصال..

00:00:27.267 --> 00:00:31.467
‫ستريد فحص رمز الاستجابة باستدعاء
‫urlConnection.getResponseCode

00:00:31.901 --> 00:00:34.769
‫إذا راجعت التوثيقات،
‫ستجدها تجيب بعدد صحيح

00:00:34.868 --> 00:00:37.001
‫لذا في شرط الاختبار في جملة if..

00:00:37.133 --> 00:00:39.533
‫نختبر ما إذا كان رمز الاستجابة = 200

00:00:39.801 --> 00:00:42.868
‫إن كان كذلك، نتابع إلى القراءة
‫من inputStream

00:00:43.000 --> 00:00:44.534
‫ونستخرج استجابة JSON

00:00:45.067 --> 00:00:47.234
‫أما إذا وجدنا رمز خطأ..

00:00:47.367 --> 00:00:49.968
‫وبمعنى آخر، لا يساوي 200
‫فلا نفعل شيء

00:00:50.267 --> 00:00:53.001
‫ثم نذهب إلى الأسفل هنا
‫ونُرجع JsonResponse

00:00:53.200 --> 00:00:55.667
‫والذي بُدء سلفاً بعبارة فارغة

00:00:56.133 --> 00:00:57.934
‫وهو ما يوصلنا إلى نقطة هامة

00:00:58.167 --> 00:01:02.068
‫إن كانت قيمة إجابة وظيفة makeHttpRequest
‫يمكن أن تكون عبارة فارغة..

00:01:02.300 --> 00:01:06.467
‫علينا أن نتأكد أن الوظيفة التي تتخذ
‫JsonResponse مدخلاً لها..

00:01:06.801 --> 00:01:08.702
‫تستطيع معالجة الاستجابة الفارغة

00:01:08.868 --> 00:01:11.335
‫لذا للنظر إلى وظيفة
‫extractFeatureFromJson

00:01:11.868 --> 00:01:14.901
‫قبل المتابعة لاستخراج المعلومات
‫من JsonResponse..

00:01:15.100 --> 00:01:18.233
‫نحتاج لفحص ما إذا كان باراميتر
‫المعلومات عبارة فارغة..

00:01:18.300 --> 00:01:22.500
‫أو خالي باستدعاء TextUtils.isEmpty
‫ونمرر لها العبارة

00:01:22.868 --> 00:01:27.435
‫لذا سأذهب مباشرة لإعلان
‫دالة isEmpty لأرى ما تفعله

00:01:27.634 --> 00:01:30.734
‫وأفعل ذلك بالاختصار Cmd+Click

00:01:31.133 --> 00:01:32.600
‫تلاحظ هنا في الواقع..

00:01:32.767 --> 00:01:35.434
‫أن وظيفة isEmpty
‫في فئة TextUtils..

00:01:35.701 --> 00:01:37.701
‫تفحص ما إذا كانت العبارة فارغة..

00:01:37.934 --> 00:01:39.234
‫أو كانت خالية Null

00:01:39.767 --> 00:01:41.167
‫حسناً، لنعد إلى الكود..

00:01:41.367 --> 00:01:44.467
‫إذا كانت العبارة خالية، فستكون قيمة
‫هذا التعبير True

00:01:44.567 --> 00:01:46.168
‫وسنخرج من الوظيفة مبكراً

00:01:46.634 --> 00:01:50.968
‫والآن أجبنا بفراغ لأنه لم يكن هنالك
‫كائن حدث من JsonResponse

00:01:51.267 --> 00:01:54.901
‫لاحظ كيف أن وظيفة extractFeatureFromJson
‫بنوع بيانات (حدث)

00:01:55.701 --> 00:01:59.834
‫سنشرح مسار التنفيذ كاملاً في TaskAsync
‫في تطبيق (تسونامي) لاحقاً في الدرس

00:02:00.264 --> 00:02:03.264
‫ولكن إن كان الزلزال فراغاً،
‫فلن نحدث الواجهة

00:02:03.534 --> 00:02:05.968
‫المهم أنه يمكننا الإجابة (Null)
‫على وظيفة ما

00:02:06.033 --> 00:02:08.271
‫طالما نعالج حالة Null بشكل صحيح

00:02:08.843 --> 00:02:12.341
‫تعرف الآن كيف تفحص رمز حالة HTTP
‫وضبط سلوك التطبيق..

00:02:12.400 --> 00:02:16.067
‫وفقاً لتلقيك رمز استجابة
‫ناجح أو غير ذلك

