WEBVTT
Kind: captions
Language: ar

00:00:00.400 --> 00:00:03.400
‫عندما يحدث خطأ ويُلقى استثناء..

00:00:03.633 --> 00:00:07.733
‫فمهمتنا كمطورين أن نعالج الأمر
‫بخطة احتياطية

00:00:08.533 --> 00:00:12.233
‫حيث نمسك بالخطأ ونعود إلى سلوك
‫منطقي افتراضي..

00:00:12.567 --> 00:00:14.267
‫وإلا سينهار التطبيق

00:00:14.633 --> 00:00:15.800
‫بكلمات أخرى..

00:00:16.000 --> 00:00:19.867
‫بعض التطبيقات تنهار
‫بسبب أخطاء لم تُمسك

00:00:20.000 --> 00:00:21.867
‫أجل، ولنفعل هذا..

00:00:21.933 --> 00:00:25.166
‫سنتعلم استخدام شيء يسمى مقطع
‫(حاول إمساك try catch) في جافا

00:00:25.700 --> 00:00:28.833
‫(حاول) تعني محاول تنفيذ مجموعة جمل..

00:00:29.000 --> 00:00:32.967
‫تحتوي استدعاء وظيفة
‫يُحتمل أن تلقي خطئاً

00:00:33.433 --> 00:00:34.633
‫وعند إلقاء الخطأ..

00:00:35.467 --> 00:00:37.667
‫فإنك تمسكه..
‫وإن لم يمسكه أحد..

00:00:39.000 --> 00:00:40.100
‫سينهار تطبيقك

00:00:40.467 --> 00:00:42.267
‫- أانت بخير (جو)؟
‫- أنا بخير

00:00:42.933 --> 00:00:48.866
‫وبغض النظر عن إلقاء خطأ أم لم، فيمكننا
‫إنهاء تنفيذ الكود في مقطع (أخيراً)

00:00:49.233 --> 00:00:52.933
‫إذاً فالتدفق الكامل هو (محاولة)
‫شيء ما قد يلقي خطئاً..

00:00:53.333 --> 00:00:54.866
‫وإمساك الخطأ إن أُلقي..

00:00:55.100 --> 00:00:58.367
‫ثم (أخيراً) تنفيذ بعض الكود بغض النظر
‫عن وقوع خطأ من عدمه

00:00:59.000 --> 00:01:01.667
‫- ينبغي أن نريهم الكود لهذا
‫- أجل، ينبغي أن نفعل

00:01:02.167 --> 00:01:04.167
‫لنفعلها.. في تطبيق (تسونامي)..

00:01:04.267 --> 00:01:06.900
‫توجد عدة أمثلة لمقاطع محاولة الإمساك

00:01:07.533 --> 00:01:09.933
‫لننظر إلى واحد في وظيفة createURL

00:01:10.533 --> 00:01:13.400
‫الهدف من هذه الوظيفة إرجاع كائن URL..

00:01:13.600 --> 00:01:15.800
‫لمُدخل سلسلة الرابط الحرفية

00:01:16.500 --> 00:01:21.133
‫مثالياً فإننا نستدعي الدالة الإنشائية
‫على URL ونمرر سلسلة URL الحرفية

00:01:21.733 --> 00:01:23.600
‫لكن من هذا الخط الأحمر المتعرج..

00:01:23.667 --> 00:01:27.534
‫فإن آندرويد ستوديو يخطرنا
‫بخطأ تم اكتشافه

00:01:28.267 --> 00:01:31.234
‫ويذكر أن لدينا خطأ بلا معالجة..

00:01:31.533 --> 00:01:33.933
‫من نوع (خطأ رابط مشوه)

00:01:34.500 --> 00:01:38.333
‫هذا يعني أن دالة URL الإنشائية
‫تلقي خطأ رابط مشوه..

00:01:38.633 --> 00:01:40.500
‫ويتعين علينا إمساكه ومعالجته

00:01:41.000 --> 00:01:44.133
‫وإلا فلن يُبنى تطبيقنا
‫ولن يمكننا تشغيله على الجهاز

00:01:44.833 --> 00:01:46.866
‫لأي دالة إنشائية أو استدعاء وظيفة..

00:01:46.967 --> 00:01:50.367
‫يمكنك فحص ما إذا كانت تلقي
‫أخطاء عبر مراجعة التوثيقات

00:01:50.667 --> 00:01:53.967
‫مثلاً، إذا زرت مستندات توثيق
‫URL المرجعية..

00:01:54.400 --> 00:01:59.233
‫سنجد أن الدالة الإنشائية URL تقبل مُدخل
‫نصي من MalformedURLException

00:01:59.500 --> 00:02:02.733
‫إن لم يمكن تحويل باراميتر
‫المُدخل إلى رابط..

00:02:03.133 --> 00:02:05.266
‫سيكون لدينا.. MalformedURL

00:02:06.367 --> 00:02:10.334
‫لإصلاح الكود، يمكننا استخدام الاختصار
‫Alt+Enter للإصلاح السريع

00:02:10.867 --> 00:02:13.534
‫يمكننا اختيار (إحاطة بمحاولة إمساك)

00:02:13.867 --> 00:02:16.367
‫وسيحدث آندرويد ستوديو الكود تلقائياً

00:02:16.800 --> 00:02:17.867
‫جميل، أليس كذلك؟

00:02:18.367 --> 00:02:20.500
‫الآن لدينا الكلمة الدلالية try..

00:02:20.867 --> 00:02:22.634
‫متبوعة بقوس فتح معقوف

00:02:23.100 --> 00:02:26.800
‫في مقطع try، نضيف كل الكود
‫الذي قد يُلقي خطأ

00:02:27.300 --> 00:02:30.800
‫بشكل عام، فمن الممارسات الجيدة
‫أن تُبقي الكود في هذا المقطع بسيط

00:02:31.167 --> 00:02:33.500
‫بمعنى أنك لا تريد وظيفة كاملة داخله

00:02:33.967 --> 00:02:35.700
‫ثم نغلق المقطع بقوس معقوف

00:02:36.200 --> 00:02:38.600
‫بعدها لدينا الكلمة الدلالية catch

00:02:38.833 --> 00:02:43.266
‫متبوعة بأقواس دائرية تحوي نوع
‫بيانات مطابق للخطأ الذي سنمسكه

00:02:43.867 --> 00:02:46.400
‫وهو في هذه الحالة
‫MalformedURLException

00:02:46.500 --> 00:02:49.167
‫واسم المتغير لكائن الخطأ هو e

00:02:49.667 --> 00:02:52.600
‫ثم قوس فتح معقوف
‫حيث سنُعامل الخطأ

00:02:53.100 --> 00:02:57.200
‫ستطبع e.printStackTrace حزمة الخطأ
‫في هيئة تفصيلية

00:02:57.800 --> 00:03:01.233
‫الخيار الآخر هو تسجيل الأخطاء
‫باستخدام وظيفة log في آندرويد

00:03:01.367 --> 00:03:04.467
‫ونُضمن وسم السجل ورسالتنا المُخصصة

00:03:04.900 --> 00:03:08.500
‫يمكن لوظيفة log.e أن تأخذ الخطأ
‫كوسيط ثالث

00:03:09.467 --> 00:03:12.434
‫للتلخيص، إذا سار كل شيء جيداً
‫في الدالة الإنشائية..

00:03:12.533 --> 00:03:13.900
‫فلن يلقى خطأ..

00:03:14.033 --> 00:03:16.066
‫ولن يعمل شيء في مقطع catch

00:03:16.567 --> 00:03:18.900
‫ولكن إذا ألقى مقطع try خطئاً..

00:03:19.033 --> 00:03:23.333
‫فإننا نقفز فوراً إلى مقطع catch
‫مع الخطأ وننفذ الكود فيه

00:03:24.100 --> 00:03:28.900
‫ثم نخرج من جملة try catch ونتابع
‫تنفيذ الكود سطراً بعد الآخر بعدها

00:03:29.833 --> 00:03:33.933
‫لاحظ أن متغير URL يُبدأ قبل
‫مقطع (المحاولة والإمساك)

00:03:34.367 --> 00:03:36.467
‫يجب أن نضع (مجال المتغير)
‫في اعتبارنا هنا

00:03:36.633 --> 00:03:39.533
‫إذا عرفنا متغير URL داخل المقطع..

00:03:39.700 --> 00:03:42.867
‫فلن نتمكن من الوصول إلى المتغير
‫بعد انتهاء الجملة

00:03:43.567 --> 00:03:46.900
‫وبما إننا نريد الإشارة إلى متغير URL
‫في نهاية الوظيفة..

00:03:47.000 --> 00:03:48.800
‫وخارج جملة (المحاولة والإمساك)..

00:03:48.900 --> 00:03:52.267
‫فيجب كذلك أن نبدأ
‫متغير URL خارجها

00:03:53.000 --> 00:03:56.333
‫في هذه الحالة يمكننا ضبطه
‫إلى Null أو قيمة خالية

00:03:57.367 --> 00:04:02.434
‫رأينا كيف سينبهك آندرويد ستوديو إن احتجت
‫لتغليف الكود في جملة (محاولة وإمساك)

00:04:02.800 --> 00:04:06.567
‫إن احتجت معلومات إضافية،
‫راجع توثيقات جافا الرسمية

00:04:07.300 --> 00:04:09.667
‫المثال التالي أكثر تعقيداً قليلاً

00:04:10.233 --> 00:04:13.733
‫ويوضح أن بإمكانك كتابة أي عدد
‫من السطور في مقطع try..

00:04:13.833 --> 00:04:16.033
‫وإن ألقى أي سطر منهم خطئاً..

00:04:16.367 --> 00:04:20.700
‫فإننا نوقف تنفيذ جملة مقطع المحاولة،
‫ونقفز مباشرة إلى مقطع الإمساك

00:04:21.200 --> 00:04:27.233
‫إن تطلب الأمر، فيفترض ويجب أن تكتب عدة
‫مقاطع إمساك لمعاملة الأخطاء المختلفة

00:04:27.800 --> 00:04:30.800
‫هنا كود يمسك خطأ
‫مؤشر خارج النطاق..

00:04:31.167 --> 00:04:32.834
‫ويطبع رسالة في سجل النظام

00:04:33.033 --> 00:04:36.599
‫كما يمسك الكود خطأ إدخال وإخراج IO
‫ويطبع رسالة مختلفة في السجل

00:04:37.300 --> 00:04:39.600
‫اعتماداً على أي خطأ يُلقى..

00:04:39.867 --> 00:04:43.134
‫فإننا سنقع في أحد مقطعي الإمساك،
‫ولكن ليس كلاهما

00:04:43.567 --> 00:04:48.800
‫حسناً، ترى أنه لا ضمانة في تنفيذ
‫كامل كود (المحاولة)

00:04:49.233 --> 00:04:53.233
‫أحياناً ستحتاج إلى تنظيف الكود
‫حتى لو ألقي خطأ

00:04:53.933 --> 00:04:56.300
‫لذا فمقطع finally دائماً سينفذ..

00:04:56.433 --> 00:04:58.600
‫سواء ألقي خطأ أم لا

00:04:59.733 --> 00:05:01.533
‫قبل أن نختم المناقشة..

00:05:01.800 --> 00:05:05.633
‫أريد الإشارة إلى طريقة أخيرة للتعامل
‫مع الأخطاء المُقررة..

00:05:06.133 --> 00:05:07.400
‫كما ترى هنا..

00:05:07.500 --> 00:05:10.467
‫عبر تعديل توقيع وظيفة createURL..

00:05:10.900 --> 00:05:15.000
‫لديك خيار توجيه معاملة الخطأ
‫لأعلى سلسلة الاستدعاء..

00:05:15.167 --> 00:05:17.400
‫بإعلان أن وظيفتك قد تلقي خطأ

00:05:17.733 --> 00:05:20.666
‫وهذا بدوره يتطلب استدعاء
‫الوظائف المُعاملة له

00:05:21.433 --> 00:05:24.566
‫هذا شائع إن أُلقي الخطأ
‫من داخل وظيفة مساعدة..

00:05:24.900 --> 00:05:27.567
‫وتريد معاملته في (محاولة وإمساك)
‫في مكان آخر

00:05:27.833 --> 00:05:30.600
‫مثلاً، أياً كان مُستدعي
‫وظيفة createURL..

00:05:30.716 --> 00:05:33.714
‫سيحتاج مقطع (محاولة وإمساك)
‫حول استدعاء الوظيفة..

00:05:33.818 --> 00:05:36.865
‫ليمسك MalformedURLException

00:05:37.643 --> 00:05:39.979
‫ويمكننا رؤية هذا في وظيفة
‫doInBackground

00:05:40.527 --> 00:05:42.161
‫لأغراض تطبيق (تسونامي)..

00:05:42.388 --> 00:05:45.445
‫إذا استدعيت كود من إطار عمل آندرويد
‫يمكنه إلقاء خطأ..

00:05:45.580 --> 00:05:48.614
‫فيجدر بك امساكه ومعاملته لحظة حدوثه

00:05:49.033 --> 00:05:50.933
‫بدلاً من توجيهه للمعاملة لاحقاً

