WEBVTT
Kind: captions
Language: zh-CN

00:00:00.730 --> 00:00:03.830
现在 我们的应用已经具备了它所需要的功能

00:00:03.830 --> 00:00:05.860
它只是看起来还不太美观

00:00:05.860 --> 00:00:09.300
所以我会教你如何把它变好看

00:00:09.300 --> 00:00:12.350
我们做的第一件事就是修改样式文件

00:00:12.350 --> 00:00:18.230
它在 values 文件夹中 它在这 styles.xml

00:00:18.230 --> 00:00:20.390
双击

00:00:20.390 --> 00:00:23.160
这是一个你之前没有接触过的文件

00:00:23.160 --> 00:00:26.120
我不打算深入讲解它是怎样工作的

00:00:26.120 --> 00:00:29.520
我们提供了一些代码 可以使你的按钮和

00:00:29.520 --> 00:00:31.810
标题栏变为橙色

00:00:31.810 --> 00:00:35.090
这些代码可以做到是因为样式文件负责

00:00:35.090 --> 00:00:37.545
控制你的应用的基本默认样式

00:00:37.545 --> 00:00:41.005
在我们的 XML 中 如果我想要改变

00:00:41.005 --> 00:00:44.450
背景的颜色 我们需要对它内部的元素都做一遍

00:00:44.450 --> 00:00:47.100
但是如果你在样式文件中做这些 它会应用到整个布局

00:00:48.140 --> 00:00:50.950
我要粘贴之前给你们的代码

00:00:50.950 --> 00:00:55.000
这里的 colorPrimary 就是标题栏显示的颜色

00:00:55.000 --> 00:00:58.800
这里的 colorButtonNormal 就是你的按钮将会显示的颜色

00:00:58.800 --> 00:00:59.750
注意

00:00:59.750 --> 00:01:03.650
因为 API 更新 colorButtonNormal 标签只会在

00:01:03.650 --> 00:01:07.360
API 22 以上才会有效

00:01:07.360 --> 00:01:09.770
这意味着如果你有一个比较新的手机

00:01:09.770 --> 00:01:12.770
你会看到橙色按钮 你可以在模拟器上试一试

00:01:12.770 --> 00:01:16.680
如果你的手机有一点旧 你仍然看到灰色按钮

00:01:16.680 --> 00:01:18.420
现在 有好几种解决方案 但是

00:01:18.420 --> 00:01:21.980
我不想太早讲到如何操作按钮的颜色

00:01:21.980 --> 00:01:25.480
我们回到 activity_main.xml

00:01:25.480 --> 00:01:26.040
酷

00:01:26.040 --> 00:01:28.830
我们看到按钮已经变为橙色了

00:01:28.830 --> 00:01:31.780
我们的标题栏也是橙色

00:01:31.780 --> 00:01:35.950
我们的状态栏变成了浅灰色 这时我们将父 View

00:01:35.950 --> 00:01:40.430
的属性设为 AppCompat.Light 而不是 AppCompat.Dark

00:01:40.430 --> 00:01:43.550
它将主题由深色变为浅色

00:01:43.550 --> 00:01:45.630
我们回到 XML

00:01:45.630 --> 00:01:48.360
我们列表的下一件事就是在这

00:01:48.360 --> 00:01:49.890
做一个可爱的分隔栏

00:01:49.890 --> 00:01:52.690
如果我点击在这的 linearlayout

00:01:52.690 --> 00:01:55.250
我们可以看到这个 linearlayout 包含的 View

00:01:56.290 --> 00:02:00.640
如果我向下滚动一点 我能看到其他的 linearlayout

00:02:00.640 --> 00:02:04.130
点击 这就是这个 linearlayout

00:02:05.430 --> 00:02:09.910
所以如果我想要在这两个布局之间加一个分隔栏 把它放在这

00:02:09.910 --> 00:02:13.780
第一个 linearlayout 结束 第二个布局开始之前插入代码

00:02:14.780 --> 00:02:17.870
因为这两个 linearlayout 的父 View 是另一个 linearlayout

00:02:17.870 --> 00:02:20.430
滚动一下你们就能看到

00:02:22.030 --> 00:02:23.480
这个 linearlayout 在这

00:02:24.560 --> 00:02:26.320
它的方向是水平的

00:02:27.470 --> 00:02:31.190
当我把分隔栏放在这的时候 它会显示这个 linearlayout

00:02:31.190 --> 00:02:35.430
分隔栏 linearlayout 都是水平放置

00:02:35.430 --> 00:02:36.280
看下面

00:02:37.570 --> 00:02:41.135
如果你只是想要一个有颜色的方块 也就是从中间

00:02:41.135 --> 00:02:44.767
向下延伸的一条线 我们可以用一个 View

00:02:46.647 --> 00:02:47.590
好

00:02:47.590 --> 00:02:51.210
像其他View一样 这个 View也需要宽和高

00:02:51.210 --> 00:02:55.300
现在我们想要一条细线 它的宽为 1 dp

00:02:56.350 --> 00:02:58.320
这就是这个线的厚度

00:02:58.320 --> 00:03:00.110
也是我想要的

00:03:00.110 --> 00:03:03.330
这个线的高度和 Team A 和 Team B 的 linearlayout

00:03:03.330 --> 00:03:06.610
的高度一样高

00:03:06.610 --> 00:03:08.870
所以我把高度设为 match_parent

00:03:10.340 --> 00:03:14.480
现在这个 View 基本上就是一个盒子 宽 1 dp

00:03:14.480 --> 00:03:19.220
和父 linearlayout 的高度一样

00:03:19.220 --> 00:03:21.790
但是我们看不到它 因为背景颜色是白色

00:03:21.790 --> 00:03:25.230
现在我要把背景的颜色改为深灰色

00:03:27.000 --> 00:03:29.570
现在我们有了一条从屏幕中心向下延伸的

00:03:29.570 --> 00:03:30.700
一条线

00:03:30.700 --> 00:03:35.870
但是 如果我们放大 我们会看到它实际上

00:03:35.870 --> 00:03:41.690
一直向下延伸 甚至穿过了 RESET 按钮

00:03:41.690 --> 00:03:44.740
我们想让它在这就停止

00:03:44.740 --> 00:03:48.827
所以我们要用的方法是把它的高度改为

00:03:48.827 --> 00:03:52.180
wrap_content 而不是 match_parent

00:03:52.180 --> 00:03:56.570
特别地 对于 Team A 和 Team B 的 linearlayout

00:03:56.570 --> 00:03:59.720
他们的高度不是整个屏幕的高度 我们把它们改成 wrap_content

00:03:59.720 --> 00:04:04.500
这样它们在遇到底部按钮之前就会结束

00:04:04.500 --> 00:04:07.450
然后 对于父布局 排列这些的水平布局

00:04:07.450 --> 00:04:10.380
我们也把它设为 Wrap_content

00:04:10.380 --> 00:04:14.940
这样它就会根据 Team B 和

00:04:14.940 --> 00:04:16.510
Team A 的 linearlayout 的底部决定自己的高度

00:04:16.510 --> 00:04:19.529
这样也会是这个线和这些布局的高度一致

00:04:19.529 --> 00:04:21.269
我们来实现这些改变

00:04:21.269 --> 00:04:23.280
首先我会从这里的 linearlayout 开始

00:04:23.280 --> 00:04:25.350
这是 Team B 的 linearlayout

00:04:25.350 --> 00:04:28.430
我把它的高度设为 wrap_content

00:04:28.430 --> 00:04:31.180
好 它已经适应了按钮的高度

00:04:31.180 --> 00:04:35.634
然后点击 Team A 布局 对它的布局高度进行改变

00:04:35.634 --> 00:04:40.040
不是 match_parent 而是 wrap_content

00:04:40.040 --> 00:04:44.750
现在两个布局都已经适应了它们的内容

00:04:45.790 --> 00:04:48.430
但是中间的线仍然延伸到底部

00:04:48.430 --> 00:04:51.390
这是因为这两个 linearlayout 的父布局仍然占据

00:04:51.390 --> 00:04:52.090
整个空间

00:04:52.090 --> 00:04:55.430
因为它的高度是 match_parent 也就是整个屏幕

00:04:55.430 --> 00:04:59.177
现在 我把它也改为 wrap_content

00:05:00.640 --> 00:05:05.100
现在这个灰线在两个布局的底部就结束了

00:05:05.100 --> 00:05:06.410
酷 现在

00:05:06.410 --> 00:05:09.100
我不想让这条线一直延伸到这

00:05:09.100 --> 00:05:12.320
这个是用内边距和外边距就能解决的问题

00:05:12.320 --> 00:05:14.010
我们会做一些改变

00:05:14.010 --> 00:05:15.970
现在我想做的就是浏览

00:05:15.970 --> 00:05:20.080
然后获取所有合适的文本大小 颜色 还有正确的字体

00:05:20.080 --> 00:05:22.961
我们从上面开始 做一些改动

00:05:22.961 --> 00:05:26.476
我告诉第一个 TextView

00:05:26.476 --> 00:05:31.227
它的字体是 Sans Serif Medium

00:05:31.227 --> 00:05:33.575
字体大小是 14 sp

00:05:34.740 --> 00:05:38.400
最后 字体颜色的十六进制代码是#616161

00:05:38.400 --> 00:05:43.510
也就是浅灰色

00:05:43.510 --> 00:05:47.140
所以 Team A 的 TextView 字体 字号和颜色都设置好了

00:05:47.140 --> 00:05:49.590
然后是 Team A 的分数

00:05:50.760 --> 00:05:54.330
现在 对于分数 字体是 Sans Serif light

00:05:55.400 --> 00:06:02.750
字号是 56 sp 所以我们的分数又大又好看

00:06:02.750 --> 00:06:07.340
textColor 设置为黑色

00:06:07.340 --> 00:06:10.590
十六进制代码是 #000000

00:06:10.590 --> 00:06:12.140
酷

00:06:12.140 --> 00:06:13.670
缩放一下

00:06:13.670 --> 00:06:17.270
对于我们的按钮 它的文本样式 或者字体大小

00:06:17.270 --> 00:06:18.650
或者字体颜色都没有改变

00:06:18.650 --> 00:06:19.970
它们看起来很不错

00:06:19.970 --> 00:06:21.630
但是我想对另一边做一些改变

00:06:21.630 --> 00:06:23.610
我把它改成和左边一样

00:06:23.610 --> 00:06:24.760
我们快速的实现它

00:06:26.490 --> 00:06:27.660
我更新了

00:06:27.660 --> 00:06:28.990
所以现在这两边是完全一样的

00:06:28.990 --> 00:06:30.550
文本大小

00:06:30.550 --> 00:06:33.620
颜色 字体 看起来都相当不错

00:06:33.620 --> 00:06:34.156
实际上

00:06:34.156 --> 00:06:37.271
我们需要做的最后一件事就是间距问题

00:06:37.271 --> 00:06:40.359
我们从这的第一个 TextView 开始

00:06:40.359 --> 00:06:45.653
不使用 4dp 的内边距 我们将它改为 16dp 的内边距

00:06:45.653 --> 00:06:50.033
这是分数 TextView 不使用 4dp

00:06:50.033 --> 00:06:53.758
我们把它改成 24dp 的 paddingBottom

00:06:53.758 --> 00:06:56.130
因为上面有 16dp 的内边距

00:06:56.130 --> 00:06:58.440
我们在两行文字中间已经有了足够的空白

00:06:59.500 --> 00:07:01.430
现在修改按钮

00:07:01.430 --> 00:07:03.548
我们的按钮看起来有点宽

00:07:03.548 --> 00:07:06.290
我不想给它们指定宽度 但是

00:07:06.290 --> 00:07:09.460
我想让它们离边缘远一点

00:07:09.460 --> 00:07:11.330
我们不使用内边距

00:07:11.330 --> 00:07:14.010
记住内边距是在 View 内部添加空间

00:07:14.010 --> 00:07:17.970
按钮视图有一个扩展整个 View 的背景颜色

00:07:17.970 --> 00:07:20.230
所以我们在这使用外边距

00:07:20.230 --> 00:07:22.390
现在我的 layout_margin 是 8

00:07:22.390 --> 00:07:26.500
但是我要把底部的 layout_margin 改为8

00:07:26.500 --> 00:07:32.360
然后左右两边的外边距设为24

00:07:32.360 --> 00:07:35.090
但是会压缩两边的空白

00:07:35.090 --> 00:07:36.960
我们开始实现这些

00:07:36.960 --> 00:07:39.440
按钮的外观看起来更好了

00:07:39.440 --> 00:07:41.470
对另外两个按钮做相同的事情

00:07:42.510 --> 00:07:45.530
只需要复制然后粘贴就可以了

00:07:45.530 --> 00:07:46.390
好了 酷

00:07:46.390 --> 00:07:47.820
我不想那么无聊

00:07:47.820 --> 00:07:50.880
我会对这一边做相同的改变 就像对 Team A 做的一样

00:07:50.880 --> 00:07:51.930
给我一秒钟

00:07:52.960 --> 00:07:53.500
非常棒

00:07:53.500 --> 00:07:54.973
现在两边看起来相同了

00:07:54.973 --> 00:07:57.990
现在我需要处理的只剩下分割线和

00:07:57.990 --> 00:08:00.920
RESET 按钮的外边距了

00:08:00.920 --> 00:08:02.370
首先从 RESET 按钮开始

00:08:03.415 --> 00:08:08.260
我们给 RESET 按钮设置一个 8dp 的底部外边距

00:08:08.260 --> 00:08:11.820
然后设置 marginLeft 和 marginRight 的值为 22dp

00:08:11.820 --> 00:08:14.460
我向上滚动到灰线部分

00:08:14.460 --> 00:08:16.810
这就是那个 View

00:08:16.810 --> 00:08:17.400
基本上

00:08:17.400 --> 00:08:20.142
我不想让灰线接触到应用的标题栏

00:08:20.142 --> 00:08:22.270
我想给它多一点空间

00:08:22.270 --> 00:08:25.010
同样的原因 我们使用外边距而不是内边距

00:08:25.010 --> 00:08:26.960
我在按钮上做这些

00:08:26.960 --> 00:08:28.730
因为这是灰色背景

00:08:28.730 --> 00:08:32.960
实质上我使用任何的内边距也不会改变任何的事情

00:08:32.960 --> 00:08:35.630
但是外边距 也就是在视图周围的空间 会发生改变

00:08:35.630 --> 00:08:37.400
我们马上做这些

00:08:37.400 --> 00:08:40.250
margin_top 设为 16dp

00:08:40.250 --> 00:08:41.640
继续

00:08:41.640 --> 00:08:44.179
灰线的上面出现了一些空白

00:08:45.285 --> 00:08:48.630
现在我的代码看起来有点乱 因为我添加属性标签的时候

00:08:48.630 --> 00:08:50.240
有一些随意

00:08:50.240 --> 00:08:51.940
使用 Cmd+A

00:08:51.940 --> 00:08:55.020
或者如果你使用 Windows 设备 Ctrl+A 全选

00:08:55.020 --> 00:08:59.420
然后我会使用 Cmd+Option+L

00:08:59.420 --> 00:09:02.210
如果你在 Windows 设备上 那就是 Ctrl+Alt+L

00:09:02.210 --> 00:09:05.340
代码就自动整理好了

00:09:05.340 --> 00:09:07.150
它看起来非常简洁 美观

00:09:07.150 --> 00:09:09.970
就像我们的 Court Counter 应用一样美观

00:09:09.970 --> 00:09:11.480
现在 我想看一下在我手机上是什么样子

00:09:11.480 --> 00:09:14.450
现在要在我的手机上加载新设计的皮肤

00:09:14.450 --> 00:09:16.410
记住 如果你有一个旧手机

00:09:16.410 --> 00:09:18.660
它会以一种不同的颜色显示

00:09:18.660 --> 00:09:20.000
但是你能一直使用模拟器

00:09:21.130 --> 00:09:23.980
多么时尚的应用啊

00:09:23.980 --> 00:09:24.920
现在问题是

00:09:24.920 --> 00:09:26.810
它能正常工作吗？

00:09:26.810 --> 00:09:29.660
我没有改变任何的 Java 代码 所以功能是正常的

00:09:29.660 --> 00:09:31.020
分数看起来又大又好看

00:09:31.020 --> 00:09:33.990
按钮的颜色也非常好看

00:09:33.990 --> 00:09:34.600
做的不错

