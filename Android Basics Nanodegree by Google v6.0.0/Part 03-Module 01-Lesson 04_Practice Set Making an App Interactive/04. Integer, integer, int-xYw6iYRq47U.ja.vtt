WEBVTT
Kind: captions
Language: ja

00:00:00.450 --> 00:00:03.830
変数の宣言について
話す以前に

00:00:03.830 --> 00:00:06.870
どの名称も
変数としては

00:00:06.870 --> 00:00:07.440
良くないですね

00:00:08.730 --> 00:00:11.660
“number” “int” “integer” は
データタイプと

00:00:11.660 --> 00:00:16.260
混同しやすいからです

00:00:16.260 --> 00:00:18.310
しかもその内の２つは
使えもしません

00:00:18.310 --> 00:00:21.190
最初の宣言を
見てみましょう

00:00:21.190 --> 00:00:22.450
“integer” とあります

00:00:22.450 --> 00:00:24.390
ここには本来
変数型が必要です

00:00:24.390 --> 00:00:28.420
今回は string と int の
２つを勉強しました

00:00:28.420 --> 00:00:32.259
小文字の “int” でないと
いけません

00:00:32.259 --> 00:00:34.340
“integer” だと
読み込みません

00:00:34.340 --> 00:00:38.360
正しい綴りで
小文字を使いましょう

00:00:38.360 --> 00:00:39.780
よって
これは間違いです

00:00:39.780 --> 00:00:42.650
次の宣言の int は
あっています

00:00:42.650 --> 00:00:44.070
もう知っていますね

00:00:44.070 --> 00:00:45.610
データタイプとしては
いいのですが

00:00:45.610 --> 00:00:50.020
変数名はデータタイプと
同じにはなり得ません

00:00:50.020 --> 00:00:52.850
Java では "int" のように
ただの名前としては

00:00:52.850 --> 00:00:55.410
扱えない特別な言葉が
いくつかあります

00:00:55.410 --> 00:00:57.230
これらをキーワードと
言います

00:00:57.230 --> 00:00:58.790
Android Studio では
青く表示されます

00:00:58.790 --> 00:01:02.570
キーワードは変数名には
できないのです

00:01:03.700 --> 00:01:06.370
これも間違いです
３つ目に行きましょう

00:01:06.370 --> 00:01:08.260
データタイプの宣言は
正しいですね

00:01:08.260 --> 00:01:10.370
ただし実質的には
大丈夫ですが

00:01:10.370 --> 00:01:13.630
変数名の条件は
読み取れることと

00:01:13.630 --> 00:01:16.320
命名のルールに
従うことです

00:01:16.320 --> 00:01:19.160
名前が “integer” だと
曖昧です

00:01:19.160 --> 00:01:22.170
コードを読む人が
混乱するでしょう

00:01:24.070 --> 00:01:26.570
技術的には間違っていないので
チェック入れませんが

00:01:26.570 --> 00:01:28.680
もっと良い変数名を
考えるべきです

00:01:28.680 --> 00:01:30.170
numberForCalculation
なんかいいですね

00:01:30.170 --> 00:01:32.720
これだと特定的で
分かりやすいです

