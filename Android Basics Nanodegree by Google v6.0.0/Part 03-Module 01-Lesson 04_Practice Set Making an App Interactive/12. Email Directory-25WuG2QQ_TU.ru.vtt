WEBVTT
Kind: captions
Language: ru

00:00:01.240 --> 00:00:05.210
Данная программа — это часть программы,
которая выводит список электронных адресов

00:00:05.210 --> 00:00:06.939
сотрудников кафе Just Java.

00:00:06.939 --> 00:00:10.590
А у сотрудников кафе Just Java
адреса почты состоят

00:00:10.590 --> 00:00:15.910
из фамилии, точки,
имени и домена @justjava.com.

00:00:15.910 --> 00:00:19.350
Программа должна выводить
имя сотрудника, затем фамилию,

00:00:19.350 --> 00:00:22.540
а затем электронный адрес в этом формате.

00:00:22.540 --> 00:00:24.040
Посмотрим, делает ли она это.

00:00:24.390 --> 00:00:27.960
Так, в первой строке здесь
объявляется переменная firstName,

00:00:27.960 --> 00:00:29.780
которой присваивается значение Lyla.

00:00:29.780 --> 00:00:30.870
Очень хорошо.

00:00:30.870 --> 00:00:34.570
Затем в следующей строке объявляется
переменная lastName,

00:00:34.570 --> 00:00:36.580
которой присваивается значение Fujiwara.

00:00:36.580 --> 00:00:39.570
Ладно, и теперь мы создаём
переменную contactInfo и

00:00:39.870 --> 00:00:42.130
присваиваем ей нечто более сложное.

00:00:42.130 --> 00:00:44.370
Я запишу эту переменную.

00:00:44.370 --> 00:00:48.570
Так, ей мы присваиваем
объединение значения переменной firstName,

00:00:48.570 --> 00:00:51.230
пробела и значения переменной lastName.

00:00:51.230 --> 00:00:52.580
Значение firstName — Lyla.

00:00:52.580 --> 00:00:54.020
Значение lastName — Fujiwara.

00:00:54.020 --> 00:00:59.580
Значением переменной будет
Lyla, пробел, Fujiwara.

00:01:00.330 --> 00:01:01.690
Так, выглядит вполне хорошо.

00:01:01.690 --> 00:01:02.840
Про следующий оператор

00:01:02.840 --> 00:01:05.930
хочу сказать, что эти два фрагмента
на самом деле одна строка.

00:01:05.930 --> 00:01:08.990
Итак, мы берём контактные данные,
которые мы только что объявили,

00:01:08.990 --> 00:01:11.020
и сбрасываем их к этому значению.

00:01:11.020 --> 00:01:12.420
Посмотрим, что это такое.

00:01:12.420 --> 00:01:16.600
Так, значение lastName — Fujiwara,
а значение firstName — всё так же Lyla.

00:01:16.600 --> 00:01:20.660
Тогда тут очищается прежнее значение
контактных данных, и в эту переменную

00:01:20.660 --> 00:01:26.720
записывается открывающаяся скобка,
плюс строка Fujiwara,

00:01:27.770 --> 00:01:32.858
плюс точка, плюс строка Lyla,

00:01:35.580 --> 00:01:39.480
плюс строка @justjava.com и
в конце — закрывающаяся скобка.

00:01:39.680 --> 00:01:42.942
Вот таким стало текущее значение
контактных данных.

00:01:42.942 --> 00:01:45.922
А в следующей строке
мы выводим на экран это значение,

00:01:45.922 --> 00:01:49.332
то есть мы будем выводить вот это, но

00:01:49.332 --> 00:01:53.172
эта строка совсем не такая, как вот эта.

00:01:54.540 --> 00:01:57.500
На самом деле это только часть
нужной строки, вот эта часть.

00:01:57.620 --> 00:01:59.700
Не хватает строки Lyla Fujiwara.

00:01:59.700 --> 00:02:02.220
Перед тем как мы изменили эту строку,

00:02:02.220 --> 00:02:06.640
в ней хранилась строка Lyla Fujiwara,
но мы перезаписали её

00:02:06.640 --> 00:02:10.530
вот в этой строке, когда сказали, что она
будет равна абсолютно другому значению.

00:02:10.530 --> 00:02:14.850
На самом деле нам нужно,
чтобы тут было объединение этих строк.

00:02:14.850 --> 00:02:17.100
Тогда, чтобы исправить эту программу,

00:02:17.100 --> 00:02:22.600
можно добавить для contactInfo знак «+»,
а затем всё остальное.

00:02:22.600 --> 00:02:25.800
Тогда будет взято текущее значение
контактных данных, Lyla Fujiwara,

00:02:25.800 --> 00:02:29.635
и к нему будет добавлен
электронный адрес в этом формате.

00:02:29.635 --> 00:02:32.555
Ещё небольшое замечание:
я предполагаю, что для наших

00:02:32.555 --> 00:02:37.025
электронных адресов @justjava.com
неважно, использована F заглавная

00:02:37.025 --> 00:02:40.357
или строчная, и использована ли заглавная
или строчная L.

00:02:40.357 --> 00:02:43.587
Для многих почтовых сервисов,
используемых пользователями, это так.

00:02:43.587 --> 00:02:44.947
Например, это так для Gmail.

00:02:44.947 --> 00:02:47.957
Можно использовать как строчные,
так и заглавные буквы, и письмо

00:02:47.957 --> 00:02:49.477
всё равно дойдёт до адресата.

00:02:49.477 --> 00:02:52.257
Но если вы обращаете внимание на регистр,
это очень хорошо.

00:02:52.257 --> 00:02:55.687
Но, как было сказано, и можно повторить,
регистр на самом деле не играет

00:02:55.687 --> 00:02:58.337
большой роли, когда мы обсуждаем работу
на компьютерах.

