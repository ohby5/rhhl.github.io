WEBVTT
Kind: captions
Language: zh-TW

00:00:00.290 --> 00:00:03.510
現在 你已經確定將訊息設定為全域變數

00:00:03.510 --> 00:00:06.920
只需要看這個變數的聲明位置 也就是在這里 就可以看出來

00:00:07.980 --> 00:00:11.000
這個變數并不這些方法的任何一個方法中宣告的

00:00:11.000 --> 00:00:13.980
實際上 它是在任何方法之外宣告的

00:00:13.980 --> 00:00:16.600
它是在兩個花括號之間聲明的

00:00:16.600 --> 00:00:19.200
我們稱之為主活動類別

00:00:19.200 --> 00:00:21.070
那么下一個問題是

00:00:21.070 --> 00:00:23.050
訊息是否應該是全域變數

00:00:23.050 --> 00:00:28.430
無論我們何進使用訊息 我們可以到在設定訊息之后

00:00:28.430 --> 00:00:30.040
就可以立即顯示訊息

00:00:30.040 --> 00:00:34.230
在我們設定訊息時 我們并沒有看一下前面的訊息值

00:00:34.230 --> 00:00:38.140
全域變數很適合在各個元件之間（例如在你的應用程式的按鈕或其它事件）跟

00:00:38.140 --> 00:00:41.290
蹤先前設定的值

00:00:41.290 --> 00:00:43.800
它們可用于保存應用程式狀態

00:00:43.800 --> 00:00:44.870
如果你想要使用一個變數作為中間值

00:00:44.870 --> 00:00:48.370
就不適使用它們

00:00:48.370 --> 00:00:51.300
請記住 當你執行這些稱為方法的代碼塊中的代碼時

00:00:51.300 --> 00:00:54.990
你需要依次進行聲明

00:00:54.990 --> 00:00:59.187
如果只需要在這些聲明序列內使用變數

00:00:59.187 --> 00:01:01.293
就不需要把它設為全域變數

00:01:01.293 --> 00:01:02.959
這種變數稱為局域變數

00:01:02.959 --> 00:01:04.918
它只是在方法內使用

00:01:04.918 --> 00:01:06.320
訊息就是這種類型的變數

00:01:06.320 --> 00:01:09.240
它是一種在當時使用時用的中間值

00:01:09.240 --> 00:01:12.640
因此訊息不應該是全域變數

00:01:12.640 --> 00:01:15.810
那么 因為如果將它設定為全域變數 會導致程式無法運行嗎

00:01:15.810 --> 00:01:20.110
不會 程序還是會正常運行 我忘了在這里鍵入一行

00:01:20.110 --> 00:01:22.350
好了 如果我在這里按一下 No 按鈕

00:01:22.350 --> 00:01:25.770
它要做的事情是首先取一個健康度級別

00:01:25.770 --> 00:01:27.180
然后從中取一個值

00:01:27.180 --> 00:01:29.540
現在作為題外話 你可能會想知道healthLevel（健康度）

00:01:29.540 --> 00:01:30.670
的值是多少

00:01:30.670 --> 00:01:33.200
我們將會在下一段視頻中討論這個問題

00:01:33.200 --> 00:01:35.230
但是現在我們假設它是0

00:01:35.230 --> 00:01:37.070
因此我們取值為0 然后減1

00:01:37.070 --> 00:01:38.920
他們的healthLevel是-1

00:01:38.920 --> 00:01:41.560
然后 我閃就不需要這行了

00:01:41.560 --> 00:01:43.820
為此 我們打印此訊息的顯示內容

00:01:43.820 --> 00:01:45.280
哪么訊息內容是什么呢

00:01:45.280 --> 00:01:47.530
創建一個全域變數時

00:01:47.530 --> 00:01:52.290
并沒有為它分配一個初始值 而且被給予一個預設初始值

00:01:52.290 --> 00:01:55.760
對於字串來說 預設初始值是一個空字串

00:01:55.760 --> 00:01:58.280
基本上來說 是一個沒有文字的字串

00:01:58.280 --> 00:02:00.924
這意味著用戶按一直訊息時

00:02:00.924 --> 00:02:01.920
看不到任何內容

00:02:01.920 --> 00:02:05.180
這是不正確的 但也不是完全不可接受

00:02:05.180 --> 00:02:06.780
事情變得有趣起來

00:02:06.780 --> 00:02:09.520
你先按一下Yes按鈕

00:02:09.520 --> 00:02:12.910
是這樣的 如果你回答yes 當前的healthLevel是1

00:02:12.910 --> 00:02:14.620
顯示在屏幕上的這個位置

00:02:14.620 --> 00:02:17.700
之后 你按一下No按鈕

00:02:17.700 --> 00:02:21.530
它將對healthlevel減1 從而使健康度再次變為0

00:02:21.530 --> 00:02:24.790
但是它不會把訊息設置為另外一個值

00:02:24.790 --> 00:02:25.970
因為我們已經刪除這個行

00:02:25.970 --> 00:02:28.940
因此從這里開始訊息將使用舊的值

00:02:28.940 --> 00:02:32.190
你已經回答是 當前的健康度是1

00:02:32.190 --> 00:02:33.770
它將再次這樣顯示

00:02:33.770 --> 00:02:37.330
這是因為healthLevel現在存在於

00:02:37.330 --> 00:02:38.540
多個方法之中

00:02:38.540 --> 00:02:42.500
因此不管這里的值以前是怎樣的 如果我們在這里不變更它

00:02:42.500 --> 00:02:43.890
就還會是這樣

00:02:43.890 --> 00:02:46.340
而且不會出現編譯錯誤

00:02:46.340 --> 00:02:49.930
現在如果訊息是一個區域變數 若未將它設定為任何值

00:02:49.930 --> 00:02:53.140
這將會報錯 而且程式不能運行

00:02:53.140 --> 00:02:55.800
但是因為你已經把它設定為全域變數 故不會報錯

00:02:55.800 --> 00:02:59.010
它將會列印出前一方法中的設定值

00:02:59.010 --> 00:02:59.920
這是錯誤

00:02:59.920 --> 00:03:03.170
總結來來說 訊息不應該是全域變數

00:03:03.170 --> 00:03:03.700
為什么呢

00:03:03.700 --> 00:03:06.370
它并不是真正地在方法之間使用

00:03:06.370 --> 00:03:09.150
它也不會在其它時間設定為其它方法

00:03:09.150 --> 00:03:11.410
中使用的變數

00:03:11.410 --> 00:03:14.780
因為全域變數將具有預設的值集

00:03:14.780 --> 00:03:18.650
它將具有這些其他方法中的一個方法中使用的舊值

00:03:18.650 --> 00:03:21.500
現在 只有我們發生錯誤而且忘記設定為正確值

00:03:21.500 --> 00:03:24.300
才會報錯 但是我們不應該把事情搞得更復雜

00:03:24.300 --> 00:03:26.770
這個例子里面只有一個變數

00:03:26.770 --> 00:03:28.153
讓我們來看另一個變數healthLevel

