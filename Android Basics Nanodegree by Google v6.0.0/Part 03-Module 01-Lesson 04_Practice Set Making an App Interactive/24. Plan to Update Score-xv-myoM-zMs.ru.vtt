WEBVTT
Kind: captions
Language: ru

00:00:00.012 --> 00:00:04.790
Хорошо, тогда ответ такой:
мы делаем число баллов на 3 больше, чем

00:00:04.790 --> 00:00:07.450
оно было раньше, и выводим его на экран.

00:00:07.450 --> 00:00:11.240
Другой способ сказать, что мы делаем его
на 3 больше, чем оно было раньше, — это

00:00:11.240 --> 00:00:14.140
сказать, что мы увеличиваем число на 3.

00:00:14.140 --> 00:00:19.710
Тогда шаг 1 должен быть D, а
вывод на экран — это шаг 2.

00:00:19.710 --> 00:00:20.710
Поэтому я выберу А.

00:00:21.790 --> 00:00:24.270
Хорошо, тогда
это будут два правильных варианта.

00:00:24.270 --> 00:00:27.340
Нужно подчеркнуть, что мы
увеличиваем число баллов, то есть

00:00:27.340 --> 00:00:30.530
мы берем прежнее значение этого числа
и добавляем к нему 3.

00:00:31.860 --> 00:00:34.760
Так, теперь посмотрим на это более
внимательно, чтобы понять,

00:00:34.760 --> 00:00:36.290
правильно ли это работает.

00:00:36.290 --> 00:00:38.860
Итак, в начале мое число баллов равно 0.

00:00:38.860 --> 00:00:40.960
И я нажимаю кнопку +3.

00:00:40.960 --> 00:00:45.100
Согласно моему шагу 1,
сначала я увеличиваю это число на 3.

00:00:45.100 --> 00:00:48.020
Текущее значение равно 0, я прибавляю
к нему 3, оно становится равным 3.

00:00:48.110 --> 00:00:49.640
Так, пока все хорошо.

00:00:50.790 --> 00:00:54.720
Затем, на следующем шаге,
я вывожу это на экран телефона.

00:00:54.720 --> 00:00:56.450
Нарисуем маленький телефон.

00:00:56.450 --> 00:01:00.090
Так, вот мой телефон, и он показывает
число баллов, равное 3.

00:01:00.090 --> 00:01:02.150
Выглядит вполне неплохо.

00:01:02.150 --> 00:01:06.220
Я нажимаю кнопку еще раз, программа
смотрит на текущее число баллов и

00:01:06.220 --> 00:01:08.160
увеличивает его на 3.

00:01:08.160 --> 00:01:09.630
Делая его равным 6.

00:01:09.630 --> 00:01:11.810
Затем она выводит это число на экран.

00:01:11.810 --> 00:01:14.280
И я сразу же вижу,
что при следующих нажатиях кнопки

00:01:14.280 --> 00:01:17.120
этот сценарий будет повторяться,
а число — увеличиваться и отображаться.

00:01:17.120 --> 00:01:18.690
Так что все это выглядит очень хорошо.

00:01:18.690 --> 00:01:21.340
Теперь одно из того, что
можно сделать неправильно, — это поменять

00:01:21.340 --> 00:01:22.780
порядок шагов.

00:01:22.780 --> 00:01:24.160
Посмотрим, как это будет работать.

00:01:24.160 --> 00:01:26.240
Так, вот шаги поменялись местами.

00:01:26.240 --> 00:01:28.100
Если я теперь нажимаю кнопку +3,

00:01:28.100 --> 00:01:31.540
первое, что нужно сделать при таком
порядке, — отобразить число баллов.

00:01:31.540 --> 00:01:35.595
Программа смотрит на scoreTeamA, там 0,

00:01:35.595 --> 00:01:40.605
поэтому экран очищается,
и на нем появляется 0.

00:01:40.605 --> 00:01:43.305
Теперь я увеличиваю число баллов на 3.

00:01:43.305 --> 00:01:46.890
Хм, на экране отображается 0,
а число баллов на самом деле равно 3.

00:01:47.590 --> 00:01:52.500
Если я нажму кнопку снова, помните, что
на этом шаге у команды 6 очков.

00:01:52.500 --> 00:01:57.400
Программа смотрит на число баллов,
равное 3, и выводит его на экран,

00:01:57.400 --> 00:02:00.305
а потом увеличивает это число на 3.

00:02:01.050 --> 00:02:02.050
Хм.

00:02:02.050 --> 00:02:06.880
Так, похоже, в этом варианте
число баллов всегда на три больше,

00:02:06.880 --> 00:02:11.530
чем то, что отображается на экране,
и это, конечно, плохо.

00:02:11.530 --> 00:02:13.830
Так, теперь посмотрим на другой вариант.

00:02:13.830 --> 00:02:16.600
Я нажимаю кнопку +3.

00:02:16.600 --> 00:02:19.690
Шаг 1 — присвоить переменной scoreTeamA
значение 3.

00:02:19.990 --> 00:02:23.480
Затем шаг 2 — отобразить число баллов.

00:02:23.480 --> 00:02:24.890
Так, выглядит вполне хорошо.

00:02:24.890 --> 00:02:28.290
Я нажимаю +3 Points, и
выводится значение 3.

00:02:28.290 --> 00:02:30.550
Теперь я нажму кнопку еще раз.

00:02:30.550 --> 00:02:33.241
Шаг 1 — присвоить переменной scoreTeamA
значение 3.

00:02:34.692 --> 00:02:37.787
Выглядит неразумно, но
это то, что будет делать программа.

00:02:37.787 --> 00:02:39.900
Затем отображается значение scoreTeamA.

00:02:41.085 --> 00:02:46.839
Как вы можете видеть, я могу все время
нажимать +3, но число баллов

00:02:46.839 --> 00:02:50.675
будет оставаться равным 3, поскольку
оно присваивается 3 и отображается как 3.

00:02:50.675 --> 00:02:54.540
Но вот что мы на самом деле правильно
делаем в этом приложении.

00:02:54.540 --> 00:02:56.630
Вместо команды просто отобразить 3

00:02:56.630 --> 00:02:59.750
мы используем переменную,
значение которой всегда равно 3.

00:03:01.050 --> 00:03:03.540
Так, теперь посмотрим на другой пример.

00:03:03.540 --> 00:03:07.270
Этот вариант может показаться
очень привлекательным.

00:03:07.270 --> 00:03:10.960
В конечном итоге он отображает значение,
он добавляет к нему 3,

00:03:10.960 --> 00:03:13.210
и это очень похоже на правду.

00:03:13.210 --> 00:03:16.100
В этот раз я даже не буду
использовать шаг 2.

00:03:16.100 --> 00:03:19.680
Я хочу посмотреть, что получится,
если будет только один шаг.

00:03:19.680 --> 00:03:21.330
Итак, я нажимаю +3.

00:03:22.510 --> 00:03:26.520
На экран выводится значение scoreTeamA +3.

00:03:26.520 --> 00:03:30.140
Я смотрю на баллы для команды А,
равные 0, и прибавляю к ним 3.

00:03:30.140 --> 00:03:31.450
На экране отображается 3.

00:03:31.450 --> 00:03:34.730
Так, выглядит вполне хорошо.

00:03:34.730 --> 00:03:38.800
Нажму кнопку снова, и
программа отобразит баллы

00:03:38.800 --> 00:03:42.470
для команды А, равные 0,
прибавит к ним 3, получится 3.

00:03:42.470 --> 00:03:46.440
Хм, это похоже на проблему
из прошлого примера:

00:03:46.440 --> 00:03:48.630
программа все время выводит на экран 3.

00:03:48.630 --> 00:03:53.030
Это происходит потому, что когда я
говорю отобразить scoreTeamA + 3,

00:03:53.030 --> 00:03:56.635
программа на самом деле не изменяет
значение переменной scoreTeamA.

00:03:57.670 --> 00:04:01.130
Она просто берет текущее значение
и выполняет некоторые вычисления.

00:04:01.130 --> 00:04:03.440
Но вот вариант, в котором
можно заставить это работать.

00:04:04.370 --> 00:04:05.370
Хорошо.

00:04:05.370 --> 00:04:06.690
Посмотрим на это.

00:04:06.690 --> 00:04:10.104
Я нажимаю кнопку +3,
и программа выполняет шаг 1:

00:04:10.104 --> 00:04:13.120
вывести на экран значение scoreTeamA + 3.

00:04:13.120 --> 00:04:16.620
Значение ScoreTeamA равно 0, и 0 + 3 = 3.

00:04:16.620 --> 00:04:19.345
Затем программа увеличивает
баллы команды А на 3.

00:04:20.540 --> 00:04:21.540
Хорошо.

00:04:21.540 --> 00:04:25.260
Я нажимаю кнопку снова, программа
смотрит на баллы команды А, равные 3,

00:04:25.260 --> 00:04:28.020
добавляет к ним 3, и на экран выводится 6.

00:04:28.020 --> 00:04:31.290
Затем она увеличивает
баллы команды А на 3.

00:04:31.290 --> 00:04:34.500
Итак, это выглядит вполне хорошо,

00:04:34.500 --> 00:04:36.940
и технически это правильный ответ.

00:04:36.940 --> 00:04:40.910
Программа делает то, что нужно,
но она несколько неэффективна

00:04:40.910 --> 00:04:43.050
и нелогична по ряду причин.

00:04:43.050 --> 00:04:45.364
Во-первых, одно и то же
вычисление делается дважды.

00:04:45.364 --> 00:04:48.660
Здесь вы прибавляете 3 к scoreTeamA,

00:04:48.660 --> 00:04:52.840
и при его увеличении нужно опять
прибавить 3 к scoreTeamA.

00:04:53.040 --> 00:04:56.590
Вообще говоря, это некоторый шаг назад
от правильного варианта.

00:04:57.590 --> 00:05:01.390
Такой порядок операций выглядит более
трудным для понимания, и к тому же он

00:05:01.390 --> 00:05:05.787
посложнее, поскольку
в нем добавлен еще один шаг.

00:05:05.787 --> 00:05:08.960
Итак, увеличение числа баллов на 3
и последующий вывод на экран —

00:05:08.960 --> 00:05:11.540
это более четкий ответ, и я
буду использовать его.

