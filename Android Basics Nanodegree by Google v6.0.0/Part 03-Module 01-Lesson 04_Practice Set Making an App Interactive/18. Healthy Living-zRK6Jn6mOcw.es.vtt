WEBVTT
Kind: captions
Language: es

00:00:00.233 --> 00:00:03.136
Habréis visto que <i>message</i> [mensaje]
es una variable global.

00:00:03.403 --> 00:00:07.140
Y lo habéis adivinado mirando el lugar
en el que se ha declarado, justo aquí.

00:00:07.841 --> 00:00:10.443
No se ha declarado
en ninguno de estos métodos.

00:00:10.943 --> 00:00:13.413
De hecho, no se ha declarado
fuera de ningún método.

00:00:13.913 --> 00:00:16.516
Pero sí se ha declarado
entre los corchetes

00:00:16.583 --> 00:00:18.985
de lo que hemos llamado "MainActivity".

00:00:19.119 --> 00:00:22.789
La siguiente pregunta es si <i>message</i>
debería ser una variable global.

00:00:23.056 --> 00:00:25.091
Bueno,
siempre que usemos <i>message</i>,

00:00:25.225 --> 00:00:27.927
veremos lo que hemos establecido
como mensaje

00:00:28.328 --> 00:00:29.963
e, inmediatamente,
este se mostrará.

00:00:30.030 --> 00:00:33.900
Cuando establecemos el mensaje,
no vemos ningún valor previo del mensaje.

00:00:34.167 --> 00:00:37.404
Las variables globales sirven para guardar
el rastro de un valor anterior,

00:00:37.470 --> 00:00:39.139
como el número de pulsaciones de un botón

00:00:39.205 --> 00:00:41.141
u otro tipo de números
de vuestra aplicación.

00:00:41.241 --> 00:00:43.677
Permiten guardar
el estado de una aplicación,

00:00:43.743 --> 00:00:48.114
pero no son útiles cuando usas
una variable que es un valor intermedio.

00:00:48.314 --> 00:00:52.585
Recordad que al ejecutar el código situado
dentro de los bloques llamados "métodos",

00:00:52.652 --> 00:00:54.838
ejecutáis cada afirmación
de forma secuencial.

00:00:54.921 --> 00:00:59.025
Si vuestra variable
solo se necesita dentro de una secuencia,

00:00:59.092 --> 00:01:00.894
no hace falta que sea una variable global.

00:01:01.428 --> 00:01:04.563
Se está usando de forma local.
Solo se utiliza dentro del método.

00:01:04.998 --> 00:01:06.232
Y eso ocurre con <i>message</i>.

00:01:06.299 --> 00:01:09.069
Es solo un valor intermedio
que se usa en ese momento.

00:01:09.235 --> 00:01:12.238
Así que <i>message</i>
no debería ser una variable global.

00:01:12.572 --> 00:01:15.675
¿Funcionará el programa por establecerlo
como una variable global?

00:01:15.742 --> 00:01:17.344
Sí, funcionará bien.

00:01:17.410 --> 00:01:19.846
Pero digamos que me olvido
de escribir esta línea de aquí.

00:01:20.013 --> 00:01:23.817
Si pulso el botón "No",
lo que va a ocurrir es

00:01:23.883 --> 00:01:26.886
que cogerá el healthLevel [niveldeSalud]
y le quitará un punto.

00:01:27.087 --> 00:01:30.223
Os preguntaréis cuál es
el valor de healthLevel

00:01:30.623 --> 00:01:32.926
pero ya hablaremos sobre eso
en el próximo vídeo.

00:01:33.126 --> 00:01:34.794
Ahora suponemos que es cero,

00:01:35.195 --> 00:01:38.631
así que si tenemos cero y le quitamos uno,
su healthLevel se queda en -1

00:01:38.865 --> 00:01:41.234
y ya no nos aparece más esta línea,

00:01:41.434 --> 00:01:43.603
así que no nos aparecerá tampoco
ningún mensaje.

00:01:43.703 --> 00:01:45.205
¿Qué es entonces <i>message</i>?

00:01:45.271 --> 00:01:49.342
Cuando se crea una variable global
y no se le da un valor inicial,

00:01:49.509 --> 00:01:52.012
se otorga un valor inicial por defecto.

00:01:52.312 --> 00:01:55.482
En strings,
el valor inicial está vacío,

00:01:55.749 --> 00:01:58.018
lo cual quiere decir
que no hay ningún texto escrito.

00:01:58.251 --> 00:02:01.588
Eso significa que el usuario no verá nada
cuando pulse el botón "No".

00:02:01.855 --> 00:02:04.958
Este comportamiento de la app
no es maravilloso pero tampoco sería raro.

00:02:05.158 --> 00:02:09.262
La cosa empieza a ponerse divertida
si pulsas primero el botón "Sí".

00:02:09.496 --> 00:02:14.200
Se ve en la pantalla: "Has dicho que sí,
tu nivel de salud es 1".

00:02:14.567 --> 00:02:17.337
Pongamos por caso
que después pulsas el botón "No".

00:02:17.604 --> 00:02:21.207
Entonces se restará uno al nivel de salud
y eso pondrá el nivel a cero otra vez.

00:02:21.508 --> 00:02:25.845
Pero no se mostrará ningún mensaje nuevo
porque hemos borrado esta línea.

00:02:25.912 --> 00:02:28.782
Así que <i>message</i> tendrá
el mismo valor que aquí arriba:

00:02:28.915 --> 00:02:31.985
"Has dicho que sí,
tu nivel de salud es 1".

00:02:32.118 --> 00:02:33.586
Y lo volverá a mostrar.

00:02:33.720 --> 00:02:38.124
Todo esto ocurre porque healthLevel
existe entre varios métodos,

00:02:38.525 --> 00:02:43.730
así que si no cambiamos los valores
que teníamos aquí, seguiremos teniéndolos.

00:02:43.797 --> 00:02:46.166
No habrá ningún error de compilación.

00:02:46.232 --> 00:02:50.270
Si <i>message</i> fuera una variable local
y olvidaras poner algo aquí,

00:02:50.437 --> 00:02:52.872
se marearía
y haría que la aplicación no funcionara.

00:02:53.340 --> 00:02:55.742
No ocurrirá
porque hemos diseñado una variable global.

00:02:55.809 --> 00:02:58.945
Simplemente mostrará
lo que tenía en el método anterior,

00:02:58.978 --> 00:02:59.979
aunque sea incorrecto.

00:03:00.046 --> 00:03:02.782
Resumiendo: <i>message</i>
no debería ser una variable global.

00:03:03.183 --> 00:03:06.086
¿Por qué? Porque en realidad
no se utiliza entre varios métodos.

00:03:06.319 --> 00:03:08.788
Si fuera así,
tendría algún valor procedente

00:03:08.855 --> 00:03:11.224
de cuando la variable
se hubiera usado en otro método:

00:03:11.424 --> 00:03:14.227
una variable global siempre tendrá
un valor establecido por defecto.

00:03:14.361 --> 00:03:18.431
Si no, cogerá un valor que se haya usado
en alguno de estos otros métodos.

00:03:18.631 --> 00:03:21.901
Pero eso solo ocurrirá si nos equivocamos
y nos olvidamos de establecer lo que toca,

00:03:22.068 --> 00:03:24.204
aunque seguro
que no nos lo vamos a poner tan difícil.

00:03:24.270 --> 00:03:26.473
Esta solo es
una de las variables de este ejemplo.

00:03:26.539 --> 00:03:28.358
Vamos a fijarnos en la otra:
healthLevel.

