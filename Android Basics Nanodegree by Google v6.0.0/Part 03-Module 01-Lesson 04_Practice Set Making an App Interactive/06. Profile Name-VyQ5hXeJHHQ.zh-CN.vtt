WEBVTT
Kind: captions
Language: zh-CN

00:00:00.190 --> 00:00:01.670
让我们来看看这些内容

00:00:01.670 --> 00:00:05.360
这里有类型 名字 但是没有空格

00:00:05.360 --> 00:00:06.860
而是一个短破折号

00:00:06.860 --> 00:00:07.590
说实话

00:00:07.590 --> 00:00:12.060
这真的和刚才写的Stringname没有什么不同

00:00:12.060 --> 00:00:14.340
Java 不能读取这些独立的词语

00:00:14.340 --> 00:00:17.120
这将会出现一个错误 因为它认为你试图声明一个变量

00:00:17.120 --> 00:00:18.780
并且没有给它类型

00:00:18.780 --> 00:00:21.778
哎呀 显然 我们也忘记了分号 这是不对的

00:00:21.778 --> 00:00:23.169
所以这有很多的问题

00:00:24.370 --> 00:00:25.830
好 我们看下一个

00:00:25.830 --> 00:00:27.920
String 是一个正确的数据类型 所以这都是对的

00:00:28.920 --> 00:00:31.020
但是在这里 变量名

00:00:31.020 --> 00:00:33.310
我们打破了变量命名规则

00:00:33.310 --> 00:00:36.310
变量名不能包含标点符号

00:00:36.310 --> 00:00:37.418
例如这些引号

00:00:37.418 --> 00:00:39.150
有人刚刚声明了这个变量

00:00:39.150 --> 00:00:42.650
这可能使人困惑 敲入的变量名仅是一个

00:00:42.650 --> 00:00:46.680
字符串类型的值 并且必须在引号里面

00:00:46.680 --> 00:00:49.940
所以 变量名不能有奇怪的标点符号在里面

00:00:49.940 --> 00:00:52.515
字符串需要用引号引起来

00:00:52.515 --> 00:00:54.440
好 这是最后一个 数据类型看起来是正确的

00:00:55.860 --> 00:00:58.000
现在 我们有一个 name on profile 的变量

00:00:58.000 --> 00:01:00.790
事实上 它打破了变量命名规则之一

00:01:00.790 --> 00:01:04.200
你的变量名里不能有空格

00:01:04.200 --> 00:01:07.070
基本上 Java 会识别这些名 并期望有一些

00:01:07.070 --> 00:01:10.370
初始化 或分号 或者其他的事

00:01:10.370 --> 00:01:13.460
它不会希望在名字后边有空格

00:01:13.460 --> 00:01:14.810
我们怎样解决它呢？

00:01:14.810 --> 00:01:18.400
通常 如果我们想要像这样的名字 我们只要按照驼峰式编写就可以了

00:01:18.400 --> 00:01:22.590
所以 你写 nameOnProfile

00:01:22.590 --> 00:01:24.530
O 和 P 大写并且两个单词之间没有空格

00:01:24.530 --> 00:01:27.780
这是一个很好的变量名

00:01:27.780 --> 00:01:30.059
尤其是如果你希望包含所有的单词

