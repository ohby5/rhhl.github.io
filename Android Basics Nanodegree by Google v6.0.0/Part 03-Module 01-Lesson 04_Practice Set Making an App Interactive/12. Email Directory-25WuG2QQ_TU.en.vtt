WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:03.750
Well, this program here is part of- is a program that

00:00:03.750 --> 00:00:06.675
shows an e-mail directory for the Just Java Coffee shop.

00:00:06.675 --> 00:00:08.925
And employees of the Just Java coffee shop,

00:00:08.925 --> 00:00:11.955
all have email addresses that are their last name,

00:00:11.955 --> 00:00:15.930
and then a period, their first name @justjava.com.

00:00:15.930 --> 00:00:19.170
Now, what the program should be printing is the employee's name

00:00:19.170 --> 00:00:23.910
followed by their email address in this format. Let's see if it does that.

00:00:23.910 --> 00:00:27.240
Okay. So, the first line here is making a variable called

00:00:27.240 --> 00:00:30.360
first name and setting its value Lyla. All right.

00:00:30.360 --> 00:00:33.150
Good. And then the next line has a variable called last name,

00:00:33.150 --> 00:00:36.055
which is creating and it's setting that to Fujiwara.

00:00:36.055 --> 00:00:38.790
Okay. And now we're creating a variable called contact

00:00:38.790 --> 00:00:41.670
info and setting it to something a little bit more complicated.

00:00:41.670 --> 00:00:43.560
Let me just make the variable right now.

00:00:43.560 --> 00:00:47.130
Okay. So, we're setting it equal to the concatenation of the value in

00:00:47.130 --> 00:00:50.745
first name plus a space plus the value in last name.

00:00:50.745 --> 00:00:52.275
So, our first name is Lyla,

00:00:52.275 --> 00:00:53.940
last name is Fujiwara.

00:00:53.940 --> 00:00:59.730
And this is going to be Lyla space Fujiwara.

00:00:59.730 --> 00:01:01.530
Okay. It looks pretty good.

00:01:01.530 --> 00:01:02.835
Now, for this next statement,

00:01:02.835 --> 00:01:06.005
I want to just say that these two bits are actually all one line.

00:01:06.005 --> 00:01:07.620
So, we're taking contact info,

00:01:07.620 --> 00:01:10.950
which you've already declared and we're setting its value equal to this.

00:01:10.950 --> 00:01:12.310
So, let's figure out what this is.

00:01:12.310 --> 00:01:13.970
Well, last name is Fujiwara,

00:01:13.970 --> 00:01:16.340
the value first name is still Lyla.

00:01:16.340 --> 00:01:19.080
Okay. So, what this is doing is erasing what was in contact

00:01:19.080 --> 00:01:22.050
info before and now setting it equal to,

00:01:22.050 --> 00:01:27.075
opening bracket, concatenated with Fujiwara,

00:01:27.075 --> 00:01:30.375
concatenated with a period,

00:01:30.375 --> 00:01:39.795
concatenated with Lyla, concatenated with @justjava.com and then a closing bracket.

00:01:39.795 --> 00:01:42.625
So, this is the current value of contact info.

00:01:42.625 --> 00:01:44.265
And on this next line here,

00:01:44.265 --> 00:01:45.660
we display contact info.

00:01:45.660 --> 00:01:48.395
Meaning that we're going to display this here.

00:01:48.395 --> 00:01:53.945
But this string right here is not the same as this string right here.

00:01:53.945 --> 00:01:57.115
In fact, it's only part of this string, this part.

00:01:57.115 --> 00:01:59.490
We're missing the Lyla Fujiwara.

00:01:59.490 --> 00:02:02.310
Now, before we change this string,

00:02:02.310 --> 00:02:04.020
it was storing Lyla Fujiwara.

00:02:04.020 --> 00:02:06.765
But we sort of overrode it in

00:02:06.765 --> 00:02:10.985
this line here when we said it equal to a completely different value.

00:02:10.985 --> 00:02:14.555
What we really want is the concatenation of these two.

00:02:14.555 --> 00:02:19.010
So, if you wanted to fix this program you could add right here,

00:02:19.010 --> 00:02:22.330
contact info plus and then all of this.

00:02:22.330 --> 00:02:24.140
That would have taken the current value of

00:02:24.140 --> 00:02:29.090
contact info Lyla Fujiwara and concatenated it with the email address in this format.

00:02:29.090 --> 00:02:30.650
One other short note,

00:02:30.650 --> 00:02:34.960
I am making an assumption that for our email addresses are @justjava.com,

00:02:34.960 --> 00:02:37.940
it doesn't matter if this is a capital or lower case F,

00:02:37.940 --> 00:02:40.460
or this is a capital or lower case L. For

00:02:40.460 --> 00:02:43.505
many email services that consumers use, this is true.

00:02:43.505 --> 00:02:45.320
For example, for Gmail this is true.

00:02:45.320 --> 00:02:49.220
You could leave this as lowercase or uppercase and it will still reach the same person.

00:02:49.220 --> 00:02:51.020
But if you were worried about the difference here,

00:02:51.020 --> 00:02:52.460
that's definitely a good catch.

00:02:52.460 --> 00:02:54.235
As I said and I'll say it again,

00:02:54.235 --> 00:02:56.235
case really does matter a lot of the time

00:02:56.235 --> 00:02:58.560
when we're talking about anything to do with computers.

