WEBVTT
Kind: captions
Language: zh-CN

00:00:00.450 --> 00:00:03.830
好的 在开始将这些变量声明之前

00:00:03.830 --> 00:00:06.870
我要说明的第一件事是 这些都不是

00:00:06.870 --> 00:00:07.440
好的变量名

00:00:08.730 --> 00:00:11.660
之所以说他们不好 是因为它很容易

00:00:11.660 --> 00:00:16.260
同之前讲过的 number int 以及 integer 这些数据类型相混淆

00:00:16.260 --> 00:00:18.310
这就是说 这两个声明都无法使用

00:00:18.310 --> 00:00:21.190
让我们来看第一个

00:00:21.190 --> 00:00:22.450
所以 我们这里的 integer 单词

00:00:22.450 --> 00:00:24.390
位于定义变量类型的位置上

00:00:24.390 --> 00:00:28.420
现在 在这节课上我们已经教你两种数据类型了 string 和 int

00:00:28.420 --> 00:00:32.259
所以这个计算机将识别 INT 的小写也就是 int

00:00:32.259 --> 00:00:34.340
不过它无法识别 integer

00:00:34.340 --> 00:00:38.360
你的数据类型必须是精确的拼写 正如我们给你展示的这样

00:00:38.360 --> 00:00:39.780
所以这一个是错误的

00:00:39.780 --> 00:00:42.650
好的 来看下一个正确的 int

00:00:42.650 --> 00:00:44.070
和我们刚刚说的一样

00:00:44.070 --> 00:00:45.610
这是一个有效数据类型 不过

00:00:45.610 --> 00:00:50.020
这儿的问题是你不能命名一个变量和数据类型的名字一样

00:00:50.020 --> 00:00:52.850
Java 里有一些特殊的单词对计算机有特定的意义

00:00:52.850 --> 00:00:55.410
它们超越了词汇本来的意思比如 int

00:00:55.410 --> 00:00:57.230
这些特殊的词就是关键词

00:00:57.230 --> 00:00:58.790
即在 Android Studio 中显示蓝色的词

00:00:58.790 --> 00:01:02.570
现在你不能将你的变量命名为任何的关键词

00:01:03.700 --> 00:01:06.370
好的 这个同样有问题 这是第三个

00:01:06.370 --> 00:01:08.260
这看起来我们的数据类型是也有问题

00:01:08.260 --> 00:01:10.370
这在技术上是可行的

00:01:10.370 --> 00:01:13.630
计算机是可以识别你的数据类型的 并且你的命名

00:01:13.630 --> 00:01:16.320
符合变量声明的所有规则

00:01:16.320 --> 00:01:19.160
这就是说 这个整数的名字是一个很模糊的命名

00:01:19.160 --> 00:01:22.170
当别人读你发的代码时很容易迷惑

00:01:24.070 --> 00:01:26.570
因此尽管它写法没有错 我也不会去标记它

00:01:26.570 --> 00:01:28.680
不过你需要一个更好的变量名

00:01:28.680 --> 00:01:30.170
比如 numberForCalculation

00:01:30.170 --> 00:01:32.720
这个名字能够更贴近它在这里的用途

