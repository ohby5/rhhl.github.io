WEBVTT
Kind: captions
Language: zh-TW

00:00:00.080 --> 00:00:01.290
我要問你的第一件事情是

00:00:01.290 --> 00:00:04.710
udacicolaVotes是一個區域變數還是全域變數

00:00:04.710 --> 00:00:07.780
你應該確定它是一個區域變數

00:00:07.780 --> 00:00:11.330
為了弄清楚這一點 請轉至宣告這個變數的位置

00:00:11.330 --> 00:00:14.340
就是在這里 你知道我們已經宣告這個變數 因為在這里資料類型是正確的

00:00:15.590 --> 00:00:19.800
你可以看到它是在一個方法內宣告的 這是在兩個花括號之間

00:00:19.800 --> 00:00:23.900
還是在方法之外宣告的呢

00:00:23.900 --> 00:00:25.890
如果是在方法內部宣告的

00:00:25.890 --> 00:00:27.670
那就是一個區域變量

00:00:27.670 --> 00:00:30.960
我們可以看得很清楚 它是在方法內宣告的

00:00:32.150 --> 00:00:33.790
因此它是一區域變數

00:00:33.790 --> 00:00:35.150
這意味著什么呢

00:00:35.150 --> 00:00:36.720
我們應該問我們自己

00:00:36.720 --> 00:00:41.030
如果聲明為區域變數 將會得到什么

00:00:41.030 --> 00:00:42.930
以這個例子 我們來思考

00:00:42.930 --> 00:00:44.060
這是我們的電話

00:00:44.060 --> 00:00:46.010
我們討論的是udacicola

00:00:46.010 --> 00:00:49.550
當我們按一下udacicola按鈕時

00:00:49.550 --> 00:00:52.230
當我們按一下這個按鈕時 這個方法開始執行

00:00:52.230 --> 00:00:57.008
它把udacicolaVotes投票數設定為0 然后加一到udacicolaVotes

00:00:57.008 --> 00:00:58.790
后者是0

00:00:58.790 --> 00:01:00.870
因此udacicolaVotes變成1

00:01:00.870 --> 00:01:05.430
因為udacicolaVotes是一個區域變量 位于這個方法的末尾

00:01:05.430 --> 00:01:07.990
它實際上會消失 或者刪除

00:01:07.990 --> 00:01:11.940
在這個方法的末尾 udacicolaVotes會被作為垃圾處理或消失

00:01:11.940 --> 00:01:15.640
因為它是一個區域變數 而造成一些問題

00:01:15.640 --> 00:01:16.880
為什么這是一個問題呢

00:01:16.880 --> 00:01:19.580
你可以想像一下 有三個不同的人按一下按鈕

00:01:19.580 --> 00:01:25.905
為udacicola投票 udacicolaVvotes應該是三

00:01:25.905 --> 00:01:30.001
實際上的情況是 你第一次按下按鈕時

00:01:30.001 --> 00:01:31.105
udacicola變成0

00:01:31.105 --> 00:01:32.865
然后加一 變成一

00:01:32.865 --> 00:01:34.185
然后被作為垃圾被回收

00:01:34.185 --> 00:01:35.815
從而不再存在

00:01:35.815 --> 00:01:38.605
一個人第二次按udacicolaVotes時

00:01:38.605 --> 00:01:41.785
就重新產生udacicolaVotes

00:01:41.785 --> 00:01:42.565
并再次宣告

00:01:44.155 --> 00:01:47.575
請記住 在第一次按下按鈕時 它已經被作為垃圾回收

00:01:47.575 --> 00:01:49.520
因此需要重新創建

00:01:49.520 --> 00:01:51.840
在它處于保留狀態時 它被設定為零

00:01:51.840 --> 00:01:54.690
現在我們再次將它加一 但是請記住值是零

00:01:54.690 --> 00:01:58.700
因此udacicolaVotes仍然是一 盡管按鈕被按下兩次

00:01:59.930 --> 00:02:02.250
第三次按下時 發會生同樣的事情

00:02:02.250 --> 00:02:06.550
它仍然是一 在此方法結束時它實際作為垃圾回收

00:02:06.550 --> 00:02:07.740
這是第一個問題

00:02:07.740 --> 00:02:11.350
在兩次按擊之間 并沒有累計

00:02:11.350 --> 00:02:14.190
有多少人為udacicola投票

00:02:14.190 --> 00:02:18.700
這里的另一個問題是 此代碼實際上會拋出錯誤

00:02:18.700 --> 00:02:22.610
原因是 前面我說過

00:02:22.610 --> 00:02:26.820
udacicolaVotes在這里出現 它的范圍啟始于這里

00:02:26.820 --> 00:02:29.880
在這個voteudacicola方法的末尾

00:02:29.880 --> 00:02:32.090
它作為垃圾被回收 從而不再存在

00:02:32.090 --> 00:02:36.190
這意味著在這里udacicolaVotes實際上不存在

00:02:36.190 --> 00:02:39.640
更具體地說 這個變數已經超出范圍

00:02:39.640 --> 00:02:44.010
它的范圍是這里 在這里宣告 在這里結束

00:02:45.040 --> 00:02:46.700
但是我們嘗試在這里使用它

00:02:46.700 --> 00:02:47.612
它不能被使用

00:02:47.612 --> 00:02:51.490
在這個例子中 把udacicolaVotes設為區域變數不是一個正確的決定

00:02:51.490 --> 00:02:54.130
原因有兩點

00:02:54.130 --> 00:02:58.320
第一 在兩次按下按鈕之間它沒有保存投票數

00:02:58.320 --> 00:02:59.650
第二 它不在演示性投票計數方法的范圍之內

00:02:59.650 --> 00:03:01.700
因此它實際上會造成問題

00:03:01.700 --> 00:03:03.680
這將不會被編譯

00:03:03.680 --> 00:03:06.140
讓我們來看程式中的另一個變數

