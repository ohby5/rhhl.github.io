WEBVTT
Kind: captions
Language: zh-CN

00:00:00.650 --> 00:00:03.230
首先 第一个 这一部分

00:00:03.230 --> 00:00:05.750
这是声明 看起来没有什么问题

00:00:05.750 --> 00:00:08.260
初始化有一点新奇 为什么呢？

00:00:08.260 --> 00:00:10.060
我们使用了引号

00:00:10.060 --> 00:00:13.100
如果你记得上节课讲的内容 引号是字符串特有的

00:00:14.250 --> 00:00:17.090
它让我们的计算机把这个文本识别为字符串

00:00:17.090 --> 00:00:17.700
因为这一点

00:00:17.700 --> 00:00:20.860
电脑会抱怨这个整数类型和

00:00:20.860 --> 00:00:24.200
字符串的值不匹配

00:00:24.200 --> 00:00:26.120
所以这肯定有问题

00:00:26.120 --> 00:00:26.920
我打算勾选它

00:00:28.100 --> 00:00:29.730
好 让我们看下一个

00:00:29.730 --> 00:00:31.380
这个声明看起来不错

00:00:31.380 --> 00:00:33.490
10 没有引号 是一个整数

00:00:33.490 --> 00:00:35.440
所以这个看起来非常完美

00:00:35.440 --> 00:00:38.210
当我们写下一个变量时

00:00:38.210 --> 00:00:40.140
我们趋向于使用驼峰式拼写

00:00:40.140 --> 00:00:41.990
你可以看到我们在这使用了驼峰式拼写

00:00:43.120 --> 00:00:44.910
所以 技术上这是可以的

00:00:44.910 --> 00:00:47.730
但是它并没有真正遵循编程的惯例

00:00:47.730 --> 00:00:50.300
为了遵守编程的惯例 你可以改变这为大写字母 E

00:00:50.300 --> 00:00:52.170
但是 我并不打算勾选它

00:00:52.170 --> 00:00:53.830
让我们看一下第三个

00:00:53.830 --> 00:00:56.140
现在你注意到这两个最大的不同

00:00:56.140 --> 00:00:58.070
就是这里没有空格

00:00:58.070 --> 00:01:00.570
空格的出现是非常重要的

00:01:00.570 --> 00:01:03.310
没有空格 计算机不会知道你想要

00:01:03.310 --> 00:01:04.830
在这里声明一个变量

00:01:04.830 --> 00:01:07.340
实际上 计算机将解释这个为

00:01:07.340 --> 00:01:12.730
你有一个叫做 intunreadEmails 的变量 你没有给它任何类型的数据类型

00:01:12.730 --> 00:01:14.350
这个肯定有错误

00:01:15.440 --> 00:01:16.550
好吧 就是它

00:01:16.550 --> 00:01:19.220
继续 试着在接下来的问题中练习这些技巧

