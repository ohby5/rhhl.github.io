WEBVTT
Kind: captions
Language: ru

00:00:00.710 --> 00:00:03.880
Я отвечу на эти вопросы
перед тем, как открыть XML-файл.

00:00:04.570 --> 00:00:06.600
Первым делом
выбираем элементы интерфейса.

00:00:06.960 --> 00:00:08.740
Я нарисую рамки вокруг тех,
которые я вижу.

00:00:09.620 --> 00:00:12.060
Итак, у нас пять разных элементов,
не считая группы элементов,

00:00:12.360 --> 00:00:13.970
которая сама формально
считается элементом.

00:00:13.970 --> 00:00:14.640
Но это неважно.

00:00:15.100 --> 00:00:17.610
В числе этих пяти элементов
два <i>TextView</i> в верхней части,

00:00:17.610 --> 00:00:18.860
за которыми следуют три кнопки.

00:00:19.330 --> 00:00:23.940
Здесь нет элементов <i>ImageView</i>,
то есть их количество равно нулю.

00:00:24.560 --> 00:00:28.040
Наверно, вам любопытно, почему
я решила, что это два разных <i>TextView</i>.

00:00:28.300 --> 00:00:32.720
В финальном варианте
надпись <i>Team A</i> и счет

00:00:32.720 --> 00:00:34.020
выглядят совершенно по-разному.

00:00:34.050 --> 00:00:36.940
Поэтому я решила оставить их
по отдельности.

00:00:37.530 --> 00:00:39.980
Переходим ко второму этапу:
позиционированию элементов.

00:00:40.080 --> 00:00:42.500
Мне нужно выбрать
подходящий <i>ViewGroup</i>.

00:00:43.100 --> 00:00:46.730
Я рассматриваю варианты
Llinear Layout и Relative Layout.

00:00:46.830 --> 00:00:49.350
Перед нами вертикальный столбец элементов.

00:00:49.450 --> 00:00:52.860
Так что у меня нет сомнений,
что выбрать, - это Linear Layout.

00:00:54.370 --> 00:00:57.040
И, наконец-то, третий этап:
стиль элементов интерфейса.

00:00:57.310 --> 00:00:59.780
Я займусь этим
в процессе работы с XML.

00:01:00.320 --> 00:01:01.900
Давайте перейдем к XML.

00:01:02.780 --> 00:01:04.560
Мне нужна текстовая вкладка.

00:01:04.970 --> 00:01:09.660
Прежде всего, я удалю части кода,
которые мне не нужны.

00:01:09.760 --> 00:01:12.470
Начнем с удаления этого <i>TextView</i>.

00:01:13.490 --> 00:01:17.620
И все эти paddingLeft, paddingRight,
paddingTop и paddingBottom

00:01:17.920 --> 00:01:18.980
нам тоже ни к чему.

00:01:19.640 --> 00:01:22.480
Делаю это очень осторожно, чтобы
не удалить случайно что-нибудь лишнее.

00:01:23.090 --> 00:01:23.500
Так.

00:01:24.560 --> 00:01:27.760
Мы решили, что не будем использовать
<i>Relative Layout</i> в качестве <i>ViewGroup</i>.

00:01:27.760 --> 00:01:30.480
Наш выбор - Linear <i>Layout</i>,
и сейчас я внесу сюда исправление.

00:01:31.370 --> 00:01:34.520
И внутри этого <i>Linear Layout</i>
у меня будут два <i>TextView</i>,

00:01:34.520 --> 00:01:35.700
и три кнопки.

00:01:35.800 --> 00:01:36.980
Сейчас я их впишу.

00:01:37.710 --> 00:01:39.620
Я сейчас не буду уточнять

00:01:39.620 --> 00:01:42.200
ширину и высоту этого <i>TextView</i>.

00:01:42.780 --> 00:01:45.040
Пока что я просто укажу
<i>wrap_content</i>.

00:01:45.300 --> 00:01:48.140
Так рамка элемента разместится
непосредственно вокруг текста.

00:01:49.310 --> 00:01:51.660
Заодно я задам текст
для этого <i>TextView</i>.

00:01:52.490 --> 00:01:54.710
В этом первом <i>TextView</i>
будет написано просто <i>Team A</i>.

00:01:56.220 --> 00:01:58.120
Давайте перейдем
к предварительному просмотру.

00:01:58.710 --> 00:02:01.280
Итак, я вижу здесь маленький <i>TextView</i>,
в котором написано <i>Team A</i>.

00:02:01.800 --> 00:02:03.300
Давайте создадим еще парочку.

00:02:03.610 --> 00:02:07.400
Итак, ниже у нас идет счет,
и это тоже <i>TextView</i>.

00:02:07.400 --> 00:02:09.650
Начинаем вводить <i>Text</i>.

00:02:09.750 --> 00:02:12.680
Я вижу слово <i>TextView</i>
и нажимаю <i>Enter</i>.

00:02:13.180 --> 00:02:14.960
И в этом случае я тоже
выберу <i>wrap_content</i>.

00:02:15.590 --> 00:02:17.380
Я добавлю сам текст.

00:02:17.860 --> 00:02:20.980
Счет обычно начинается с нуля,
поэтому я поставлю здесь ноль.

00:02:21.560 --> 00:02:21.980
Хорошо.

00:02:22.580 --> 00:02:23.140
Теперь кнопки.

00:02:23.520 --> 00:02:25.060
Я начинаю печатать слово <i>Button</i>.

00:02:25.510 --> 00:02:27.440
Установлю wrap_content
и для этих элементов.

00:02:28.230 --> 00:02:31.900
На первой кнопке должно
быть написано "+3 points".

00:02:32.460 --> 00:02:34.080
Я скопирую этот код

00:02:34.800 --> 00:02:39.680
и вставлю два раза.
У меня теперь есть еще две кнопки.

00:02:39.780 --> 00:02:42.080
На одной будет написано
"+2 points",

00:02:42.860 --> 00:02:45.150
а на другой - "Free Throw".

00:02:45.250 --> 00:02:47.100
Давайте перейдем в
предварительный просмотр.

00:02:48.180 --> 00:02:50.540
Так, у меня есть три кнопки.

00:02:51.070 --> 00:02:53.760
Я вижу надпись <i>Team A</i> и ноль.

00:02:54.420 --> 00:02:55.860
Есть все необходимые элементы.

00:02:55.910 --> 00:02:59.000
Но все это выглядит
не так, как предполагалось.

00:02:59.100 --> 00:03:00.580
Элементы должны
располагаться вертикально.

00:03:01.080 --> 00:03:03.400
Думаю, мне нужно изменить
ориентацию макета.

00:03:03.400 --> 00:03:04.540
Сейчас я это сделаю.

00:03:05.190 --> 00:03:08.840
Я начинаю набирать <i>orientation</i>
и выбираю <i>vertical</i>.

00:03:09.600 --> 00:03:11.240
Хорошо, так смотрится чуть лучше.

00:03:11.860 --> 00:03:16.720
Эти кнопки были увеличены,
чтобы заполнить пространство окна.

00:03:17.290 --> 00:03:20.300
Так что, пожалуй, я не хочу использовать
свойство <i>wrap_content</i> для кнопок.

00:03:20.880 --> 00:03:22.820
Вместо этого я выберу <i>match_parent</i>.

00:03:23.290 --> 00:03:24.470
Я изменю это прямо сейчас.

00:03:25.830 --> 00:03:28.840
Так, ширина всех кнопок теперь
установлена на <i>match_parent</i>.

00:03:28.980 --> 00:03:29.980
Предварительный просмотр.

00:03:30.760 --> 00:03:33.040
С расширенными кнопками
смотрится лучше.

00:03:33.470 --> 00:03:39.260
Хорошо. Но текст все еще зажат в углу.

00:03:39.260 --> 00:03:43.580
Чтобы исправить это, я воспользуюсь
атрибутом <i>gravity</i>.

00:03:43.680 --> 00:03:45.840
Я нахожусь в программе Google Drawings.

00:03:46.430 --> 00:03:48.710
Давайте сделаем здесь
текстовое окно.

00:03:50.030 --> 00:03:52.380
Выглядит почти как границы элемента.

00:03:53.120 --> 00:03:54.660
Я могу напечатать <i>Team A</i>,

00:03:55.140 --> 00:03:57.460
и по умолчанию этот текст
окажется в левом верхнем углу.

00:03:57.790 --> 00:04:00.780
То же самое происходит с TextView:
при вводе текста

00:04:00.780 --> 00:04:02.800
он по умолчанию появится
в верхнем левом углу.

00:04:03.440 --> 00:04:06.440
В Google Drawings
я могу выделить этот текст

00:04:07.440 --> 00:04:11.380
и применить к нему своего рода атрибут
под названием <i>align</i> [выравнивание],

00:04:11.840 --> 00:04:13.460
чтобы выровнять текст по центру

00:04:13.740 --> 00:04:18.260
текстовой рамки по горизонтали
и по вертикали.

00:04:18.940 --> 00:04:19.480
Очень удобно.

00:04:20.190 --> 00:04:24.640
Перемещение содержимого
в границах элемента

00:04:24.840 --> 00:04:26.820
и есть назначение
атрибута <i>gravity</i>.

00:04:27.340 --> 00:04:30.380
Если вам кажется, что это похоже
на некоторые способы выравнивания,

00:04:30.380 --> 00:04:32.860
в относительной разметке,
так и есть.

00:04:32.920 --> 00:04:35.800
Но атрибут <i>gravity</i> можно использовать
при линейной разметке.

00:04:35.800 --> 00:04:37.120
Поэтому он такой полезный.

00:04:37.620 --> 00:04:38.670
Посмотрим на него в коде.

00:04:40.130 --> 00:04:44.100
Я перейду к первому элементу <i>TextView</i>
и начну набирать <i>gravity</i>.

00:04:45.190 --> 00:04:48.420
У меня есть два варианта:
<i>layout_gravity</i> и <i>gravity</i>.

00:04:48.990 --> 00:04:50.520
Мы сейчас разобрали
атрибут <i>gravity</i>,

00:04:50.520 --> 00:04:51.760
поэтому его мы и используем.

00:04:52.650 --> 00:04:55.020
Хорошо. У меня здесь
есть несколько опций,

00:04:55.650 --> 00:04:59.300
Я хочу отцентровать текст по горизонтали,
поэтому я выберу <i>center_horizontal</i>.

00:05:00.080 --> 00:05:02.680
Проверим, что из этого вышло,
в окне предпросмотра.

00:05:04.010 --> 00:05:08.130
Кажется, что почти ничего не изменилось.
Но на это есть причина.

00:05:09.440 --> 00:05:10.500
Если я нажму здесь...

00:05:11.160 --> 00:05:13.360
Я увеличу масштаб,
чтобы вы смогли рассмотреть.

00:05:14.560 --> 00:05:20.180
Итак, вот надпись <i>Team A</i>, вокруг которой
можно различить границы элемента.

00:05:20.960 --> 00:05:24.360
Если я скажу, что этот текст
выровнен по центру элемента,

00:05:24.650 --> 00:05:26.100
вам будет сложно оспорить мои слова.

00:05:26.950 --> 00:05:29.100
Похоже, что текст в самом деле
находится в центре.

00:05:29.100 --> 00:05:30.680
Просто элемент очень маленький.

00:05:31.510 --> 00:05:33.020
Если вернуться в Google Drawings,

00:05:33.020 --> 00:05:38.160
это все равно, что уменьшить
размер рамки до размера текста.

00:05:38.940 --> 00:05:40.000
Текст в центре,

00:05:40.000 --> 00:05:44.420
но выглядит он также, как если бы
был выровнен по левой стороне.

00:05:44.520 --> 00:05:46.980
И если я хочу выровнять
текст по центру в телефоне,

00:05:47.230 --> 00:05:49.640
мне нужно растянуть элемент
во всю ширину экрана.

00:05:50.090 --> 00:05:52.170
То есть нужно изменить
ширину рамки.

00:05:54.020 --> 00:05:55.970
Я закрою окно
предпросмотра.

00:05:57.200 --> 00:05:58.920
Я перейду вот сюда
к свойству <i>width</i> [ширина].

00:06:00.120 --> 00:06:03.780
Вместо <i>wrap_content</i>
я выберу <i>match_parent</i>.

00:06:04.850 --> 00:06:07.930
Вернемся в предпросмотр.
Уменьшим масштаб.

00:06:09.120 --> 00:06:11.660
Так все выглядит намного лучше.
Похоже, все выровнено по центру.

00:06:12.200 --> 00:06:14.420
Давайте проделаем то же самое со счетом.

00:06:15.840 --> 00:06:18.160
Я добавлю и сюда
атрибут <i>gravity</i>.

00:06:18.910 --> 00:06:20.320
<i>gravity</i>, а не <i>layout_gravity</i>.

00:06:21.560 --> 00:06:22.520
<i>center_horizontal</i>

00:06:23.780 --> 00:06:26.020
Значение ширины <i>match_parent</i>.

00:06:27.260 --> 00:06:29.060
Давайте посмотрим еще раз.

00:06:29.160 --> 00:06:32.090
Отлично! Все выровнено по центру.
Выглядит очень хорошо.

00:06:32.190 --> 00:06:34.160
За исключением того,
что все как-то сжато вместе.

00:06:34.400 --> 00:06:36.640
Между этими элементами
почти нет свободного места.

00:06:37.330 --> 00:06:40.180
Я задам значение 4
для атрибута <i>padding</i> каждого <i>TextView</i>.

00:06:42.060 --> 00:06:46.140
Начинаю печатать <i>padding</i>,
Задам значение <i>4dp</i>.

00:06:47.000 --> 00:06:48.100
Помните, что такое <i>dp</i>?

00:06:48.360 --> 00:06:51.780
Причем я использую только <i>padding</i>,
не <i>padding_bottom</i> или что-то подобное.

00:06:52.010 --> 00:06:54.920
Таким образом отступ в <i>4dp</i>
будет сделан вокруг всего <i>TextView</i>.

00:06:55.520 --> 00:06:57.020
Давайте перейдем
к предпросмотру.

00:06:58.390 --> 00:07:00.380
Хорошо. Так появилось
больше пространства.

00:07:00.850 --> 00:07:03.920
Я проделаю то же самое
с <i>TextView</i>, показывающим счет.

00:07:07.830 --> 00:07:10.800
А теперь я попробую проделать
то же самое с кнопкой.

00:07:15.810 --> 00:07:18.510
Хм, что-то почти ничего не изменилось.

00:07:18.610 --> 00:07:22.340
Может сделать отступ побольше?
Пускай будет 8.

00:07:23.690 --> 00:07:24.620
А если 20?

00:07:25.520 --> 00:07:29.720
Интересно. Похоже,
увеличивается сама кнопка.

00:07:29.820 --> 00:07:31.640
Но я не этого хочу.

00:07:31.640 --> 00:07:33.580
Я хочу, чтобы поля
вокруг кнопки увеличились.

00:07:33.980 --> 00:07:37.020
На самом деле, для этого
лучше подходит <i>layout_margin</i>.

00:07:37.640 --> 00:07:40.940
Запомните, что с помощью <i>padding</i>
мы создаем отступ внутри элемента,

00:07:41.040 --> 00:07:42.930
тогда как <i>margin</i> задает
поля вокруг элемента.

00:07:43.930 --> 00:07:45.440
Изменим это
на <i>layout_margin</i>.

00:07:46.080 --> 00:07:46.960
Я напечатаю <i>8dp</i>.

00:07:48.040 --> 00:07:49.080
Вот так-то лучше.

00:07:50.200 --> 00:07:53.020
Теперь есть отступ вокруг элемента
и между этими двумя элементами.

00:07:53.120 --> 00:07:55.010
Проделаем это
и с остальными кнопками.

00:07:56.480 --> 00:07:58.420
<i>margin</i>, не <i>padding</i>.
<i>layout_margin</i>.

00:07:59.710 --> 00:08:00.960
Так, выглядит отлично.

00:08:01.440 --> 00:08:04.000
Если вы выбрали другие атрибуты,

00:08:04.100 --> 00:08:08.220
например задали значение 5, а не 4
для <i>padding</i>, - ничего страшного.

00:08:08.320 --> 00:08:10.840
На этом этапе я всего лишь
пытаюсь сделать элементы читаемыми.

00:08:11.710 --> 00:08:15.400
Мы займемся размером и
цветом шрифта позднее.

00:08:16.750 --> 00:08:18.620
Хорошо. Прекрасная работа!

00:08:18.670 --> 00:08:19.920
Этот этап вы освоили.

