WEBVTT
Kind: captions
Language: zh-CN

00:00:00.120 --> 00:00:03.640
这里是我们计数器应用的图片

00:00:03.640 --> 00:00:05.820
至少我们希望它是这个样子

00:00:05.820 --> 00:00:10.120
现在 我会按照自己的想法 先从 XML 开始

00:00:10.120 --> 00:00:12.640
先想一下现在 View 的情况

00:00:12.640 --> 00:00:17.540
我们有所有 View 垂直排列

00:00:17.540 --> 00:00:18.720
且是 LinearLayout

00:00:18.720 --> 00:00:23.270
Team A和 Team B 分别有一个 LinearLayout

00:00:23.270 --> 00:00:26.574
我们不能有两个根 View

00:00:26.574 --> 00:00:30.793
它们被包含在一个水平的 LinearLayout里

00:00:30.793 --> 00:00:35.200
也就是这两个紧邻的垂直 LinearLayout

00:00:35.200 --> 00:00:38.230
现在我们想在这添加一个 RESET 按钮

00:00:38.230 --> 00:00:40.920
你的大脑先不要考虑这些不同的 LinearLayout

00:00:40.920 --> 00:00:44.800
我想让你思考水平 LinearLayout 里边的所有内容

00:00:44.800 --> 00:00:48.460
这是一种单独的视图

00:00:48.460 --> 00:00:52.910
现在你要尝试在这布置水平 LinearLayout

00:00:52.910 --> 00:00:53.910
和这个 RESET 按钮

00:00:53.910 --> 00:00:56.850
你要尝试布置两个View

00:00:56.850 --> 00:01:01.570
一个是在顶部 另一个在屏幕的底部

00:01:01.570 --> 00:01:05.680
所以问题是哪种 ViewGroup 允许你

00:01:05.680 --> 00:01:08.800
将一个 View 放在顶部而另一个 View 放在屏幕的底部呢？

00:01:08.800 --> 00:01:13.450
事实证明 LinearLayout 是一个非常好的选择

00:01:13.450 --> 00:01:17.310
我可以将水平 LinearLayout 放在这 与父 View 的宽度一致

00:01:17.310 --> 00:01:19.560
把高度设为 wrap_content

00:01:20.630 --> 00:01:24.490
把 RESET 按钮放在这 居中

00:01:24.490 --> 00:01:26.060
紧贴着底部

00:01:26.060 --> 00:01:28.510
这样你就有了一个 LinearLayout

00:01:28.510 --> 00:01:33.340
这个 LinearLayout 有一个按钮和子 LinearLayout

00:01:33.340 --> 00:01:36.120
按钮是 RESET 按钮

00:01:36.120 --> 00:01:40.430
LinearLayout 就是指我们这里的水平 LinearLayout

00:01:40.430 --> 00:01:44.060
而且 这个水平 LinearLayout 有两个子布局

00:01:44.060 --> 00:01:46.810
这些子布局也是 LinearLayout

00:01:46.810 --> 00:01:49.870
你可以看到一个是 Team A 的线性布局

00:01:49.870 --> 00:01:51.670
一个是Team B 的线性布局

00:01:51.670 --> 00:01:57.280
Team A 的线性布局有两个 TextView 和 三个按钮

00:01:57.280 --> 00:02:00.170
Team B 的布局也是一样

00:02:00.170 --> 00:02:03.160
有五部分 两个 TextView 和三个按钮

00:02:03.160 --> 00:02:05.260
你已经完成了布局这一部分

00:02:05.260 --> 00:02:08.770
你需要添加这些 好了 我们开始

00:02:08.770 --> 00:02:13.035
来到 XML 代码界面 我将要做的第一件事就是

00:02:13.035 --> 00:02:18.010
实现根 LinearLayout 你可以在图中看到

00:02:18.010 --> 00:02:23.580
这里应该是 RelativeLayout 我想做的是

00:02:23.580 --> 00:02:28.440
剪切然后粘贴这两行 因为它们需要在根 View 里

00:02:28.440 --> 00:02:33.920
我正在对它们进行剪切 然后粘贴在这 在我的根 View 里

00:02:33.920 --> 00:02:37.260
关闭这里的 RelativeLayout

00:02:37.260 --> 00:02:43.500
把结束标签移动到最尾端

00:02:45.590 --> 00:02:49.470
现在我们基本有了图示的东西

00:02:49.470 --> 00:02:52.610
好了 看一下有一些错误

00:02:52.610 --> 00:02:57.210
这里 我没有设置宽度和高度 我们做这部分

00:02:58.580 --> 00:03:02.250
我的 RelativeLayout 在屏幕的底部中间有一个按钮

00:03:02.250 --> 00:03:05.260
为了实现它 相对布局需要填充整个屏幕

00:03:05.260 --> 00:03:06.960
因此将宽度和高度都设置成 match_parents

00:03:08.830 --> 00:03:11.530
现在我需要添加按钮

00:03:11.530 --> 00:03:17.587
向下滚动 在这 也就是 LinearLayout 的结束位置

00:03:17.587 --> 00:03:23.462
但是仍然在 RelativeLayout 里面 添加按钮

00:03:23.462 --> 00:03:26.664
继续 按钮的宽和高设置成 wrap_content

00:03:26.664 --> 00:03:30.398
因为它不是一个扩展到整个屏幕底端

00:03:30.398 --> 00:03:33.150
或者整个屏幕的按钮

00:03:34.310 --> 00:03:36.640
按钮的父 View 是 RelativeLayout

00:03:36.640 --> 00:03:40.370
我们将按钮的文本设置为 Reset

00:03:40.370 --> 00:03:43.390
我们看一下它是什么样子

00:03:43.390 --> 00:03:46.960
RESET 按钮在这 却不是我们想要的位置

00:03:46.960 --> 00:03:51.730
它的父 View 是填充整个屏幕的 RelativeLayout

00:03:51.730 --> 00:03:54.240
我可以将它对准父 View

00:03:54.240 --> 00:03:57.450
让它贴紧父 View 的底部

00:03:57.450 --> 00:04:01.170
我想让它在父 View 的中央 并且水平

00:04:01.170 --> 00:04:04.150
按钮已经在正确的位置了

00:04:04.150 --> 00:04:06.270
将这里的代码全选

00:04:06.270 --> 00:04:09.560
在 Mac 上点击 command + L

00:04:09.560 --> 00:04:14.490
或者在 Windows 使用 Control+Alt+L 来重新排列代码

00:04:14.490 --> 00:04:15.890
看起来更好了

00:04:15.890 --> 00:04:18.690
我们回到 Java 代码

00:04:18.690 --> 00:04:23.190
现在我们虽然有了代码 但是还没有实现功能

00:04:23.190 --> 00:04:25.690
从给它添加方法开始

00:04:25.690 --> 00:04:32.250
在 display 方法前添加方法 public void

00:04:32.250 --> 00:04:35.100
我把方法叫做 resetScore

00:04:35.100 --> 00:04:38.180
因为这就是我想让它做的

00:04:38.180 --> 00:04:42.860
向上滚动 让它和其他方法匹配

00:04:42.860 --> 00:04:46.670
View v 然后是大括号

00:04:46.670 --> 00:04:50.100
先不要担心这里是什么

00:04:50.100 --> 00:04:53.200
回到 XML 代码

00:04:53.200 --> 00:04:57.200
我要做的第二部分是将按钮和 Java 代码绑定

00:04:57.200 --> 00:05:01.970
通过给 resetScore 添加 onClick 属性

00:05:01.970 --> 00:05:06.310
当我点击这个按钮的时候 代码会运行

00:05:06.310 --> 00:05:08.110
而不是其他代码

00:05:08.110 --> 00:05:09.290
我们需要添加些什么

00:05:10.650 --> 00:05:13.750
我们回到伪代码的讨论

00:05:13.750 --> 00:05:17.340
当我点击 RESET 按钮 会发生什么呢？

00:05:17.340 --> 00:05:20.950
我想让这两个分数都显示0

00:05:20.950 --> 00:05:24.130
就是说 Team A 和 Team B 的变量的值

00:05:24.130 --> 00:05:26.740
都变成 0

00:05:26.740 --> 00:05:30.330
记住 当我点击这些按钮中的任何一个时 会给

00:05:30.330 --> 00:05:32.060
变量加2并且显示出来

00:05:32.060 --> 00:05:33.820
所以 如果我不使变量归零的话

00:05:33.820 --> 00:05:36.160
它就会显示一个错误的数字

00:05:36.160 --> 00:05:39.300
所以我们需要的是

00:05:39.300 --> 00:05:43.380
第一件事就是我想把 Team A 的分数设置为 0

00:05:43.380 --> 00:05:46.440
然后对 Team B 做同样的事

00:05:46.440 --> 00:05:50.260
现在两队的分数都为 0 但是没有什么显示出来

00:05:50.260 --> 00:05:54.570
这就是为什么要有第三步 即显示已经设置为0的Team A 的分数

00:05:55.850 --> 00:06:00.185
I鈥檓 going to display the score for
说的更具体一点 就是在这显示

00:06:00.185 --> 00:06:04.091
Team A 的分数 在这显示Team B 的分数

00:06:04.091 --> 00:06:07.610
因为第一步和第二步 我确定它们已经被设置为0

00:06:07.610 --> 00:06:10.230
它们会在这和这显示0

00:06:10.230 --> 00:06:14.400
当我点击这些按钮中的任何一个来给 ScoreForTeamA 或

00:06:14.400 --> 00:06:18.389
ScoreForTeamB 增加分数时 它会从0开始增加

00:06:19.545 --> 00:06:23.984
在重置分数时 我要把伪代码写成代码

00:06:23.984 --> 00:06:28.952
第一步 使用0和赋值符将A 的分数

00:06:28.952 --> 00:06:34.010
设置为0

00:06:34.010 --> 00:06:35.800
别忘了分号

00:06:37.120 --> 00:06:38.550
对于 B 做相同的事情

00:06:42.280 --> 00:06:48.515
之后 在 Team A 的区域显示 Team A 的分数

00:06:48.515 --> 00:06:53.150
然后在 Team B 的区域显示 Team B 的分数

00:06:54.640 --> 00:06:57.289
继续然后在这添加一个注释

00:06:58.550 --> 00:07:00.080
这些看起来很合理

00:07:00.080 --> 00:07:03.750
因为我的手机上运行的是先前没有改动的

00:07:03.750 --> 00:07:06.587
所以我需要重新运行

00:07:06.587 --> 00:07:08.000
我有一个 RESET 按钮

00:07:08.000 --> 00:07:08.997
看一下它是否工作

00:07:13.339 --> 00:07:14.732
很好 它重置为0了

00:07:14.732 --> 00:07:16.500
我们再点多一些数字

00:07:16.500 --> 00:07:19.457
确保所有的东西都正常运行

00:07:23.961 --> 00:07:28.338
正常运行 真棒

00:07:28.338 --> 00:07:30.270
现在有一个有点复杂的问题

00:07:30.270 --> 00:07:33.720
我给你展示一下 如果你调换代码的位置会发生什么

00:07:33.720 --> 00:07:35.050
做一些不同的东西

00:07:36.090 --> 00:07:38.890
我调换这两个会怎样呢？

00:07:38.890 --> 00:07:40.809
我们看一下发生了什么

00:07:42.360 --> 00:07:45.710
我们看到它成功运行

00:07:45.710 --> 00:07:47.660
我会添加一些分数

00:07:48.860 --> 00:07:53.080
现在点击 RESET 按钮

00:07:53.080 --> 00:07:55.850
它好像没有做任何事

00:07:55.850 --> 00:07:59.090
再点击试试 有趣

00:07:59.090 --> 00:08:00.520
看起来一点难度

00:08:00.520 --> 00:08:05.470
在分数显示19之前 我点击了 RESET 按钮 但是没什么改变

00:08:05.470 --> 00:08:07.650
但是当我点击 FREE THROW 时 它显示1

00:08:09.570 --> 00:08:12.500
尝试另一边 如果我点击 +2 POINTS

00:08:12.500 --> 00:08:14.220
它显示2

00:08:14.220 --> 00:08:17.600
我们再看一看代码 为什么会这样

00:08:17.600 --> 00:08:21.490
因为我调换了显示和设置分数的代码

00:08:21.490 --> 00:08:24.870
看一下它会发生什么错误呢？

00:08:24.870 --> 00:08:29.732
比如 Team A 有30分 Team B 有40分

00:08:29.732 --> 00:08:33.049
当我执行 displayForTeamA 它会显示30

00:08:33.049 --> 00:08:37.230
当我执行 displayForTeamB 它会显示40

00:08:37.230 --> 00:08:41.490
在那之后 它才会设置它们的值为0

00:08:41.490 --> 00:08:45.730
但是显示的数字却不会是0

00:08:45.730 --> 00:08:48.440
但是实际上它们的变量已经是0

00:08:48.440 --> 00:08:53.430
所以当我们点击 addThreeForTeamB 时 它会读取设置的分数变量

00:08:53.430 --> 00:08:59.960
然后加3并显示出来

00:08:59.960 --> 00:09:06.490
对我们来说 就像 Team B 原来是30分

00:09:06.490 --> 00:09:11.630
但是点击 RESET 按钮后 就变成了3分 这是一种怪异的跳跃

00:09:11.630 --> 00:09:15.490
现在不换回它们的位置而修复错误的一个方式是

00:09:15.490 --> 00:09:19.370
在这里显示0分

00:09:19.370 --> 00:09:22.390
你可以在你自己的设备上测试 但是它确实能够运行

00:09:22.390 --> 00:09:24.200
只是有点麻烦

00:09:25.490 --> 00:09:29.080
我喜欢展示这样的例子 因为它的代码

00:09:29.080 --> 00:09:30.800
简洁 美观

00:09:30.800 --> 00:09:34.360
在这个例子里 我认为我第一次写代码的方式

00:09:34.360 --> 00:09:36.290
更好

00:09:36.290 --> 00:09:39.130
但是你会看到在这种情况下 可以有两种不同的

00:09:39.130 --> 00:09:42.880
方式来写代码 这两种方式在技术上都是正确的

00:09:42.880 --> 00:09:45.430
因为没有唯一的答案

00:09:45.430 --> 00:09:49.140
你不应该被正确的方式所局限

00:09:49.140 --> 00:09:52.600
尝试用自己的方式实现 再看看别人是怎么做的

00:09:52.600 --> 00:09:57.640
然后比较 谁的方式更高效 谁的代码更简洁

00:09:57.640 --> 00:10:00.770
这种讨论能成为非常有帮助的学习经验

00:10:00.770 --> 00:10:04.030
把代码调整回之前运行正确的状态

00:10:04.030 --> 00:10:05.390
能正常运行

00:10:05.390 --> 00:10:09.660
现在我的应用的功能已经有了 但是它还不够美观 我们修改一下

