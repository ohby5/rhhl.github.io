WEBVTT
Kind: captions
Language: ja

00:00:00.290 --> 00:00:03.510
メッセージがグローバル変数だと
決定しておくべきでした

00:00:03.510 --> 00:00:06.920
この宣言された場所を見ると
それがわかります

00:00:07.980 --> 00:00:11.000
どのメソッドにおいても
宣言されていません

00:00:11.000 --> 00:00:13.980
実際には メソッドの外側で
宣言されています

00:00:13.980 --> 00:00:16.600
しかし メイン・アクティビティ・クラスと
呼んできた

00:00:16.600 --> 00:00:19.200
中カッコの中で宣言されています

00:00:19.200 --> 00:00:21.070
はい
次の問題は

00:00:21.070 --> 00:00:23.050
メッセージがグローバル変数で
あるべきかどうかです

00:00:23.050 --> 00:00:28.430
メッセージを使うときはいつでも
メッセージが何か指定して

00:00:28.430 --> 00:00:30.040
それをすぐ表示してきました

00:00:30.040 --> 00:00:34.230
メッセージが何か指定するときには
メッセージの以前の値を見ません

00:00:34.230 --> 00:00:38.140
グローバル変数は アプリの中で
ボタンのクリックのような

00:00:38.140 --> 00:00:41.290
操作の間で以前の値を
記録しておくことに優れています

00:00:41.290 --> 00:00:43.800
これらは アプリの状況を
保存するための方法です

00:00:43.800 --> 00:00:44.870
これらが得意としないことは

00:00:44.870 --> 00:00:48.370
中間値の並べ替えに
変数を使うことです

00:00:48.370 --> 00:00:51.300
メソッドと呼ばれるブロックの
中でコードを実行するときには

00:00:51.300 --> 00:00:54.990
各ステートメントを順番通りに
行うことを思い出してください

00:00:54.990 --> 00:00:59.187
変数は これらステートメントの
順番の中で必要とされ

00:00:59.187 --> 00:01:01.293
グローバル変数である必要は
ありません

00:01:01.293 --> 00:01:02.959
ローカルで使用されています

00:01:02.959 --> 00:01:04.918
ただのメソッドとして使われます

00:01:04.918 --> 00:01:06.320
これがメッセージの場合です

00:01:06.320 --> 00:01:09.240
これは そのときだけ使われる
中間値の１つです

00:01:09.240 --> 00:01:12.640
ですから グローバル変数で
あるべきではありません

00:01:12.640 --> 00:01:15.810
では それがグローバル変数だと
プログラムは動かないでしょうか？

00:01:15.810 --> 00:01:20.110
いいえ 正常に動きます
しかし この一行をタイプし忘れたとします

00:01:20.110 --> 00:01:22.350
はい もし 私が
Noボタンをクリックすると

00:01:22.350 --> 00:01:25.770
何が起きるかというと まず
healthLevelを読み込み

00:01:25.770 --> 00:01:27.180
そこから１を引きます

00:01:27.180 --> 00:01:29.540
補足として healthLevelの
値が何なのか

00:01:29.540 --> 00:01:30.670
疑問に思っているかもしれません

00:01:30.670 --> 00:01:33.200
そうですね それについては
次のビデオで話しましょう

00:01:33.200 --> 00:01:35.230
今は とりあえず0と仮定します

00:01:35.230 --> 00:01:37.070
ゼロとすると 1を引けば

00:01:37.070 --> 00:01:38.920
healthLevelの値は-1になります

00:01:38.920 --> 00:01:41.560
そして この列はもうありませんので

00:01:41.560 --> 00:01:43.820
ただメッセージが何かを書きます

00:01:43.820 --> 00:01:45.280
それで メッセージとは何か？

00:01:45.280 --> 00:01:47.530
グローバル変数が作られたとき

00:01:47.530 --> 00:01:52.290
初期値は与えられず
既定の初期値が与えられました

00:01:52.290 --> 00:01:55.760
文字列としては
既定の初期値は空白の文字列です

00:01:55.760 --> 00:01:58.280
つまり 基本的に
文字のない文字列です

00:01:58.280 --> 00:02:00.924
これは Noメッセージがクリック
されても ユーザーは何も言わない

00:02:00.924 --> 00:02:01.920
ことを意味します

00:02:01.920 --> 00:02:05.180
これは良くありませんが 必ずしも
予期しない振る舞いではありません

00:02:05.180 --> 00:02:06.780
本当に変なことになったときには

00:02:06.780 --> 00:02:09.520
例えば Yesボタンを
先に押したとします

00:02:09.520 --> 00:02:12.910
これは成功し Yesと答え
現在のhealthLevelは１で

00:02:12.910 --> 00:02:14.620
画面のここに表示されます

00:02:14.620 --> 00:02:17.700
その後 例えば Noボタンを
押したとしましょう

00:02:17.700 --> 00:02:21.530
ヘルスレベルから１を引くので
ヘルスレベルが再び０になります

00:02:21.530 --> 00:02:24.790
しかし 別の値に対しては
例えば この列を削除したため

00:02:24.790 --> 00:02:25.970
メッセージがありません

00:02:25.970 --> 00:02:28.940
すると メッセージは
上から古い値を持ってきます

00:02:28.940 --> 00:02:32.190
Yesと答え
現在のヘルスレベルは１です

00:02:32.190 --> 00:02:33.770
そして それを再び表示します

00:02:33.770 --> 00:02:37.330
同様に こうなるのは
healthLevelが複数の方法で

00:02:37.330 --> 00:02:38.540
存在するからです

00:02:38.540 --> 00:02:42.500
そこで ここにあった何らかの値が
それをここで変更しなければ

00:02:42.500 --> 00:02:43.890
私たちはそこに留まります

00:02:43.890 --> 00:02:46.340
そして どんな種類の
コンパイルエラーも出ません

00:02:46.340 --> 00:02:49.930
もし メッセージがローカル変数の場合
ここに何か設定するのを忘れると

00:02:49.930 --> 00:02:53.140
それを訴え 実際には
アプリが起動できなくなります

00:02:53.140 --> 00:02:55.800
しかし グローバル変数に
なっているため 訴えないのです

00:02:55.800 --> 00:02:59.010
ただ 以前のメソッドから
前の値を表示するだけです

00:02:59.010 --> 00:02:59.920
これは良くありません

00:02:59.920 --> 00:03:03.170
まとめると メッセージは
グローバル変数にしないでください

00:03:03.170 --> 00:03:03.700
なぜか？

00:03:03.700 --> 00:03:06.370
それはメソッドの間では
実際には使われません

00:03:06.370 --> 00:03:09.150
もしくは 変数が別のメソッドで
使われた別の時点からの

00:03:09.150 --> 00:03:11.410
何らかの値を持ちます

00:03:11.410 --> 00:03:14.780
グローバル変数には
既定の値の設定を持つか

00:03:14.780 --> 00:03:18.650
他のメソッドで使われたときの
古い値を持ちます

00:03:18.650 --> 00:03:21.500
これは 間違いがあって
それを訂正し忘れたときだけですが

00:03:21.500 --> 00:03:24.300
自分の仕事を自分で
大変にするべきではありません

00:03:24.300 --> 00:03:26.770
はい これはこの事例の
１つの変数にすぎませんが

00:03:26.770 --> 00:03:28.153
別の変数 healthLevelを
見てみましょう

