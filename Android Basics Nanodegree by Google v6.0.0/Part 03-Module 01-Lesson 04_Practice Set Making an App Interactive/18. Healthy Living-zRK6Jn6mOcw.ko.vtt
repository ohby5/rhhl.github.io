WEBVTT
Kind: captions
Language: ko

00:00:00.290 --> 00:00:03.510
이제 당신은 
메세지가 국제 변수라는 것을 알아야 합니다.

00:00:03.510 --> 00:00:06.920
그리고 이것이 어떤 부분을 알려주는지
알아야합니다.

00:00:07.980 --> 00:00:11.000
이것은 다른 방법을
보여주지 않습니다.

00:00:11.000 --> 00:00:13.980
이는 사실
외부의 다른 방법을 보여줍니다.

00:00:13.980 --> 00:00:16.600
비록 이것이
괄호 안의 내용

00:00:16.600 --> 00:00:19.200
즉 우리가 주 수업시간에
불렀던 그것을 사용합니다.

00:00:19.200 --> 00:00:21.070
좋습니다.
다음 질문은,

00:00:21.070 --> 00:00:23.050
국제 변수에 대한 메세지입니다.

00:00:23.050 --> 00:00:28.430
메세지를 사용할때마다,
우리는 어떤 메세지가 설정되고,

00:00:28.430 --> 00:00:30.040
우리가 즉시 볼 수 있는지 알수 있습니다.

00:00:30.040 --> 00:00:34.230
우리가 어떤 메세지를 설정할 때,
우리는 이전 메세지 값을 보지 않습니다.

00:00:34.230 --> 00:00:38.140
국제 변수는 이런 이전 값들을 
지속적으로 추적하며

00:00:38.140 --> 00:00:41.290
앱에서 발생할 수 있는 다른 이벤트나 
버튼 사이에서 발생하는 것을 추적합니다.

00:00:41.290 --> 00:00:43.800
앱의 구문을 
구할 수 있는 방법입니다.

00:00:43.800 --> 00:00:44.870
좋지 않은 것을

00:00:44.870 --> 00:00:48.370
중간 값을 이용하여
변수를 사용할 때 구하는 것입니다.

00:00:48.370 --> 00:00:51.300
기억하실 점은, 당신이 
한개의 코드를 삭제할 때

00:00:51.300 --> 00:00:54.990
부르는 방법이 막히고
당신은 모든 항목을 순서대로 해야합니다.

00:00:54.990 --> 00:00:59.187
만약 당신의 변수가 단지
순서대로 되어 있다면 그때는

00:00:59.187 --> 00:01:01.293
국제 변수는 필요하지 않습니다.

00:01:01.293 --> 00:01:02.959
지역 변수를 사용합니다.

00:01:02.959 --> 00:01:04.918
이는 단순히 사용됩니다.

00:01:04.918 --> 00:01:06.320
그리고 메세지와 함께 사용합니다.

00:01:06.320 --> 00:01:09.240
이는 중간 값이
잠시 사용되는 것입니다.

00:01:09.240 --> 00:01:12.640
그리고, 메세지는 실제로
국제 변수가 되어서는 안됩니다.

00:01:12.640 --> 00:01:15.810
이제, 국제 변수로 인해서
프로그램이 작동하지 않을까요?

00:01:15.810 --> 00:01:20.110
아니요, 이는 잘 작동합니다 하지만
여기에 입력하는 것을 까먹었다고 치죠.

00:01:20.110 --> 00:01:22.350
만약 아니요 버튼을 클릭한다면.

00:01:22.350 --> 00:01:25.770
무슨일이 일어나냐면, 
첫번째로 healthLevel과

00:01:25.770 --> 00:01:27.180
한개를 삭제합니다.

00:01:27.180 --> 00:01:29.540
이제 어떤 값이 
움직이는지 확인하면

00:01:29.540 --> 00:01:30.670
healthLevel 입니다.

00:01:30.670 --> 00:01:33.200
그리고,
우리는 다음 비디오에서 이야기 할텐데요.

00:01:33.200 --> 00:01:35.230
지금은 0이라고 가정하죠.

00:01:35.230 --> 00:01:37.070
0이라고 치고 1을 빼면

00:01:37.070 --> 00:01:38.920
healthLevel는 마이너스 1입니다.

00:01:38.920 --> 00:01:41.560
그리고,
우리는 이 라인은 더이상 갖지 않으며

00:01:41.560 --> 00:01:43.820
우리는 메세지를 프린트합니다.

00:01:43.820 --> 00:01:45.280
어떤 메세지인가요?

00:01:45.280 --> 00:01:47.530
국제 변수가 제작되고

00:01:47.530 --> 00:01:52.290
이는 값을 주지 않습니다
이는 영구 값을 줍니다.

00:01:52.290 --> 00:01:55.760
영구 값은
빈 칸입니다,

00:01:55.760 --> 00:01:58.280
아무 문장이 없는
빈칸인 것입니다.

00:01:58.280 --> 00:02:00.924
이는 사용자가 메세지가 없을 때,
아무것도 볼 수 없는 것입니다.

00:02:00.924 --> 00:02:01.920
클릭.

00:02:01.920 --> 00:02:05.180
이는 좋지 않습니다. 하지만
전체적으로 예상되지 않은 것은 아닙니다.

00:02:05.180 --> 00:02:06.780
무언가 정말 이상할 때,

00:02:06.780 --> 00:02:09.520
예 버튼을
먼저 클릭하고 봅니다.

00:02:09.520 --> 00:02:12.910
이는 도움이 될 것입니다, 
당신이 네를 현재healthLevel에서 클릭하고

00:02:12.910 --> 00:02:14.620
화면에 보여주세요.

00:02:14.620 --> 00:02:17.700
다음에 
아니오 버튼을 클릭해보세요.

00:02:17.700 --> 00:02:21.530
이는 1을 건강 단계에서 빼서
건강 단계를 0으로 다시 만들것입니다.

00:02:21.530 --> 00:02:24.790
하지만 이는 다른 값을 설정하지 않습니다.
왜냐하면 우리가

00:02:24.790 --> 00:02:25.970
이 줄을 지웠기 때문이죠.

00:02:25.970 --> 00:02:28.940
그래서 메세지는
오래된 값으로 여기서 나타날 것입니다.

00:02:28.940 --> 00:02:32.190
당신의 대답은 예,
현재 건강 단계는 1입니다.

00:02:32.190 --> 00:02:33.770
그리고 화면은 이를 보여줍니다.

00:02:33.770 --> 00:02:37.330
다시, 이 모든 결과치는
healthLevel가 현재 존재하기 때문입니다.

00:02:37.330 --> 00:02:38.540
다양한 방법으로요.

00:02:38.540 --> 00:02:42.500
그리고 어떤 값이 여기에 있던지
이곳을 변경하지 않는다면,

00:02:42.500 --> 00:02:43.890
여기에 계속 있을 것입니다.

00:02:43.890 --> 00:02:46.340
그리고 어떤 에러가 
발생하지 않을 것입니다.

00:02:46.340 --> 00:02:49.930
이제 만약 메세지가 지역값이고,
당신이 어떤 것을 설정하는 것을 잊었다면

00:02:49.930 --> 00:02:53.140
여기에 문제를 설명하고
실제로 앱을 시작하지 못하게 합니다.

00:02:53.140 --> 00:02:55.800
하지만, 제작자가 국제
변수로 만들었기에, 불평할 필요가 없습니다.

00:02:55.800 --> 00:02:59.010
이는 단지 있었던 값 이전으로
화면을 보여줄 것입니다.

00:02:59.010 --> 00:02:59.920
조금 다르죠.

00:02:59.920 --> 00:03:03.170
요약하자면,
메세지는 국제 변수가 아닙니다.

00:03:03.170 --> 00:03:03.700
왜냐구요?

00:03:03.700 --> 00:03:06.370
이는 실제로
방법 사이에서 사용되지 않기 때문인데요.

00:03:06.370 --> 00:03:09.150
혹은 이는 다른 
시간의 값을

00:03:09.150 --> 00:03:11.410
변수가 다른 방법에서 사용되기 때문이죠.

00:03:11.410 --> 00:03:14.780
왜냐하면 국제 변수는
영구 값 설정이거나,

00:03:14.780 --> 00:03:18.650
이는 이전에 다른 방법에 사용되었던
오래된 값을 사용하기 때문입니다.

00:03:18.650 --> 00:03:21.500
이제 단지 오류를 만들기만 하면
올바른 것을 설정하기 까먹기

00:03:21.500 --> 00:03:24.300
마련이지만 우리는 이 작업을
힘들게 느낄 필요는 없습니다.

00:03:24.300 --> 00:03:26.770
좋습니다, 이는 오직
변수의 예중 하나일 뿐입니다, 그리고

00:03:26.770 --> 00:03:28.153
다른 것을 확인해보죠,
healthLevel.

