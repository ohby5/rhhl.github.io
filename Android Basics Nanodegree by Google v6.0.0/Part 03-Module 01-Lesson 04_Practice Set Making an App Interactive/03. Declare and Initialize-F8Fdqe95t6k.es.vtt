WEBVTT
Kind: captions
Language: es

00:00:00.300 --> 00:00:03.971
Vamos a practicar cómo identificar errores
al crear variables nuevas.

00:00:04.304 --> 00:00:06.073
Si quieres saber el término especializado,

00:00:06.273 --> 00:00:10.110
lo que hacemos es encontrar errores
al declarar e iniciar variables.

00:00:10.344 --> 00:00:12.613
Declarar una variable
es crear una variable nueva.

00:00:12.880 --> 00:00:15.816
Es como crear una caja para una variable,
y es así.

00:00:16.183 --> 00:00:19.987
Ahora no hay valores, solo el tipo
de datos, el nombre y un punto y coma.

00:00:20.487 --> 00:00:24.291
Por otro lado, iniciar
es darle un valor inicial a una variable.

00:00:24.725 --> 00:00:27.060
Es el acto de meter algo
dentro de la caja.

00:00:27.528 --> 00:00:29.162
Y en código es así.

00:00:29.363 --> 00:00:30.464
<i>total = 10</i>.

00:00:30.797 --> 00:00:32.266
A menudo se combinan los dos,

00:00:32.566 --> 00:00:34.067
tanto declarar como iniciar.

00:00:34.268 --> 00:00:37.171
Y en código queda como <i>int total = 10</i>.

00:00:37.704 --> 00:00:41.542
Esto hace que de una sola vez
se cree la caja y se le meta un valor.

00:00:41.742 --> 00:00:43.810
Te puedes encontrar
con instrucciones como esta,

00:00:44.044 --> 00:00:47.147
que pueden ser
tanto la declaración como el inicio

00:00:47.347 --> 00:00:48.815
o solo la declaración,

00:00:49.016 --> 00:00:51.201
y debes identificar
cuándo se ha cometido un error.

00:00:51.685 --> 00:00:54.671
Son errores tan graves que se les llama
errores de tiempo de compilación,

00:00:54.888 --> 00:00:58.025
lo que quiere decir que Android Studio
no te dejará ejecutar el código

00:00:58.325 --> 00:01:00.294
porque no entiende
qué le intentas decir.

00:01:00.594 --> 00:01:03.463
Vamos a ver un ejemplo de cómo son
los problemas de la primera parte.

00:01:04.730 --> 00:01:08.602
Este es el primer problema
de la primera parte, vamos a verlo.

00:01:09.002 --> 00:01:10.470
El problema dice:

00:01:11.538 --> 00:01:14.530
<i>unreadEmails</i> es una variable
que marca el número de <i>emails </i>no leídos

00:01:14.575 --> 00:01:16.000
en la app de una bandeja de entrada.

00:01:16.043 --> 00:01:19.012
Vamos a suponer
que hay 10 <i>emails </i>no leídos.

00:01:19.746 --> 00:01:23.450
Veamos ahora estos tres inicios
o declaraciones diferentes.

00:01:23.951 --> 00:01:26.119
Algunos o todos contienen errores.

00:01:26.954 --> 00:01:30.257
Lo que vemos son líneas sueltas,
no son bloques de códigos.

00:01:30.457 --> 00:01:33.227
Observa la primera
y decide si está bien escrita,

00:01:33.560 --> 00:01:37.364
de forma que declare e inicie a la vez
la variable <i>unreadEmails</i>.

00:01:37.598 --> 00:01:39.600
Si lo hace,
pasa a la siguiente.

00:01:40.033 --> 00:01:43.370
Pero si crees que no lo hace,
marca la casilla que hay aquí.

00:01:44.171 --> 00:01:48.742
Y si tiene un error, describe aquí
cuál es la causa del error.

00:01:49.576 --> 00:01:53.447
Pero no estoy diciendo que esta
tenga un error, era solo un ejemplo.

00:01:53.747 --> 00:01:56.283
Observa las líneas y marca las que creas
que tienen errores,

00:01:56.617 --> 00:01:58.385
y luego describe cuáles son los errores.

00:01:58.619 --> 00:02:01.755
He añadido el código
de cada uno de los ejercicios

00:02:01.955 --> 00:02:05.659
en las notas del profesor,
por si las quieres copiar una a una

00:02:05.959 --> 00:02:08.262
y ejecutarlas en la app
que tú mismo has creado.

00:02:08.628 --> 00:02:11.565
Cuando termines, te animo
a que veas el vídeo con la solución.

00:02:11.899 --> 00:02:14.101
Explicaré la lógica
de los que tienen errores.

