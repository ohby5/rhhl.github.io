WEBVTT
Kind: captions
Language: zh-TW

00:00:00.650 --> 00:00:01.569
在下面的小測驗中

00:00:01.569 --> 00:00:04.390
我將演示變數實際上是如何使用的

00:00:04.390 --> 00:00:08.100
在第2部分你將要編寫的程式將會被編譯

00:00:08.100 --> 00:00:10.820
這意味著計算可以理解所編寫的代碼

00:00:10.820 --> 00:00:12.614
我們將能夠創建一個應用程式

00:00:13.675 --> 00:00:16.065
現在 程式將能夠在電話上運行

00:00:16.065 --> 00:00:19.605
它們也可能不會按照預期運行

00:00:19.605 --> 00:00:21.775
例如出現邏輯錯誤等

00:00:21.775 --> 00:00:24.535
邏輯錯誤意味著你用于編寫代碼的邏輯

00:00:24.535 --> 00:00:25.245
出現錯誤

00:00:26.895 --> 00:00:28.445
讓我們來看一個小程式

00:00:28.445 --> 00:00:32.415
這是一個示例性場景 我將告訴你如何解決這些問題

00:00:32.415 --> 00:00:34.380
這里有一個示例

00:00:34.380 --> 00:00:37.560
這些程式的每個程式將有一個全域 將會寫在這里

00:00:37.560 --> 00:00:40.450
程式本身將位于綠色方塊中

00:00:40.450 --> 00:00:44.590
這個程式的目標是計算睡眠不足時間

00:00:44.590 --> 00:00:48.080
睡眠時間根據年齡有所變更 但是平均來說

00:00:48.080 --> 00:00:50.730
人類平均一晚睡八個小時

00:00:50.730 --> 00:00:54.710
因此這個程式嘗試計算一周的睡眠不足時間

00:00:54.710 --> 00:00:57.850
此程式的用戶將進行操作并估算他們工作日平均每天

00:00:57.850 --> 00:01:02.310
睡眠多少個小時 以及周末平均睡眠多少個小時

00:01:02.310 --> 00:01:06.340
對於這個例子 我們假設用戶工作日睡眠五個小時

00:01:06.340 --> 00:01:08.190
周末睡眠九個小時

00:01:08.190 --> 00:01:11.400
代碼位于綠色方塊中

00:01:11.400 --> 00:01:14.390
你要做的第一件事情是讀完這段代碼

00:01:14.390 --> 00:01:17.130
并確定目標是否已經完成

00:01:17.130 --> 00:01:19.620
然后你要做的事情就是檢查代碼中的每一條聲明

00:01:19.620 --> 00:01:23.490
決定屏幕上的實際顯示內容

00:01:23.490 --> 00:01:28.920
假設這些方法在這里調用屏幕上顯示的內容

00:01:28.920 --> 00:01:29.860
而且有括號

00:01:29.860 --> 00:01:32.960
它們之間的代碼將在屏幕上顯示內容

00:01:32.960 --> 00:01:35.860
現在有一些問題 它們需要顯示多個內容塊

00:01:35.860 --> 00:01:40.410
因此你可以看到display1, display2, display3

00:01:40.410 --> 00:01:42.060
如果你仍然在看這個視訊

00:01:42.060 --> 00:01:45.120
你可能在想如何解決這些問題

00:01:45.120 --> 00:01:47.930
這并不是你第一次使用多個變數

00:01:47.930 --> 00:01:50.540
這些變數的值可能會變更多次

00:01:51.800 --> 00:01:54.590
我們先做重要的事情

00:01:54.590 --> 00:01:57.990
現在我要使用一項名為手動模擬的技術

00:01:57.990 --> 00:02:01.050
這項技術模擬計算機的運行

00:02:01.050 --> 00:02:03.090
而不需要真實地在計算機上運行代碼

00:02:03.090 --> 00:02:06.230
對我們來說 這是一個有條不紊的方法

00:02:06.230 --> 00:02:07.580
可以跟蹤變數的變更情況

00:02:07.580 --> 00:02:10.190
現在你需要逐行識讀 我們從這里開始

00:02:10.190 --> 00:02:13.130
在第一行 我看到一個變數宣告

00:02:13.130 --> 00:02:15.560
我寫入變量名 也就是weekday

00:02:17.030 --> 00:02:19.890
把它的初始值設定為5

00:02:19.890 --> 00:02:22.280
在weekday變數下方 我輸入值5

00:02:22.280 --> 00:02:25.794
這代表weekday變數當前存放的值是5

00:02:27.550 --> 00:02:29.760
這是第一行 現在我轉到下一行

00:02:29.760 --> 00:02:32.620
另一個變數的名稱是weekend 我在這里寫出

00:02:32.620 --> 00:02:37.770
這個變數的值是9

00:02:37.770 --> 00:02:39.110
好了 看上去還不錯

00:02:39.110 --> 00:02:42.310
我要轉到下一行 這是一個宣告

00:02:42.310 --> 00:02:45.410
是optimalHours變數的實例化 我將做同樣的事情

00:02:48.090 --> 00:02:49.690
我不會寫入值 7*8.

00:02:49.690 --> 00:02:52.730
我準備計算出這個值

00:02:52.730 --> 00:02:55.180
因為optimalHours變數將會存放這個值

00:02:55.180 --> 00:02:59.660
我們來做一個小算數 7乘8等于56

00:02:59.660 --> 00:03:02.170
我們在這里進行另一個宣告

00:03:02.170 --> 00:03:06.030
我們設定一個名為actualHours的變數 我在這里寫出

00:03:06.030 --> 00:03:08.260
它等于weekday的值

00:03:08.260 --> 00:03:10.130
這是weekday的當前值

00:03:10.130 --> 00:03:13.170
它不是weekday的以往值或weekday的未來值

00:03:13.170 --> 00:03:17.370
現在 我們跟蹤weekday的當前值在這里顯示為多少

00:03:17.370 --> 00:03:19.720
因此我可以在這里看到 它顯示為5

00:03:19.720 --> 00:03:21.920
因此我應該認為它是數字5

00:03:21.920 --> 00:03:25.570
因此actualHours等于5

00:03:25.570 --> 00:03:28.230
現在我將繼續 并寫在那里

00:03:29.230 --> 00:03:31.070
我們轉入下一行

00:03:31.070 --> 00:03:35.800
現在我把實際小時數再次變更為

00:03:35.800 --> 00:03:40.020
actualHours的當前值加上weekend乘2

00:03:40.020 --> 00:03:45.720
在這里我可以看到 actualHours的當前值是5

00:03:45.720 --> 00:03:50.720
weekend是9

00:03:50.720 --> 00:03:53.330
在這里算式已經設定好了

00:03:53.330 --> 00:03:56.100
在做加法之前先做乘法

00:03:56.100 --> 00:03:59.240
9乘2等于18 然后再加5

00:03:59.240 --> 00:04:03.670
做個小算術 18加5等于23

00:04:03.670 --> 00:04:06.350
因此結果是23

00:04:06.350 --> 00:04:11.100
現在我要做的是取消舊的實際小時數

00:04:11.100 --> 00:04:13.650
寫入新的實際小時數值

00:04:13.650 --> 00:04:14.810
好了 完成了

00:04:14.810 --> 00:04:16.440
轉到下一行

00:04:16.440 --> 00:04:19.540
我們一個n求解 因此這是一個變數宣告

00:04:19.540 --> 00:04:21.000
它將等于一個值

00:04:21.000 --> 00:04:22.820
但是我想先寫出求解字樣

00:04:22.820 --> 00:04:26.860
求解值等于optimalhours減去實際小時數

00:04:26.860 --> 00:04:32.700
讓我們轉到這里 optimalhours是56 actualhours是23.

00:04:32.700 --> 00:04:35.860
現在可以使用計算器了

00:04:35.860 --> 00:04:41.140
前面我們算過 56減23等于33

00:04:41.140 --> 00:04:45.050
好了 然后我們轉入下一行

00:04:45.050 --> 00:04:47.810
這是最后一行 顯示求解得數

00:04:47.810 --> 00:04:51.810
在這里我們可以看到求解值 也就是33

00:04:51.810 --> 00:04:56.100
將會顯示數值33

00:04:56.100 --> 00:04:59.110
這樣 我 你

00:04:59.110 --> 00:05:02.560
或任何人都可以知道程式剛才做了什么

00:05:02.560 --> 00:05:05.590
但是真正的問題是 它是否做得正確

00:05:05.590 --> 00:05:08.170
這里的某個位置是否有邏輯錯誤

00:05:08.170 --> 00:05:11.730
或者 一個人在工作日睡五個小時

00:05:11.730 --> 00:05:15.640
在周末睡九個小時 是否在一周結束是會產生三十三個小時的睡眠不足

00:05:15.640 --> 00:05:16.660
我想知道你是怎么想的

00:05:16.660 --> 00:05:21.360
好了現在你已經創建了一個練習組2應用程式

00:05:21.360 --> 00:05:24.440
我要告訴你怎樣在這個練習組2應用程式中放入代碼

00:05:24.440 --> 00:05:26.870
如果你要測試它的結果

00:05:26.870 --> 00:05:28.590
我建議首先進行手動模擬

00:05:28.590 --> 00:05:32.530
因為它會讓你更好理解程式是如何運行的

00:05:32.530 --> 00:05:35.690
而且 你能夠把代碼放入Android Studio

00:05:35.690 --> 00:05:37.160
并執行代碼

00:05:37.160 --> 00:05:41.510
因此我的建議是 你複製指導說明中的代碼

00:05:41.510 --> 00:05:45.880
并貼入onCreate方法

00:05:45.880 --> 00:05:49.480
這是你在主活動類別中看到的第一個方法

00:05:49.480 --> 00:05:52.240
請看清 這是修改之前的onCreate方法的內容

00:05:52.240 --> 00:05:56.650
然后你可以在這里貼上代碼 就像我做的這樣

00:05:57.890 --> 00:06:00.920
你要做的另外一件事情是在這里復制并貼上

00:06:00.920 --> 00:06:06.480
這將會讓這行代碼正常執行

00:06:06.480 --> 00:06:10.460
就是這段代碼 我已經把它放入指導說明中

00:06:11.650 --> 00:06:15.840
最后一件要做的事情是檢視XML

00:06:15.840 --> 00:06:21.632
保證你的文字檢視圖是Id/display_text_view,

00:06:21.632 --> 00:06:25.990
這應該與這里顯示的內容完全一致

00:06:27.255 --> 00:06:30.425
在執行代碼時 只要這兩項匹配

00:06:30.425 --> 00:06:35.155
值就會列印在屏幕上

00:06:35.155 --> 00:06:38.500
這有一點不好看到 因為在這里它顯示為33

00:06:38.500 --> 00:06:41.325
完成所有這些工作后 我嘗試手動模擬

00:06:41.325 --> 00:06:43.805
并想辦法讓它在你的電話上運行

00:06:43.805 --> 00:06:47.165
我們繼續進行 看這個程式是否按照期望的那樣執行

