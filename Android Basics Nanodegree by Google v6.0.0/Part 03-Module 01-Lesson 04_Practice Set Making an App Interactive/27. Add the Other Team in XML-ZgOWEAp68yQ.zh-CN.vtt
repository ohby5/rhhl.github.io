WEBVTT
Kind: captions
Language: zh-CN

00:00:00.740 --> 00:00:02.100
干得漂亮

00:00:02.100 --> 00:00:04.620
你的应用看起来很不错

00:00:04.620 --> 00:00:07.340
但是 目前你的程序只能

00:00:07.340 --> 00:00:09.150
为一个球队服务

00:00:10.150 --> 00:00:13.950
我们希望它可以同时为两个球队计分

00:00:13.950 --> 00:00:16.600
我们从 XML 文件开始 然后再看 Java 代码

00:00:17.770 --> 00:00:19.400
现在我们添加另一部分

00:00:19.400 --> 00:00:21.080
为 B 球队计分

00:00:21.080 --> 00:00:23.380
记住 我们先修改 xml

00:00:24.480 --> 00:00:26.770
如果我们记得之前的布局

00:00:26.770 --> 00:00:30.200
它是垂直 LinearLay

00:00:30.200 --> 00:00:34.310
B 队这边看起来一样

00:00:34.310 --> 00:00:37.280
你不能有两个根 View

00:00:37.280 --> 00:00:40.220
所以 在这里你需要使用嵌套布局

00:00:40.220 --> 00:00:43.070
好好想想每一层的 LinearLay

00:00:43.070 --> 00:00:44.759
每一层都是一个View

00:00:45.910 --> 00:00:51.320
如果我们把所有的这些都看做一个 View 那么这些就成了一个整体

00:00:51.320 --> 00:00:55.780
如果这两个 View 需要占据相同的空间

00:00:55.780 --> 00:00:57.630
差不多半个屏幕

00:00:57.630 --> 00:00:59.560
那么我们需要使用什么样的父布局呢？

00:01:00.750 --> 00:01:02.970
把你的答案写在这

00:01:02.970 --> 00:01:04.560
如果你弄明白了

00:01:04.560 --> 00:01:08.170
那么你开始编码的时候 它会给你提供足够的信息

00:01:08.170 --> 00:01:11.400
当你遇到问题你可以在视频中

00:01:11.400 --> 00:01:12.000
寻找解决方案

00:01:13.170 --> 00:01:16.010
当你完成后 它应该是这个样子的

00:01:16.010 --> 00:01:21.430
A 队这边工作正常

00:01:21.430 --> 00:01:27.400
B 队这边好像有点不对劲

00:01:27.400 --> 00:01:29.850
因为我们还没完成相关的 Java 代码

00:01:29.850 --> 00:01:32.720
不要着急 先完成这个界面就行

