WEBVTT
Kind: captions
Language: ko

00:00:01.240 --> 00:00:04.900
이 프로그램은 저스트 자바 커피 숍에 
대한 이메일 디렉토리를

00:00:04.900 --> 00:00:06.939
보여주는 프로그램의 일부입니다.

00:00:06.939 --> 00:00:13.680
모든 저스트 자바 커피 숍의 직원들은
이름, 기간, 성 @justjava.com으로 된

00:00:13.680 --> 00:00:15.630
이메일 주소를 
가지고 있습니다.

00:00:15.910 --> 00:00:20.110
이제 프로그램이 출력해야 할 값은
이 같은 형식의 이메일 주소에 따른

00:00:20.110 --> 00:00:22.120
직원들의 
이름입니다.

00:00:22.470 --> 00:00:23.530
이를 확인해 보도록 합시다.

00:00:24.270 --> 00:00:27.860
좋습니다. 이곳의 첫 행은 
성 이라는 변수를 만듭니다.

00:00:27.860 --> 00:00:29.000
그리고 이 값을 리라로 설정합니다.

00:00:29.460 --> 00:00:30.470
좋습니다.

00:00:30.470 --> 00:00:33.580
그리고 다음 행은
후지와라로 만들어지고 설정된

00:00:33.580 --> 00:00:35.530
성 이라는 변수를 갖습니다.

00:00:36.480 --> 00:00:39.470
좋습니다. 이제 [contactInfo]인 
변수를 만들겠습니다.

00:00:39.470 --> 00:00:41.730
그리고 이를 좀 더 복잡한 것으로 
설정해 보겠습니다.

00:00:41.730 --> 00:00:43.610
변수를 만들어 보겠습니다.

00:00:43.970 --> 00:00:48.170
좋습니다. 
이제 [firstName]의 값 + 공백 +

00:00:48.170 --> 00:00:50.950
[lastName]의 값과 
같도록 설정하였습니다.

00:00:50.950 --> 00:00:52.420
따라서 이름은 리라입니다.

00:00:52.420 --> 00:00:53.510
성은 후지와라입니다.

00:00:53.510 --> 00:00:58.980
그리고 이는 리라, 공백, 후지와라가 
될 것입니다.

00:01:00.330 --> 00:01:01.690
좋습니다.

00:01:01.690 --> 00:01:02.840
이제 다음 명령을 위해,

00:01:02.840 --> 00:01:06.210
이 두 공간을 실질적으로 
한 행에 나타내고자 합니다.

00:01:06.210 --> 00:01:09.170
따라서 우리가 이미 규정한
[contactInfo]를 이용하겠습니다.

00:01:09.170 --> 00:01:11.020
그리고 값을 이와 같이
재설정하겠습니다.

00:01:11.020 --> 00:01:12.420
자 이제 확인해 보도록 합시다.

00:01:12.420 --> 00:01:16.600
성은 후지와라입니다,
이름은 여전히 리라입니다.

00:01:16.600 --> 00:01:20.660
좋습니다. 이제 이것이 할 일은 이전의 
[contactInfo]를 지우는 것입니다.

00:01:20.660 --> 00:01:22.660
그리고 이제 이를 
여는 괄호,

00:01:24.430 --> 00:01:26.160
이와 연결된 후지와라,

00:01:27.500 --> 00:01:32.138
이와 연결된 마침표,
이와 연결된 리라,

00:01:35.818 --> 00:01:38.328
연결된 @justjava.com와
같도록 설정하고

00:01:38.328 --> 00:01:40.120
닫는 괄호를 넣습니다.

00:01:40.120 --> 00:01:42.920
이제 [contact info]에
대한 현재 값입니다.

00:01:42.920 --> 00:01:45.900
그리고 이곳의 다음 행에서 
이것을 이곳에

00:01:45.900 --> 00:01:49.000
표시하고자 함을 나타내는 
[contactInfo]를 표시합니다.

00:01:49.040 --> 00:01:53.150
하지만 이곳의 문자열은 
이곳의 문자열과 같지 않습니다.

00:01:54.280 --> 00:01:56.400
사실, 이것은 이 문자열의 일부입니다.
이 부분이요.

00:01:57.620 --> 00:01:59.700
리라 후지와라를 빠뜨렸습니다.

00:01:59.700 --> 00:02:02.220
이제 문자열을 변경하기 전에,

00:02:02.220 --> 00:02:06.640
리라 후지와라를 저장하였습니다.
하지만 무언가를 빠뜨렸습니다.

00:02:06.640 --> 00:02:10.110
여기 행에서 완전히 다른 값과
같게 나타내었습니다.

00:02:11.590 --> 00:02:14.850
우리가 원하는 것은 
이들 둘의 연결입니다.

00:02:14.850 --> 00:02:17.100
이제 이 프로그램을 수정하고 싶다면

00:02:17.100 --> 00:02:22.600
바로 여기에 [contactInfo+]와
이 모든 것을 추가하면 됩니다.

00:02:22.600 --> 00:02:25.800
이는 [contactInfo]의 현재의 값인 
리라 후지와라를 갖도록 해 줍니다.

00:02:25.800 --> 00:02:29.635
그리고 이것을 이 형식의 
이메일 주소와 연결했습니다.

00:02:29.635 --> 00:02:32.995
다른 주의 사항은, 
이메일 주소를 @justjava.com로

00:02:32.995 --> 00:02:34.505
가정하였다는 것입니다.

00:02:35.025 --> 00:02:37.505
대문자나 소문자 F

00:02:37.505 --> 00:02:40.357
또는 대문자나 소문자 L은 
상관이 없습니다.

00:02:40.357 --> 00:02:43.587
사람들이 이용하는 대부분의 이메일 
서비스에도 이것이 적용됩니다.

00:02:43.587 --> 00:02:45.077
예를 들어, Gmail에서도 
상관이 없습니다.

00:02:45.077 --> 00:02:47.617
이를 소문자나 대문자로
사용할 수 있습니다.

00:02:47.617 --> 00:02:49.517
여전히 같은 사람을 나타냅니다.

00:02:49.517 --> 00:02:52.637
하지만 이곳에서 이 차이에 관해 
언급을 하였다면 참 잘한 것입니다.

00:02:52.637 --> 00:02:55.287
다시 한 번 말하건대, 많은 경우
컴퓨터 작업에 대해 얘기할 때

00:02:55.287 --> 00:02:58.337
대소문자는 정말 영향을 주거든요.

