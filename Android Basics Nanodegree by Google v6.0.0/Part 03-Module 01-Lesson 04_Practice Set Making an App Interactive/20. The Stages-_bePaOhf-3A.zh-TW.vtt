WEBVTT
Kind: captions
Language: zh-TW

00:00:00.710 --> 00:00:04.570
在進入XML前
先解答這些問題。

00:00:04.570 --> 00:00:07.050
首先第一件事，
選擇視圖。

00:00:07.050 --> 00:00:08.670
在這裡畫方框。

00:00:09.700 --> 00:00:11.130
這兒有五個
不同的視圖，

00:00:11.130 --> 00:00:14.070
不包括視圖組，
嚴格上來說它也是一個視圖。

00:00:14.070 --> 00:00:17.610
無論怎樣，
這個五個視圖是上面這兩個，

00:00:17.610 --> 00:00:19.330
後面跟著三個按鍵。

00:00:19.330 --> 00:00:24.480
沒有ImageViews。

00:00:24.480 --> 00:00:28.300
你或許覺得奇怪
把這些定為兩個不同的TextViews，

00:00:28.300 --> 00:00:31.940
在最終產品樣式化A組

00:00:31.940 --> 00:00:34.050
和分數看起來是不一樣的。

00:00:34.050 --> 00:00:37.530
因此我把這兩個認定為
單獨的TextViews。

00:00:37.530 --> 00:00:40.080
繼續到第二步，
擺放視圖。

00:00:40.080 --> 00:00:43.100
選擇要使用的ViewGroup，

00:00:43.100 --> 00:00:46.830
我想到的是
線性佈局和相對佈局。

00:00:46.830 --> 00:00:49.450
這個是個垂直欄的視圖。

00:00:49.450 --> 00:00:52.720
很明顯
要用線性佈局。

00:00:54.370 --> 00:00:57.310
最後一步就是風格化視圖。

00:00:57.310 --> 00:01:00.320
我會在XML裡解決這個。

00:01:00.320 --> 00:01:02.780
來到XML。

00:01:02.780 --> 00:01:04.970
現在看的是個文字標籤。

00:01:04.970 --> 00:01:07.740
第一件事就是

00:01:07.740 --> 00:01:09.760
刪除一些不需要的東西。

00:01:09.760 --> 00:01:12.470
從刪除這個TextView開始。

00:01:13.490 --> 00:01:16.597
所有這些paddingLeft，
paddingRight，paddingTop

00:01:16.597 --> 00:01:19.750
和paddingBottom都刪除。

00:01:19.750 --> 00:01:23.090
要小心別刪掉有用的那些。

00:01:23.090 --> 00:01:24.568
好。

00:01:24.568 --> 00:01:27.760
前面說過要使用的ViewGroup
不會是個相對佈局，

00:01:27.760 --> 00:01:30.370
而是線性佈局，
現在做修改。

00:01:31.370 --> 00:01:34.590
在線性佈局這裡，
有兩個TextViews

00:01:34.590 --> 00:01:35.800
後面帶有三個按鍵。

00:01:35.800 --> 00:01:37.710
從這個開始。

00:01:37.710 --> 00:01:42.780
現在不會指定
視圖寬高。

00:01:42.780 --> 00:01:45.300
只保留為
wrap_content，

00:01:45.300 --> 00:01:48.070
這樣TextView的方框
圍繞文字。

00:01:49.310 --> 00:01:52.490
同時給TextView
設定文字。

00:01:52.490 --> 00:01:54.710
第一個TextView
是A組。

00:01:56.250 --> 00:01:58.710
在預覽中看看。

00:01:58.710 --> 00:02:01.800
能看見一個小TextView
顯示Team A.

00:02:01.800 --> 00:02:03.610
再多建立幾個。

00:02:03.610 --> 00:02:07.200
下面這個是分數，
也是一個TextView。

00:02:07.200 --> 00:02:09.758
開始輸入Text.

00:02:09.758 --> 00:02:12.490
出現TextView，
回車。

00:02:12.490 --> 00:02:15.590
同樣設為wrap_content。

00:02:15.590 --> 00:02:17.860
添加文字。

00:02:17.860 --> 00:02:21.560
分數通常從零開始，
因此設為零。

00:02:21.560 --> 00:02:22.580
好。

00:02:22.580 --> 00:02:25.510
現在到按鍵。
輸入單詞Button.

00:02:25.510 --> 00:02:28.230
也設為wrap_content。

00:02:28.230 --> 00:02:32.002
現在第一個按鍵
會顯示3分。

00:02:32.002 --> 00:02:34.800
繼續複製

00:02:34.800 --> 00:02:39.780
黏貼兩次
得到兩個按鍵。

00:02:39.780 --> 00:02:43.020
一個按鍵顯示+2分，

00:02:43.020 --> 00:02:45.250
一個按鍵顯示自由投擲。

00:02:45.250 --> 00:02:47.000
一起看看預覽。

00:02:48.180 --> 00:02:51.070
有三個按鍵。

00:02:51.070 --> 00:02:54.420
Team A和零。

00:02:54.420 --> 00:02:55.910
有所有的視圖，

00:02:55.910 --> 00:02:59.100
不過和預期最終目標
有點差別。

00:02:59.100 --> 00:03:01.080
記住，它們處於一個垂直欄裡。

00:03:01.080 --> 00:03:03.222
估計我需要改變佈局的方向，

00:03:03.222 --> 00:03:05.190
現在處理。

00:03:05.190 --> 00:03:09.600
開始輸入方向，
需要垂直的。

00:03:09.600 --> 00:03:11.860
現在看起來好些了。

00:03:11.860 --> 00:03:17.290
現在這些按鍵
擴展為窗口的寬。

00:03:17.290 --> 00:03:19.950
我應該不需要
給按鍵做wrap_content，

00:03:19.950 --> 00:03:23.290
相反地，
我需要做match_parent。

00:03:23.290 --> 00:03:24.470
現在修改。

00:03:25.830 --> 00:03:29.030
所有按鍵的寬現在是
match_parent。

00:03:29.030 --> 00:03:33.470
預覽。
現在看起來好多了。

00:03:33.470 --> 00:03:39.220
好的。文字還是看起來
被擠在角落裡，

00:03:39.220 --> 00:03:43.680
要解決這個
我需要使用一個叫重力的東西。

00:03:43.680 --> 00:03:46.430
這個是Google Drawling，

00:03:46.430 --> 00:03:48.710
在Google Drawling裡
做一個文字框。

00:03:50.030 --> 00:03:52.350
這個看起來像視圖界限。

00:03:52.350 --> 00:03:54.330
輸入文字Team A,

00:03:54.330 --> 00:03:57.790
默認在左上角。

00:03:57.790 --> 00:04:00.780
這個和在TextViews裡
輸入文字是一樣，

00:04:00.780 --> 00:04:03.440
默認在左上角。

00:04:03.440 --> 00:04:08.700
選擇這個文字，

00:04:08.700 --> 00:04:13.740
使用屬性等量，
叫直線，

00:04:13.740 --> 00:04:18.940
使其在文字框裡水準居中
以及垂直居中。

00:04:18.940 --> 00:04:20.190
很好。

00:04:20.190 --> 00:04:23.980
把視圖的內容
移動到包含視圖邊緣

00:04:23.980 --> 00:04:27.340
就是佈局重力做的事。

00:04:27.340 --> 00:04:30.330
如果你認為
這個和一些對其方式很相似

00:04:30.330 --> 00:04:34.220
可以和相對佈局一起用，
確實，

00:04:34.220 --> 00:04:36.990
你可以用線性佈局
和重力屬性，這樣更給力。

00:04:36.990 --> 00:04:38.670
一起來看看代碼。

00:04:40.130 --> 00:04:43.980
先處理第一個TextView，
輸入gravity.

00:04:45.190 --> 00:04:46.970
好的，有兩個選擇，

00:04:46.970 --> 00:04:48.990
Layout gravity和gravity.

00:04:48.990 --> 00:04:50.570
剛給你們講解了gravity屬性。

00:04:50.570 --> 00:04:52.650
因此這個是需要的那個。

00:04:52.650 --> 00:04:55.650
然後有一堆選項，

00:04:55.650 --> 00:04:58.220
需要的是水準居中。

00:04:58.220 --> 00:05:00.088
因此會用這個。

00:05:00.088 --> 00:05:02.620
繼續看看預覽。

00:05:04.010 --> 00:05:08.130
看起來沒有太大改動，
這兒有個原因。

00:05:09.440 --> 00:05:13.300
點擊放大，
因為很難看清楚。

00:05:14.610 --> 00:05:20.960
這兒有Team A,
視圖邊框環繞。

00:05:20.960 --> 00:05:24.650
如果告訴是
這個是試圖的居中，

00:05:24.650 --> 00:05:26.950
你也沒法辯解。

00:05:26.950 --> 00:05:31.510
確實看起來是
中間，只是非常小。

00:05:31.510 --> 00:05:33.020
回到Google Drawing，

00:05:33.020 --> 00:05:38.940
如果增加尺寸，
到文字尺寸大小。

00:05:38.940 --> 00:05:40.450
它是居中。

00:05:40.450 --> 00:05:44.520
不過和被擠到左邊
沒有太大區別。

00:05:44.520 --> 00:05:47.230
如果我需要在手機裡居中，

00:05:47.230 --> 00:05:50.090
我需要使視圖
擴展為手機的長。

00:05:50.090 --> 00:05:52.170
這要求修改寬。

00:05:54.020 --> 00:05:55.970
回到這，關閉預覽。

00:05:57.200 --> 00:05:58.840
在這對寬做修改。

00:06:00.120 --> 00:06:04.850
我用match_parent
不用wrap_content。

00:06:04.850 --> 00:06:06.150
再看看預覽。

00:06:07.430 --> 00:06:10.610
縮小。
看起來好多了。

00:06:10.610 --> 00:06:12.200
向上居中。

00:06:12.200 --> 00:06:14.420
對分數做同樣處理。

00:06:15.840 --> 00:06:18.910
同樣添加gravity,

00:06:18.910 --> 00:06:20.425
以及在所有佈局中添加。

00:06:20.425 --> 00:06:25.950
水準居中，
修改寬為match_parent。

00:06:27.260 --> 00:06:29.160
再檢查一次看看。

00:06:29.160 --> 00:06:30.870
所有東西都向上居中。

00:06:30.870 --> 00:06:32.190
看起來很不錯。

00:06:32.190 --> 00:06:34.400
只不過都被擠在一起，

00:06:34.400 --> 00:06:37.330
在這些元素中沒有太多空間。

00:06:37.330 --> 00:06:41.020
我要給每個TextViews
4dp的填充。

00:06:41.020 --> 00:06:45.875
輸入padding,
設為4dp。

00:06:47.000 --> 00:06:48.360
還記得dp嗎？

00:06:48.360 --> 00:06:52.010
只用padding,
不是底部填充或其他類似的。

00:06:52.010 --> 00:06:54.260
在整個TextView周圍
用4dp的填充。

00:06:54.260 --> 00:06:56.950
預覽看看。

00:06:58.390 --> 00:07:00.850
給出多一些的空間。

00:07:00.850 --> 00:07:03.750
對分數TextView做同樣操作。

00:07:07.830 --> 00:07:10.808
對按鍵同樣操作。

00:07:15.811 --> 00:07:18.610
嗯。看起來改動不大。

00:07:18.610 --> 00:07:23.693
我要是設置大一點
像8dp會怎樣？

00:07:23.693 --> 00:07:25.528
20dp會怎樣？

00:07:25.528 --> 00:07:29.820
嗯，有意思，
看起來讓按鍵本身變大。

00:07:29.820 --> 00:07:31.740
我要的不是按鍵變大，

00:07:31.740 --> 00:07:33.980
而是按鍵周圍的空間變大。

00:07:33.980 --> 00:07:37.640
事實上，最好使用
layout_margin。

00:07:37.640 --> 00:07:41.040
記住，填充
實際上是在視圖內填充，

00:07:41.040 --> 00:07:42.930
而留白是在視圖周圍
留出空間。

00:07:43.930 --> 00:07:45.310
因此改成layout_margin。

00:07:45.310 --> 00:07:46.890
設為8dp。

00:07:46.890 --> 00:07:48.850
看起來好多了。

00:07:48.850 --> 00:07:53.120
視圖周圍有空間，
兩個視圖中間也有。

00:07:53.120 --> 00:07:55.019
繼續處理其他按鍵。

00:07:56.480 --> 00:07:59.710
留空，不是填充，
layout_margin。

00:07:59.710 --> 00:08:01.440
看起來很好。

00:08:01.440 --> 00:08:04.100
如果你用的是不同屬性，

00:08:04.100 --> 00:08:08.320
像5dp填充而不是4dp，
都是可以的。

00:08:08.320 --> 00:08:11.710
記住在這一點
只是看起來更易讀一些。

00:08:11.710 --> 00:08:15.409
在後面我們再來關注
文字尺寸和顏色。

00:08:16.750 --> 00:08:18.670
好。幹得不錯。

00:08:18.670 --> 00:08:19.860
這步完成了。

