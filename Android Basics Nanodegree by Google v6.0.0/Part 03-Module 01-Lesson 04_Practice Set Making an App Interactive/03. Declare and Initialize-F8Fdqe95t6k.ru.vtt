WEBVTT
Kind: captions
Language: ru

00:00:00.320 --> 00:00:03.130
Начинай практиковаться в поиске
ошибок при создании —

00:00:03.130 --> 00:00:03.670
новых переменных.

00:00:03.670 --> 00:00:07.490
Если сказать более формально в техничес-
ких
терминах, это будет звучать так —

00:00:07.490 --> 00:00:10.380
поиск ошибок при объявлении и
инициализации переменных.

00:00:10.380 --> 00:00:12.940
Объявление переменной означает
создание новой переменной.

00:00:12.940 --> 00:00:16.100
Это все равно, что подписать коробку
для переменной, и вот как это выглядит.

00:00:16.100 --> 00:00:19.020
Сейчас у переменной ещё нет значения,
есть только тип данных, имя, —

00:00:19.020 --> 00:00:20.580
и точка с запятой.

00:00:20.580 --> 00:00:24.830
Инициализация, с другой стороны, это если
переменной задается начальное значение.

00:00:24.830 --> 00:00:27.640
Это все равно, что положить
что-то в коробку.

00:00:27.640 --> 00:00:29.400
В коде это выглядит так.

00:00:29.400 --> 00:00:30.820
Total = 10.

00:00:30.820 --> 00:00:34.460
Но, нередко, вы будете объединять эти два
шага, объявление и инициализацию, и —

00:00:34.460 --> 00:00:37.760
записывать выражение следующим образом:
int total =10.

00:00:37.760 --> 00:00:39.160
При этом в одном выражении сразу —

00:00:39.160 --> 00:00:41.750
и создается коробка, и кладется
в неё значение.

00:00:41.750 --> 00:00:44.100
Так вот, тебе нужно искать такие
выражения, как эти, —

00:00:44.100 --> 00:00:47.580
которые являются либо объявлением, либо
инициализацией переменных, или —

00:00:47.580 --> 00:00:51.780
и тем, и другим одновременно и
находить в них ошибки.

00:00:51.780 --> 00:00:54.990
Эти ошибки достаточно нехорошие, т.к.
они считаются ошибками компиляции.

00:00:54.990 --> 00:00:58.360
А это означает, что Андроид Студия
даже не даст тебе запустить код, —

00:00:58.360 --> 00:01:00.700
потому что она не поймет,
что ты пытаешься сказать.

00:01:00.700 --> 00:01:02.770
Давай посмотрим на примере, как
будут выглядеть проблемы —

00:01:02.770 --> 00:01:03.450
Части 1.

00:01:04.870 --> 00:01:07.030
Ок, это первая из
проблем Части 1, —

00:01:07.030 --> 00:01:09.130
я тебе расскажу про неё немного.

00:01:09.130 --> 00:01:13.400
Итак, в сообщении об ошибке говорится, что
unreadEemails – это переменная, хранящая —

00:01:13.400 --> 00:01:16.120
количество непрочитанных писем в
приложении входящей почты.

00:01:16.120 --> 00:01:19.780
Давай пойдем дальше и предположим, что
у нас имеется десять непрочитанных писем.

00:01:19.780 --> 00:01:21.285
И сейчас мы посмотрим
на эти три разных —

00:01:21.285 --> 00:01:23.960
инициализации/объявления.

00:01:23.960 --> 00:01:27.020
Какие-то из них или все будут с ошибками.

00:01:27.020 --> 00:01:29.120
Тебе нужно посмотреть
на каждую строку в отдельности.

00:01:29.120 --> 00:01:30.500
Это не блок кода.

00:01:30.500 --> 00:01:33.620
Итак, посмотри на первую строку и скажи,
правильно ли она записана, учитывая что —

00:01:33.620 --> 00:01:37.660
она должна и объявлять, и
инициализировать переменную unreadEmails.

00:01:37.660 --> 00:01:40.100
Если правильно – переходи к
следующей строке.

00:01:40.100 --> 00:01:44.260
Но если ты думаешь, что в ней есть ошибки,
тогда поставь флажок прямо здесь.

00:01:44.260 --> 00:01:46.690
И в этом случае тебе также
нужно описать тут —

00:01:46.690 --> 00:01:49.680
в чем именно, по-твоему,
состоит проблема.

00:01:49.680 --> 00:01:52.860
Ок, но учти, что я не утверждаю, что в
этой строке обязательно есть ошибка, я —

00:01:52.860 --> 00:01:53.850
привела её просто как пример.

00:01:53.850 --> 00:01:54.940
Просмотришь все три строчки, —

00:01:54.940 --> 00:01:56.800
отметишь те из них, в которых
по-твоему есть проблемы, и —

00:01:56.800 --> 00:01:58.710
опишешь ошибки здесь.

00:01:58.710 --> 00:02:00.470
Если хочешь, можешь посмотреть
примеры кода для —

00:02:00.470 --> 00:02:03.540
каждой строки, которые я
дала в заметках инструктора внизу.

00:02:03.540 --> 00:02:06.000
Ты можешь скопировать их
по одной и попробовать —

00:02:06.000 --> 00:02:08.729
вставить в приложение, которое
только что сам создал.

00:02:08.729 --> 00:02:11.990
После этого я настоятельно рекомендую
посмотреть видео с правильными ответами.

00:02:11.990 --> 00:02:14.170
В нем я объясняю, в чем состоят
ошибки в строках.

