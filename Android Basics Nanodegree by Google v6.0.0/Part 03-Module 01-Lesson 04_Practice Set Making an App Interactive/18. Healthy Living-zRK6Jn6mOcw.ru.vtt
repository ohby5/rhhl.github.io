WEBVTT
Kind: captions
Language: ru

00:00:00.290 --> 00:00:03.510
Вы должны были решить, является ли <i>message</i>
глобальной переменной.

00:00:03.510 --> 00:00:06.920
И вы можете определить это, увидев,
где она объявлена, то есть тут.

00:00:07.980 --> 00:00:11.000
Она не объявлена ни в каком из методов.

00:00:11.000 --> 00:00:13.980
На самом деле, она объявлена
вне всех методов.

00:00:13.980 --> 00:00:16.600
Хотя она и находится
внутри волнистых скобок того,

00:00:16.600 --> 00:00:19.200
что мы назвали классом <i>MainActivity</i>.

00:00:19.200 --> 00:00:21.070
Хорошо. Следующий вопрос в том,

00:00:21.070 --> 00:00:23.050
будет ли <i>message</i> глобальной переменной.

00:00:23.050 --> 00:00:28.430
Что ж, где бы мы не использовали <i>message</i>,
мы задаем ее значение

00:00:28.430 --> 00:00:30.040
и затем немедленно его отображаем.

00:00:30.040 --> 00:00:34.230
Когда мы задаем <i>message</i>, то не смотрим
на ее предыдущие значения.

00:00:34.230 --> 00:00:37.295
Глобальные переменные хороши
для сохранения предыдущих значений,

00:00:38.000 --> 00:00:41.290
как при нажатии кнопок и других событиях,
которые могут быть в вашем приложении.

00:00:41.290 --> 00:00:43.800
Они - способ сохранения
состояния приложения.

00:00:43.800 --> 00:00:44.870
Однако, они не подходят,

00:00:44.870 --> 00:00:48.370
если переменные используются
как своего рода промежуточные значения.

00:00:48.370 --> 00:00:51.300
Запомните, когда вы выполняете
код внутри этих блоков,

00:00:51.300 --> 00:00:54.990
называемых методами, каждое выражение
выполняется последовательно.

00:00:54.990 --> 00:00:59.187
Если переменная нужна лишь
в последовательности этих выражений,

00:00:59.187 --> 00:01:01.293
то нет нужды делать ее глобальной.

00:01:01.293 --> 00:01:02.959
Она будет использоваться локально.

00:01:02.959 --> 00:01:04.498
Она используется лишь в этом методе.

00:01:04.500 --> 00:01:06.320
Именно это и просиходит
с переменной <i>message</i>.

00:01:06.320 --> 00:01:09.240
Это род промежуточного значения,
используемого только в данный момент.

00:01:09.240 --> 00:01:12.640
Итак, <i>message</i> не должна быть
глобальной переменной.

00:01:12.640 --> 00:01:15.810
Откажется ли программа работать
из-за назначения ее глобальной?

00:01:15.810 --> 00:01:20.110
Нет, она будет работать, но допустим,
что я забыла напечатать вот эту строку.

00:01:20.110 --> 00:01:22.350
Я нажимаю кнопку НЕТ.
Что произойдет?

00:01:22.350 --> 00:01:25.770
Во-первых, будет взята
переменная <i>healthLevel</i>

00:01:25.770 --> 00:01:27.180
и из нее вычтется единица.

00:01:27.180 --> 00:01:29.900
Замечу, что вы, должно быть,
размышляете, какого же значение

00:01:29.901 --> 00:01:30.670
<i>healthLevel</i>.

00:01:30.670 --> 00:01:33.200
Мы поговорим об этом в следующем видео.

00:01:33.200 --> 00:01:35.230
Здесь же просто примем,
что она равна нулю.

00:01:35.230 --> 00:01:37.070
Итак, мы берем ноль и отнимаем один.

00:01:37.070 --> 00:01:38.920
<i>healthLevel</i> становится ниже нуля.

00:01:38.920 --> 00:01:41.560
А так как у нас больше нет этой строки,

00:01:41.560 --> 00:01:43.820
мы просто печатаем
какое-либо значение <i>message</i>.

00:01:43.820 --> 00:01:45.280
ЧТо же такое <i>message</i>?

00:01:45.280 --> 00:01:47.530
Когда создается глобальная переменная

00:01:47.530 --> 00:01:52.290
и ей не придается начальное значение,
то она получает значение по умолчанию.

00:01:52.290 --> 00:01:55.760
Для строк начальным значением
по умолчанию будет пустая строка,

00:01:55.760 --> 00:01:58.280
которая, по сути, является строкой,
в которой нет текста.

00:01:58.280 --> 00:02:00.924
Это значит, что пользователь
ничего не увидит,

00:02:00.924 --> 00:02:01.920
нажав НЕТ.

00:02:01.920 --> 00:02:05.180
Это нехорошо, хотя и вполне ожидаемо.

00:02:05.180 --> 00:02:06.780
Дальше положение дел ухудшается,

00:02:06.780 --> 00:02:09.520
допустим, вы вначале нажали кнопку ДА.

00:02:09.520 --> 00:02:12.910
Что произойдет: вы ответили "да",
текущий <i>healthLevel</i> станет единицей

00:02:12.910 --> 00:02:14.620
и это отобразится на экране.

00:02:14.620 --> 00:02:17.700
Предположим, затем вы
нажимаете кнопку НЕТ.

00:02:17.700 --> 00:02:21.530
От <i>healthLevel</i> будет отнята единица,
делая переменную вновь равной нулю.

00:02:21.530 --> 00:02:23.789
Но сообщение не станет другим, так как

00:02:23.790 --> 00:02:25.970
мы договорились, что удалили эту строку.

00:02:25.970 --> 00:02:28.940
Итак, <i>message</i> будет иметь
все то же старое значение отсюда.

00:02:28.940 --> 00:02:32.190
Вы ответили "да",
текущий healthLevel равен 1.

00:02:32.190 --> 00:02:33.770
И снова отобразится то же самое.

00:02:33.770 --> 00:02:37.330
Еще раз, это происходит,
так как <i>healthLevel</i> теперь существует

00:02:37.330 --> 00:02:38.540
среди множества методов.

00:02:38.540 --> 00:02:42.500
То есть какое бы ни было значение ранее,
если мы не поменяем его здесь,

00:02:42.500 --> 00:02:43.890
мы все равно останемся на месте.

00:02:43.890 --> 00:02:46.340
И мы не получим никакую ошибку компиляции.

00:02:46.340 --> 00:02:49.930
Теперь, если бы <i>message</i> была локальной
и мы забыли установить ее значение,

00:02:49.930 --> 00:02:53.140
то программа пожаловалась бы
и не дала нам запутить приложение.

00:02:53.140 --> 00:02:55.800
Но так как мы сделали ее глобальной,
программа не жалуется.

00:02:55.800 --> 00:02:59.010
Она просто выведет то, что получилось
после выполнения предыдущего метода.

00:02:59.010 --> 00:02:59.920
Что будет неверным.

00:02:59.920 --> 00:03:03.170
Подводя итог, <i>message</i> не должна быть
глобаьной переменной.

00:03:03.170 --> 00:03:03.700
Почему?

00:03:03.700 --> 00:03:06.370
Она в действительности не используется
между методами.

00:03:06.370 --> 00:03:09.150
Или она получит значение
из другого раза, когда

00:03:09.150 --> 00:03:11.410
переменная была использована
в другом методе.

00:03:11.410 --> 00:03:14.780
Так как глобальная переменная будет
обладать значением по умолчанию

00:03:14.780 --> 00:03:18.650
или же старым значением, полученным после
использования в одном из других методов.

00:03:18.650 --> 00:03:22.499
Теперь же важно не допустить ошибку и
не забыть установить правильное значение,

00:03:22.500 --> 00:03:24.300
не стоит нам усложнять самим себе работу.

00:03:24.300 --> 00:03:26.399
Окей, это лишь одна из переменных
в нашем примере,

00:03:26.400 --> 00:03:28.153
давайте взглянем на другую,
<i>healthLevel</i>.

