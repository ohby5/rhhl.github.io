WEBVTT
Kind: captions
Language: zh-CN

00:00:00.270 --> 00:00:02.170
要向列表项布局中添加图片

00:00:02.170 --> 00:00:05.850
我将打开 list_item.xml 布局文件

00:00:05.850 --> 00:00:08.460
在这里可以看到它已经有两个 TextView

00:00:08.460 --> 00:00:11.580
一个用于存储米沃克单词 一个用于存储英语翻译

00:00:13.260 --> 00:00:16.250
我们在这里插入一个 ImageView

00:00:16.250 --> 00:00:19.850
我将分配一个视图 ID 叫做图片 因为我们需要

00:00:19.850 --> 00:00:23.270
稍后添加到 Java 代码中 以便对图片来源做出更改

00:00:23.270 --> 00:00:27.560
注意 我们不需要在这个编程任务中这么操作

00:00:27.560 --> 00:00:29.250
但是将在下个任务里执行

00:00:29.250 --> 00:00:33.440
接着将布局宽度和高度设为 wrapped_content

00:00:33.440 --> 00:00:36.220
最后 将 Android 来源属性设为

00:00:36.220 --> 00:00:39.590
使用应用图标作为占位符图片 正如在测试题中提到的一样

00:00:39.590 --> 00:00:44.627
我们使用语法 @mipmap/ic_launcher 来引用该应用图标

00:00:44.627 --> 00:00:49.045
看起来一切正常 我们在设备上运行并测试下应用

00:00:49.045 --> 00:00:51.805
在这个运行的应用中 我们点按 NumbersActivity

00:00:51.805 --> 00:00:55.375
很棒 应用能运行 屏幕上出现了图片

00:00:55.375 --> 00:00:59.335
但是 图标和间隔与我们期望的还有点差距

00:01:00.625 --> 00:01:04.310
在测试题中 可以看出我们希望图片在左侧

00:01:04.310 --> 00:01:05.990
文字在右侧

00:01:05.990 --> 00:01:08.570
所以我们需要对布局做出一些调整

00:01:08.570 --> 00:01:13.330
要修改这个列表项布局 首先可以看出 我们可以用

00:01:13.330 --> 00:01:16.790
水平线性布局来构建这个列表项

00:01:16.790 --> 00:01:19.430
第一个子视图是图片

00:01:19.430 --> 00:01:22.510
第二个子视图是右侧的所有文字

00:01:22.510 --> 00:01:27.590
我们可以用两个子视图来构建这个水平线性布局

00:01:27.590 --> 00:01:31.840
我们还注意到 第二个子视图由两个文本视图构成

00:01:31.840 --> 00:01:33.820
并且垂直堆叠

00:01:33.820 --> 00:01:37.360
所以这个可以用垂直线性布局来创建

00:01:37.360 --> 00:01:40.550
在这里可以看出有一个垂直线性布局

00:01:40.550 --> 00:01:43.040
嵌入水平线性布局中

00:01:43.040 --> 00:01:45.610
这一概念就叫做嵌套视图

00:01:45.610 --> 00:01:49.005
即某些视图包含在其他视图内

00:01:49.005 --> 00:01:53.835
其实我们在上一门课程的第二节课里学过这个概念

00:01:53.835 --> 00:01:57.385
现在回到 Android studio 并对我们的列表项布局做出这些更改

00:01:57.385 --> 00:02:01.142
首先我将修改线性布局 使其从垂直方向变成

00:02:01.142 --> 00:02:02.530
水平方向

00:02:03.890 --> 00:02:07.330
接着将这两个 TextView 封装在

00:02:07.330 --> 00:02:11.930
新的垂直 LinearLayout 内 然后添加结束标记

00:02:11.930 --> 00:02:14.550
注意在这个我刚刚添加的新 LinearLayout 内

00:02:14.550 --> 00:02:16.510
这里添加了一些向左内边距

00:02:16.510 --> 00:02:20.710
即文字和图片之间的间隔是 16 dbs

00:02:20.710 --> 00:02:22.840
现在预览下效果如何

00:02:22.840 --> 00:02:24.840
点击这里的“预览”按钮

00:02:24.840 --> 00:02:28.430
从预览面板里可以看出 布局看起来好多了

00:02:28.430 --> 00:02:32.590
左侧是篮子图标 右侧是两个文本视图

00:02:32.590 --> 00:02:36.040
现在在设备上运行下该应用 看看效果如何

00:02:36.040 --> 00:02:40.250
先关闭预览面板 然后运行应用

00:02:40.250 --> 00:02:43.110
这就是当前版本的应用在设备上的运行效果

00:02:43.110 --> 00:02:45.760
点按 NumbersActivity 一切正常

00:02:45.760 --> 00:02:50.090
看起来和测试题中的屏幕截图是一样的 篮子图标位于左侧

00:02:50.090 --> 00:02:52.288
并且每个列表项都显示了该图标

00:02:52.288 --> 00:02:55.980
虽然和设计模型还不太相似

00:02:55.980 --> 00:02:59.300
但是我们可以在这节课快结束时再处理这些小细节

00:02:59.300 --> 00:03:00.620
例如字体大小 颜色和内边距

