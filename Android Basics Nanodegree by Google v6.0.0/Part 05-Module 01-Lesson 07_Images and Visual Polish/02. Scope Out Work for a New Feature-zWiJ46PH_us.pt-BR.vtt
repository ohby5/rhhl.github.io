WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:02.934
-Jessica, precisamos conversar.
-O que foi?

00:00:02.968 --> 00:00:06.400
Paparicamos muito eles,
isso tem que parar.

00:00:06.434 --> 00:00:09.634
-O quê?
-Estamos na piscininha há muito tempo.

00:00:09.667 --> 00:00:13.100
Damos instruções,
dizemos o que fazer...

00:00:13.133 --> 00:00:16.467
Mas no mundo real,
trabalhando no próprio projeto,

00:00:16.501 --> 00:00:19.534
vão empacar, não vão saber
o que fazer a seguir.

00:00:19.567 --> 00:00:21.734
E podem se afogar
na parte funda.

00:00:21.767 --> 00:00:24.767
-Não quer isso, quer?
-Isso é radical demais.

00:00:24.801 --> 00:00:26.234
Cheguemos a um acordo.

00:00:26.267 --> 00:00:29.300
No próximo recurso
de acrescentar imagens no app

00:00:29.334 --> 00:00:32.667
ajudaremos eles pensando
em estratégias para executar

00:00:32.701 --> 00:00:34.567
e a ordem
na qual executá-las.

00:00:34.601 --> 00:00:36.667
Tudo bem.
Acho que vai dar certo.

00:00:36.701 --> 00:00:39.167
Mas nada de ajuda
depois disso.

00:00:39.200 --> 00:00:42.667
Chegamos a um ponto chave
no trabalho de programadores.

00:00:42.701 --> 00:00:45.267
O app está funcionando
e diz aos usuários

00:00:45.300 --> 00:00:48.033
sobre as traduções Miwok
do inglês.

00:00:48.067 --> 00:00:51.801
Entra um pedido de recurso
para acrescentar imagens ao app.

00:00:51.834 --> 00:00:53.567
Conversamos
com um designer,

00:00:53.601 --> 00:00:56.100
e é assim que queremos
que o app pareça.

00:00:56.133 --> 00:00:59.267
Em uma equipe, é comum
para você, como programador,

00:00:59.300 --> 00:01:02.567
ficar com um único recurso,
como acrescentar imagens.

00:01:02.601 --> 00:01:06.334
Também é comum um programador
ou líder técnico da sua equipe

00:01:06.367 --> 00:01:10.267
perguntar quanto tempo você levará
para construir um recurso.

00:01:10.300 --> 00:01:11.968
Não vou fazer isso,

00:01:12.000 --> 00:01:15.701
mas quero que você estime
o escopo do seu trabalho.

00:01:15.734 --> 00:01:20.100
Num nível alto, que mudanças
no app são necessárias?

00:01:20.133 --> 00:01:24.934
Podem pensar: "Entendo
o que devemos atingir, e por quê.

00:01:24.968 --> 00:01:27.901
Mas não tenho certeza
dos próximos passos.

00:01:27.934 --> 00:01:31.334
E não sei determinar
o escopo do trabalho."

00:01:31.367 --> 00:01:35.801
Isso é perfeitamente normal,
por isso estamos aqui para ajudar.

00:01:35.834 --> 00:01:38.534
Uma coisa que podemos fazer
para planejar

00:01:38.567 --> 00:01:41.133
é ter um mapa mental
da base de código

00:01:41.167 --> 00:01:44.100
e rever como tudo
se integra.

00:01:44.133 --> 00:01:47.868
Devem ter notado que o nosso código
ficou bem complexo.

00:01:47.901 --> 00:01:51.534
Há múltiplos arquivos de layout,
alguns arquivos Java

00:01:51.567 --> 00:01:53.801
e outros recursos também.

00:01:53.834 --> 00:01:57.167
Com um modelo mental,
podemos examinar o nosso código

00:01:57.200 --> 00:02:01.334
e prever e visualizar
as modificações que deveremos fazer

00:02:01.367 --> 00:02:03.834
às diferentes partes
da base de código.

00:02:03.868 --> 00:02:07.834
Dependendo do recurso,
pode afetar vários arquivos.

00:02:07.868 --> 00:02:13.100
Ter um mapa mental ajudará
a prever onde faremos mudanças.

00:02:13.133 --> 00:02:17.200
Vamos rever nosso diagrama mental
da primeira aula.

00:02:17.234 --> 00:02:20.834
Completamos mais recursos
desde então,

00:02:20.868 --> 00:02:24.200
e fizemos
ligeiras modificações.

00:02:24.234 --> 00:02:28.267
Não há regras de como criar
um bom modelo mental,

00:02:28.300 --> 00:02:33.033
desde que você acompanhe
todas as partes importantes do app.

00:02:33.067 --> 00:02:37.000
Como ele está ficando mais complexo,
podemos afastar um pouco.

00:02:37.033 --> 00:02:40.901
Não temos que incluir
todos os detalhes de antes.

00:02:40.934 --> 00:02:45.767
Sabemos que ainda estão lá,
mas não focam nossa atenção.

00:02:45.801 --> 00:02:49.367
Atualmente, este é um modelo
do fluxo do nosso app.

00:02:49.400 --> 00:02:54.067
Tocar em cada categoria
nos leva à atividade correspondente.

00:02:55.901 --> 00:02:58.767
Também vimos
como cada atividade

00:02:58.801 --> 00:03:01.734
obtém e mostra
os dados apropriados.

00:03:01.767 --> 00:03:05.334
Vamos nos concentrar
na NumbersActivity.

00:03:05.367 --> 00:03:09.367
Armazenamos dados em objetos palavra
dentro de uma ArrayList.

00:03:09.400 --> 00:03:13.234
E retomamos e exibimos
essa informação em cada item de lista

00:03:13.267 --> 00:03:17.100
usando a combinação
de ListView e ArrayAdapter.

00:03:17.133 --> 00:03:20.033
No próximo vídeo,
verão os dois diagramas

00:03:20.067 --> 00:03:22.501
de nosso modelo mental
atual do app.

00:03:22.534 --> 00:03:27.234
Para saber o escopo do novo recurso
de acrescentar imagens a cada palavra,

00:03:27.267 --> 00:03:31.267
que mudanças devemos fazer
em cada um dos diagramas?

00:03:31.300 --> 00:03:35.167
Considere que a atividade das frases
não mostrará imagens

00:03:35.200 --> 00:03:38.300
e será um caso especial
tratado depois.

00:03:38.334 --> 00:03:40.701
Ignore essa diferença
por agora.

00:03:40.734 --> 00:03:44.567
Este é um exercício
para ajudar a começar a planejar

00:03:44.601 --> 00:03:46.968
como construir
seu próximo recurso.

00:03:47.000 --> 00:03:50.033
Não há resposta certa
ou errada.

00:03:50.067 --> 00:03:55.667
Quando acabarem, marquem aqui
que esboçaram potenciais soluções.

