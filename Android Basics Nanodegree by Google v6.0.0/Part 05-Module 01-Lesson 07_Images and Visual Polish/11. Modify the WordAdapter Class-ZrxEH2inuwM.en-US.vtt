WEBVTT
Kind: captions
Language: en-US

00:00:00.560 --> 00:00:03.440
Let's revisit the Android flavor
app from the last lesson.

00:00:03.440 --> 00:00:06.320
So if we can understand how the Android
flavor app displays an image

00:00:06.320 --> 00:00:10.350
per list item, then we can do
something similar in our Miwok app.

00:00:10.350 --> 00:00:13.070
Now let's get started by taking
a look at the adapter class,

00:00:13.070 --> 00:00:15.720
which is used to control
how list items appear.

00:00:15.720 --> 00:00:19.270
So to help us out,
I'm going to type T on my keyboard, and

00:00:19.270 --> 00:00:20.930
that triggers the file finder in GitHub.

00:00:20.930 --> 00:00:25.155
I'm going to search up adapter, and it
looks like here, there's a file called

00:00:25.155 --> 00:00:29.320
Android flavor adapter, which sounds
really similar to our word adapter.

00:00:29.320 --> 00:00:33.171
Now, taking a look closer at this file,
it looks like it does also extend from

00:00:33.171 --> 00:00:37.024
the ArrayAdapter class, but here,
instead of holding word objects like our

00:00:37.024 --> 00:00:41.023
word adapter does, the Android flavor
adapter holds Android flavor objects.

00:00:41.023 --> 00:00:44.238
So skimming down the code,
we get to the getView method call, and

00:00:44.238 --> 00:00:47.035
all of this looks similar
to our word adapter class.

00:00:47.035 --> 00:00:50.705
And down here, there's some
code related to the ImageView.

00:00:50.705 --> 00:00:54.171
So here in this first line,
we're searching through the listItemView

00:00:54.171 --> 00:00:56.840
layout to find the view
with the ID list_item_icon.

00:00:56.840 --> 00:01:00.910
When we find that view,
we cast it to an ImageView and

00:01:00.910 --> 00:01:03.580
then store it in a variable called icon.

00:01:03.580 --> 00:01:06.997
After that, we can call
the setImageResource method on that

00:01:06.997 --> 00:01:11.352
ImageView, and into this method, we pass
in an input of the image resource ID

00:01:11.352 --> 00:01:13.230
from the AndroidFlavor object.

00:01:14.690 --> 00:01:18.820
So these two lines of code sets the
right dessert image on the list item.

00:01:18.820 --> 00:01:21.340
Let's take this information and
do something similar in our Miwok app.

00:01:22.590 --> 00:01:24.430
So here we are in the Miwok app.

00:01:24.430 --> 00:01:26.405
Now in the getView method
of our WordAdapter,

00:01:26.405 --> 00:01:28.950
let's find the imageView
in the list item layout.

00:01:30.080 --> 00:01:33.010
Here in this line, I search for
the listItemView layout for

00:01:33.010 --> 00:01:35.220
the view with the ID image.

00:01:35.220 --> 00:01:38.430
Once I find it, I store the view
in a variable called ImageView.

00:01:38.430 --> 00:01:41.900
Now do you remember where we
assigned this view ID image?

00:01:41.900 --> 00:01:43.790
Well, it was back here
in the list item layout.

00:01:45.110 --> 00:01:48.300
So remember that we assigned the view
IDImage to the ImageView here?

00:01:49.500 --> 00:01:51.090
Now let's go back to
the WordAdapter class.

00:01:52.200 --> 00:01:56.180
Once we have the ImageView Java object,
we can call a setImageResource method on

00:01:56.180 --> 00:01:58.126
it, just like we saw in
the Android flavor app.

00:01:59.510 --> 00:02:03.400
Now in that method, we need to pass
the ImageResourceId as its input.

00:02:03.400 --> 00:02:06.648
And luckily, we can get that from the
current word object by simply calling

00:02:06.648 --> 00:02:09.199
the getImageResourceId method.

00:02:09.199 --> 00:02:11.410
Great, so
those were all the changes we needed.

00:02:11.410 --> 00:02:13.400
And let's run the app on our device now.

00:02:13.400 --> 00:02:15.370
So tapping through each activity,

00:02:15.370 --> 00:02:18.660
we can see the proper images
loaded into our list view.

00:02:18.660 --> 00:02:20.350
And it's looking really good.

00:02:20.350 --> 00:02:23.690
And as we expected,
the Phrases activity looks broken.

00:02:23.690 --> 00:02:26.140
So we're going to fix that
in the next exercise.

