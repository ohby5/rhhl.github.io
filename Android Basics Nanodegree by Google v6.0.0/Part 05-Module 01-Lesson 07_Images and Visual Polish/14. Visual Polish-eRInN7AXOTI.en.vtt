WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:03.480
Now, I'm going to walk you through how
to make the appropriate XML layout

00:00:03.480 --> 00:00:06.700
changes, so that our app matches
the red lines from our designer.

00:00:07.710 --> 00:00:09.900
So, let's start with
an easy change first.

00:00:09.900 --> 00:00:12.400
I noticed right away that there's
too much padding in the current

00:00:12.400 --> 00:00:13.860
version of our app.

00:00:13.860 --> 00:00:15.970
So, when I scroll in the app,

00:00:15.970 --> 00:00:19.360
notice that the padding goes all
the way around the whole list.

00:00:19.360 --> 00:00:22.530
Even if I scroll the list,
the padding is still there.

00:00:22.530 --> 00:00:25.680
So that tells me that the padding
is probably in the list view.

00:00:26.780 --> 00:00:31.790
Remember that we declare the list view
XML element in the word list XML file.

00:00:31.790 --> 00:00:35.320
And sure enough, inside I see that
the padding values are set on it.

00:00:35.320 --> 00:00:37.300
So let's remove all
these padding values.

00:00:38.900 --> 00:00:41.400
Also if we go to our
dimensions.XML file,

00:00:41.400 --> 00:00:44.600
my code doesn't revert to these
dimension values anymore.

00:00:44.600 --> 00:00:49.600
The ones for activity_horizontal
main and activity_vertical main.

00:00:49.600 --> 00:00:53.397
So I can delete these two lines
from the values/dimensions.xml file

00:00:53.397 --> 00:00:55.909
where the activity_horizontal_margin and

00:00:55.909 --> 00:00:59.526
the activity_vertical_margin
were initially set to 16 DPs.

00:00:59.526 --> 00:01:02.784
So I'm going to go ahead and leave this
other dimension that's still in this

00:01:02.784 --> 00:01:06.840
file, this one here for list_item_height
because we'll still need that one.

00:01:06.840 --> 00:01:11.130
You also notice that we have one
more dimensions file that's left, so

00:01:11.130 --> 00:01:13.360
this one for w820dp.

00:01:13.360 --> 00:01:16.070
This file is used for
larger screen devices.

00:01:16.070 --> 00:01:18.840
And here inside we have
an even larger value set for

00:01:18.840 --> 00:01:21.330
the activity_horizontal_margin.

00:01:21.330 --> 00:01:25.239
But we don't need this dimension any
more, so we can actually go ahead and

00:01:25.239 --> 00:01:26.636
delete this entire file.

00:01:26.636 --> 00:01:31.680
So I'm going to head over to Project,
navigate to that file, and delete it.

00:01:32.790 --> 00:01:34.970
Now let's see what the app
looks like on our device.

00:01:34.970 --> 00:01:38.190
So tapping to the Numbers activity,
nice.

00:01:38.190 --> 00:01:42.550
So those code changes got rid of the 16
DP border around the whole list.

00:01:42.550 --> 00:01:43.680
Nice job.

00:01:43.680 --> 00:01:45.220
Now let's move on to
the list item layout.

00:01:45.220 --> 00:01:50.990
And if you remember, each list item
should have a minimum height of 88 dps.

00:01:50.990 --> 00:01:53.940
Now that number sounds familiar it's
because we saved it off earlier

00:01:53.940 --> 00:01:55.850
in our dimensions.xml file.

00:01:55.850 --> 00:01:58.230
So we saved it under
the list item height value.

00:01:59.270 --> 00:02:01.460
So I want to copy that for use later.

00:02:01.460 --> 00:02:06.070
That means if we head back to the list
item layout, we refer to it as such.

00:02:06.070 --> 00:02:12.133
So here I'm setting the minimum height
to refer to @dimen/list_item_height.

00:02:12.133 --> 00:02:16.138
Now notice here I prefer to set
the minimum height value to be 88 dps

00:02:16.138 --> 00:02:19.697
instead of fixing the height
to be 88 exactly.

00:02:19.697 --> 00:02:24.477
So this combination of values means
that the linear layout must be 88 dps

00:02:24.477 --> 00:02:25.897
in height at least but

00:02:25.897 --> 00:02:29.197
can be taller if needed depending on
the content inside the list item.

00:02:30.437 --> 00:02:33.967
Now in the design mock of our Numbers
activity, notice that the background of

00:02:33.967 --> 00:02:38.340
each list item Is this ten
color given by this hex value?

00:02:38.340 --> 00:02:41.670
So we actually already use that
color in the main activity screen.

00:02:41.670 --> 00:02:44.127
So we store that color
in the colors.xml file.

00:02:45.580 --> 00:02:48.050
And we have the hex value for
that color that we need here.

00:02:49.230 --> 00:02:52.739
So back on the list item layout,
who referred to that color resource?

00:02:52.739 --> 00:02:56.041
[BLANK_AUDIO]

00:02:56.041 --> 00:03:00.827
So here in the root LinearLayout,
I've set the background of the whole

00:03:00.827 --> 00:03:05.617
linear layout to be this
@color/tan_background color resource and

00:03:05.617 --> 00:03:10.086
we can refer to the color resource
using this @color syntax/name

00:03:10.086 --> 00:03:12.510
of the color resource that we want.

00:03:13.540 --> 00:03:15.450
Now let's look back at our red lines.

00:03:15.450 --> 00:03:19.320
The image should be a square with
both 88 digits for height and width.

00:03:20.320 --> 00:03:23.340
So essentially it should
be as tall as a list item.

00:03:23.340 --> 00:03:26.820
So here in the dimensions XML file,
we store that 88 dips

00:03:26.820 --> 00:03:30.210
in the dimensions resource already so
we can go ahead and refer to that.

00:03:30.210 --> 00:03:33.790
And this means if we ever decide that
the list item should change in height.

00:03:33.790 --> 00:03:35.933
So maybe increase to 96 dps.

00:03:35.933 --> 00:03:38.119
Well we could just change
it in one place and

00:03:38.119 --> 00:03:42.830
all the places that reference this
dimension will automatically be updated.

00:03:42.830 --> 00:03:45.810
So back to my list item
layout inside the image view,

00:03:45.810 --> 00:03:50.700
I'm going to change the width and height
to refer to the dimension resource

00:03:50.700 --> 00:03:55.870
called list_item_height.

00:03:55.870 --> 00:03:56.460
And lastly,

00:03:56.460 --> 00:04:00.510
we can remove this source attribute
that uses the basket placeholder icon.

00:04:00.510 --> 00:04:04.540
Now there we can correctly set the image
dynamically when the app is running,

00:04:04.540 --> 00:04:06.650
there's no need to have
that attribute anymore.

00:04:07.890 --> 00:04:11.030
Now let's see those coaching
does we made work as expected.

00:04:11.030 --> 00:04:16.260
So here's the app running our device and
tapping into the Numbers activity, nice.

00:04:16.260 --> 00:04:20.510
So the image is now a square
with dimensions 88 dp by 88 dp.

00:04:21.630 --> 00:04:24.570
And the background of the image
is this nice tan color, so

00:04:24.570 --> 00:04:26.330
it's looking good so far.

00:04:26.330 --> 00:04:27.830
Now let's move on to the text part.

00:04:27.830 --> 00:04:31.260
So first, we have to set the background
to be the same orange color for

00:04:31.260 --> 00:04:32.350
the text area.

00:04:32.350 --> 00:04:35.450
And this orange color is the same as
the background color that we use for

00:04:35.450 --> 00:04:38.060
the numbers category
in the main activity.

00:04:38.060 --> 00:04:39.640
So remember its hex color,

00:04:39.640 --> 00:04:45.040
FT 8E09 should already be
in our colors.xml file.

00:04:45.040 --> 00:04:50.380
And sure enough, it's defined as the
color resource called category_numbers.

00:04:50.380 --> 00:04:52.230
So back in our list item layout,
let's add that.

00:04:53.600 --> 00:04:57.300
So for the LinearLayout that contains
our two TextViews, we're going to set

00:04:57.300 --> 00:05:02.170
its background color to the category
underscore numbers resource and

00:05:02.170 --> 00:05:06.615
refer to it as @color/category_numbers.

00:05:07.670 --> 00:05:10.780
So by setting the color
on this linear layout,

00:05:10.780 --> 00:05:13.720
will only influence the background
of these text views.

00:05:14.940 --> 00:05:17.667
Now let's go back to the red lines and
see what's left to do.

00:05:17.667 --> 00:05:20.816
So we need to change the font
stylings of these text views,

00:05:20.816 --> 00:05:25.130
they should be of a white font color and
the miwok word should be bold.

00:05:25.130 --> 00:05:28.110
And both should be a font size 18 SP

00:05:28.110 --> 00:05:32.490
which if you remember from the last
course, maps the text appearance medium.

00:05:32.490 --> 00:05:35.850
On the miwok text view also
the text appearance attribute

00:05:35.850 --> 00:05:38.170
to be text appearance medium.

00:05:38.170 --> 00:05:42.250
And so
this gets us the font size of 18 SP.

00:05:42.250 --> 00:05:44.400
Then I'll set the text
color to be white and

00:05:44.400 --> 00:05:47.840
I know that the Android framework
has a predefined color resource.

00:05:47.840 --> 00:05:54.059
So I can use that one by simply
calling @android:color/white.

00:05:54.059 --> 00:05:57.070
And lastly I want to set
the text style to be bold.

00:05:57.070 --> 00:05:58.350
So on or be something similar for

00:05:58.350 --> 00:06:01.700
the text you show in the default or
English translations.

00:06:01.700 --> 00:06:05.590
So I want the text appearance to be
medium and the color to be white but

00:06:05.590 --> 00:06:06.640
I don't want to be bald.

00:06:06.640 --> 00:06:08.470
So I won't copy that line.

00:06:08.470 --> 00:06:12.570
All right let's check it on a device
now so tap into the Numbers activity.

00:06:12.570 --> 00:06:16.390
So the appearance of the text views and
the background looks correct but

00:06:16.390 --> 00:06:19.250
the position of our two text
views doesn't look quite right.

00:06:19.250 --> 00:06:21.890
So right now, they are squished
up into the top left corner

00:06:21.890 --> 00:06:25.290
of the vertical linear layout that
shown here in the orange background.

00:06:25.290 --> 00:06:28.290
So if we take a look back our red lines,
we see that what we need

00:06:28.290 --> 00:06:32.830
is to have our two text views vertically
centered within the list item.

00:06:32.830 --> 00:06:36.670
So to figure that out, let's first
figure out the bounds of each text view

00:06:36.670 --> 00:06:39.440
and to help us out, I'm going to
draw on the show layout bounds

00:06:39.440 --> 00:06:41.520
under the developer's
options in the settings menu.

00:06:41.520 --> 00:06:43.170
So remember how to get there?

00:06:43.170 --> 00:06:46.620
Go back to settings,
scroll down to developer options and

00:06:46.620 --> 00:06:50.710
then a little bit more than halfway
down should be show layout bounds.

00:06:50.710 --> 00:06:52.430
So let's go back to Army walk up.

00:06:52.430 --> 00:06:55.990
Now with the layout bounds showing,
I can see that our two text views

00:06:55.990 --> 00:06:59.030
are squished up into the top edge
of the vertical linear layout.

00:06:59.030 --> 00:07:01.260
Now I need to move them
down a little bit more, so

00:07:01.260 --> 00:07:04.590
they take up more vertical
height in the linear layout.

00:07:04.590 --> 00:07:07.720
Now there are a number of ways to
tweak this layout to make it work and

00:07:07.720 --> 00:07:08.820
here's one way.

00:07:08.820 --> 00:07:10.470
So from the last course,

00:07:10.470 --> 00:07:14.100
we learned that we can assign layout
weights to the children views.

00:07:14.100 --> 00:07:18.340
So they take up more available
space in the parent linear layout.

00:07:18.340 --> 00:07:22.260
Now I can assign the height of each view
to be 0 and give each of them a weight

00:07:22.260 --> 00:07:28.050
of one, so that the vertical space is
divided evenly between both child views.

00:07:28.050 --> 00:07:30.180
In addition,
I can use an attribute called gravity.

00:07:30.180 --> 00:07:33.490
So for the first text view,
I'll set its gravity value to be bottom

00:07:33.490 --> 00:07:36.930
push you position the text content
to be at the bottom of the view.

00:07:36.930 --> 00:07:40.810
And for the second text view,
I'll set its gravity tribute to be top.

00:07:40.810 --> 00:07:44.750
And now position the text view to
be at the top of the text view.

00:07:44.750 --> 00:07:46.658
And back in the code,
this is what it should look like.

00:07:46.658 --> 00:07:51.335
So the miwok_text_view has a width
of match_parent which will fill

00:07:51.335 --> 00:07:53.564
the rest of the list item layout.

00:07:53.564 --> 00:07:56.896
Its height will be zero dps and
its weight will be one,

00:07:56.896 --> 00:08:00.625
the default view also has
a with a match parent.

00:08:00.625 --> 00:08:04.620
Its height is also zero dps and
its weight is also one.

00:08:04.620 --> 00:08:07.813
So this means that the two text views
will split the available height

00:08:07.813 --> 00:08:09.222
in the parent linear layout.

00:08:09.222 --> 00:08:12.909
Then we set the gravity which changes
where the content inside the viewer's

00:08:12.909 --> 00:08:13.490
position.

00:08:13.490 --> 00:08:16.610
But note that it doesn't
change the size of the view.

00:08:16.610 --> 00:08:20.950
Here we've positioned the text inside
the Miwok text view to be at the bottom

00:08:20.950 --> 00:08:23.320
and the text inside the default
text view to be at the top.

00:08:24.930 --> 00:08:27.010
And this is what it looks
like on the device.

00:08:27.010 --> 00:08:28.360
So tapping into Numbers,

00:08:28.360 --> 00:08:32.240
we see that the two text views
are centered within the list item.

00:08:32.240 --> 00:08:34.830
So let's see what it looks like for
the other activities.

00:08:34.830 --> 00:08:36.559
So these are looking good so

00:08:36.559 --> 00:08:40.470
the only thing now that we need to fix
is the background list item color.

00:08:40.470 --> 00:08:44.100
So they're not all using this orange and
instead are using the proper color for

00:08:44.100 --> 00:08:44.750
each category.

