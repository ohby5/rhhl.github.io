WEBVTT
Kind: captions
Language: ar

00:00:00.740 --> 00:00:01.839
الآن، وبعد أن كتبنا الكثير من الأكواد،

00:00:01.839 --> 00:00:06.000
من المؤكد أنكم متشوقون لمشاهدة قائمة الكلمات وهي تبدأ في الظهور على الشاشة.

00:00:06.000 --> 00:00:08.580
حسنًا، إليكم طريقة عمل ذلك يدويًا.

00:00:08.580 --> 00:00:11.430
لقد ذكرنا مرارًا وتكرارًا أن أي في XML الخاص 

00:00:11.430 --> 00:00:15.225
بتطبيقكم، يمكننا فعليًا تنفيذ ذلك 
بإدخال كود الجافا. 

00:00:15.225 --> 00:00:19.415
وبالتالي، يمكنني إنشاء كائن واجهة نصية
لكل عنصر مدرج في القائمة  

00:00:19.415 --> 00:00:22.225
بعد ذلك، يمكنكم إضافة هذا الكائن 
كواجهة فرعية للمخطط الحالي. 

00:00:22.225 --> 00:00:23.155
والآن، دعونا نجرب هذه الطريقة. 

00:00:24.385 --> 00:00:26.895
أولا، علي أن أبدء بفحص المخطط.

00:00:26.895 --> 00:00:28.903
بالنسبة لـ NumbersActivity، 

00:00:28.903 --> 00:00:33.570
نلاحظ أن المخطط معرف قي ملف  activity_numbers XML 

00:00:35.080 --> 00:00:36.684
والآن، سوف افتح الملف، 

00:00:36.684 --> 00:00:40.060
ثم أغير المخطط النسبي
إلى المخطط الخطي. 

00:00:40.060 --> 00:00:44.633
وبالتالي، سوف تظهر كل وجهة فرعية قمت بإضافتها 
الواحدة تلو الأخرى،

00:00:44.633 --> 00:00:45.942
في عمود واحد، 

00:00:45.942 --> 00:00:49.327
بالإضافة إلى ذلك، سوف أضيف خاصية التوجه 
لتصبح القائمة رأسية 

00:00:49.327 --> 00:00:52.825
والآن سوف أقوم بإضافة واجهات فرعية بطريقة ديناميكية بكود الجافا،

00:00:52.825 --> 00:00:56.013
لهذا، ينبغي أن أعطي لهذا المخطط الخطي 
معرف للواجهة،

00:00:56.013 --> 00:00:58.590
حتى يمكنني الإشارة إليها 
لاحقًا في كود الجافا

00:01:00.250 --> 00:01:02.020
وسوف اسمي هذا المعرف rootView.   

00:01:03.100 --> 00:01:04.485
والآن لنعود مرة أخرى إلى 
NumbersActivity

00:01:06.538 --> 00:01:10.770
حسنًا، سوف أضيف سطور 
برمجبة لإظهار قائمة الكلمات 

00:01:10.770 --> 00:01:12.320
في نهاية دالة onCreate 

00:01:12.320 --> 00:01:15.810
وسوف أقوم بذلك بعد إنشاء
 ArrayList 

00:01:15.810 --> 00:01:19.400
يمكنني المواصلة 
بعد إلغاء رسائل التسجيل.

00:01:19.400 --> 00:01:22.700
ونظرًا لأنني أعرف بالفعل أن قائمتي 
قد أُعدت بشكل صحيح

00:01:22.700 --> 00:01:25.680
لذا، فسوف أغلق لوحة المشروع
الموجودة إلى جانب الشاشة

00:01:25.680 --> 00:01:26.850
حتى يمكننا رؤية الكود بشكل أوضح. 

00:01:27.850 --> 00:01:30.650
ما ينبغي أن أفعله في كود الجافا أولا، 
أن 

00:01:30.650 --> 00:01:34.670
أجد المخطط الخطي الذي سميته rootView
وأن أخزنه في أحد المتغيرات.    

00:01:35.810 --> 00:01:40.370
بعد ذلك، يمكنني البدء في إنشاء وإضافة 
الواجهات النصبة إلى المخطط الخطي. 

00:01:40.370 --> 00:01:45.010
لتنفيذ ذلك، علي أن أبدء باستخدام 
دالة findViewById 

00:01:45.010 --> 00:01:47.285
حتى يمكنني الوصول إلى الواجهة ذات 
معرف rootView

00:01:48.550 --> 00:01:50.190
 وسوف يؤدي ذلك إلى عودة إحدى الواجهات لي.

00:01:51.430 --> 00:01:55.420
ولكن ينبغي أن أنظم هذه الواجهة تحديدًا 
في نوع بيانات المخطط الخطي،  

00:01:55.420 --> 00:01:57.999
عندها، سوف أتمكن من إضافة 
 وجهات فرعية إلى المخطط. 

00:01:59.080 --> 00:02:03.290
والآن، سوف أقوم بتخزين هذه الواجهة في متغير 
rootView حتى يمكنني استخدامها لاحقًا.  

00:02:04.410 --> 00:02:06.404
وتذكر أن تنهي المخطط بفاصلة منقوطة.  

00:02:06.404 --> 00:02:08.014
[BLANK_AUDIO]

00:02:08.014 --> 00:02:08.850
 حسنًا،

00:02:08.850 --> 00:02:13.364
لقد تذكرت أن هذا السطر البرمجي ساعدني على الوصول إلى 
المخطط الخطي المسمى rootView.

00:02:13.364 --> 00:02:16.380
وسوف أقوم بتخزينه في المتغير 
المسمى rootView.

00:02:16.380 --> 00:02:17.217
وتذكر بعد ذلك، 

00:02:17.217 --> 00:02:20.230
إنني بحاجة إلى إنشاء وإضافة واجهات نصية 
إلى هذا المخطط الخطي الذي أنشئناه للتو.  

00:02:21.720 --> 00:02:23.650
لذا، ابدأ في إنشاء كائن الواجهة النصية.

00:02:24.858 --> 00:02:26.930
لذا، سوف أتوجه لهذه الدالة الإنشائية.

00:02:26.930 --> 00:02:28.770
 وهو ما يحتاج إلى سياق حيث أنها مجرد مدخلات. 

00:02:29.850 --> 00:02:33.170
تذكر أن تساعدنا على محاولة فهم الدالة الإنشائية 
المطلوب استخدامها.

00:02:33.170 --> 00:02:35.170
يمكننا دائمًا الرجوع
 إلى مستندات التوثئيق للتحقق.

00:02:35.170 --> 00:02:37.720
إليكم مستندات التوثئيق الخاصة بفئة الواجهة النصية. 

00:02:37.720 --> 00:02:40.320
وسوف أقوم بالتمرير للأسفل
إلى القسم الخاص بالدوال الإنشائية العامة. 

00:02:41.670 --> 00:02:44.822
هناك بعض الدوال الإنشائية المحتملة 
التي يمكننا

00:02:44.822 --> 00:02:45.405
استخدامها. 

00:02:45.405 --> 00:02:49.224
ولكل منها عدد مختلف من المدخلات. 

00:02:49.224 --> 00:02:51.963
سوف أبدأ باستخدام الدالة الأولى، 

00:02:51.963 --> 00:02:54.880
التي تشمل سياق مدخلات واحد. 

00:02:54.880 --> 00:02:57.010
لكي تقوم بإنشاء واجهة بكود الجافا، 

00:02:57.010 --> 00:03:00.770
عليك تمرير السياق، حتى تتعرف الواجهة على الموضوع و 

00:03:00.770 --> 00:03:04.130
ومعلومات أخرى عن التطبيق
الذي يظهر فيه. 

00:03:04.130 --> 00:03:06.710
وبالتالي، تعطي التطبيق سياقًا
عما يدور حوله.    

00:03:08.140 --> 00:03:13.974
والآن في هذه الحالة، نجد أن (هذا) قد مُرر
باعتباره مدخل هذه الدالة الإنشائية.    

00:03:13.974 --> 00:03:17.210
ونظرًا لأن هذه الفئة هي فئة
NumbersActivity 

00:03:17.210 --> 00:03:19.130
تعتبر هذه الفئة أيضًا أحد السياقات. 

00:03:20.820 --> 00:03:24.660
حسنًا، لقد ساعدني هذا السطر البرمجي 
على إنشاء كائن الواجهة النصية،   

00:03:24.660 --> 00:03:29.640
المخزنة في متغير أطلقنا عليه WordView،
من نوع بيانات الواجهة النصية.  

00:03:30.780 --> 00:03:33.550
لتغيير النص الذي يظهر على الشاشة، 

00:03:33.550 --> 00:03:37.320
اسمي دالة setText على 
كائن دالة wordView.

00:03:37.320 --> 00:03:40.820
بعدها، أقوم بتمرير مدخل واحد
وهو النص المرغوب فيه.

00:03:40.820 --> 00:03:43.390
في هذه الحالة، أريد أن أجعل دالة TextView
تظهر سلسلة الحروف 

00:03:43.390 --> 00:03:46.190
المخزنة في قائمة الكلمات في المؤشر الصفري. 

00:03:47.480 --> 00:03:51.050
وبالتالي
يمكن أن يساعدنا ذلك على الانتقال إلى كلمة واحد. 

00:03:51.050 --> 00:03:54.122
والآن وبعد أن أصبح لدينا كائن wordView
وبداخله النص الصحيح. 

00:03:54.122 --> 00:03:59.020
سأضيف الواجهة باعتبارها واجهة فرعية
إلى الواجهة الأصل المسماة rootView 

00:04:00.210 --> 00:04:02.460
وبالتالي، تعتبر هذه هي واجهتنا الفرعية، wordView 

00:04:02.460 --> 00:04:06.840
والواجهة الأصل هي rootView. 

00:04:06.840 --> 00:04:10.241
لذلك، أقوم بإضافة الواجهة الفرعية، wordView.

00:04:10.241 --> 00:04:14.970
باستخدام دالة addView
إلى الواجهة الأصل، rootView.

00:04:17.130 --> 00:04:20.420
حسنًا، دعونا نشغل هذا الكود 
على تطبيقنا، ونرى ما سوف يحدث.

00:04:20.420 --> 00:04:24.850
الأمر يسير على ما يرام، إننا 
نتوجه نحو NumbersActivity

00:04:24.850 --> 00:04:26.620
عندها تظهر أمامنا كلمة واحد 

00:04:26.620 --> 00:04:30.560
المدرجة من العنصر الصفري
 الموجود في قائمة مصفوفة الكلمات.

00:04:30.560 --> 00:04:35.020
يُنشئ ما فعلناه هنا بطريقة ديناميكية
واجهة نصية مكتوبة بكود الجافا،   

00:04:35.020 --> 00:04:38.330
بناء على العنصر الأول الموجود 
في قائمة المصفوفة.

00:04:38.330 --> 00:04:38.920
وعند الوصول لهذه النقطة، 

00:04:38.920 --> 00:04:41.920
تبدأ على الأرجح في التفكير
في جميع الاحتمالات. 

00:04:41.920 --> 00:04:46.360
حسنًا، ماذ يحدث إذا كررنا نفس الكود
مع جميع العناصر المتبقية في القائمة؟   

00:04:46.360 --> 00:04:48.300
سوف نتمكن من عرض قائمة
بالكلمات على الشاشة. 

00:04:50.240 --> 00:04:52.678
لذا، دعونا نجرب ذلك
مع واجهتين أخرتين.  

00:04:52.678 --> 00:04:55.040
سأقوم بنسخ 
سطور البرمجة الثلاثة تلك. 

00:04:55.040 --> 00:04:58.300
التي ساعدتنا على إنشاء دالة الواجهة النصية
للكلمة "واحد" 

00:04:58.300 --> 00:05:02.315
الصق الأسطر التي نسختها بالأسفل، ثم أجري التعديلات المطلوبة، 
لمساعدتنا على إنشاء واجهة نصية 

00:05:02.315 --> 00:05:03.340
للكلمة (اثنين) 

00:05:03.340 --> 00:05:05.600
يبدو أن خطأ ما قد وقع هنا. 

00:05:05.600 --> 00:05:09.670
تظهر رسالة "المتغير wordView معرفة فعليًا في النطاق"

00:05:09.670 --> 00:05:13.490
يعني ذلك، أنه بإمكانك تعريف المتغير مرة واحدة
بنفس الاسم 

00:05:13.490 --> 00:05:14.560
وفي إطار نفس النطاق. 

00:05:15.600 --> 00:05:19.220
ونقصد بالنطاق هنا الوظيفة. 

00:05:19.220 --> 00:05:22.580
للمساعدة في ذلك، سوف 
أضع اسم مختلف واسميه wordView2.  

00:05:23.590 --> 00:05:26.680
بعد ذلك، علي تحديث الكود التالي لتوضيح ذلك.  

00:05:26.680 --> 00:05:30.385
عظيم، الآن وبعد أن أصبح لدينا مجموعة من الأكواد البرمجية
التي تنشئ واجهة نصية أخرى،  

00:05:30.385 --> 00:05:35.015
اسمها wordView2، وبعد إضافة هذه الواجهة النصبة
إلى الواجهة الأصل rootView، 

00:05:36.420 --> 00:05:37.230
لكن، انتظر لحظة، 

00:05:37.230 --> 00:05:42.380
إنني أريد أن تظهر الواجهة النضية الثانية
الكلمة التالية عند المؤشر الأول. 

00:05:42.380 --> 00:05:46.405
إذا، بدلا من الكلمات تحصل على (0)
فعلي أن أغيره إلى 

00:05:46.405 --> 00:05:51.565
كلمات. لتظهر (1) وتحصل على سلسلة الحروف الموجودة
في المؤشر رقم 1 في القائمة.

00:05:52.725 --> 00:05:54.882
الآن، دعونا ننسخ ونلصق هذا الجزء، و

00:05:54.882 --> 00:05:57.830
نجري بعض التعديلات لإظهار الكلمة الثالثة في القائمة.

00:05:57.830 --> 00:05:59.230
[BLANK_AUDIO]

00:05:59.230 --> 00:06:01.735
حسنًا، دعونا نختبر ما أجريناه
لنرى ماذ حدث.

00:06:01.735 --> 00:06:06.305
عندما نشغل التطبيق على جهازنا
ونضغط على الأرقام، 

00:06:06.305 --> 00:06:10.110
 في NumbersActivity،
نضع قائمة، واحد، اثنان، 

00:06:10.110 --> 00:06:13.270
وثلاثة، وهي العناصر الثلاثة الأولى في قائمة المصفوفة.   

00:06:14.410 --> 00:06:18.010
والآن، يمكننا مواصلة طريقة النسخ واللصق هذه 

00:06:18.010 --> 00:06:22.938
وتعديل النص الخاص بك وبالمؤشرات. 

00:06:22.938 --> 00:06:25.410
ولكن الأمر سيصبح مملا، 

00:06:25.410 --> 00:06:28.150
كما ينبغي أن نصمم هذه الواجهات النصية
لتبدو أفضل. 

00:06:28.150 --> 00:06:30.405
حتى الآن هذه الواجهة مجرد نص عادي.  

00:06:30.405 --> 00:06:33.690
ربما كان بإمكاننا فعل كل ذلك بلغة XML  
ونسخ 

00:06:33.690 --> 00:06:36.970
ولصق عنصر XML مرارًا وتكرارًا. 

00:06:36.970 --> 00:06:38.970
حسنًا، انتظر لحظة.

00:06:38.970 --> 00:06:41.850
عند كتابة كود الجافا، 
فإننا نبدأ في مشاهدة نمط. 

00:06:43.020 --> 00:06:47.150
لذا، لاحظ أن كل مجموعة من الأكواد البرمجية الخاصة
بكل واجهة نصية، متشابهة فعليًا.  

00:06:48.400 --> 00:06:52.034
ويظل الاختلاف الرئيسي في موضع المؤشر 
الذي يتغير من 

00:06:52.034 --> 00:06:53.025
مجموعة إلى أخرى. 

00:06:53.025 --> 00:06:58.002
  لاحظ أننا نزيد المؤشر تدريجيًا من صفر،

00:06:58.002 --> 00:07:00.800
1، 2، وهكذا. 

00:07:00.800 --> 00:07:03.030
لذلك، قمت بإعادة كتابة الكود
على أساس النمط الذي شاهدناه.

00:07:04.060 --> 00:07:07.696
ماذا يحدث إذا استبدلنا متغير الطاقة
 الذي يتتبع موضع المؤشر الحالي

00:07:07.696 --> 00:07:10.790
في القائمة و
 حدثناه برقم 1 كل مرة؟

00:07:11.910 --> 00:07:15.940
لاحظ أن مجموعات الأكواد تلك تبدو متشابهة للغاية، لذلك 

00:07:15.940 --> 00:07:20.970
فكلها تتضمن الكلمة "get"، ويتغير المؤشر باعتباره المدخل. 

00:07:20.970 --> 00:07:24.510
ويظهر لنا الآن كود إضافي
يزيد قيمة المؤشر بواحد.  

00:07:24.510 --> 00:07:27.390
والآن، سوف أعرفكم بمفهوم جديد هائل من مفاهيم البرمجة 

00:07:27.390 --> 00:07:28.690
يسمى الحلقات. 

00:07:28.690 --> 00:07:31.950
وبعد أن تتعلموا مفهوم الحلقات،
سوف أطلب منكم تثبيت هذا الكود، 

00:07:31.950 --> 00:07:35.730
حتى تتمكنوا من إظهار جميع هذه الكلمات 
على الشاشة دون نسخ

00:07:35.730 --> 00:07:39.260
ولصق مجموعة الأكواد مرارًا وتكرارًا لعشرة مرات. 

