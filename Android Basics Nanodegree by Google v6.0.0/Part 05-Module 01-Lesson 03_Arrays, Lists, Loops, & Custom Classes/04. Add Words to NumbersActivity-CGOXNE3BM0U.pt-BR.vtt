WEBVTT
Kind: captions
Language: pt-BR

00:00:00.501 --> 00:00:03.467
Certo, provavelmente já demos
a resposta com base em outros vídeos,

00:00:03.501 --> 00:00:07.000
mas precisamos criar um array string
para armazenar a lista de palavras em inglês

00:00:07.033 --> 00:00:08.501
para os números de 1 a 10.

00:00:08.534 --> 00:00:10.667
Um array é ideal
para esta situação,

00:00:10.701 --> 00:00:14.501
porque há grupos relacionados
de palavras que precisam ficar juntas.

00:00:14.534 --> 00:00:16.934
Também queremos manter
a ordem das palavras.

00:00:16.968 --> 00:00:22.067
Então nos certificamos de que a ordem
vai ser 1, 2, 3, e por aí vai.

00:00:22.100 --> 00:00:25.300
E seria estranho se as palavras
aparecessem fora de ordem.

00:00:25.334 --> 00:00:29.834
Já que temos 10 palavras, vamos iniciar
o array para ter tamanho 10,

00:00:29.868 --> 00:00:31.267
então teremos 10 espaços.

00:00:31.300 --> 00:00:34.300
Também damos à variável array
um nome, palavras.

00:00:34.334 --> 00:00:38.033
Sobre o tipo de dados desta variável,
precisa ser um array de strings,

00:00:38.067 --> 00:00:40.601
porque queremos armazenar texto
em cada elemento do array

00:00:40.634 --> 00:00:43.701
e se cada palavra tivesse um caractere,
poderíamos usar char

00:00:43.734 --> 00:00:46.067
e criado um array char.

00:00:46.100 --> 00:00:48.667
Lembre-se, char é outro
tipo de dado primitivo,

00:00:48.701 --> 00:00:52.667
mas estas palavras são mais longas,
então usamos um array de string.

00:00:52.701 --> 00:00:56.000
Vamos adicionar código na atividade Números
para criar um novo array de palavras.

00:00:57.100 --> 00:01:02.000
Para criar a variável array, vamos começar
com um S maiúsculo para String.

00:01:02.033 --> 00:01:05.067
Lembre-se, isso é porque string
é um tipo de objeto de dado,

00:01:05.100 --> 00:01:06.934
não um tipo de dado primitivo.

00:01:06.968 --> 00:01:07.934
Em seguida,

00:01:07.968 --> 00:01:11.601
precisaremos colocar colchetes
para indicar que é um array de string.

00:01:11.634 --> 00:01:16.767
Daremos à variável o nome palavras,
depois escreverei o sinal de igual,

00:01:16.801 --> 00:01:21.501
seguido por "new", espaço, String
com o valor 10 dentro dos colchetes.

00:01:21.534 --> 00:01:25.834
Então 10 indica
o tamanho do array.

00:01:25.868 --> 00:01:29.267
Lembre-se que sempre terminamos
nossas declarações com ponto e vírgula.

00:01:29.300 --> 00:01:33.634
Depois de criarmos um array de string vazio,
podemos começar a atribuir valores

00:01:33.667 --> 00:01:36.634
a cada posição, especificando
o valor em cada índice.

00:01:37.934 --> 00:01:42.467
Então, por exemplo, no índice 0,
atribuo o valor 1.

00:01:43.734 --> 00:01:46.667
Lembre-se, este valor aqui
é uma string de texto.

00:01:47.868 --> 00:01:51.501
Então farei isso para cada índice
até alcançarmos a string de texto 10.

00:01:53.334 --> 00:01:56.467
Aqui está a solução completa
que veremos

00:01:56.501 --> 00:02:00.400
quando tivermos adicionado as 10 palavras
em nosso app e as armazenado no array string.

00:02:00.434 --> 00:02:04.934
Sei que pode parecer meio estranho,
porque temos o valor 1

00:02:04.968 --> 00:02:10.100
no índice 0 e nosso valor final 10
no índice 9,

00:02:10.133 --> 00:02:12.133
mas está certo,

00:02:12.167 --> 00:02:16.200
e se acostumará a arrays começando
no índice 0 ao usá-lo mais.

00:02:17.601 --> 00:02:20.400
Então bom trabalho, agora temos
um array de palavras em nosso app.

