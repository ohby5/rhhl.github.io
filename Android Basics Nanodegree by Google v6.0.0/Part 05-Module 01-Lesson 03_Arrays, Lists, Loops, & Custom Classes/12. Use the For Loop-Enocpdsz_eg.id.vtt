WEBVTT
Kind: captions
Language: id

00:00:00.500 --> 00:00:02.640
Kerja yang bagus dengan
while loop, dan

00:00:02.640 --> 00:00:05.000
seperti Anda lihat, kehidupan
jadi lebih terasa mudah.

00:00:05.000 --> 00:00:08.109
Kita tidak harus menulis ulang baris
kode yang sama berulang kali.

00:00:08.109 --> 00:00:11.640
Tapi biar saya memberitahu anda sesuatu,
ada kabar yang lebih bagus lagi.

00:00:11.640 --> 00:00:15.170
Karena, saya akan memperlihatkan kepada
Anda tipe loop lain di Java, yaitu for loop.

00:00:15.170 --> 00:00:18.380
Kita dapat memakainya untuk menulis ulang
while loop menjadi lebih pendek dan singkat.

00:00:19.480 --> 00:00:21.870
Ini adalah struktur umum dari
while loop dan

00:00:21.870 --> 00:00:25.650
for loop, untuk membantu kita memahami
kemiripan dan perbedaannya.

00:00:25.650 --> 00:00:26.520
Perhatikan bahwa for loop

00:00:26.520 --> 00:00:30.110
memadatkan beberapa bagian while loop
hingga menjadi satu baris.

00:00:30.110 --> 00:00:33.290
Di for loop, kita mulai pengaturan awal
variabel counter,

00:00:33.290 --> 00:00:36.090
kondisi tes yang menentukan kapan
kita keluar dari loop dan

00:00:36.090 --> 00:00:37.910
kemudian tempat untuk memperbarui
variabel counter.

00:00:37.910 --> 00:00:41.020
Kita cenderung menggunakan while loop
saat kita ingin mengulangi tugas

00:00:41.020 --> 00:00:44.100
hingga sesuatu terjadi, dan
kondisi tidak lagi benar.

00:00:44.100 --> 00:00:47.370
While loop dapat memiliki jumlah
pengulangan tak berhingga.

00:00:47.370 --> 00:00:50.320
Contoh nyata untuk while
loop adalah terus membuka

00:00:50.320 --> 00:00:54.170
semua file di folder tertentu sementara
masih ada file lain yang terbuka.

00:00:54.170 --> 00:00:57.080
Kita tidak peduli ada berapa banyak
file di dalam folder tersebut,

00:00:57.080 --> 00:00:59.810
kita terus saja melakukannya
selama ada file di sana.

00:00:59.810 --> 00:01:00.860
Kita cenderung menggunakan for loop

00:01:00.860 --> 00:01:05.200
saat kita ingin mengulangi suatu
tugas untuk jumlah pengulangan tertentu.

00:01:05.200 --> 00:01:09.940
Contoh for loop adalah membuka
kelima folder pertama dalam folder.

00:01:09.940 --> 00:01:12.950
Walaupun ada folder lain yang
tersisa di folder itu,

00:01:12.950 --> 00:01:15.820
kita hanya ingin melakukannya
empat atau lima kali.

00:01:15.820 --> 00:01:18.940
Ini adalah contoh kode
kedua tipe loop ini.

00:01:18.940 --> 00:01:22.140
Anda telah akrab dengan kode di
sisi kiri ini, yaitu while loop.

00:01:22.140 --> 00:01:24.970
Tapi ini kali pertama Anda
melihat for loop.

00:01:24.970 --> 00:01:29.030
Kedua blok kode ini melakukan hal
yang sama; keduanya mencetak statemen

00:01:29.030 --> 00:01:30.970
log untuk tiap elemen di list kata.

00:01:30.970 --> 00:01:34.350
Kita lihat lebih dekat pada
kedua tipe loop ini dan

00:01:34.350 --> 00:01:37.150
saya akan menekankan bagian ini, yang
telah Anda ketahui di while loop dan

00:01:37.150 --> 00:01:39.260
menunjukkan di mana letaknya
dalam for loop.

00:01:39.260 --> 00:01:42.330
Sebelum di while loop, kita mengatur
variabel index menjadi 0.

00:01:42.330 --> 00:01:46.330
Di for loop, kita juga bisa mengatur
variabel counter dan

00:01:46.330 --> 00:01:48.378
kita atur menjadi 0 juga di sini.

00:01:48.378 --> 00:01:51.550
Dan di for loop, pengaturan
dilakukan di bagian pertama

00:01:51.550 --> 00:01:55.580
di antara dua tanda kurung ini,
sebelum titik koma pertama.

00:01:55.580 --> 00:01:59.260
di for loop ini, statemen
inisialisasi dipanggil dan

00:01:59.260 --> 00:02:03.030
ini hanya akan dieksekusi sekali
sebelum loop dimulai.

00:02:03.030 --> 00:02:04.430
Lalu di while loop,

00:02:04.430 --> 00:02:07.990
ada kondisi tes yang juga
ada di dalam tanda kurung.

00:02:07.990 --> 00:02:11.480
Loop akan terus berjalan hingga
kondisi ini menjadi salah.

00:02:11.480 --> 00:02:12.420
Dalam hal ini,

00:02:12.420 --> 00:02:16.370
saat variabel index tidak lagi kurang
dari panjang list kata.

00:02:16.370 --> 00:02:17.920
Demikian juga, for

00:02:17.920 --> 00:02:21.970
loop, dengan kondisi tes mengikuti
statemen inisialisasi, dan

00:02:21.970 --> 00:02:25.400
dipisahkan dengan titik koma sebelum
dan setelahnya.

00:02:25.400 --> 00:02:26.750
Badan di dalam for

00:02:26.750 --> 00:02:31.530
loop akan terus dieksekusi hingga
kondisi tes ini salah.

00:02:31.530 --> 00:02:34.720
Di akhir while loop,
ada statemen update ini,

00:02:34.720 --> 00:02:36.760
untuk memperbarui variabel index dengan satu.

00:02:36.760 --> 00:02:40.170
Ini membantu kita memastikan bahwa
kondisi ini pada akhirnya akan menjadi salah.

00:02:40.170 --> 00:02:41.370
Demikian juga, dalam for

00:02:41.370 --> 00:02:45.270
loop, kita bisa menulis statemen yang telah diperbaharui
tepat setelah kondisi tes.

00:02:45.270 --> 00:02:47.800
Maka, ini menjadi
deklarasi kedua.

00:02:47.800 --> 00:02:50.800
statemen yang telah diperbaharui ini
akan dieksekusi

00:02:50.800 --> 00:02:53.140
setelah tiap pengulangan loop.

00:02:53.140 --> 00:02:56.160
Artinya, kita mengeksekusi semua
kode di dalam blok ini.

00:02:56.160 --> 00:02:57.800
Lalu menjalankan statemen update.

00:02:57.800 --> 00:02:59.440
Lalu kita periksa kondisi tes.

00:02:59.440 --> 00:03:03.120
Dan jika benar, kita harus melakukan
loop lagi dan kemudian

00:03:03.120 --> 00:03:06.530
memeriksa statemen update dan
memeriksa kondisi tes lagi.

00:03:06.530 --> 00:03:08.550
Beginilah cara kerja loop.

00:03:08.550 --> 00:03:10.180
Kita masuk ke for loop.

00:03:10.180 --> 00:03:13.950
Kita atur variabel counter dan
ingat kita hanya bisa melakukan ini sekali.

00:03:13.950 --> 00:03:18.170
Lalu, kita memeriksa kondisi dan jika
benar, maka kita masuk ke

00:03:18.170 --> 00:03:21.270
badan for loop dan kita mengeksekusi
kode apa saja yang ada di dalam sini.

00:03:21.270 --> 00:03:24.300
Setelah itu, kita keluar sini dan
memperbarui variabel counter.

00:03:24.300 --> 00:03:28.240
Setelah itu, kita memeriksa kondisi tes,
dan jika benar, kita masuk ke badan

00:03:28.240 --> 00:03:29.730
dan mengeksekusi instruksi ini.

00:03:29.730 --> 00:03:32.250
Naik ke sini,
memperbarui variabel counter.

00:03:32.250 --> 00:03:33.480
Kembali ke kondisi.

00:03:33.480 --> 00:03:36.070
Memeriksa apakah benar, dan
jika benar maka menyelesaikan ini lagi.

00:03:36.070 --> 00:03:37.420
Lalu kembali ke atas sini.

00:03:37.420 --> 00:03:39.270
Dan memperbarui variabel counter lagi.

00:03:39.270 --> 00:03:41.910
Setelah itu, saat kita kembali ke
kondisi tes,

00:03:41.910 --> 00:03:45.350
jika salah, maka kita
keluar dari loop.

00:03:45.350 --> 00:03:47.820
Ingatlah bahwa index plus plus
ini adalah singkatan untuk

00:03:47.820 --> 00:03:49.920
index sama dengan index plus satu.

00:03:49.920 --> 00:03:52.800
Ini menambahkan nilai
index dengan satu.

00:03:52.800 --> 00:03:54.950
Sebagai ringkasan, sintaksis untuk for

00:03:54.950 --> 00:04:00.400
loop mengombinasikan tiga bagian loop
menjadi satu baris di antara tanda kurung ini.

00:04:00.400 --> 00:04:02.265
Tiap bagian dipisahkan oleh
titik koma.

00:04:02.265 --> 00:04:05.420
Bagian pertama adalah
statemen inisialisasi,

00:04:05.420 --> 00:04:08.550
yang hanya dieksekusi sekali
sebelum loop dimulai.

00:04:08.550 --> 00:04:10.660
Bagian kedua adalah kondisi tes,

00:04:10.660 --> 00:04:13.080
yang diperiksa sebelum kita
melakukan pengulangan loop.

00:04:13.080 --> 00:04:15.280
Dan bagian ketiga adalah statemen
update,

00:04:15.280 --> 00:04:18.630
yang dieksekusi di akhir tiap
pengulangan loop.

00:04:18.630 --> 00:04:21.880
Sekarang, karena Anda telah melihat
for loop, cobalah berlatih menulis

00:04:21.880 --> 00:04:23.050
for loop di aplikasi Miwok.

00:04:23.050 --> 00:04:27.500
Dalam latihan ini, saya ingin Anda
mengganti while loop dengan for

00:04:27.500 --> 00:04:30.670
loop, yang akan memungkinkan kode
Anda untuk menjadi lebih ringkas.

00:04:30.670 --> 00:04:33.470
Loop harus memiliki perilaku sama
dan itu berarti

00:04:33.470 --> 00:04:36.900
Anda harus menambahkan TextView baru
ke tata letak untuk tiap elemen dalam list kata

00:04:36.900 --> 00:04:39.030
Output-nya harus
tampak sama juga.

00:04:39.030 --> 00:04:41.560
Ini adalah screenshot
NumbersActivity.

00:04:41.560 --> 00:04:44.550
Sebagai petunjuk, saya telah
menyertakan contoh for

00:04:44.550 --> 00:04:46.100
loop dalam teks di bawah.

00:04:46.100 --> 00:04:48.240
Lanjutkan dan centang kotak
ini setelah Anda selesai.

