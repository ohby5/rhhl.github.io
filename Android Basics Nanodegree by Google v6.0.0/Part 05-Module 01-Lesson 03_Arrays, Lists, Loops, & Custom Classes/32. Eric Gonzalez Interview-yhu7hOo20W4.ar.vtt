WEBVTT
Kind: captions
Language: ar

00:00:00.328 --> 00:00:05.570
لذلك نحن نستخدم المصفوفات في التطبيق يوداسيتي، على
سبيل المثال للتسجيل في دورة تدريبية أليس كذلك؟

00:00:05.570 --> 00:00:09.688
من الناحية المثالية، سيكون لديك أكثر من دورة تدريبية
تتناولها، أو

00:00:09.688 --> 00:00:13.809
قد تكون مسجلا في درجة مصغرة، أو مجموعة من الدرجات
المصغرة، وهكذا

00:00:13.809 --> 00:00:17.200
يتم تخزين كل هذه كمصفوفات عندما تقدم

00:00:17.200 --> 00:00:19.140
ولذلك، يمكنني القول أنك في 101 CS،

00:00:19.140 --> 00:00:22.240
وعلي سبيل المثال أنك في دورة أندرويد

00:00:22.240 --> 00:00:25.580
وكلاهما سيظهر كمصفوفة قمت بتحليلها.

00:00:25.580 --> 00:00:28.700
وتكون المصفوفات مفيدة فقط عندما يكون لديك، قائمة من
العناصر.

00:00:28.700 --> 00:00:29.890
على سبيل المثال

00:00:29.890 --> 00:00:33.389
قائمة بالبنود تترجم جيدا لتشبه طريقة عرض قائمة أو
أي شيء آخر.

00:00:34.450 --> 00:00:38.920
عموما يتم تخزين تلك في نوع ما من بنية بيانات
المصفوفات

00:00:38.920 --> 00:00:40.760
لذا أنا لا أستخدم المصفوفات البدائية

00:00:40.760 --> 00:00:45.850
ولكنني سوف أستخدم قائمة المصفوفة علي سبيل المثال
لأنني لا أعرف

00:00:45.850 --> 00:00:50.150
الحجم الدقيق للكثير من الردود التي أتلقاها من
الملقم

00:00:50.150 --> 00:00:52.875
هناك حالة تخص الطلاب المسجلون في دورة تدريبية واحدة
ولكنهم

00:00:52.875 --> 00:00:54.503
قد يكونوا مسجلين أيضا في مائة

00:00:54.503 --> 00:00:58.569
لذلك أريد استيعاب كلا الحالتين باستخدام قائمة الصف
التي تسمح لها

00:00:58.569 --> 00:01:01.824
بالزيادة والتقليص استنادًا إلى استجابة الملقم.

00:01:01.824 --> 00:01:03.577
لذا، هناك عدة قوائم نستخدمها.

00:01:03.577 --> 00:01:06.256
هناك الكثير من القوائم الخطية، والقائمة الأفقية،

00:01:06.256 --> 00:01:08.950
يمكنك مشاهدة قائمة في كل مكان إلى حد كبير في ذلك

00:01:08.950 --> 00:01:13.370
لذلك إذا كنت تفكر مرة أخرى في الالتحاق، فهو قائمة
عرض.

00:01:13.370 --> 00:01:16.290
إذا كان لديك درجة مصغرة

00:01:16.290 --> 00:01:19.960
هناك طريقة عرض درجة مصغرة خاصة وهى طريقة عرض قائمة
في تلك الحالة.

00:01:19.960 --> 00:01:21.342
وحتى أنهم في عدة أماكن.

00:01:21.342 --> 00:01:25.390
أيضا المسارات، هي مسارات داخل التطبيق إذا قمت بتمريرها
أفقياً.

00:01:25.390 --> 00:01:27.270
فهذه طريقة عرض قائمة في حد ذاتها

00:01:27.270 --> 00:01:30.650
لذا فإن إعادة تدوير المشاهدات مهمة لأنك تريد استخدام
أقل قدر من الذاكرة

00:01:30.650 --> 00:01:31.860
بقدر الإمكان

00:01:31.860 --> 00:01:36.450
لذا يمكنك فقط حقاً تريد أن تجعل طرق العرض على الشاشة
في لحظة

00:01:36.450 --> 00:01:39.460
لأنها من المحتمل أن تكون قائمة كبيرة جداً،

00:01:39.460 --> 00:01:42.260
وبينما تقوم بالتمرير فإنك في الوقت نفسه تقوم بإعادة
التدوير  للمشاهدات

00:01:42.260 --> 00:01:44.790
للتأكد من أنك تقدم ما يمكن احتواءه على الشاشة.

00:01:44.790 --> 00:01:48.300
طريقة بناء البيانات في التطبيق لاتزال إلى حد كبير

00:01:48.300 --> 00:01:50.760
تستند إلى المفاهيم التي تضعها في الفئة

00:01:50.760 --> 00:01:54.330
ولذلك لدينا فكرة وجود فئة نانوديجري،

00:01:54.330 --> 00:01:59.250
وهناك فئة درس، وأجزاء صغيرة وكل الوحدات الفردية

00:01:59.250 --> 00:02:03.970
التي نقوم بعرض نموذجها في التطبيق على إنها موضوعات
جافا

00:02:03.970 --> 00:02:06.450
في كثير من الأحيان هذا نوع منها، يعمل خصيصًا في
واجهة برمجة التطبيقات،

00:02:06.450 --> 00:02:09.699
إن العديد من تلك القرارات قد سبق اتخاذها،

00:02:09.699 --> 00:02:14.000
وبسبب استهلاكك لواجهة برمجة التطبيقات، فإنه بالفعل
قد تم عرض نماذجها  في زاوية معينة

00:02:14.000 --> 00:02:17.210
أنت تعرف نقاط النهاية التي تضغط عليها، وتعرف الردود
عليها،

00:02:17.210 --> 00:02:20.560
وتلك الردود مجمعة منطقياً حسب نوع الهدف

