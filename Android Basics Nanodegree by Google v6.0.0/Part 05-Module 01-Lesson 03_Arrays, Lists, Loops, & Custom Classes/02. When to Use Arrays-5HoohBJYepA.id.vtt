WEBVTT
Kind: captions
Language: id

00:00:00.450 --> 00:00:01.210
Hai, Catherine.

00:00:01.210 --> 00:00:04.330
Untuk NumbersActivity, kita ingin
dapat menampilkan list angka

00:00:04.330 --> 00:00:05.600
satu sampai sepuluh dengan urutan naik.

00:00:05.600 --> 00:00:07.430
Kau tahu bagaimana cara
melakukannya?

00:00:07.430 --> 00:00:10.410
&gt;&gt; Dalam kursus terakhir, kita
membahas tentang cara menyimpan

00:00:10.410 --> 00:00:11.800
kepingan informasi tunggal dalam variabel.

00:00:11.800 --> 00:00:13.100
&gt;&gt; Benar, benar.

00:00:13.100 --> 00:00:14.360
Sehingga kita bisa menyesuaikan.

00:00:14.360 --> 00:00:15.460
Kita menggunakan kuantitas variabel

00:00:16.590 --> 00:00:19.280
integer (bilangan bulat) untuk menyimpan
jumlah kopi yang ada di sini.

00:00:19.280 --> 00:00:20.020
&gt;&gt; Oke.
Jadi

00:00:20.020 --> 00:00:22.490
dalam hal ini kenapa kita tidak
menggunakan sepuluh variabel string saja?

00:00:23.610 --> 00:00:24.340
Seperti ini.

00:00:24.340 --> 00:00:27.680
Kita bisa menggunakan variabel string untuk
nomor satu, nomor dua, dan

00:00:27.680 --> 00:00:29.430
nomor tiga, dan seterusnya.

00:00:29.430 --> 00:00:32.600
&gt;&gt; Idemu bagus, tapi sebenarnya ada
cara lebih baik untuk melakukannya.

00:00:32.600 --> 00:00:33.980
&gt;&gt; Apa maksudmu dengan lebih baik?

00:00:33.980 --> 00:00:36.166
&gt;&gt; Ada yang namanya array.

00:00:36.166 --> 00:00:38.510
&gt;&gt; Oke, apa itu?

00:00:38.510 --> 00:00:40.570
&gt;&gt; Baik, ini adalah harapan nyata
untuk menyimpan list variabel.

00:00:41.590 --> 00:00:45.050
Dan membantu kita mengelola pesanan
karena dengan list angka seperti ini,

00:00:45.050 --> 00:00:48.240
mudah sekali menjadi ruwet dan
menampilkan informasi yang salah.

00:00:48.240 --> 00:00:51.240
&gt;&gt; Oke, kedengaran bagus, tapi karena kita
belum belajar tentang array,

00:00:51.240 --> 00:00:52.840
maka kita perlu menerangkannya.

00:00:52.840 --> 00:00:54.610
Apakah kau suka analogi
atau semacamnya?

00:00:54.610 --> 00:00:58.870
&gt;&gt; Sebenarnya saya suka.
Kotak pil.

00:00:58.870 --> 00:01:00.170
&gt;&gt; Dari mana kau mendapatkannya?

00:01:00.170 --> 00:01:03.030
Itu benar-benar mirip dengan
kotak vitamin bibiku.

00:01:03.030 --> 00:01:04.750
&gt;&gt; Yah, mungkin dia akan segera menelepon.

00:01:04.750 --> 00:01:05.930
&gt;&gt; Oke, bagaimanapun,

00:01:05.930 --> 00:01:07.790
Kenapa kotak pil mirip dengan array?

00:01:07.790 --> 00:01:10.940
&gt;&gt; Array mirip dengan
wadah dengan panjang yang tetap.

00:01:10.940 --> 00:01:13.950
Jadi, yang dibuatnya tetap sama
panjangnya, jadi

00:01:13.950 --> 00:01:15.490
panjang kotak pil ini tujuh.

00:01:16.870 --> 00:01:18.790
Dan tiap slot menyimpan nilai tunggal.

00:01:18.790 --> 00:01:21.240
&gt;&gt; Sebentar, jadi
aku bisa menyimpan apa saja dalam slot itu.

00:01:21.240 --> 00:01:23.630
&gt;&gt; Kira-kira apa
saja, jadi

00:01:23.630 --> 00:01:26.810
kau bisa menyimpan pil pamanmu
di dalam kotak pil bibimu.

00:01:26.810 --> 00:01:30.170
Setelah Anda membuat array, semua
harus dengan tipe yang sama.

00:01:30.170 --> 00:01:31.990
Jadi kita punya array string semua,

00:01:31.990 --> 00:01:34.680
array Boolean semua,
array integer semua.

00:01:35.970 --> 00:01:38.770
&gt;&gt; Oke, tapi bagaimana jika saya
ingin menyimpan banyak string?

00:01:40.350 --> 00:01:41.450
Seperti satu, dua, dan tiga.

00:01:41.450 --> 00:01:42.010
&gt;&gt; Mmm, bagus.

00:01:42.010 --> 00:01:45.120
Jadi, untuk satu, Anda bisa
menyimpannya di indeks pertama.

00:01:45.120 --> 00:01:49.660
&gt;&gt; Oke, lalu di slot kedua bisa kita
simpan string dua, dan

00:01:49.660 --> 00:01:51.500
kemudian slot ketiga bisa diisi
string tiga.

00:01:52.780 --> 00:01:55.130
&gt;&gt; Ya, tepat seperti angka
yang bertambah besar.

00:01:56.500 --> 00:01:57.100
&gt;&gt; Baik, jadi

00:01:57.100 --> 00:01:59.310
setelah semua angka ada di dalam slot,

00:01:59.310 --> 00:02:01.430
kita bisa menarik semua nilai yang dibutuhkan.

00:02:01.430 --> 00:02:03.493
&gt;&gt; Nanti, pada saat kita perlu
menampilkannya.

00:02:03.493 --> 00:02:04.380
&gt;&gt; Tepat sekali.

00:02:04.380 --> 00:02:06.360
&gt;&gt; Tunggu, jadi kita
menemukan konsep yang sangat kuat.

00:02:06.360 --> 00:02:10.320
Jika Anda ingin menyimpan list
informasi, Anda tinggal memakai array.

00:02:10.320 --> 00:02:11.380
&gt;&gt; Ya, poin yang bagus.

00:02:11.380 --> 00:02:13.930
Tapi hal penting yang harus diingat
adalah bahwa tiap elemen

00:02:13.930 --> 00:02:16.100
array harus berupa
tipe data yang sama.

00:02:16.100 --> 00:02:17.250
&gt;&gt; Ya,
dan kadang-kadang,

00:02:17.250 --> 00:02:18.790
jika Anda ingin menyimpan sesuatu,

00:02:18.790 --> 00:02:22.020
seperti satu string, maka Anda bisa
menggunakan variabel individual.

00:02:22.020 --> 00:02:23.130
&gt;&gt; Bagus.
Tepat, Catherine.

00:02:24.770 --> 00:02:26.090
Memilih cara menyimpan data Anda

00:02:26.090 --> 00:02:28.920
dikenal juga sebagai memilih struktur data
yang benar untuk aplikasi Anda.

00:02:28.920 --> 00:02:33.120
Saat Anda butuh array, dan jika memang Anda
membutuhkannya, tipe array apa yang dipakai?
66
Java adalah bahasa yang ketat dengan tipe.
Java is a strongly typed language.

00:02:34.890 --> 00:02:37.340
Artinya, tiap kali Anda membuat
variabel dalam Java, Anda

00:02:37.340 --> 00:02:39.490
perlu menentukan tipe datanya.

00:02:39.490 --> 00:02:44.030
Dalam kursus terakhir, kita bekerja dengan tipe
data dasar seperti integer dan Boolean

00:02:44.030 --> 00:02:47.550
tapi kita juga bekerja dengan tipe objek
yang lebih rumit seperti TextView

00:02:47.550 --> 00:02:48.250
dan ImageView.

00:02:48.250 --> 00:02:51.160
Anda hanya dapat melakukan operasi
tertentu dengan tipe data tertentu, misalnya

00:02:51.160 --> 00:02:55.020
Anda dapat menambah dua integer
dengan operator plus (tambah).

00:02:55.020 --> 00:02:57.440
Tapi tidak masuk akal jika menambah
dua Boolean.

00:02:57.440 --> 00:03:00.030
Saat kita harus mengatur
teks pada TextView,

00:03:00.030 --> 00:03:02.740
dia memperkirakan string sebagai input dan
bukan integer.

00:03:02.740 --> 00:03:03.830
Java akan mengeluh dan

00:03:03.830 --> 00:03:06.800
memberi kesalahan jika ada
ketidakcocokan data dalam kode Anda.

00:03:06.800 --> 00:03:09.620
Untuk membantu Anda, kami telah
membuat dokumen yang

00:03:09.620 --> 00:03:14.530
membahas beberapa tipe data primitif
dan beberapa tipe data objek.

00:03:14.530 --> 00:03:20.520
Anda sering mendengar tipe data primitif
dirujuk sebagai 8 tipe data dasar

00:03:20.520 --> 00:03:26.320
dan mungkin Anda mengenali salah satunya
seperti Int yang merupakan angka bulat dan

00:03:26.320 --> 00:03:30.380
Boolean yang memiliki nilai
true (benar) atau false (salah).

00:03:30.380 --> 00:03:33.660
Ada beberapa yang baru di sini yang
mungkin belum Anda pakai sebelumnya, tapi

00:03:33.660 --> 00:03:35.740
mungkin dapat berguna untuk
dipakai di masa mendatang.

00:03:35.740 --> 00:03:42.120
Misalnya, double adalah desimal dan
char adalah satu karakter tunggal.

00:03:42.120 --> 00:03:45.210
Selain itu, Anda akan melihat bahwa string
tidak terlist sebagai

00:03:45.210 --> 00:03:46.430
tipe data Primitif.

00:03:46.430 --> 00:03:49.890
Sekarang, tentu Anda sudah akrab dengan
string sebagai teks dengan panjang berapa pun.

00:03:49.890 --> 00:03:53.660
Sebenarnya, string merupakan objek suatu
tipe dan bukan primitif, dan

00:03:53.660 --> 00:03:57.460
inilah sebabnya kita memakai huruf besar
untuk huruf pertama S dalam string tapi

00:03:57.460 --> 00:04:02.530
tidak memakai huruf besar, misalnya, untuk C
dalam Char atau b dalam Boolean.

00:04:02.530 --> 00:04:06.420
Walaupun string merupakan tipe data objek,
dia diperlakukan secara khusus dalam Java.

00:04:06.420 --> 00:04:10.420
Anda bisa secara otomatis membuat string
baru dengan menutup teks dalam tanda petik,

00:04:10.420 --> 00:04:13.380
bukan dengan memanggil secara formal
constructor ini dengan kata kunci baru.

00:04:14.560 --> 00:04:16.870
Anda bisa memiliki array berisi
tipe data apa pun,

00:04:16.870 --> 00:04:20.140
dari tipe primitif hingga tipe objek.

00:04:20.140 --> 00:04:23.420
Misalnya, Anda bisa memiliki
array berisi integer atau

00:04:23.420 --> 00:04:27.120
karakter atau bahkan
array berisi float.

00:04:27.120 --> 00:04:29.740
Selain itu, ada
tipe array objek.

00:04:29.740 --> 00:04:33.470
Ada array string atau bahkan
objek yang terlist di sini.

00:04:33.470 --> 00:04:37.350
Misalnya, array TextView atau
array tombol.

00:04:37.350 --> 00:04:39.810
Ingatlah apa yang baru saja Anda pelajari
tentang array dan

00:04:39.810 --> 00:04:43.610
apa yang telah kita tinjau tentang tipe
data untuk menjawab kuis ini.

00:04:43.610 --> 00:04:45.070
kami telah menyiapkan beberapa skenario

00:04:45.070 --> 00:04:46.960
untuk aplikasi yang berbeda yang dapat
Anda jalankan sebagai pengembang.

00:04:46.960 --> 00:04:50.690
Tugas Anda adalah memutuskan cara
merepresentasikan informasi itu di aplikasi.

00:04:51.710 --> 00:04:53.440
Dengan skenario ini.

00:04:53.440 --> 00:04:55.846
struktur data apa yang akan Anda pakai
untuk menyimpan data dalam aplikasi?

00:04:55.846 --> 00:05:00.250
Integer, Boolean, String,

00:05:00.250 --> 00:05:04.780
array integer, array String,
atau mungkin yang lain.

00:05:04.780 --> 00:05:07.740
Skenario pertama adalah
untuk aplikasi travel.

00:05:07.740 --> 00:05:10.220
Anda menyimpan item bawaan
untuk perjalanan.

00:05:10.220 --> 00:05:11.410
Skenario kedua adalah untuk

00:05:11.410 --> 00:05:14.790
aplikasi YouTube yang ingin Anda ketahui
jumlah orang menonton video tersebut.

00:05:15.820 --> 00:05:18.720
Skenario ketiga adalah
untuk aplikasi Setting dan

00:05:18.720 --> 00:05:21.529
Anda ingin menyimpan bahasa yang
didukung di perangkat Android.

00:05:22.660 --> 00:05:25.290
yang keempat, untuk aplikasi belanja.

00:05:25.290 --> 00:05:27.640
Anda ingin tahu apakah sebuah produk
sedang ada stoknya atau tidak.

00:05:29.060 --> 00:05:31.650
Skenario kelima, untuk aplikasi lotre.

00:05:31.650 --> 00:05:34.750
Kombinasi pemenang berupa lima angka
untuk satu putaran lotre.

00:05:34.750 --> 00:05:38.820
Dalam skenario terakhir, Anda harus
menentukan struktur data yang digunakan,

00:05:38.820 --> 00:05:40.160
untuk aplikasi pelacak kesehatan.

00:05:40.160 --> 00:05:43.100
Jarak jalan kaki dalam mil atau
kilometer untuk tiap hari dalam seminggu.

