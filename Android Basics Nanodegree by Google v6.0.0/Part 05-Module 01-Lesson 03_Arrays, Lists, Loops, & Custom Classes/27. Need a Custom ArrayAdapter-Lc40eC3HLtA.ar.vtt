WEBVTT
Kind: captions
Language: ar

00:00:00.410 --> 00:00:03.260
لذا دعونا نلخّص التغييرات الرئيسية التي أجريناها
للتو على التطبيق.

00:00:03.260 --> 00:00:06.800
لقد غيرنا استخدام التكرار الحلقي لنشر تخطيط خطي
عمودي،

00:00:06.800 --> 00:00:09.140
لعرض قائمة من الكلمات،

00:00:09.140 --> 00:00:13.620
لاستخدام مجموعة ListView + ArrayAdapter ذات كفاءة
أعلى.

00:00:13.620 --> 00:00:16.730
حينئذ نبني تخطيط عناصر القائمة والذي يحتوي على اثنين
من TextViews.

00:00:18.070 --> 00:00:20.950
لذا بعد ذلك أردنا إنشاء قائمة كائنات منفردة يمكننا
تمريرها إلى

00:00:20.950 --> 00:00:22.050
ArrayAdapter.

00:00:22.050 --> 00:00:25.200
لذا فقد أنشأنا فئة work مخصصة تحتوي على كل من
الترجمتين الإنجليزية

00:00:25.200 --> 00:00:27.180
والميووكية لكلمة منفردة.

00:00:27.180 --> 00:00:30.253
دون إمكانية وجود ArrayList لدينا لكائنات word يمكننا
تمريرها

00:00:30.253 --> 00:00:31.095
إلى محوّل مصفوفة.

00:00:31.095 --> 00:00:33.620
والآن دعونا ننتقل إلى numbers activity.

00:00:33.620 --> 00:00:38.020
سنحتاج هنا إلى تغيير ArrayList ذات السلاسل إلى
ArrayList ذات كلمات.

00:00:38.020 --> 00:00:40.920
لذا سنحتاج إلى تحديث معلمة النوع العام ما بين

00:00:40.920 --> 00:00:46.540
هذين القوسين وننشئ ArrayList حيث يكون كل عنصر هو
كائن word.

00:00:46.540 --> 00:00:48.740
قد تحصلون على اقتراحين للإكمال التلقائي.

00:00:48.740 --> 00:00:51.700
هذا لأن فئة word موجودة بالفعل في إطار العمل في
Android

00:00:51.700 --> 00:00:53.710
باسم حزمة مختلف.

00:00:53.710 --> 00:00:56.240
لذا سترون هنا أنها باسم UserDictionary.

00:00:56.240 --> 00:00:59.800
لذا فهذه هي الكلمات التي يمكنكم إضافتها إلى قاموس
الإكمال التلقائي،

00:00:59.800 --> 00:01:01.650
حينما تراسلون أصدقائكم مثلاً.

00:01:01.650 --> 00:01:05.010
لذا تأكدوا من تحديد الخيار الصحيح لفئة word،

00:01:05.010 --> 00:01:08.958
نرغب في اختيار الفئات الموجودة في حزمة
com.example.android.miwok الموجودة لدينا.

00:01:08.958 --> 00:01:13.170
لذا فقد حدثنا الآن ArrayList لتحتوي على كائنات word
بدلاً من

00:01:13.170 --> 00:01:14.210
للأفلام.

00:01:14.210 --> 00:01:18.060
لذا تذكروا أنني أحدد word كمعلمة ArrayList، وهذا
يعني

00:01:18.060 --> 00:01:23.240
أنه حينما نضيف عناصر إلى القائمة، يجب أن نضيف كائنات
من نوع البيانات words.

00:01:23.240 --> 00:01:26.500
وإذا كنا سنستدعي أسلوب get، وهو ما يستخدم للحصول
على العناصر

00:01:26.500 --> 00:01:30.950
في موضع معين في القائمة، سنحصل على كائن من نوع
البيانات word.

00:01:30.950 --> 00:01:34.476
لذا فكل أساليب add الموجودة حاليًا تضيف كائن سلسلة
وحيد

00:01:34.476 --> 00:01:38.257
إلى قائمة الكلمات كل مرة، ولهذا نحصل على كل هذه
الأخطاء.

00:01:38.257 --> 00:01:42.725
لذا نحتاج إلى كل من هذه الأسطر لتمرير كائن word
منفرد.

00:01:42.725 --> 00:01:44.814
لذا دعونا فقط نركّز على هذا العنصر الأول هنا.

00:01:44.814 --> 00:01:46.525
لذا سأحوله إلى تعليق.

00:01:46.525 --> 00:01:50.081
وأسفل منه، سأكتب إصدار الكود الذي حيث سنضيف

00:01:50.081 --> 00:01:51.894
كائن word جديد إلى قائمة الكلمات.

00:01:51.894 --> 00:01:53.740
[BLANK_AUDIO]

00:01:53.740 --> 00:01:56.390
هذه هي الطريقة المثالية لبدء ذلك.

00:01:56.390 --> 00:02:01.423
كان بإمكاننا إنشاء كائن Word، ثم تخزينه في متغير
هنا يسمى w

00:02:01.423 --> 00:02:04.257
ثم إضافة هذا المتغير إلى قائمة الكلمات.

00:02:04.257 --> 00:02:06.668
لذا ننشئ الآن كائن word الجديد الخاص بنا،

00:02:06.668 --> 00:02:09.660
ونمرر إدخالين جديدين إلى دالة المنشئ.

00:02:09.660 --> 00:02:11.490
وهما الكلمة الإنجليزية والميووك.

00:02:11.490 --> 00:02:14.963
نظرًا لأننا فقط بحاجة إلى الإشارة إلى المتغير w هذا
مرة واحدة فقط هنا.

00:02:14.963 --> 00:02:19.060
في الواقع توجد طريقة أكثر إيجازًا لكتابة هذين السطرين
البرمجيين.

00:02:19.060 --> 00:02:22.260
يمكن لأسلوب إنشاء كائن word هذا وإضافته إلى
القائمة

00:02:22.260 --> 00:02:25.770
أن يعمل، لكن في الواقع توجد طريقة أكثر إيجازًا.

00:02:25.770 --> 00:02:28.870
لذا ستلاحظون هنا أننا نشير فقط إلى هذا المتغير w

00:02:28.870 --> 00:02:30.540
مرة واحدة هنا.

00:02:30.540 --> 00:02:34.160
لذا يمكننا المضي قدمًا وقص تجسيد كائن word

00:02:34.160 --> 00:02:36.240
ولصقه مباشرة في أسلوب add.

00:02:36.240 --> 00:02:40.176
لذا فبفعل ذلك بهذه الطريقة، لن نحتاج هذه الخطوة
الإضافية هنا لإنشاء كائن word جديد

00:02:40.176 --> 00:02:45.110
في سطر برمجي منفصل ثم تخزينه في متغير مؤقت.

00:02:45.110 --> 00:02:47.540
لذا يمكننا بالفعل أن نمضي قدمًا ونزيل هذا السطر
بالكامل.

00:02:48.830 --> 00:02:52.840
بدلاً من ذلك، أضفنا كائن word الجديد إلى القائمة
مباشرة.

00:02:52.840 --> 00:02:57.041
خلاصة القول، ما يتم إدخاله إلى هذه القائمة هو كائن
word جديد

00:02:57.041 --> 00:02:59.830
تم إنشاؤه في سطر برمجي باستخدام كلمة أساسية جديدة.

00:02:59.830 --> 00:03:01.048
سوف أستمرّ فيما أفعله

00:03:01.048 --> 00:03:04.134
وأنهي نشر ArrayList بكائنات word.

00:03:04.134 --> 00:03:06.064
بعد الانتهاء تمامًا، هذا هو الشكل الذي سيبدو عليه

00:03:06.064 --> 00:03:08.780
كود إنشاء ArrayList للكلمات.

00:03:08.780 --> 00:03:11.368
لذ دعونا ننتقل للأسفل هنا حيث نمرر

00:03:11.368 --> 00:03:13.121
ArrayList إلى المحوّل أدناه.

00:03:13.121 --> 00:03:17.370
لذا فنحن بحاجة إلى تحديث النوع العام من string ليصبح
words.

00:03:17.370 --> 00:03:20.220
ويعكس هذا التغيير أن ArrayAdapter يحتوي الآن على
قائمة

00:03:20.220 --> 00:03:23.400
من الكلمات كمصدر حالة بدلاً من سلاسل.

00:03:23.400 --> 00:03:27.420
يجب علينا أيضًا تحديث مصدر التخطيط ليصبح تخطيط عنصر
القائمة الجديد.

00:03:27.420 --> 00:03:31.460
لذا فبدلاً من هذا، سيكون لدينا R.layout.List_item.

00:03:31.460 --> 00:03:34.260
لا يوجد أخطاء الآن في الكود، لذا سأمضي قدمًا

00:03:34.260 --> 00:03:36.120
وأشغّل التطبيق على جهازي.

00:03:36.120 --> 00:03:38.396
هذا هو المحاكي يشغّل هذا الإصدار من التطبيق.

00:03:38.396 --> 00:03:40.784
دعونا ننتقل إلى numbers activity.

00:03:40.784 --> 00:03:44.325
لقد تعطل، ماذا حدث يا ترى؟

00:03:44.325 --> 00:03:47.490
دعونا نتحقق من شاشة Android ونتحقق من سجلات
Android.

00:03:47.490 --> 00:03:51.649
حسنًا، في أعلى رأس رسالة السجل، نرى مكتوب هنا،

00:03:51.649 --> 00:03:56.588
Java.Lang.IllegalStateException ArrayAdapter requires
the resource

00:03:56.588 --> 00:03:57.916
ID to be a text view.

00:03:57.916 --> 00:04:01.564
لا أعرف بالتحديد ما تعنيه رسالة الخطأ هذه، لذا سأنتقل
إلى

00:04:01.564 --> 00:04:05.445
الوثائق وأرى إن كان بإمكاني العثور على أي حل.

00:04:05.445 --> 00:04:08.650
هنا وثائق المطور الخاصة بـ ArrayAdapter.

00:04:08.650 --> 00:04:10.790
دعونا نقرأ Class Overview.

00:04:10.790 --> 00:04:13.610
بدلاً من ذلك، يمكنكم أيضًا إيقاف الفيديو بشكل مؤقت
هنا إذا أردتم

00:04:13.610 --> 00:04:14.480
القراءة بأنفسكم.

00:04:15.820 --> 00:04:20.658
ما تعلمته من هذه الفقرات هو أنه بشكل افتراضي،

00:04:20.658 --> 00:04:25.132
تتوقع الفئة أن معرّف المصدر يشير إلى TextView
منفرد.

00:04:25.132 --> 00:04:29.689
ربما هذا هو سبب عمل تخطيط عنصر القائمة من إطار العمل
Android نفسه

00:04:29.689 --> 00:04:32.891
لأن التخطيط كله يتكون من TextView منفرد.

00:04:32.891 --> 00:04:36.577
ونرى هنا في الفقرة التالية أنه يمكننا إضافة قوائم

00:04:36.577 --> 00:04:38.288
أو مصفوفات كائنات مخصصة.

00:04:38.288 --> 00:04:41.800
لذا فهذا مثالي لمساعدتنا على عرض كائنات word
المخصصة.

00:04:41.800 --> 00:04:45.233
يبدو الآن كل هذا منطقي لأنه يجب أن تذكروا أن
ArrayAdapter يستخدم

00:04:45.233 --> 00:04:46.240
أنواعًا عامة.

00:04:46.240 --> 00:04:50.590
مما يعني أنه يمكننا تبديل أي نوع من أنواع بيانات
الكائن هنا لهذا الفريق.

00:04:50.590 --> 00:04:53.840
الآن، بالانتقال لأسفل إلى الفقرة الثالثة، لعرض المزيد
من

00:04:53.840 --> 00:04:57.940
عناصر القائمة المركبة التي يمكنها الاتصال بأكثر من
text view منفرد، يجب علينا

00:04:57.940 --> 00:05:01.870
تجاوز ذلك وتقديم تنفيذنا لأسلوب ()getView.

00:05:01.870 --> 00:05:05.869
تنتج ListView أسلوب ()getView المحولات حينما تكون
بحاجة إلى عرض جديد

00:05:05.869 --> 00:05:06.715
على الشاشة.

00:05:06.715 --> 00:05:10.845
أحد وسيطات الإدخال في الأسلوب هي العنصر المرغوب

00:05:10.845 --> 00:05:12.410
في القائمة.

00:05:12.410 --> 00:05:15.100
لذا ففي هذه الحالة لدينا الوضع 0 الذي نحتاج إليه.

00:05:16.240 --> 00:05:20.922
بالنظر إلى هذه المعلومة، يعيد المُحوّل العرض إلى
ListView،

00:05:20.922 --> 00:05:25.003
الذي تم نشره بالمعلومة من الوضع 0.

00:05:25.003 --> 00:05:29.911
لذا فكروا في العلاقة بين ListView وgetView كما هو
الحال

00:05:29.911 --> 00:05:35.270
مع ما يحدث بين جراح وفنّي الجراحة في غرفة
العمليات.

00:05:35.270 --> 00:05:40.300
في هذا القياس، يمثّل فني الجراحة getView،

00:05:40.300 --> 00:05:42.770
وهو يعطي الجراح الذي يمثل ListView

00:05:42.770 --> 00:05:46.480
الأدوات الصحيحة للعرض الصحيح في الوقت المناسب.

00:05:46.480 --> 00:05:51.610
يطلب ListView أو الجراح العرض أو المقص في هذه
الحالة.

00:05:51.610 --> 00:05:55.370
يأتي getView بالأشياء المطلوبة، وهي View

00:05:55.370 --> 00:05:59.560
أو المقص في هذه الحالة ويمررها إلى الجراح.

00:05:59.560 --> 00:06:00.530
لذا، فبشكل افتراضي،

00:06:00.530 --> 00:06:04.670
تتوقع الفئة ArrayAdaptor أنها ستنشر TextView
منفردًا.

00:06:04.670 --> 00:06:09.060
لذا فنظرًا إلى أن تخطيط عنصر القائمة الذي سيتم نشره
مُعقّد بشكل أكبر

00:06:09.060 --> 00:06:13.360
فإنه يحتوي على اثنين من TextViews وفي النهاية سيكون
لديه عرض image.

00:06:14.710 --> 00:06:18.273
يجب علينا تجاوز أسلوب getView بسلوكنا الخاص
والمخصص.

00:06:18.273 --> 00:06:22.120
ولفعل ذلك، يجب إدراج الفئة ArrayAdapter كفئة
فرعية.

00:06:23.300 --> 00:06:26.962
لتفصيل ذلك، نقول أنه يجب علينا إنشاء فئة Java
جديدة.

00:06:26.962 --> 00:06:32.690
لذا سنسميها فئة WordAdapter ونستخدم امتداد فئة
ArrayAdapter.

00:06:32.690 --> 00:06:34.376
لذا سأريكم طريقة تنفيذ ذلك الآن.

00:06:34.376 --> 00:06:36.440
لذا دعونا ننتقل هنا إلى عرض project.

00:06:37.700 --> 00:06:42.860
تحديد الحزمة الخاصة بنا، ثم النقر بزر الماوس الأيمن،
ثم New ثم Java Class.

00:06:42.860 --> 00:06:44.960
نرغب في تسمية هذا الملف WordAdapter.

00:06:46.030 --> 00:06:49.510
يجب علينا تعديل الملف الذي تم توليده تلقائيًا من
Android Studio.

00:06:49.510 --> 00:06:54.230
نرغب أن يحدد إقرار الفئة أن WordAdapter يمتد

00:06:54.230 --> 00:06:57.350
أو يرث السلوك من فئة ArrayAdapter.

00:06:57.350 --> 00:07:00.700
والآن لعرض الأساليب المتوفرة للتجاوز من فئة
ArrayAdapter،

00:07:00.700 --> 00:07:03.660
سيكون المؤشر بين هذين القوسين.

00:07:03.660 --> 00:07:06.860
سوف ننقر على Code ثم override methods.

00:07:06.860 --> 00:07:11.714
بدلاً من ذلك فإن اختصار لوحة المفاتيح هو Ctrl+O،
والآن في هذه القائمة هنا،

00:07:11.714 --> 00:07:14.779
انتقل لأسفل للعثور على getView ثم النقر على Enter.

00:07:14.779 --> 00:07:18.060
بالتالي يتم توليد هذا الأسلوب بشكل تلقائي
افتراضيًا.

00:07:18.060 --> 00:07:21.310
والآن سأعود خطوة للوراء لأتيح لكم المجال لإنهاء
الخطوات المطلوبة

00:07:21.310 --> 00:07:23.813
لجعل هذا التطبيق يعرض قائمة كلمات المفردات

00:07:23.813 --> 00:07:24.892
في numbers activity.

00:07:24.892 --> 00:07:28.493
ستشمل الخطوات إنهاء تنفيذ أسلوب getView.

00:07:28.493 --> 00:07:32.100
بعد الانتهاء من هذا الاختبار بالكامل، يجب أن يكون
هذا هو مظهر التطبيق.

00:07:32.100 --> 00:07:35.050
يجب أن يعرض كل عنصر بالقائمة كلمة ميووك أعلى الترجمة
الإنجليزية

00:07:35.050 --> 00:07:36.780
لهذه الكلمة.

00:07:36.780 --> 00:07:39.408
والآن للمساعدة على التحقق من مساركم، سأقدم لكم

00:07:39.408 --> 00:07:42.389
بعض تغييرات الأكواد الضرورية في numbers activity.

00:07:42.389 --> 00:07:46.615
لذا فبدلاً من ArrayAdapter سنستخدم WordAdapter.

00:07:47.650 --> 00:07:51.328
لذا تأخذ دالة المنشئ لفئة WordAdapter إدخالين.

00:07:51.328 --> 00:07:53.818
السياق وقائمة الكلمات فحسب

00:07:53.818 --> 00:07:58.195
وتذكروا أيضًا ضرورة تحديث متغير المحول في الأسفل
هنا.

00:07:58.195 --> 00:08:01.285
والآن تأكدوا من أن فئة WordAdapter تعمل مع تغييرات
أنشطة الأعداد تلك

00:08:01.285 --> 00:08:05.255
وإلا ستحتاجون إلى أن تعودوا لإصلاح فئة
WordAdapter.

00:08:05.255 --> 00:08:08.300
والآن أنا أعلم أن تمرين المسح هذا سيكون صعبًا نوعًا
ما، لأنه لم يسبق لكم

00:08:08.300 --> 00:08:12.520
إنشاء ArrayAdapter مخصص من قبل أو تجاوزتم أسلوب
getView.

00:08:12.520 --> 00:08:16.270
تتضمن هذه المهمة العديد من الخطوات، لكنني أعتقد أنكم
مستعدون لهذا بالتأكيد.

00:08:16.270 --> 00:08:17.760
ما عليكم سوى التحلي بالصبر مع أنفسكم،

00:08:17.760 --> 00:08:20.620
لأن هذه المهمة ستتطلب بعض الوقت.

00:08:20.620 --> 00:08:21.940
لأعطيكم تلميحًا آخر،

00:08:21.940 --> 00:08:25.360
سأعطيكم تطبيقًا كمثال يتعامل مع حالة استخدام
مماثلة.

00:08:25.360 --> 00:08:30.090
تمت استضافة هذا المشروع هنا على GitHub كمشروع مفتوح
المصدر

00:08:30.090 --> 00:08:33.429
وهذا يعني أنه يمكن للجميع مشاهدة الكود.

00:08:33.429 --> 00:08:36.490
يجب عليكم معرفة أنه توجد رخصة مختلفة لكل مشروع مفتوح
المصدر.

00:08:37.510 --> 00:08:39.465
لذا لا تنسوا التحقق من الرخصة

00:08:39.465 --> 00:08:42.971
لمعرفة القيود وما إذا كان من الممكن تعديل الكود أو
إعادة توزيعه.

00:08:42.971 --> 00:08:45.320
إذا كنتم تلقون نظرة على مشروع معين مفتوح المصدر.

00:08:46.390 --> 00:08:50.260
في هذه الحالة، تم إنشاء هذا التطبيق في Udacity،
لذا

00:08:50.260 --> 00:08:52.300
فلكم حرية استخدامه وتعديله كما تريدون.

00:08:53.670 --> 00:08:58.680
يُدعى تطبيق Customer Adapter Sample الموجود لدينا
تطبيق Android Flavors

00:08:58.680 --> 00:09:01.820
ويعرض قائمة بجميع إصدارات Android.

00:09:01.820 --> 00:09:05.240
كل إصدار مُمثّل بعنصر بالقائمة،

00:09:05.240 --> 00:09:09.660
ويمكن أن يحتوي كل عنصر بالقائمة على صورة وعنوان ورقم
الإصدار.

00:09:11.140 --> 00:09:15.070
يستخدم هذا التطبيق فئة ArrayAdapter مخصصة كانت
تُسمّى

00:09:15.070 --> 00:09:19.302
FlavorAdapter لعرض عرض عناصر قائمة مخصصة تحتوي على

00:09:19.302 --> 00:09:21.131
صورة وعرض نصين.

00:09:21.131 --> 00:09:25.183
لقد كنتم تمارسون مهارة قراءة الأكواد من تطبيقات
أخرى

00:09:25.183 --> 00:09:28.770
ومعرفة كيفية ملائمتها في تطبيقنا بشكله الجديد.

00:09:28.770 --> 00:09:33.370
بصفتكم مطورين، غالبًا ما وقع نظركم على برامج تعليمية
أو مصادر مفتوحة أخرى للتطبيقات.

00:09:33.370 --> 00:09:35.979
جربوا تطبيق هذه المهارات في تطبيقاتكم.

00:09:36.980 --> 00:09:40.780
يمكنكم البدء في تصفح كود تطبيق Android Flavor إما
عبر زر التمرير السريع

00:09:40.780 --> 00:09:41.896
Download Zip.

00:09:41.896 --> 00:09:45.865
ثم تحميل الكود بالكامل ثم استيراده إلى Android
Studio

00:09:45.865 --> 00:09:50.700
كمشروع موجود، أو يمكنكم تصفح الملفات مباشرة في متصفح
الويب.

00:09:50.700 --> 00:09:54.859
على سبيل المثال، يمكنني النقر هنا app، ثم
source/main،

00:09:54.859 --> 00:09:58.470
ثم التنقل عبر ملفات Java أو باقي الملفات.

00:09:59.580 --> 00:10:04.690
هناك اختصار GitHub رائع آخر وهو كتابة T بلوحة
المفاتيح،

00:10:04.690 --> 00:10:08.130
لذا سأنقر T هنا، وهذا ينشّط أداة البحث عن الملفات.

00:10:08.130 --> 00:10:11.858
هذا يتيح لي سهولة تصفح الملفات في المشروع.

00:10:11.858 --> 00:10:15.656
إذا أردت البحث في النشاط الرئيسي، يمكنني كتابة
activity

00:10:15.656 --> 00:10:17.959
وستسحب الأداة mainActivity.java.

00:10:17.959 --> 00:10:20.908
أو إذا كنت أرغب في البحث عن FlavorAdapter الذي ذكرته
من قبل،

00:10:20.908 --> 00:10:22.830
يمكنني العثور عليه بسهولة هنا.

00:10:22.830 --> 00:10:26.890
آمل أن يساعدكم هذا المثال في تمرين كتابة الأكواد
التالي.

00:10:26.890 --> 00:10:30.830
راجعوا الاختبار للاطلاع على التعليمات المحددة حول
كيفية البدء

00:10:30.830 --> 00:10:31.340
بالتوفيق.

