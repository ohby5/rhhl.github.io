WEBVTT
Kind: captions
Language: ar

00:00:00.450 --> 00:00:04.370
لقد تدربت حتى الآن على
إنشاء مصفوفات وتهيئتها.

00:00:04.370 --> 00:00:07.270
والآن ستتدرب على كتابة كود
للوصول إلى عناصر المصفوفة.

00:00:07.270 --> 00:00:08.480
ومن ثم، يصبح

00:00:08.480 --> 00:00:12.650
بإمكانك استخدام قيمة فهرس
المصفوفة لتعيين النص في عرض النص.

00:00:12.650 --> 00:00:15.700
وإلى الآن،
سيكون بإمكانك الوصول إلى عناصر المصفوفة

00:00:15.700 --> 00:00:18.140
عن طريق طباعة القيمة
في سجلات الأندرويد.

00:00:18.140 --> 00:00:22.240
تذكر أنه بإمكانك الوصول إلى مدير
"logcat" من خلال هذا الزر هنا.

00:00:22.240 --> 00:00:26.700
ومن ثمّ، فبإدخال هذا الكود الذي لدينا الآن،
لا يظهر أي شيء بعد على الشاشة.

00:00:26.700 --> 00:00:28.920
وتذكر أننا استعرضنا تسحيل الدخول
مرةً ثانيةً في دورة

00:00:28.920 --> 00:00:30.100
الأندرويد للمبتدئين.

00:00:30.100 --> 00:00:32.840
وبالتالي، فإننا تعلمنا هنا أن الأندرويد
يحتفظ بسجل نظام لما

00:00:32.840 --> 00:00:34.310
يحدث على الجهاز.

00:00:34.310 --> 00:00:36.730
وهو سجل جارٍ يضم
رسائل من النظام.

00:00:36.730 --> 00:00:40.420
ويمكنك اعتباره مذكرة يومية
تشتمل على وقت حدوث شيئًا ما

00:00:40.420 --> 00:00:41.765
ووصف ما حدث.

00:00:41.765 --> 00:00:43.220
وتبرز أهمية رسائل النظام هذه

00:00:43.220 --> 00:00:46.140
بسبب تصحيح الأخطاء، وإمكانية
التحقق من السحلاتب بغرض الرجوع في الوقت المناسب

00:00:46.140 --> 00:00:49.570
لاكتشاف ما يحدث في الجهاز
قبل حدوث المشكلة.

00:00:49.570 --> 00:00:52.350
إنك قد شاهدت هذا عندما كنا
ننشئ تطبيق جافا

00:00:52.350 --> 00:00:54.370
في دورة أندرويد
للمبتدئين.

00:00:54.370 --> 00:00:55.600
وعند تعطل أحد التطبيقات،

00:00:55.600 --> 00:00:59.540
يمكننا رؤية رسائل الخطأ في
السجلات لمساعدتنا على تصحيح المشاكل.

00:00:59.540 --> 00:01:03.886
مثلما حدث في استوديو الأندرويد،
عند ظهور الرسائل في نافذة "logcat".

00:01:03.886 --> 00:01:06.526
والآن، بالإضافة إلى استخدام
السجل لعرض الأخطاء،

00:01:06.526 --> 00:01:09.432
يمكننا، بصفتنا مطورين، أيضًا
كتابة رسائل إلى السجل.

00:01:09.432 --> 00:01:12.680
ويمكننا تسمية عملية
الكتابة إلى السجل "تسجيل".

00:01:12.680 --> 00:01:14.400
ويمكن لهذا مساعدتنا على
تصحيح تطبيقنا مؤقتًا أو

00:01:14.400 --> 00:01:17.640
مجرد إجراء فحص مزدوج لحالة
تطبيقنا أثناء تشغيله.

00:01:17.640 --> 00:01:20.710
وبالتالي فإن هذا يشبه استخدام أداة
التصحيح حيث يمكننا إضافة نقاط توقف

00:01:20.710 --> 00:01:23.140
للتحقق من حالة متغيرات
مختلفة في تطبيقنا

00:01:23.140 --> 00:01:26.590
وهذا يتيح لنا كتابة قيمة
متغيرات معينة في السجلات.

00:01:26.590 --> 00:01:29.480
ولكنني شخصيًا، أفضّل استخدام بيانات
التسجيل نظرًا لسرعتها.

00:01:29.480 --> 00:01:32.350
وبالتالي، فبدلًا من الانتقال يدويًا إلى
كل سطر من أسطر الكود في التطبيق،

00:01:32.350 --> 00:01:36.640
يمكنك ببساطة جعل التطبيق يعمل بصورة طبيعية
وطباعة رسائل السجل أثناء ذلك.

00:01:36.640 --> 00:01:39.490
ومن ثم، فهذا المقال مفيد
بشأن كتابة رسائل سجل.

00:01:39.490 --> 00:01:42.860
إنك تحتاج فقط إلى سطر كود واحد
لكل رسالة سجل.

00:01:42.860 --> 00:01:46.280
لاحظ أن هناك خمس فئات
مختلفة لرسائل السجل

00:01:46.280 --> 00:01:49.412
وفقًا لمدى خطورة
الرسالة أو أهميتها.

00:01:49.412 --> 00:01:51.170
وبالتالي فإنها تتراوح من رسائل مطوّلة،

00:01:51.170 --> 00:01:55.250
وهي الرسائل التي من الجيد معرفتها،
وحتى رسائل خطأ، وهي

00:01:55.250 --> 00:01:59.640
تشير إلى المشاكل الخطيرة مثلما يحدث عندما
يكون تطبيقك يعمل بسلوك غير متوقع.

00:01:59.640 --> 00:02:03.360
وبالتالي، فإننا الآن سنتدرب
على كتابة رسائل السجل المطوّلة

00:02:03.360 --> 00:02:05.950
لمساعدتنا على التحقق من حالة
بعض المتغيرات في تطبيقنا.

00:02:05.950 --> 00:02:10.900
لاحظ أن جميع رسائل السجل هذه
تتطلب سلسلتين في صورة مدخلات.

00:02:10.900 --> 00:02:13.710
وبالتالي فبالضغط على أسلوب "Log.v" الأول

00:02:13.710 --> 00:02:17.005
نجد أن المتغير المدخل الأول
هو اسم علامة.

00:02:17.005 --> 00:02:20.665
وبالتالي، يمكن لأي شخص الطباعة للسجلات
أو أنظمة الأندرويد أو التطبيقات الأخرى.

00:02:20.665 --> 00:02:24.305
ومن ثمّ، فإننا نستخدم هذه العلامة
لتحديد مكان خروج الرسالة.

00:02:24.305 --> 00:02:27.205
وغالبًا نستخدم لهذه العلامة اسم النشاط أو

00:02:27.205 --> 00:02:29.235
الفئة التي يوجد بيان التسجيل فيها.

00:02:29.235 --> 00:02:31.995
فعلى سبيل المثال، قد يوجد بيان
سجل في نشاط الأرقام

00:02:31.995 --> 00:02:34.885
ويمكن أن تكون العلامة مجرد
سلسلة نشاط الأرقام.

00:02:34.885 --> 00:02:37.135
أما المعلمة الثانية فهي الرسالة،

00:02:37.135 --> 00:02:39.840
وهي الرسالة
التي رأيناها تظهر في السجلات.

00:02:39.840 --> 00:02:42.970
والمعلمة الثانية هي الرسالة،
وهي الرسالة التي

00:02:42.970 --> 00:02:46.790
رأيناها تظهر في السجلات، ويمكن أن
تكون أي شيء تريد تسجيله.

00:02:46.790 --> 00:02:50.641
وبالتالي، فبالرجوع إلى ذلك المقال الأساسي،
نجد مثالًا على ذلك.

00:02:50.641 --> 00:02:56.354
وهو أسلوب "Log.I"، الذي
نعرف أنه سجل معلومات.

00:02:56.354 --> 00:03:01.350
كما يظهر لنا أن اسم العلامة هنا هو
النشاط الرئيسي والرسالة موجودة هنا.

00:03:01.350 --> 00:03:06.290
وبالتالي، فإننا نستخدم مشغل زائد
"plus operator" لتسلسل السلاسل.

00:03:06.290 --> 00:03:09.793
ومن ثم، فإن تسلسل السلسلة هو
أسلوب غير حقيقي لإضافة سلسلة، مثلًا.

00:03:09.793 --> 00:03:11.969
ومثلما حدث مع طريقة إضافة الأرقام معًا،

00:03:11.969 --> 00:03:14.407
يمكننا دمج سلاسل
مع مشغل زائد "plus operator".

00:03:14.407 --> 00:03:18.701
وفي هذه الحالة، ندمج هذه السلسلة
مع متغير المكان لإنشاء

00:03:18.701 --> 00:03:20.490
سلسلة أطول بكثيرٍ.

00:03:20.490 --> 00:03:24.100
وبالتالي، سيظهر "MyActivity" في
"Logcat" على أنه اسم علامة.

00:03:24.100 --> 00:03:29.270
وبعد ذلك، تحصل رسالة
"MyClass.View-" على رقم البند 1.

00:03:29.270 --> 00:03:33.010
وهذا مع افتراض أن قيمة
متغير المكان هي 1.

00:03:33.010 --> 00:03:35.650
وإليك مثال في
نشاط الأرقام الخاص بنا.

00:03:35.650 --> 00:03:40.568
حيث إنني أضفت رسالتي السجل هاتين
في الجزء السفلي من أسلوب "onCreate" الخاص بنا.

00:03:40.568 --> 00:03:42.326
والآن سوف أشغّل
التطبيق على جهازي.

00:03:42.326 --> 00:03:44.128
[BLANK_AUDIO]

00:03:44.128 --> 00:03:47.931
والآن، أثناء عمل التطبيق، سوف
أنتقل إلى نشاط الأرقام

00:03:47.931 --> 00:03:50.890
ولاحظ ظهور هاتين الرسالتين
في مخرجات السجل.

00:03:52.090 --> 00:03:56.165
وبالتالي، تكون الكلمة الموجودة
في الفهرس صفر هي واحد

00:03:56.165 --> 00:03:58.310
والكلمة الموجودة في الفهرس 1
هي اثنان.

00:03:58.310 --> 00:03:59.310
والآن، يمكننا ملاحظة شيئين.

00:04:00.340 --> 00:04:04.250
أولًا، أننا نحتاج إلى إضافة مساحة
تخزين مؤقت بعد علامة النقطتين،

00:04:04.250 --> 00:04:07.440
بحيث لا يكون جميع
هذا النص مقتطبًا مع بعضه.

00:04:07.440 --> 00:04:10.215
وثانيًا، أننا لم نضع هذه

00:04:10.215 --> 00:04:15.010
الكلمة [0] بين علامتي تنصيص لأننا

00:04:15.010 --> 00:04:20.010
نريد القيمة الموجودة في هذا الفهرس،
وليس السلسلة الحرفية الموجودة بين القوسين.

00:04:20.010 --> 00:04:23.200
وخلاصة القول، فإن طباعة رسالة
السجل هي طريقة مفيدة جدًا

00:04:23.200 --> 00:04:26.360
للتأكد من أن المتغير يحصل
على القيمة التوقعة التي تريدها له.

00:04:27.470 --> 00:04:31.900
ومن ثمّ، ستكون رسائل السجل هذه مؤقتة
وسوف نحذفها فيما بعد.

00:04:31.900 --> 00:04:34.590
والآن، دعونا نطبّق التسجيل
عمليًا في تطبيق "Miwok" لديكم.

00:04:34.590 --> 00:04:37.330
خذوا الوقت المناسب لتسجيل
الرسائل في الكود الخاص بكم

00:04:37.330 --> 00:04:40.360
بحيث يمكنكم رؤية قيمة
كل عنصر في مصفوفة الكلمات.

00:04:40.360 --> 00:04:43.500
وبالتالي، فهذه هي المخرجات المتوقعة
في السجلات وعليكم المضي قدمًا

00:04:43.500 --> 00:04:44.970
ووضع علامة على هذا المربع عند الانتهاء.

