WEBVTT
Kind: captions
Language: pt-BR

00:00:00.300 --> 00:00:04.434
Muitos dos nossos recursos, como
tempo e dinheiro, são limitados.

00:00:04.467 --> 00:00:07.467
Temos que ser eficientes
ao decidir como usá-los.

00:00:07.501 --> 00:00:10.167
Por exemplo,
um dia só tem 24 horas.

00:00:10.200 --> 00:00:13.868
Se passarmos uma dessas horas
assistindo à novela,

00:00:13.901 --> 00:00:18.133
não poderemos usá-la para fazer
um jantar delicioso com os amigos.

00:00:18.167 --> 00:00:22.467
Ou seja, temos que ser cautelosos
ao decidir como usar esse tempo.

00:00:22.501 --> 00:00:26.000
A memória humana
também é um recurso limitado.

00:00:26.033 --> 00:00:28.567
Não conseguimos
guardar tudo na cabeça.

00:00:28.601 --> 00:00:32.667
Em uma festa, há um limite de nomes
novos que conseguimos guardar.

00:00:32.701 --> 00:00:35.334
Dispositivos móveis
têm memória digital,

00:00:35.367 --> 00:00:38.267
e ela é fixa
e extremamente limitada

00:00:38.300 --> 00:00:41.934
se comparada à de um desktop
ou laptop tradicional.

00:00:41.968 --> 00:00:45.300
A memória do dispositivo
armazena todo tipo de coisa,

00:00:45.334 --> 00:00:49.501
como músicas, mensagens de texto,
fotos e muito mais.

00:00:49.534 --> 00:00:52.634
Além disso tudo,
essa memória limitada

00:00:52.667 --> 00:00:55.901
é compartilhada com o sistema
operacional do Android

00:00:55.934 --> 00:01:00.334
para todos os outros aplicativos
que usamos, inclusive o nosso Miwok.

00:01:00.367 --> 00:01:03.701
Se um desses aplicativos
consome muita memória,

00:01:03.734 --> 00:01:07.300
o impacto pode ser significativo
na execução dos outros.

00:01:07.334 --> 00:01:11.634
E isso teria um efeito negativo
na experiência geral do dispositivo,

00:01:11.667 --> 00:01:14.434
tornando a experiência
do usuário frustrante.

00:01:14.467 --> 00:01:17.367
Resumindo,
como desenvolvedores,

00:01:17.400 --> 00:01:19.901
temos que saber
que a memória é limitada

00:01:19.934 --> 00:01:23.334
e criar aplicativos que a usem
de forma eficiente.

00:01:23.367 --> 00:01:25.801
Veja o aplicativo
da lista de contatos.

00:01:25.834 --> 00:01:30.501
Um usuário pode ter 1.000 nomes
e telefones na lista de contatos.

00:01:30.534 --> 00:01:34.434
Se cada contato fosse salvo
como TextViews em um layout linear,

00:01:34.467 --> 00:01:37.033
o telefone gastaria
muita memória criando,

00:01:37.067 --> 00:01:40.200
armazenando e exibindo
1.000 TextViews,

00:01:40.234 --> 00:01:44.601
mesmo que nem todos os 1.000
fossem ser exibidos ao mesmo tempo.

00:01:44.634 --> 00:01:47.767
Se muita memória é consumida
para criar e armazenar

00:01:47.801 --> 00:01:51.734
1.000 contatos, sobra pouco
para as outras partes do telefone.

00:01:51.767 --> 00:01:55.234
E isso pode acarretar
falhas em outros aplicativos.

00:01:55.267 --> 00:01:57.901
Temos que fazer uso
inteligente da memória

00:01:57.934 --> 00:02:01.334
para que nosso aplicativo
funcione bem com os outros.

00:02:01.367 --> 00:02:04.133
Neste aplicativo de contatos
simplificado,

00:02:04.167 --> 00:02:06.634
quando o usuário
abre uma lista,

00:02:06.667 --> 00:02:10.033
ele só vê 5 contatos
na tela de cada vez.

00:02:10.067 --> 00:02:13.734
Qualquer coisa visível na tela
acima ou abaixo da lista

00:02:13.767 --> 00:02:17.501
não precisa existir, pois só
serve para consumir memória.

00:02:17.534 --> 00:02:22.300
Então não é preciso criar os 1.000
TextViews para consumir memória,

00:02:22.334 --> 00:02:26.334
até porque talvez o usuário
nunca role a lista inteira.

00:02:26.367 --> 00:02:29.367
Para resolver isso,
podemos reutilizar vistas,

00:02:29.400 --> 00:02:34.067
pois apenas de 5 a 7 contatos
apareceriam na tela por vez.

00:02:34.100 --> 00:02:37.501
O retângulo azul representa
a tela do dispositivo.

00:02:37.534 --> 00:02:41.000
Observe que os contatos
que precisam ser exibidos

00:02:41.033 --> 00:02:44.434
só podem usar uma
destas vistas pré-criadas.

00:02:44.467 --> 00:02:47.501
Quando um contato deixa
de ficar visível na tela,

00:02:47.534 --> 00:02:51.534
a vista pode ser usada para exibir
informações de outro contato.

00:02:51.567 --> 00:02:55.000
Essa estratégia é chamada
de reciclagem de vistas.

00:02:55.033 --> 00:03:00.133
Podemos realizar isso com uma
combinação de ListView e Adapter.

00:03:00.167 --> 00:03:03.734
Vamos detalhar mais o processo
de reciclagem de vistas

00:03:03.767 --> 00:03:06.100
no próximo vídeo.

00:03:06.133 --> 00:03:09.300
O principal é não abusar
da memória do dispositivo.

00:03:09.334 --> 00:03:12.067
A memória dos dispositivos
é limitada

00:03:12.100 --> 00:03:15.167
e compartilhada com outros
aplicativos e funções.

00:03:15.200 --> 00:03:18.601
Se um dispositivo executa
vários aplicativos

00:03:18.634 --> 00:03:22.067
e fica sem memória porque o seu
consome os recursos,

00:03:22.100 --> 00:03:26.234
ele terá que interromper os outros
aplicativos para liberar espaço.

00:03:26.267 --> 00:03:27.968
Munidos desse conhecimento,

00:03:28.000 --> 00:03:31.567
podemos ser prestativos
ao criar aplicativos para Android,

00:03:31.601 --> 00:03:34.868
minimizando o consumo
de memória de forma eficiente.

