WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:03.490
我们可能已经在之前的视频中提供解决方案了

00:00:03.490 --> 00:00:07.040
我们需要创建一个字符串数组来存储从一到十的

00:00:07.040 --> 00:00:08.530
英语单词列表

00:00:08.530 --> 00:00:10.710
在这种情况下 数组是最理想的

00:00:10.710 --> 00:00:14.520
因为我们需要将相关的单词保留在一起

00:00:14.520 --> 00:00:16.970
同时还需要使单词保持一定的顺序

00:00:16.970 --> 00:00:22.090
我们需要确保顺序为一 二 三 等等

00:00:22.090 --> 00:00:25.330
如果单词不按顺序显示的话 会很奇怪

00:00:25.330 --> 00:00:29.860
因为有 10 个单词 所以我们将数组大小初始化为 10

00:00:29.860 --> 00:00:31.290
即有 10 个单元

00:00:31.290 --> 00:00:34.320
数组变量的名称为 Words

00:00:34.320 --> 00:00:38.060
该变量的数据类型必须为字符串

00:00:38.060 --> 00:00:40.650
因为我们想要在数组的每个元素里存储文本

00:00:40.650 --> 00:00:43.730
如果每个单词只有一个字符 我们可以直接使用

00:00:43.730 --> 00:00:46.090
字符 并创建一个字符数组

00:00:46.090 --> 00:00:48.690
注意 字符是另一种原始数据类型

00:00:48.690 --> 00:00:52.700
但是这些单词长度更长 所以使用字符串数组

00:00:52.700 --> 00:00:56.010
我们向 NumbersActivity 中添加代码来创建一个新的 Words 数组

00:00:57.090 --> 00:01:02.050
要创建数组变量 输入大写的 S String

00:01:02.050 --> 00:01:05.110
这是因为字符串属于对象数据类型

00:01:05.110 --> 00:01:06.970
而不是原始数据类型

00:01:06.970 --> 00:01:07.980
接着

00:01:07.980 --> 00:01:11.640
我们需要添加[] 表示它是字符串数组

00:01:11.640 --> 00:01:16.788
变量名称为 words 然后输入“=”

00:01:16.788 --> 00:01:21.546
接着是 new 空格 String[10]

00:01:21.546 --> 00:01:25.860
10 表示数组大小

00:01:25.860 --> 00:01:29.303
注意 语句最后始终以分号结束

00:01:29.303 --> 00:01:33.659
创建好空的字符串数组后 我们就可以通过指定每个索引处的值

00:01:33.659 --> 00:01:36.639
为每个位置分配值了

00:01:37.920 --> 00:01:42.460
例如 在第 0 个索引处 分配值“one”

00:01:43.750 --> 00:01:46.680
注意 这里的值是文本字符串

00:01:47.860 --> 00:01:51.493
然后为每个索引赋值 直到到达文本字符串“ten”

00:01:53.341 --> 00:01:56.504
当我们向应用中添加了所有 10 个单词后

00:01:56.504 --> 00:02:00.450
并存储到字符串数组中后 完整的解决方案将是这样的

00:02:00.450 --> 00:02:04.960
我知道看起来可能有点奇怪 因为我们将值“one”

00:02:04.960 --> 00:02:10.150
存储在第 0 个索引处 最后的值“ten”存储在了第 9 个索引处

00:02:10.150 --> 00:02:12.170
但这是正确的

00:02:12.170 --> 00:02:16.200
当你多次使用数组后 就会习惯了数组索引是从 0 开始的

00:02:17.600 --> 00:02:20.410
很棒 现在我们的应用中就有单词数组了

