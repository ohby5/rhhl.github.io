WEBVTT
Kind: captions
Language: uz

00:00:00.420 --> 00:00:03.190
Biz ega bo‘lgan ko‘plab resurslar,
masalan vaqt va pul, 

00:00:03.190 --> 00:00:04.520
chegaralangan.

00:00:04.520 --> 00:00:07.380
Shuning uchun, biz samarali ravishda
ishlatishimiz kerak.

00:00:07.380 --> 00:00:10.280
Masalan, 1 kunda atigi 24 soat bor.

00:00:10.280 --> 00:00:13.980
Agar biz, uning ayrim soatlarini TV dramasini
ko‘rishga ishlatsak, aynan shu soatni o‘rtoqlarimiz 

00:00:13.980 --> 00:00:17.129
bilan mazali taom tayyorlashga 
ishlatolmaymiz.

00:00:18.320 --> 00:00:19.720
Bu esa, biz juda ham ehtiyotkorlik 

00:00:19.720 --> 00:00:21.250
bilan uni sarflashimiz 
kerakligidan dalolat.

00:00:22.510 --> 00:00:26.080
Shunga o‘xshab, inson xotirasi ham 
chegaralangan resursdir.

00:00:26.080 --> 00:00:28.670
Biz shunchaki ko‘p narsalarni boshimizda ushlab turamiz, to‘g‘rimi?

00:00:28.670 --> 00:00:29.910
Masalan, ziyofatda 

00:00:29.910 --> 00:00:32.750
biz chegarlangan sonli ismlarni 
eslab qolishimiz mumkin.

00:00:32.750 --> 00:00:34.920
Bizning mobil qurilmalarimiz esa raqamli xotiraga ega,

00:00:34.920 --> 00:00:37.060
va ular aniqlangan, hamda odatiy noutbuk yoki 

00:00:37.060 --> 00:00:42.060
kompyuter bilan solishtirganda juda chegaralangan. 

00:00:42.060 --> 00:00:45.330
Bizning mobil qurilmamiz har xil turdagi 
narsalarni, masalan, musiqa, xat xabarlari, 

00:00:45.330 --> 00:00:49.610
rasmlar va yana boshqalarni saqlaydi.

00:00:49.610 --> 00:00:52.780
Endi, mana shu cheklangan hajmdagi xotirani 
ham Android operatsion tizimidagi biz ishlatadigan 

00:00:52.780 --> 00:00:56.400
barcha ajoyib ilovalar,
shuningdek bizning ilovamiz bilan 

00:00:56.400 --> 00:01:00.440
ham o‘zaro bo‘lishish kerak.

00:01:00.440 --> 00:01:03.277
Agar shu ilovalardan birontasi ko‘proq
 hajmda xotirani egallab olsa,

00:01:03.277 --> 00:01:06.686
u boshqa ilovalar ishlashiga ham
 katta ta’sir qiladi.

00:01:06.686 --> 00:01:10.135
Undan ham yomonrog‘i, bularning barchasi butun
 qurilmaning umumiy ishlashiga salbiy ta’sir ko‘rsatadi. 

00:01:10.135 --> 00:01:14.466
va umidsiz foydalanuvchi 
tajribasiga olib keladi.

00:01:14.466 --> 00:01:16.210
Bu gaplarning hammasini bejizga aytmadik,

00:01:16.210 --> 00:01:20.240
dasturchi sifatida biz xotira chegaralangan
 resursligini tushunishimiz va undan samarali 
27
00:01:20,240 --&gt; 00:01:23,390
ravishda xotiraga mos ilovalardan
 foydalanishimiz kerak.

00:01:23.390 --> 00:01:25.670
Kontaktlar ro‘yxati ilovasiga nazar solsak.

00:01:25.670 --> 00:01:29.095
Foydalanuvchida 1000 ta ismlar va telefon raqamlari 
kontaktlar ro‘yxatida bo‘lishi mumkin.

00:01:29.095 --> 00:01:30.476
[AUDIO YO‘Q]

00:01:30.476 --> 00:01:34.732
Agar har bir kontakt Linear layout dagi 
TextView da saqlanganida, telefon uchun

00:01:34.732 --> 00:01:39.867
 ko‘p xotira yaratish va 1000 ta TextView lar 
 namoyish etish talab qilinardi.

00:01:39.867 --> 00:01:44.740
Garchi hamma 1000 tasi ekranda bir 
vaqtni o‘zida ko‘rsatilmasa ham.

00:01:44.740 --> 00:01:48.319
Agar tizimning katta hajmdagi xotirasi 
1000 ta kontakt yaratib ularni saqlashga ketsa, 

00:01:48.319 --> 00:01:51.820
boshqa ilovalarni ishlatishga 
joy yetmaydi.

00:01:51.820 --> 00:01:55.322
Va bu boshqa ilovalarni to‘xtashiga yoki umuman 
ishlamasligiga olib kelishi mumkin.

00:01:55.322 --> 00:01:58.110
Biz esa xotira resursidan foydalanishda 
aqlli fikr tutib, boshqa ilovalar ham 

00:01:58.110 --> 00:02:00.370
qurilmada yaxshi ishlashini 
ta’minlamoqchimiz. 

00:02:01.450 --> 00:02:05.250
Endi bu kontaktlar ilovasini soddalashtirishga 
kelsak, foydalanuvchi faqatgina 5 ta kontaktni 

00:02:05.250 --> 00:02:08.949
bir vaqtda ekranda ko‘rishi mumkin.

00:02:10.150 --> 00:02:13.800
Va har bir yuqoridagi yoki pastdagi,
 ekranda korinmayotgan kontaktlar umuman 

00:02:13.800 --> 00:02:17.620
mavjud bo‘lmasa ham bo‘ladi, 
chunki ular ham xotira resursini egallaydilar.

00:02:17.620 --> 00:02:22.410
Shunday qilib, TextView da 1000 ta kontaktni 
yaratish shart emas, chunki ular ham joy 

00:02:22.410 --> 00:02:26.430
egallaydi, va ayniqsa foydalanuvchi hech qachon butun 
ro‘yxatni butunlay ko‘rib chiqmasligi ehtimoli katta.

00:02:26.430 --> 00:02:29.733
Va shu muammoni yechish uchun, biz 
View larni qaytadan ishlatishimiz mumkin

00:02:29.733 --> 00:02:33.058
chunki ekranda 5 tadan 7 tagacha 
bo‘lgan kontaktlar ko‘rinadi.

00:02:33.058 --> 00:02:37.110
Mana bu yerdagi ko‘k to‘rtburchak 
qurilmaning ekranini bildiradi. 

00:02:37.110 --> 00:02:41.156
Ahamiyat bering, hamma ko‘rsatilishi 
kerak bo‘lgan kontaktlar oldin yaratilgan 

00:02:41.156 --> 00:02:43.519
view larni ishlatishi mumkin.

00:02:44.520 --> 00:02:47.410
Va kontakt ekranda ko‘rinmagan holda, 
uning view boshqa kontakt ma’lumotlariga 

00:02:47.410 --> 00:02:50.590
ishlatilishi mumkin.

00:02:51.690 --> 00:02:54.080
Bu strategiya View recycling deb nomlanadi.

00:02:55.080 --> 00:03:00.130
Va biz buni ListView hamda Adapter 
birikmasi bilan amalga oshirishimiz mumkin.

00:03:00.130 --> 00:03:03.870
Biz butun view recycling
 jarayoni tafsilotlariga 

00:03:03.870 --> 00:03:05.160
keyingi videoda to‘xtalamiz.

00:03:06.180 --> 00:03:09.400
Shunday qilib, qurilmaning xotirasini
 suiste’mol qilmaslik kerak.

00:03:09.400 --> 00:03:12.500
Yodingizda tuting, bizning ilovalar 
 qurilmada ma’lum bir joyni egallaydilar,

00:03:12.500 --> 00:03:15.250
qurilma esa xotirasini hamma ilova va 
funksiyalar bilan o‘zaro ulashadi.

00:03:15.250 --> 00:03:18.865
Shunday qilib, agar qurilma bir nechta ilovani bir vaqtning o‘zida ishlatayotgan bo‘lsa va 

00:03:18.865 --> 00:03:22.095
xotirasida joy qolmasa bu aynan sizning ilovangiz katta hajmdagi joy egallayotgani uchun bo‘lishi mumkin.

00:03:22.095 --> 00:03:24.825
Bu qurilma hamma ishlayotgan 
ilovalarni to‘xtatib, 

00:03:24.825 --> 00:03:26.225
joy bo‘shatishi mumkin.

00:03:26.225 --> 00:03:27.835
Endi, shu bilimga ega bo‘lib 

00:03:27.835 --> 00:03:31.445
biz Android qurilmalariga ilova 
yaratyotganimizda yaxshi quruvchi bo‘lib, 

00:03:31.445 --> 00:03:34.425
ular ishlatayotgan xotira hajmini kamaytirishni inobatga olishimiz kerak.

