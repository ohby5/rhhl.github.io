WEBVTT
Kind: captions
Language: id

00:00:00.390 --> 00:00:04.470
Hai, Catherine, sebenarnya ada
isu terkait array.

00:00:04.470 --> 00:00:07.780
Maksudmu? Padahal itu yang kamu ingin kita gunakan,
apa yang salah?

00:00:07.780 --> 00:00:11.300
Saya sudah memikirkannya, dan
sebenarnya ada struktur data lain yang lebih baik

00:00:11.300 --> 00:00:14.440
untuk menyimpan kata jika
kita ingin tambahkan nanti

00:00:14.440 --> 00:00:15.960
Struktur data apa itu?

00:00:15.960 --> 00:00:20.560
Itu dinamakan arrayList
dan kita bisa pakai

00:00:20.560 --> 00:00:23.300
kotak ini sebagai analogi.
Misalnya,

00:00:23.300 --> 00:00:28.230
jika ingin arrayList mengecilkan ukuran,
cukup hilangkan elemennya, dan

00:00:28.230 --> 00:00:31.600
jika ingin mengembangkannya
cukup tambahkan elemen ke dalamnya

00:00:31.600 --> 00:00:32.159
Baiklah.

00:00:32.159 --> 00:00:34.700
Seberapa besar itu?

00:00:34.700 --> 00:00:38.520
Sebenarnya tak ada batasan
seberapa besar arrayList.

00:00:38.520 --> 00:00:42.190
padahal dengan array yang dulu 
kita buat ukurannya tak berkembang

00:00:42.190 --> 00:00:42.790
Baiklah.

00:00:42.790 --> 00:00:43.930
Di mana saya letakkan ini?

00:00:43.930 --> 00:00:47.790
Karena saya ingin taruh string satu,
dua, dan tiga di sana.

00:00:47.790 --> 00:00:49.990
Apa kita kerjakan
elemen pertama dulu?

00:00:49.990 --> 00:00:50.570
Baiklah.
Jadi

00:00:50.570 --> 00:00:52.370
Kamu kerjakan elemen ke-dua.

00:00:52.370 --> 00:00:53.780
Baik.
Dan di kata ke-tiga kita akan

00:00:53.780 --> 00:00:55.100
kerjakan elemen ketiga.

00:00:55.100 --> 00:00:55.690
Baik.

00:00:55.690 --> 00:00:58.300
Jadi, apakah saya bisa letakkan apapun di
elemen array list?

00:00:58.300 --> 00:01:02.710
Atau apapun yang nyata
meski di luar tipe.

00:01:02.710 --> 00:01:03.910
Sebagai kebalikannya.

00:01:03.910 --> 00:01:07.670
Atau ingat tipe data primitif
seperti integer, bullion,

00:01:07.670 --> 00:01:08.310
dan floats.

00:01:08.310 --> 00:01:10.810
Bagaimana jika saya ingin menyimpan
bilangan bulat dalam elemen?

00:01:10.810 --> 00:01:11.680
Itu sedikit rumit.

00:01:11.680 --> 00:01:14.170
Tapi di Java kita punya
object grabbers.

00:01:14.170 --> 00:01:18.000
Itu mencakup semua tipe data primitif
dan membuatnya menjadi tipe data obyek.

00:01:18.000 --> 00:01:20.720
jadi, misalnya,
kita bisa simpan Integer dengan I kapital.

00:01:20.720 --> 00:01:23.480
Tapi kita tak bisa simpan
dengan i huruf kecil

00:01:23.480 --> 00:01:24.040
Oke, paham. Jadi array list

00:01:24.040 --> 00:01:28.410
dapat menjalankan tipe
obyek data bukan tipe primitif.

00:01:28.410 --> 00:01:31.060
Sepertinya array list
lebih fleksibel karena

00:01:31.060 --> 00:01:36.190
tak ada spot terbuang dibandingkan
array yang punya spot kosong.

00:01:36.190 --> 00:01:38.586
Jadi mengapa tak gunakan
array list saja?

00:01:38.586 --> 00:01:39.490
Pertanyaan bagus.

00:01:39.490 --> 00:01:42.550
Aku punya diagram perbandingan
yang akan menjawabnya.

00:01:42.550 --> 00:01:43.570
Mari kita lihat.

00:01:44.640 --> 00:01:49.280
Ini tabel yang membandingkan
Array dan ArrayList.

00:01:49.280 --> 00:01:54.140
Sebuah Array tak dapat
mengubah ukuran saat dibuat.

00:01:54.140 --> 00:01:56.870
sementara ArrayList bisa.

00:01:56.870 --> 00:02:01.190
Untuk pertanyaan, apakah itu kelas?
Array bukanlah kelas.

00:02:01.190 --> 00:02:03.950
Ia tidak memiliki metode untuk diakses dan
elemen modifikasi.

00:02:03.950 --> 00:02:07.380
Sebaliknya, ArrayList
punya definisi kelas.

00:02:07.380 --> 00:02:10.460
Artinya tiap ArrayList
adalah obyek yang punya

00:02:10.460 --> 00:02:15.870
metode mengakses dan memodifikasi
data. Itu tampak di sini.

00:02:15.870 --> 00:02:18.030
Apa yang bisa disimpan
tiap struktur data juga berbeda.

00:02:19.060 --> 00:02:21.940
Array memuat obyek primitif
dan obyek di luar tipe.

00:02:21.940 --> 00:02:25.690
Sementara arraylist hanya bisa
memuat obyek di luar tipe.

00:02:25.690 --> 00:02:29.130
Lebih jelasnya,
mari lihat ke contoh skenario dan

00:02:29.130 --> 00:02:31.880
Aplikasi Android sebenarnya
dalam pengaturan.

00:02:31.880 --> 00:02:36.430
Ada layar Wi-Fi menunjukkan daftar
adanya jaringan Wi-Fi di dekatmu.

00:02:36.430 --> 00:02:40.390
Kita mungkin harus menyimpan
informasi ini di array list, dan

00:02:40.390 --> 00:02:43.760
ini karena daftar jaringan WiFi
yang tersedia bisa bertambah atau

00:02:43.760 --> 00:02:46.630
menyusut tergantung pada
lokasi Anda.

00:02:46.630 --> 00:02:50.700
Kadang tak ada jaringan WiFi
di dekat Anda, kadang banyak.

00:02:50.700 --> 00:02:54.670
Dalam kasus ini, tak mungkin untuk
punya ukuran array pasti.

00:02:55.690 --> 00:02:58.590
Di aplikasi Youtube, ada fitur
agar Anda bisa membuat playlist

00:02:58.590 --> 00:03:00.330
dari video yang akan ditonton nanti.

00:03:00.330 --> 00:03:01.740
Ini situasi ideal untuk

00:03:01.740 --> 00:03:05.730
arrayList karena kita akan terus
menambah video yang ingin kita tonton

00:03:05.730 --> 00:03:09.540
dan menghapus yang sudah ditonton,
dan karena kita butuh struktur data

00:03:09.540 --> 00:03:13.370
berubah dengan dinamis untuk ukurannya,
kita perlu gunakan arraylist.

00:03:13.370 --> 00:03:17.870
Sebaliknya, aplikasi jam alarm
bisa menggunakan array.

00:03:17.870 --> 00:03:20.750
Saat Anda mengatur alarm
pada hari tertentu

00:03:20.750 --> 00:03:22.400
alarm harus mengulanginya.

00:03:22.400 --> 00:03:26.210
Ini bisa jadi boolean array yang
sumbernya benar saat alarm berbunyi

00:03:26.210 --> 00:03:30.110
hari itu dan salah jika alarm
tak berbunyi hari itu.

00:03:30.110 --> 00:03:33.080
Jadi hanya ada
tujuh hari seminggu, jadi

00:03:33.080 --> 00:03:36.360
ukuran array
tak perlu berubah.

00:03:36.360 --> 00:03:37.650
Karenanya kita gunakan array.

00:03:38.840 --> 00:03:41.420
Contoh lain penggunaan array
adalah aplikasi Google Playstore.

00:03:42.490 --> 00:03:45.240
Saat mencari aplikasi Anda
bisa lihat daftar kategori,

00:03:45.240 --> 00:03:51.175
termasuk bisnis,
komunikasi, aplikasi pendidikan, lain-lain.

00:03:51.175 --> 00:03:52.245
Jika Anda scroll ke atas dan bawah

00:03:52.245 --> 00:03:56.235
jumlah kategori di Play Store akan
tetap sama tiap saat.

00:03:56.235 --> 00:03:58.785
Jadi, kita gunakan array
untuk menyimpan informasi.

00:04:00.270 --> 00:04:04.690
Intinya, array dan arraylist
adalah dua tipe struktur data

00:04:04.690 --> 00:04:08.270
yang ideal untuk
kasus penggunaan yang berbeda.

00:04:08.270 --> 00:04:12.820
Array punya ukuran tetap,
sementara arraylist bervariasi.

00:04:12.820 --> 00:04:16.070
Anda bisa simpan obyek dan
primitif dalam array.

00:04:16.070 --> 00:04:19.170
Sementara hanya bisa menyimpan
tipe obyek di arraylist.

00:04:19.170 --> 00:04:22.210
Lalu kita akan pelajari cara
menulis kode untuk membuat arraylist.

