WEBVTT
Kind: captions
Language: ko

00:00:00.330 --> 00:00:05.520
이미 눈치채셨을지 모르겠지만
이 화면에서 보이는 글자는 매우 작습니다.

00:00:05.520 --> 00:00:09.550
제가 시력이 안 좋아서요,
글자를 조금 크게 만들고 싶습니다.

00:00:09.550 --> 00:00:10.380
다행히도,

00:00:10.380 --> 00:00:14.800
우리가 글자 크기를 바꿀 수 있도록
도와주는 속성(attribute)이 있습니다.

00:00:14.800 --> 00:00:17.210
아, 근데 밑에 에러(Error)라고 나와있네요.

00:00:17.210 --> 00:00:20.600
컴퓨터가 제 XML을 
이해할 수 없다고 나오네요.

00:00:20.600 --> 00:00:24.300
코드를 검토해 보니, 우리가 삽입한
새로운 줄이 검정색 글씨로 표시되어 있습니다.

00:00:24.300 --> 00:00:28.090
반면에 위에 있는 줄들은
속성의 이름은 파란색으로,

00:00:28.090 --> 00:00:30.760
속성의 값은 빨간색으로 되어있습니다.

00:00:30.760 --> 00:00:32.580
그러니까 이 줄에 문제가 있는 거네요.

00:00:32.580 --> 00:00:34.438
아, 이제 알겠습니다.

00:00:34.438 --> 00:00:38.190
이쪽의 닫는 꺽쇠 괄호 안에
슬래시(slash)가 들어있네요

00:00:38.190 --> 00:00:41.330
이건 초보자들이 일반적으로 하는 실수인데요

00:00:41.330 --> 00:00:43.230
괄호가 닫힌 이후에 속성을 추가 한 것입니다

00:00:43.230 --> 00:00:46.290
기술적으로 이는 XML의 중간지대나
어딘가에 매달려있다고 할 수 있습니다.

00:00:46.290 --> 00:00:50.080
왜냐하면 이 줄은 XML 요소(element)가 아니기 때문입니다.

00:00:50.080 --> 00:00:54.050
여러분이 원하는대로 하기 위해선 이 심볼들을 
복사해서 여기 밑에 붙여 넣어야 합니다.

00:00:54.050 --> 00:00:54.870
훨씬 낫네요.

00:00:54.870 --> 00:00:59.120
오류도 없어지고, 이제 올바른
XML이 되었고 폰트도 커졌습니다.

00:00:59.120 --> 00:00:59.890
야호!

00:00:59.890 --> 00:01:01.630
이제 훨씬 읽기 편하네요

00:01:01.630 --> 00:01:04.819
어떻게 글자 크기를 45 sp로
설정하였는지 알아보세요.

00:01:04.819 --> 00:01:06.730
Sp는 화면 비율에 독립적인 픽셀(pixel)을 의미합니다.

00:01:06.730 --> 00:01:11.290
그것은 여러 디바이스나 
여러 해상도 사이에서

00:01:11.290 --> 00:01:15.750
앱을 비슷하게 보이도록 만들어주는
측정 단위인 dp와 비슷합니다.

00:01:15.750 --> 00:01:19.840
Sp는 오직 글꼴의 크기를 위한 
유저의 설정값을 기본으로 하여

00:01:19.840 --> 00:01:22.790
조절되기 때문에, 오로지 글자에만 쓰입니다.

00:01:22.790 --> 00:01:24.300
그럼 지금부터 지켜보세요.

00:01:24.300 --> 00:01:26.090
어디서 여러분이 이를 세팅할 수 있는지 보죠.

00:01:26.090 --> 00:01:32.150
먼저 세팅 앱으로 간 다음, display로 들어가면
그 안에 'font size' 옵션이 있습니다.

00:01:32.160 --> 00:01:35.030
그것을 누르면, 여러가지 글꼴의 크기를 볼 수있는데,

00:01:35.030 --> 00:01:39.140
만일 여러분이 큰 사이즈를 누르면
모든 글꼴의 크기가 증가합니다.

00:01:39.140 --> 00:01:42.670
그러므로 sp는 글꼴의 크기를 선언할 때 사용하세요
그러면 유저의 설정에 따라서

00:01:42.670 --> 00:01:45.450
크기를 증가하거나 감소할 수 있기 때문입니다.

00:01:45.450 --> 00:01:48.270
지금 시간에 여러분은 텍스트뷰(Text view)의
글자 크기를 변경할 것입니다.

00:01:48.270 --> 00:01:50.600
하지만 제가 여러분에게
처음으로 보여드리고 싶은 것은.

00:01:50.600 --> 00:01:52.690
이것, 머터리얼 디자인 스펙입니다.

00:01:52.690 --> 00:01:55.450
머터리얼 디자인은 구글에 의해 만들어진
사람들의 지속적인 개발과

00:01:55.450 --> 00:01:57.620
웹과 모바일 같은 다른 디바이스나 플랫폼 간에도

00:01:57.620 --> 00:02:02.490
앱이 아름답게 보일 수 있도록 돕는
새로운 디자인 언어입니다.

00:02:02.490 --> 00:02:04.970
디자인의 상세나 요약된 스펙에서

00:02:04.970 --> 00:02:08.270
가장 눈에 띄는 것은 여러분의
앱 디자인을 위한 최고의 연습입니다.

00:02:08.270 --> 00:02:12.110
이것들은 여러분의 앱, 시각적 스타일,
일련의 이미지, 애니메이션들의

00:02:12.110 --> 00:02:13.870
배치(layout)의 지침들을 제공합니다.

00:02:13.870 --> 00:02:17.450
여기에는 또한 글자와 글꼴에 대한 부분도 있습니다.

00:02:17.450 --> 00:02:20.350
이는 여러분이 나중에 읽어볼 수 있는
일련의 정보들의 목록입니다.

00:02:20.350 --> 00:02:22.520
하지만 이 가이드에서 제일 중요한 것은

00:02:22.520 --> 00:02:24.370
추천하는 글자 크기에 대해서
이야기하고 있다는 것입니다.

00:02:24.370 --> 00:02:26.510
만일 여러분이 어떠한 
큰 헤더를 보여주고 있다면

00:02:26.510 --> 00:02:28.950
여러분은 이 글자 크기값들을 사용할 수 있습니다.

00:02:28.950 --> 00:02:31.890
만일 여러분이 제목이나 본문이나 설명들을 쓰고싶다면

00:02:31.890 --> 00:02:33.590
여러분은 이 크기들을 사용할 수 있습니다.

00:02:33.590 --> 00:02:37.180
이것들은 여러분이 사용할 각 경우에 따라서
어떠한 타입의 값을 선택해야하는지

00:02:37.180 --> 00:02:38.760
알아보는데 도움을 줍니다.

00:02:38.760 --> 00:02:41.200
하지만 조심하세요,
만일 여러분의 앱에서 너무 많은

00:02:41.200 --> 00:02:44.440
타입의 사이즈나 스타일을 지정할경우
유저에게 위화감을 줄 수 있습니다.

00:02:44.440 --> 00:02:48.500
그러므로 여러분이 원하는 정보들을 보여주기 위한
몇개의 스타일만 선택하는것이 좋습니다.

00:02:48.500 --> 00:02:50.760
여러분이 텍스트 뷰를 위해
글자 크기를 조정해야할때

00:02:50.760 --> 00:02:53.050
여기 있는 이 값들을 사용해보세요.

00:02:53.050 --> 00:02:57.120
자, 머터리얼 디자인 스펙을 사용하여
텍스트뷰의 글자크기를 바꾸어봅시다.

00:02:57.120 --> 00:02:57.960
그 다음 모두 다 했다면

00:02:57.960 --> 00:03:01.550
아래에 공지한 Google+의
#AndroidDev나 #Protip으로 부터

00:03:01.550 --> 00:03:04.540
글자의 외관 속성에 대해서 공부해봅시다

00:03:04.540 --> 00:03:08.100
그 다음 여러분은 이를 
XML 시각화도구(Visualizer)에서 시도해볼 수 있습니다.

00:03:08.100 --> 00:03:10.420
이는 XML 시각화도구와 코드와 연관이 있으며

00:03:10.420 --> 00:03:12.010
아래의 링크로부터 시작할 수 있습니다.

