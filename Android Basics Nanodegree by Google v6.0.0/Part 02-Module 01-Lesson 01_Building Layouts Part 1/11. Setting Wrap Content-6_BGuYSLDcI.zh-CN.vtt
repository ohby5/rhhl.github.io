WEBVTT
Kind: captions
Language: zh-CN

00:00:00.270 --> 00:00:04.140
你已经第一次编写代码并修正错误

00:00:04.140 --> 00:00:06.830
这种经历是学习 Android 开发

00:00:06.830 --> 00:00:08.200
很重要的部分

00:00:08.200 --> 00:00:10.310
现在我们来谈谈视图尺寸（的设定）

00:00:10.310 --> 00:00:13.720
我们知道（视图的）宽与高是以 DP 值呈现

00:00:13.720 --> 00:00:15.390
或称密度独立像素

00:00:15.390 --> 00:00:18.290
这使应用在不同设备上看起来都很棒

00:00:18.290 --> 00:00:21.260
但用户界面还是有可以改善的地方

00:00:21.260 --> 00:00:25.440
若我把这里的文字变长 举例来说

00:00:25.440 --> 00:00:27.170
“今天是你的生日？”

00:00:27.170 --> 00:00:30.780
注意这里的文字更新 变成了两行

00:00:30.780 --> 00:00:32.400
理想状况下应该是一行

00:00:32.400 --> 00:00:35.530
因为这一边有很多屏幕空间

00:00:35.530 --> 00:00:37.300
文本框没有改变大小的原因是

00:00:37.300 --> 00:00:41.500
我们把宽与高固定在 150dp

00:00:41.500 --> 00:00:43.500
当你设定特定的值给

00:00:43.500 --> 00:00:47.240
宽和高 就像这样 就称为硬编码

00:00:47.240 --> 00:00:49.440
这不是一个好方法

00:00:49.440 --> 00:00:53.760
若文字像这样改变了 看起来就会很可笑

00:00:53.760 --> 00:00:56.380
因此我们不得不把宽度改成200

00:00:56.380 --> 00:00:58.740
这样（所有文字）就可以在一行

00:00:58.740 --> 00:01:01.250
但根据文字

00:01:01.250 --> 00:01:03.750
一直更新宽与高很麻烦

00:01:03.750 --> 00:01:06.440
你可能直到下一步才知道文字是什么

00:01:06.440 --> 00:01:09.890
举例来说 你有个显示新闻文章的应用

00:01:09.890 --> 00:01:11.780
每个故事标题都可能改变

00:01:11.780 --> 00:01:15.720
你不希望你的界面分行 但如果标题真的很长

00:01:15.720 --> 00:01:17.380
或很短

00:01:17.380 --> 00:01:20.390
在 Android 里面 我们可以设定一个

00:01:20.390 --> 00:01:24.010
特殊的值来解决这个问题 称为 wrap_content

00:01:24.010 --> 00:01:26.500
它会调整 TextView 的宽度

00:01:26.500 --> 00:01:30.640
以变成（文字）内容的准确宽度

00:01:30.640 --> 00:01:32.770
不会太短也不会太长

00:01:32.770 --> 00:01:34.010
刚刚好

00:01:34.010 --> 00:01:37.520
高度也一样 但不设定为 150dp

00:01:37.520 --> 00:01:42.010
我们可以设定特殊值 wrap_content 这样文字视图就会更新

00:01:42.010 --> 00:01:46.480
使用的文字大小就会跟内容一样高

00:01:46.480 --> 00:01:50.610
设定 wrap_content 的宽高很有用

00:01:50.610 --> 00:01:54.710
你可能已经决定在这里放什么内容 而现在这些内容会被改变

00:01:54.710 --> 00:01:58.020
因为你没有多余的文字视图空间

00:01:58.020 --> 00:02:00.860
同样的 若其他文字视图在这之下

00:02:00.860 --> 00:02:05.130
他们可以向上调至到第一个视图下方

00:02:05.130 --> 00:02:09.220
回到新闻应用程序的范例 若这是故事标题 你不会

00:02:09.220 --> 00:02:13.560
希望故事一直往下延续到150 DPIs 这里

00:02:13.560 --> 00:02:17.830
相反 你希望这些描述正好位于标题下方

00:02:17.830 --> 00:02:20.760
缩小一点 试试看短一点的字符串

00:02:20.760 --> 00:02:22.840
你可以自己开始练习了

00:02:22.840 --> 00:02:25.420
我们需要你修改一些代码

00:02:25.420 --> 00:02:29.000
将 TextView 的宽、高改为 wrap_content

00:02:29.000 --> 00:02:32.970
然后将文本编辑成很长的句子或段落

00:02:32.970 --> 00:02:35.860
在设备上预览时可以显示多行文字

00:02:35.860 --> 00:02:40.640
你甚至可以将整首生日歌全部敲入 这将会很长

00:02:40.640 --> 00:02:42.450
代码链接在下方

