WEBVTT
Kind: captions
Language: ru

00:00:00.660 --> 00:00:03.923
Итак, мы увидели код
для TextView в первый раз.

00:00:03.923 --> 00:00:05.911
Но пока он завис непонятно где.

00:00:05.911 --> 00:00:09.025
Верно, нам надо куда-то его установить.

00:00:09.025 --> 00:00:10.521
Да, это будет IDE.

00:00:10.521 --> 00:00:12.530
Опять это сокращение.

00:00:12.530 --> 00:00:13.901
Катрин, напомни, что оно значит?

00:00:13.901 --> 00:00:16.062
<i>Integrated Development Environment</i>

00:00:16.062 --> 00:00:19.660
Верно, в этом уроке
мы будем использовать Android Studio.

00:00:19.660 --> 00:00:21.650
Вот как это выглядит.

00:00:21.650 --> 00:00:23.310
Все еще немного пугающе.

00:00:23.310 --> 00:00:24.870
Нам надо что-то,
что поможет ученикам

00:00:24.870 --> 00:00:27.560
легче понимать урок.

00:00:27.560 --> 00:00:31.766
Мы пытались сделать что-то вроде
Android Studio для учеников.

00:00:31.766 --> 00:00:36.017
По традиции использовать с компьютерами
кучу запутанных сокращений

00:00:36.017 --> 00:00:37.568
мы называем это XMLV.

00:00:37.568 --> 00:00:39.344
Это значит XML Визуализатор.

00:00:39.344 --> 00:00:41.970
Ты пишешь немного XML и видишь результат.

00:00:41.980 --> 00:00:44.560
Ты пишешь еще,
и видишь следующий результат.

00:00:44.560 --> 00:00:45.190
Ага.

00:00:45.190 --> 00:00:46.170
Используем его.

00:00:46.170 --> 00:00:47.420
Ладно.

00:00:47.420 --> 00:00:51.600
Поскольку XML визуализатор
был создан для этого курса,

00:00:51.600 --> 00:00:55.280
в нем нет всего функционала
Android Studio.

00:00:55.280 --> 00:00:57.530
Но во время урока, когда будет надо,

00:00:57.530 --> 00:01:01.220
мы перейдем в Android Studio,
и этот сайт больше не будет нужен.

00:01:02.450 --> 00:01:05.670
Ссылка на заметки, которым
вы можете следовать.

00:01:05.670 --> 00:01:08.110
В этом коде текст – "Happy Birthday".

00:01:08.110 --> 00:01:12.190
На устройство должно выводиться
"Happy Birthday".

00:01:12.190 --> 00:01:15.320
А сейчас попробуем изменить текст на
"Happy Birthday, Kunal".

00:01:16.350 --> 00:01:19.550
Если увеличить экран устройства,
мы увидим теперь

00:01:19.550 --> 00:01:21.270
"Happy Birthday, Kunal".

00:01:21.270 --> 00:01:24.250
Что случится, если я попробую
установить высоту и ширину?

00:01:24.250 --> 00:01:27.580
Возьму случайное значение
в 300dp для ширины

00:01:27.580 --> 00:01:30.140
и 500dp для высоты.

00:01:30.140 --> 00:01:34.119
Теперь на предпросмотре вы видите,
что зона текста стала гораздо больше.

00:01:35.160 --> 00:01:39.220
А текст в верхнем левом углу
остался того же размера.

00:01:40.750 --> 00:01:43.890
Обратите внимание,
что после значений ширины и высоты

00:01:43.890 --> 00:01:48.400
300 и 500 в обеих случаях идёт dp.

00:01:48.400 --> 00:01:51.560
Это единица измерения,
как сантиметр или миллиметр.

00:01:51.560 --> 00:01:55.120
С ее помощью мы определяем
размер представления в Android.

00:01:55.120 --> 00:01:57.440
А также расстояние между представлениями.

00:01:58.550 --> 00:02:01.450
dp означает
<i>density-independent pixels.</i>

00:02:02.540 --> 00:02:04.840
Позвольте объяснить,
для чего нам это надо.

00:02:04.840 --> 00:02:09.030
Допустим, эти красивые прямоугольники
представляют разные устройства.

00:02:09.030 --> 00:02:14.230
Они одинакового размера,
но отличаются разрешением.

00:02:14.230 --> 00:02:18.980
Это устройство среднего разрешения со
средним количеством пикселей,

00:02:18.980 --> 00:02:22.580
устройство с высоким и
очень высоким разрешением.

00:02:22.580 --> 00:02:26.540
Когда я говорю "пиксель", это значит,
что экран состоит из маленьких квадратов,

00:02:26.540 --> 00:02:30.300
называемых пикселями,
и они загораются, создавая изображение.

00:02:30.300 --> 00:02:34.740
Если определить размер предмета,
например, кнопки, 2 пикселя в высоту

00:02:34.740 --> 00:02:38.620
и 2 пикселя в ширину, вот так
это выглядит при среднем разрешении.

00:02:39.670 --> 00:02:43.350
На высоком разрешении
это тоже 2 пикселя на 2 пикселя.

00:02:43.350 --> 00:02:44.850
Но немного меньше размером,

00:02:44.850 --> 00:02:49.060
так как в целом
пикселей в устройстве гораздо больше.

00:02:49.060 --> 00:02:54.270
На очень высоком разрешении
на такой же площади пикселей ещё больше,

00:02:54.270 --> 00:02:56.720
и кнопка выглядит очень маленькой.

00:02:56.720 --> 00:02:58.470
Я с трудом попадаю по ней пальцем.

00:02:58.470 --> 00:03:02.520
Приходится нажимать
самым кончиком или ногтем.

00:03:02.520 --> 00:03:04.990
Если у меня устройство
с очень высоким разрешением,

00:03:04.990 --> 00:03:06.790
это не значит, что у меня маленькие пальцы.

00:03:06.790 --> 00:03:10.060
Мне все так же надо нажимать
кнопки на экране.

00:03:10.060 --> 00:03:12.730
Вот поэтому мы пользуемся
<i>density-independent pixels</i>.

00:03:12.730 --> 00:03:15.720
Я могу указать, что кнопка будет
размером 2dp на 2dp.

00:03:15.720 --> 00:03:19.390
Вот так это будет выглядеть
на разных устройствах.

00:03:19.390 --> 00:03:21.800
Физически тот же размер,

00:03:21.800 --> 00:03:26.090
но Android использует для отображения
разное количество пикселей.

00:03:26.090 --> 00:03:29.360
Не заморачивайтесь про эту логику,
вам только надо помнить,

00:03:29.360 --> 00:03:33.520
что размеры надо определять в dp.

00:03:33.520 --> 00:03:38.040
При конструировании приложений
мы советуем делать все кнопки

00:03:38.040 --> 00:03:41.160
размером как минимум
48dps в высоту и ширину.

00:03:41.160 --> 00:03:44.100
Заметьте, 48dps, а не 48 пикселей,

00:03:44.100 --> 00:03:47.930
иначе она будет слишком маленькой
на устройстве с очень высоким разрешением.

00:03:47.930 --> 00:03:50.730
Так всем будет легко пользоваться
вашим приложением.

00:03:50.730 --> 00:03:53.489
Теперь, когда вы все это знаете,
я хочу, чтобы вы попробовали

00:03:53.489 --> 00:03:55.213
изменить код TextView.

00:03:55.213 --> 00:03:59.890
Вы напишите свои первые строки XML.
Так заманчиво!

00:03:59.890 --> 00:04:02.700
Сначала попробуйте изменить
текст в TextView.

00:04:02.700 --> 00:04:04.700
Потом попробуйте изменить
размеры в TextView.

00:04:05.950 --> 00:04:09.700
Потом я хочу, чтобы вы сделали ошибку. :(

00:04:09.700 --> 00:04:11.750
А потом исправили ее. :)

