WEBVTT
Kind: captions
Language: ko

00:00:00.660 --> 00:00:03.923
TextView 코드를 처음으로 봤죠.

00:00:03.923 --> 00:00:05.911
&gt;&gt; 이건 림보에 빠져있어요.

00:00:05.911 --> 00:00:09.025
&gt;&gt; 그래요, 우리가 이걸 사용할
공간이 필요해요.

00:00:09.025 --> 00:00:10.521
&gt;&gt; 네, 그 공간은 IDE예요.

00:00:10.521 --> 00:00:12.580
&gt;&gt; 다시 그 약자군요.

00:00:12.580 --> 00:00:13.721
캐서린, 그건 무엇의 약자죠?

00:00:13.721 --> 00:00:16.062
&gt;&gt; 통합 개발 환경이요.
&gt;&gt; 좋아요

00:00:16.062 --> 00:00:19.660
우리는 이 강의에서
Android Studio를 사용하죠.

00:00:19.660 --> 00:00:21.650
그건 이렇게 보여요.

00:00:21.650 --> 00:00:23.310
아직 조금 두렵게 하는 거죠.

00:00:23.310 --> 00:00:24.870
&gt;&gt; 네, 제 생각에

00:00:24.870 --> 00:00:27.560
우리 학생들이 더 쉽게
발전하도록 도울 것이 필요해요.

00:00:27.560 --> 00:00:30.806
&gt;&gt; 맞아요, 우리는 무언가를
개발하는 데 일했는데,

00:00:30.806 --> 00:00:34.667
그건 보조 바퀴가 되는
Android Studio에서 였고,

00:00:34.667 --> 00:00:37.568
이는 컴퓨터의 난해한 
약자로 불리는 XMLV 입니다.

00:00:37.568 --> 00:00:39.344
&gt;&gt; 이는 XML 가시화 도구입니다.

00:00:39.344 --> 00:00:41.250
&gt;&gt; XML을 조금 써요?

00:00:41.250 --> 00:00:42.310
결과를 볼 거예요.

00:00:42.310 --> 00:00:44.560
당신이 조금 더 쓰면,
더 많은 결과를 갖겠죠.

00:00:44.560 --> 00:00:45.190
&gt;&gt; 네.

00:00:45.190 --> 00:00:46.170
사용해봐요.

00:00:46.170 --> 00:00:47.420
&gt;&gt; 좋아요.

00:00:47.420 --> 00:00:51.600
&gt;&gt; XML 가시화 도구는 이 코스를
위해 특별히 만들어 졌어요.

00:00:51.600 --> 00:00:55.280
이것은 Android Studio가 제공하는
모든 기능을 제공하지 않아요.

00:00:55.280 --> 00:00:57.530
하지만 이 수업의 과제에서

00:00:57.530 --> 00:01:02.440
Android Studio로 갈 것이고
이 사이트를 더 사용하지 않을 거예요.

00:01:02.450 --> 00:01:05.670
따라오고 싶다면
instructor note에 링크가 있어요.

00:01:05.670 --> 00:01:08.110
이 코드에서, 텍스트는
Happy Birthday라고 해요.

00:01:08.110 --> 00:01:12.190
우리가 기기를 보면
Happy Birthday라고 말하죠.

00:01:12.190 --> 00:01:16.120
이제 텍스트를 Happy
Birthday, Kunal로 바꿔봅시다.

00:01:16.350 --> 00:01:19.550
기기 미리보기를 확대하면
이것이 Happy Birthday, Kunal

00:01:19.550 --> 00:01:21.270
이라고 말하는 것이 보여요.

00:01:21.270 --> 00:01:24.250
너비와 높이에 무엇이 발생할까요?

00:01:24.250 --> 00:01:27.580
좀 추상적인 숫자 300dp를 너비로

00:01:27.580 --> 00:01:30.140
500dp를 높이도 고를게요.

00:01:30.140 --> 00:01:34.799
이제 미리보기 화면에서
더 커진 TextView를 볼 수 있죠.

00:01:35.160 --> 00:01:39.780
하지만 텍스트는 여전히
같은 사이즈로 왼편 위쪽에 있어요.

00:01:40.750 --> 00:01:43.890
너비와 높이를 300, 500으로
두었을 때

00:01:43.890 --> 00:01:48.400
각각 dp가 붙는 것이 보이시죠.

00:01:48.400 --> 00:01:52.030
이것은 센티미터나 밀리미터 같은
측정의 단위인데

00:01:52.030 --> 00:01:55.120
안드로이드의 뷰 사이즈를
나타내는 데 사용됩니다.

00:01:55.120 --> 00:01:57.970
뷰들 사이의 거리도 마찬가지고요.

00:01:58.550 --> 00:02:01.910
단위 dp는 density-
independent pixels의 약자입니다.

00:02:02.540 --> 00:02:04.840
이게 왜 필요한지 설명해드릴게요.

00:02:04.840 --> 00:02:09.030
다른 기기를 대신하는 예쁘게 그려진
직사각형이 있다고 합시다.

00:02:09.030 --> 00:02:14.230
그들은 물리적으로 같은 사이즈지만
해상도에 따라서는 다릅니다.

00:02:14.230 --> 00:02:18.980
이는 화면에 중간 정도 픽셀수를 가진
중간 해상도의 기기예요.

00:02:18.980 --> 00:02:22.580
높은 해상도와 매우 높은 해상도 기기고요.

00:02:22.580 --> 00:02:26.540
픽셀은, 폰 화면은 매우 작고 많은
사각형으로 이루어져 있어요.

00:02:26.540 --> 00:02:30.300
그것은 픽셀이고 그들이
당신이 보는 것을 만들죠.

00:02:30.300 --> 00:02:34.740
뷰의 사이즈를 정의하면,
예를 들어, 버튼을 2픽셀 높이

00:02:34.740 --> 00:02:39.300
2픽셀 너비로 정의하면,
중간 해상도 기기에선 이렇게 보여요.

00:02:39.670 --> 00:02:43.350
해상도가 높은 기기에서는
이것도 2픽셀, 2픽셀이지만

00:02:43.350 --> 00:02:45.040
약간 더 작습니다.

00:02:45.040 --> 00:02:49.060
이 기기에 박힌 픽셀이
더 많기 떄문이죠.

00:02:49.060 --> 00:02:54.860
매우 높은 해상도 기기에선
매우 더 많은 픽셀이 이 공간에 있어

00:02:54.860 --> 00:02:56.720
그래서 버튼은 정말 작죠.

00:02:56.720 --> 00:02:58.470
이것을 거의 손가락으로
누를 수도 없어요.

00:02:58.470 --> 00:03:02.520
닿기 위해서 손가락 끝과
손톱을 사용해야 해요.

00:03:02.520 --> 00:03:04.990
제가 매우 해상도가 높은
기기를 가졌다고해서

00:03:04.990 --> 00:03:06.790
제가 더 작은 손가락을
가지는 건 아니에요.

00:03:06.790 --> 00:03:10.060
저는 여전히 화면 상의
버튼을 누르고 싶어요.

00:03:10.060 --> 00:03:12.730
그래서 density-independent
pixel이 있어요.

00:03:12.730 --> 00:03:15.720
저는 버튼을 2dps 높이
2dps 너비로 정의해요.

00:03:15.720 --> 00:03:19.390
이것이 다른 기기에서 이렇게 보여져요.

00:03:19.390 --> 00:03:21.800
이는 물리적으로 같은 사이즈지만

00:03:21.800 --> 00:03:26.090
안드로이드 내부에서는
다른 수의 픽셀로 그려내죠.

00:03:26.090 --> 00:03:29.360
당신은 이 논리에 대해
걱정할 필요 없어요.

00:03:29.360 --> 00:03:33.520
당신이 기억할 모든 것은
dp값으로 사이즈를 정의하는 것입니다.

00:03:33.520 --> 00:03:38.040
당신 앱을 디자인할 때,
버튼 같은 터치할 대상을

00:03:38.040 --> 00:03:41.160
최소한 48dps 높이 너비로
만드는 것을 권장합니다.

00:03:41.160 --> 00:03:44.100
48dps를 말하는 것이지
48픽셀이 아닙니다.

00:03:44.100 --> 00:03:47.930
그렇지 않으면 초고해상도 기기에서
매우 작아질 것입니다.

00:03:47.930 --> 00:03:50.730
이는 모두가 앱을 쉽게
사용하도록 해줄거예요.

00:03:50.730 --> 00:03:53.489
이 모든 지식을 바탕으로
당신이 TextView 코드를

00:03:53.489 --> 00:03:55.213
지금 바꿔보길 바랍니다.

00:03:55.213 --> 00:03:59.890
당신은 XML의 첫 행을 쓰는 거예요.
정말 흥분되죠.

00:03:59.890 --> 00:04:02.700
먼저 TextView 안의 텍스트를
바꿔보세요.

00:04:02.700 --> 00:04:05.040
그리고 TextView의
주변을 바꿔보세요.

00:04:05.950 --> 00:04:09.700
에러를 만들어보세요.
슬픈 표정.

00:04:09.700 --> 00:04:12.110
그리고 다시 고쳐보세요.
기쁜 표정.

