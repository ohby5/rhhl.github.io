WEBVTT
Kind: captions
Language: ja

00:00:00.330 --> 00:00:04.800
もうお気づきでしょうが
このデバイス画面のテキストは小さいです

00:00:04.800 --> 00:00:09.200
私の視力は弱いので
ずっと大きくする必要があります

00:00:09.200 --> 00:00:10.110
幸いにも

00:00:10.110 --> 00:00:13.950
文字サイズの変更を宣言できる
属性があります

00:00:13.950 --> 00:00:17.040
でも待って
ここにエラーがあります

00:00:17.040 --> 00:00:20.380
コンピューターが私のXMLを
理解できなかった、ですって

00:00:20.380 --> 00:00:23.570
コードをダブルチェックしたら
実は新たに足したこの行が

00:00:23.570 --> 00:00:25.320
黒のフォントで出ています

00:00:25.550 --> 00:00:28.980
一方 上にある属性名は全部青で

00:00:28.980 --> 00:00:30.760
属性値は赤です

00:00:30.760 --> 00:00:32.850
だからこの行はどこか間違っています

00:00:32.900 --> 00:00:34.198
待って 分かった

00:00:34.198 --> 00:00:37.850
右山括弧の斜線が上のこっちにあります

00:00:37.850 --> 00:00:40.070
これは 初心者によくあるミスでー

00:00:40.070 --> 00:00:43.030
タグが閉じられた後に
属性を足しています

00:00:43.030 --> 00:00:46.590
技術的には 
これは XML 宙ぶらりんとかです

00:00:46.590 --> 00:00:49.690
なぜなら それが XML 要素に
つながっていないからです

00:00:49.690 --> 00:00:53.550
これらの記号をコピーして
下のここに動かすことが必要です

00:00:53.550 --> 00:00:54.770
これで良くなりました

00:00:54.770 --> 00:00:58.870
エラーは無くなり これは妥当なXMLで
フォントは大きくなります

00:00:59.610 --> 00:01:01.420
今はもうずっと読みやすいです

00:01:01.420 --> 00:01:04.189
文字サイズが 45sp なことに
注目して下さい

00:01:04.189 --> 00:01:06.730
sp は Scale-independent Pixels
(スケール非依存ピクセル)を表します

00:01:06.730 --> 00:01:09.440
これは dp と似た測定単位で

00:01:09.440 --> 00:01:14.850
様々な密度の様々なデバイスで
アプリを一定に見せます

00:01:14.850 --> 00:01:18.800
sp はフォントにだけ使います
なぜならそれはユーザーの好みや

00:01:18.800 --> 00:01:22.560
文字サイズの設定に基づいて
適応するからです

00:01:22.560 --> 00:01:23.810
ではそれを見てみましょう

00:01:23.810 --> 00:01:25.750
設定がどこにあるかをお見せしましょう

00:01:25.800 --> 00:01:29.160
アプリの「設定」に行き 
「表示」を押すと

00:01:29.160 --> 00:01:31.560
文字サイズのオプションがあります

00:01:31.560 --> 00:01:34.110
それをクリックすると
色々な文字サイズが見えます

00:01:34.110 --> 00:01:38.590
「大」をクリックすると
全ての文字サイズが大きくなります

00:01:38.590 --> 00:01:41.280
文字サイズを宣言するには
必ず sp を使って

00:01:41.280 --> 00:01:44.920
ユーザーの好みに従って
大小するようにして下さい

00:01:44.920 --> 00:01:47.820
まもなくあなたはテキストビューの
文字サイズを変えますが

00:01:47.820 --> 00:01:49.900
まず一つお見せします

00:01:49.900 --> 00:01:52.450
これはマテリアルデザイン仕様です

00:01:52.450 --> 00:01:55.450
マテリアルデザインは Google に
開発された新しいデザイン言語でー

00:01:55.450 --> 00:02:00.600
ウェブやモバイルなどの様々な
デバイスやプラットフォームで

00:02:00.600 --> 00:02:02.230
一貫して美しいアプリを作れます

00:02:02.230 --> 00:02:04.510
デザイン仕様は

00:02:04.510 --> 00:02:08.010
アプリをデザインする為の
ベストプラクティスを紹介しています

00:02:08.010 --> 00:02:12.110
アプリのレイアウト 表示スタイル 画像 アニメーション その他多くに関するー

00:02:12.110 --> 00:02:13.870
ガイダンスを提供します

00:02:13.870 --> 00:02:16.730
又 タイポグラフィやフォントに関する
部分もあります

00:02:16.730 --> 00:02:20.110
ここに沢山の情報があるので
後に読んでみて下さい

00:02:20.110 --> 00:02:22.280
しかし 最も大事なのは
ここのガイドでー

00:02:22.280 --> 00:02:24.370
推奨の文字サイズが書いてあります

00:02:24.370 --> 00:02:26.510
もしとても大きな見出しを表示するなら

00:02:26.510 --> 00:02:28.390
これらの文字サイズの値を使えます

00:02:28.390 --> 00:02:31.330
タイトルとか本文のテキスト
キャプションなら

00:02:31.330 --> 00:02:33.240
これらのサイズを使えます

00:02:33.240 --> 00:02:38.120
これは 用途に依ってどのタイプの値を
選ぶかの指針になります

00:02:38.240 --> 00:02:39.440
でも注意して下さい

00:02:39.440 --> 00:02:42.050
アプリに余り多くの種類のサイズや
スタイルを使うと

00:02:42.050 --> 00:02:44.090
ユーザーがとても
圧倒的に感じますから

00:02:44.090 --> 00:02:48.260
だから 望む情報を表示するために
２、３のスタイルを選んで下さい

00:02:48.260 --> 00:02:50.240
テキストビューの文字サイズを変える際

00:02:50.240 --> 00:02:52.560
ここのこれらの値を２、３試しなさい

00:02:52.560 --> 00:02:56.430
マテリアルデザイン仕様を使って
テキストビューの文字サイズを変えー

00:02:56.430 --> 00:02:58.480
次に挑戦する意欲があるなら

00:02:58.480 --> 00:03:02.880
下に 載せたGoogle+ Android Dev　
Protip の テキストアピアランス属性を

00:03:02.880 --> 00:03:04.540
学習してみなさい

00:03:04.540 --> 00:03:07.930
次に XML Visualizer でも
これを試せます

00:03:07.930 --> 00:03:10.420
あなたが始める為のコード付き
XML Visualizer へのリンクは

00:03:10.420 --> 00:03:12.240
下にあります

