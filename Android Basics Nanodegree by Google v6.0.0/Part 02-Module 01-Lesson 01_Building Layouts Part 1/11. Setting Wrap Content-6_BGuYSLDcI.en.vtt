WEBVTT
Kind: captions
Language: en

00:00:00.270 --> 00:00:04.140
Okay, so you've had your first attempt
at writing code and fixing errors.

00:00:04.140 --> 00:00:06.830
This type of experimentation
is a critical part of learning

00:00:06.830 --> 00:00:08.200
Android development.

00:00:08.200 --> 00:00:10.310
Let's talk about the size of views now.

00:00:10.310 --> 00:00:13.720
We know that the width and
height are expressed in DP values, or

00:00:13.720 --> 00:00:15.390
density independent pixels.

00:00:15.390 --> 00:00:18.290
This makes it look good across
a range of different devices.

00:00:18.290 --> 00:00:21.260
However, there's still room for
improvement in this UI.

00:00:21.260 --> 00:00:25.440
If I change this text here to be
something longer, for example wait,

00:00:25.440 --> 00:00:27.170
today's your birthday?

00:00:27.170 --> 00:00:30.780
Notice the text updates here,
but it wraps to two lines.

00:00:30.780 --> 00:00:32.400
Ideally it would all be on one line,

00:00:32.400 --> 00:00:35.530
because there is plenty of
screen real estate on this side.

00:00:35.530 --> 00:00:37.300
The reason the box didn't change sides,

00:00:37.300 --> 00:00:41.500
is because we gave it a fixed width and
height of 150dp.

00:00:41.500 --> 00:00:43.500
When you set a very specific value for

00:00:43.500 --> 00:00:47.240
width and height like this,
this is called hard coding a value.

00:00:47.240 --> 00:00:49.440
It's generally considered
not a good practice,

00:00:49.440 --> 00:00:53.760
because if the text ever changes
like this, then it looks funny.

00:00:53.760 --> 00:00:56.380
We have to go and change the width
to something like 200, so

00:00:56.380 --> 00:00:58.740
that it fits all on one line.

00:00:58.740 --> 00:01:01.250
But it would be such a hassle
to keep updating the width and

00:01:01.250 --> 00:01:03.750
height, based on what the text is.

00:01:03.750 --> 00:01:06.440
You might not know what
the text is until later.

00:01:06.440 --> 00:01:09.890
For example, if you have an app
that's showing news articles,

00:01:09.890 --> 00:01:11.780
the title of each story may change.

00:01:11.780 --> 00:01:15.720
And you don't want your UI to break,
if you have a really long title or

00:01:15.720 --> 00:01:17.380
if you have a really short title.

00:01:17.380 --> 00:01:20.390
So in Android we can solve this
problem by setting the width

00:01:20.390 --> 00:01:24.010
to be a special value
called wrap content.

00:01:24.010 --> 00:01:26.500
This address,
the width of the TextView, so

00:01:26.500 --> 00:01:30.640
that it's precisely the width
of the content inside of it.

00:01:30.640 --> 00:01:32.770
It's not too short and
it's not too large.

00:01:32.770 --> 00:01:34.010
It's just right.

00:01:34.010 --> 00:01:37.520
Similarly for height instead
of setting it to 150 dp, we

00:01:37.520 --> 00:01:42.010
can set it to the special value of wrap
content, then the text view will update,

00:01:42.010 --> 00:01:46.480
so that the size of the text use only
as tall as the text inside of it.

00:01:46.480 --> 00:01:50.610
Now, setting wrap content for height and
width is very powerful, because you

00:01:50.610 --> 00:01:54.710
might have content decided on the right
here, which will now be shifted over,

00:01:54.710 --> 00:01:58.020
because you don't have this
excess space in the text view.

00:01:58.020 --> 00:02:00.860
And similarly,
if you have other text views below this,

00:02:00.860 --> 00:02:05.130
now they can shift up to right
below this first text view.

00:02:05.130 --> 00:02:09.220
Back to the news app example, if this
was the story title, you wouldn't

00:02:09.220 --> 00:02:13.560
want the story description to be all
the way down here, 150 DPIs away.

00:02:13.560 --> 00:02:17.830
Instead, you'd want the description
to be right up under the story title.

00:02:17.830 --> 00:02:20.760
Zooming back out,
let's try a shorter string.

00:02:20.760 --> 00:02:22.840
Okay, it's time for you to practice now.

00:02:22.840 --> 00:02:25.420
We want you to change a couple
things with the code.

00:02:25.420 --> 00:02:29.000
Change the width and the height
of the TextView to wrap content.

00:02:29.000 --> 00:02:32.970
Then change the text to be a really
long, long sentence, or paragraph, so

00:02:32.970 --> 00:02:35.860
that it displays more than one line
of text on the device preview.

00:02:35.860 --> 00:02:40.640
You can even type out the full birthday
song if you wanted, that's pretty long.

00:02:40.640 --> 00:02:42.450
The code to get you
started is linked below.

