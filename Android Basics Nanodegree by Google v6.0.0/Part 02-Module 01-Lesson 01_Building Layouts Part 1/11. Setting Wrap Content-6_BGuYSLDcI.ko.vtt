WEBVTT
Kind: captions
Language: ko

00:00:00.270 --> 00:00:04.140
좋습니다. 이제 당신은
첫번째 코드작성 및 오류 수정을 배우셨습니다.

00:00:04.140 --> 00:00:06.830
이번 실험은 
이번 배움에서 중요한

00:00:06.830 --> 00:00:08.200
Android 개발입니다.

00:00:08.200 --> 00:00:10.310
이제 관점에 대해서 이야기해볼텐데요.

00:00:10.310 --> 00:00:13.720
저희는 넓고 높게 
DP 값을 표현하거나

00:00:13.720 --> 00:00:15.390
집중적으로 독립 픽셀을 표시했습니다.

00:00:15.390 --> 00:00:18.290
이 과정은 다른 장치에서 
보기 좋게 만들어 줍니다.

00:00:18.290 --> 00:00:21.260
그러나 이 UI에서 
발전할 수 있는 공간이 있습니다.

00:00:21.260 --> 00:00:25.440
이 텍스트를 조금 더 
긴 것으로 바꾼다면

00:00:25.440 --> 00:00:27.170
오늘이 생일인가요?

00:00:27.170 --> 00:00:30.780
여기 텍스트가 확인되지만
두줄로 표시되네요.

00:00:30.780 --> 00:00:32.400
한줄에 표시되면 좋겠죠.

00:00:32.400 --> 00:00:35.530
왜냐하면, 화면 다른 쪽에
공간이 남기 때문이죠.

00:00:35.530 --> 00:00:37.300
박스는 여백을 변경하지 안기에

00:00:37.300 --> 00:00:41.500
넓이 및 높이를 
150dp로 변경해야합니다.

00:00:41.500 --> 00:00:43.500
값을 다음과 같이 상세히 설정할 때

00:00:43.500 --> 00:00:47.240
넓이와 높이를 설정하고
이는 하드 코딩 값이라고 부릅니다.

00:00:47.240 --> 00:00:49.440
이는 보편적으로 고려되며
좋은 연습은 아닙니다,

00:00:49.440 --> 00:00:53.760
왜냐하면 텍스트가 변경되면,
이는 우습게 보이기 때문입니다.

00:00:53.760 --> 00:00:56.380
저희는 넓이를 변경해야합니다
아마 200정도, 그리고

00:00:56.380 --> 00:00:58.740
이는 한줄에 모두 맞춰집니다.

00:00:58.740 --> 00:01:01.250
하지만 이는 너무 급박하게 
넓이를 변경하며

00:01:01.250 --> 00:01:03.750
높이 역시 텍스트에 맞추어 변경합니다.

00:01:03.750 --> 00:01:06.440
하지만, 텍스트 양을 
나중에 아는 경우가 있을 수 있는데요.

00:01:06.440 --> 00:01:09.890
예를들어, 만약 당신이 뉴스 기사를 
보여주는 앱이 있다면,

00:01:09.890 --> 00:01:11.780
제목은 항상 변할 것입니다.

00:01:11.780 --> 00:01:15.720
그리고 UI를 변화하고 싶지 않다면
당신은 정말 긴 제목 혹은

00:01:15.720 --> 00:01:17.380
정말 짧은 제목을 사용해야할지 모릅니다.

00:01:17.380 --> 00:01:20.390
그래서 안드로이드에서 저희는 
넓이를 설정하여 문제를 해결할 수 있습니다.

00:01:20.390 --> 00:01:24.010
특별값은
랩 양식이라고 불립니다.

00:01:24.010 --> 00:01:26.500
이 주소는,
TextView넓이 그리고,

00:01:26.500 --> 00:01:30.640
컨텐츠가 포함될
넓이를 포함합니다.

00:01:30.640 --> 00:01:32.770
이는 너무 짧아서도
너무 커서도 안됩니다.

00:01:32.770 --> 00:01:34.010
정확해야합니다.

00:01:34.010 --> 00:01:37.520
150 dp설정
높이 대신에 우리는

00:01:37.520 --> 00:01:42.010
특별한 값으로 컨텐츠를 포함할 수 있는 값을 설정하고, 
텍스트 보기를 업데이트 할 수 있습니다.

00:01:42.010 --> 00:01:46.480
그렇다면 텍스트 사이즈는 단지
내부에서 같은 높이로 유지될 것입니다.

00:01:46.480 --> 00:01:50.610
이제, 높이 및 넓이를 설정하면,
매우 강력한 양식이 됩니다. 왜냐하면,

00:01:50.610 --> 00:01:54.710
당신은 한줄안에 양식을 알맞은 공간에
포함할 수 있게 되기 때문이며,

00:01:54.710 --> 00:01:58.020
텍스트 양식보다 큰 공간을
소비할 필요가 없습니다.

00:01:58.020 --> 00:02:00.860
그리고 유사하게,
만약 당신의 다른 텍스트가 아래에 있다면,

00:02:00.860 --> 00:02:05.130
이제 당신은 조정하여
알맞은 모습으로 만들 수 있습니다.

00:02:05.130 --> 00:02:09.220
뉴스 앱으로 돌아가서, 
만약 기사 제목이 있다면, 당신은

00:02:09.220 --> 00:02:13.560
모든 설명을 150DPI에 
표현하고 싶지 않을 것입니다.

00:02:13.560 --> 00:02:17.830
대신, 당신은 설명을
이야기 제목 아래 표현하고 싶을 것입니다.

00:02:17.830 --> 00:02:20.760
사이즈를 낮춘 후,
짧은 줄을 만들어봅시다.

00:02:20.760 --> 00:02:22.840
이제, 연습할 시간입니다.

00:02:22.840 --> 00:02:25.420
이 코드에서
몇가지만 수정하고자합니다.

00:02:25.420 --> 00:02:29.000
TextView에서 텍스트를 감싸고 있는 영역의
높이 및 넓이를 변경합니다.

00:02:29.000 --> 00:02:32.970
그리고 텍스트를 정말 
긴 문장 혹은 문단으로 바꾼 후

00:02:32.970 --> 00:02:35.860
미리보기에 한줄이 
넘는양식으로 표시해보세요.

00:02:35.860 --> 00:02:40.640
당신은 생일 축하노래를 
입력하여 원하는 줄을 만들 수 있습니다.

00:02:40.640 --> 00:02:42.450
이와 같은 방법을 할 수 있는 코드는
아래와 같습니다.

