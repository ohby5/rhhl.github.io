{
  "data": {
    "lesson": {
      "id": 325035,
      "key": "8e669b70-81c0-4761-b58a-020463ede18f",
      "title": "Activity Lifecycle and Audio Playback",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Use an external library to add audio to your app.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/8e669b70-81c0-4761-b58a-020463ede18f/325035/1544460279671/Activity+Lifecycle+and+Audio+Playback+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/8e669b70-81c0-4761-b58a-020463ede18f/325035/1544460262718/Activity+Lifecycle+and+Audio+Playback+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 813,
          "key": "79622279720923",
          "title": "Lesson 4 Course Map",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279720923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 53129,
              "key": "7962227972",
              "title": "Lesson 4 Course Map",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "Yp-CsC4A4kI",
                "china_cdn_id": "Yp-CsC4A4kI.mp4"
              }
            }
          ]
        },
        {
          "id": 102683,
          "key": "79622279730923",
          "title": "Plan How to Add the Audio Feature",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279730923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 105235,
              "key": "7962227973",
              "title": "Plan How to Add the Audio Feature",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "**Hint:** These were the steps to add images to the app in Lesson 3:\n\n * Modify list item layout to include an image (use placeholder image)\n * Add in all image files\n * Modify Word class to store image resource ID\n * Update WordAdapter to display correct image for each list item\n * Fix PhrasesActivity to hide images\n * Visual polish\n",
              "user_state": {
                "node_key": "7962227973",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "-P8ZlbrL8o8",
                  "china_cdn_id": "-P8ZlbrL8o8.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Plan How to Add the Audio Feature",
                "alt_text": "Quiz plan how to build audio feature",
                "background_image": "//lh3.googleusercontent.com/PKepVGiho27X97q9cgAQpMWEbLNMGjHpbNiN8tEk4HhbNCVhRY-SAi7dC-Le85EW1LXyRMFiKN2yevKZFw=s0#w=1440&h=850",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227973",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8033767208",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox to describe plan",
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.2616407982261641,
                      "width": 0.6608478802992519,
                      "x": 0.028093827930174564,
                      "y": 0.3132621951219512
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textox to decide what class",
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.1130820399113082,
                      "width": 0.6471321695760599,
                      "x": 0.035107543640897756,
                      "y": 0.7199279379157428
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "2Z7hlnN89Lw",
                  "china_cdn_id": "2Z7hlnN89Lw.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 133535,
          "key": "79622279760923",
          "title": "Music Player App",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279760923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 129008,
              "key": "7962227976",
              "title": "Music Player App",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "No audio file will be provided because of licensing rights. We encourage you to find a usable (fun) audio file on your own to incorporate into your Music Player App. \n\n\n**<em>Hints:</em>** \n * Make the MediaPlayer object a global variable in your MainActivity\n * <a href=\"http://www.tutorialspoint.com/android/android_mediaplayer.htm \" target=\"_blank\">MediaPlayer Tutorial</a>\n\n<a href=\"http://developer.android.com/guide/topics/resources/providing-resources.html\" target=\"_blank\">Providing resources in Android</a> (including an explanation of the “raw” folder)",
              "user_state": {
                "node_key": "7962227976",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "59iQK7cjL3A",
                  "china_cdn_id": "59iQK7cjL3A.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Music Player App",
                "alt_text": "Quiz to use MediaPlayer API",
                "background_image": "//lh3.googleusercontent.com/RSWV9PFGF_EosXfoSxKy85aG9F6MRsJ5LP5mMX8ksd8GctEsz9lThWf_zuP6pSI6DoFPmuZxi1ieUyRThg=s0#w=1440&h=872",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227976",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8077998538",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox for step 1",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.04851153366583541,
                      "y": 0.2298711197339246
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox for step 2",
                    "marker": "check2",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.04966100374064838,
                      "y": 0.307580376940133
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox for step 3",
                    "marker": "check3",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.04720620324189526,
                      "y": 0.44723531042128606
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox for step 4",
                    "marker": "check4",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.04849205112219451,
                      "y": 0.5663456208425721
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "i4CBhX-S1mc",
                  "china_cdn_id": "i4CBhX-S1mc.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 601,
          "key": "80839123430923",
          "title": "MediaPlayer Class",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80839123430923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 134820,
              "key": "8083912343",
              "title": "MediaPlayer Class",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "<a href=\"http://developer.android.com/guide/topics/media/mediaplayer.html\" target=\"_blank\">MediaPlayback article</a>\n\n<a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\">Supported media formats</a> on Android\n",
              "video": {
                "youtube_id": "u5mT52megJ0",
                "china_cdn_id": "u5mT52megJ0.mp4"
              }
            }
          ]
        },
        {
          "id": 29723,
          "key": "80895726320923",
          "title": "States of the Media Player Part 1",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80895726320923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 134829,
              "key": "8089572632",
              "title": "States of the Media Player Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "<a href=\"http://developer.android.com/reference/android/media/MediaPlayer.html\" target=\"_blank\">MediaPlayer documentation</a> that shows the full state machine diagram",
              "video": {
                "youtube_id": "WsJwylFthbE",
                "china_cdn_id": "WsJwylFthbE.mp4"
              }
            }
          ]
        },
        {
          "id": 52843,
          "key": "79622279790923",
          "title": "States of the Media Player Part 2",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279790923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 49883,
              "key": "7962227979",
              "title": "States of the Media Player Part 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "<a href=\"https://www.youtube.com/watch?v=XQwe30cZffg\" target=\"_blank\">“Media Playback the Right Way” - Big Android BBQ Talk</a> by Developer Advocate Ian Lake\n",
              "video": {
                "youtube_id": "8xTLEqZEIbk",
                "china_cdn_id": "8xTLEqZEIbk.mp4"
              }
            }
          ]
        },
        {
          "id": 112231,
          "key": "81873985490923",
          "title": "Challenge: Complete the Audio Feature",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "81873985490923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 4864,
              "key": "8187398549",
              "title": "Challenge: Complete the Audio Feature",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "I want to pause for a moment and present you with 2 options for you to “choose your own adventure” through this lesson.\n\n### Option #1:\n\nIf you want a challenge, you can skip over the next few videos, and modify the app on your own so that clicking on each word plays the correct audio file. You can download audio files for all the words at <a href=\"https://github.com/udacity/ud839_Miwok/tree/audio_assets\" target=\"_blank\">this link</a>. There’s no need to modify the user interface yet.\n\nWhen you’re done, resume Lesson 4 at Andrea's Interview.  \n\n### Option #2: \n\nIf you’re not ready to build the feature on your own, no worries at all. We expect most students to complete this lesson by walking through the changes together with us. We’ll break it down step-by-step while still making the coding tasks challenging for you. Continue watching!",
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 102836,
          "key": "80886128000923",
          "title": "Handling Touch Events On A ListView",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80886128000923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 24316,
              "key": "8088612800",
              "title": "Handling Touch Events On A ListView",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "",
              "user_state": {
                "node_key": "8088612800",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "oFQP9vE4HXk",
                  "china_cdn_id": "oFQP9vE4HXk.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Handling Touch Events On A ListView",
                "alt_text": "Quiz to Handle List Item Clicks",
                "background_image": "//lh3.googleusercontent.com/4oc3GnQrQQp-cVfZT-aWhEN_hyzrT7yqDI7n_dpCDS-qnpLaSZ6kykUkdKuiEw2LluNLSZEvWIhGCvjbkw=s0#w=1439&h=860",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8088612800",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8189128875",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox for method",
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.15077605321507762,
                      "width": 0.9002493765586035,
                      "x": 0.03740648379052369,
                      "y": 0.3503672394678492
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox for method inputs and data type",
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.14855875831485588,
                      "width": 0.9027431421446384,
                      "x": 0.048472568578553615,
                      "y": 0.6480737250554324
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "A7UMSW9Wj7w",
                  "china_cdn_id": "A7UMSW9Wj7w.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 643,
          "key": "79622279800923",
          "title": "AdapterView",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279800923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 53249,
              "key": "7962227980",
              "title": "AdapterView",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SRmde1HcrLY",
                "china_cdn_id": "SRmde1HcrLY.mp4"
              }
            }
          ]
        },
        {
          "id": 26024,
          "key": "79622279810923",
          "title": "Play One Audio File",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279810923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 137975,
              "key": "7962227981",
              "title": "Play One Audio File",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "Download <a href=\"https://drive.google.com/open?id=0B1EzdQpQA3C0Nl9kbmpJNWFpNWs\" target=\"_blank\">number_one.mp3</a> file \n\n**Hint:**  As a first step, when you click on a list item, pop up a toast message. Then modify the code so that clicking on a list item plays an audio file. \n<a href=\"https://github.com/udacity/ud839_Miwok/commit/43a1596a48521beee160f937988a5c564519dbb5\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/43a1596a48521beee160f937988a5c564519dbb5\" target=\"_blank\">This is the state of the code after completing the quiz.</a>\n\n*Note:* In the video solution, Jessica presents the solution without showing that she'd already declared a new MediaPlayer variable ([Solution code](https://github.com/udacity/ud839_Miwok/blob/43a1596a48521beee160f937988a5c564519dbb5/app/src/main/java/com/example/android/miwok/NumbersActivity.java#L29). Remember to add that when completing your code. \n\nEmoji art supplied by http://emojione.com\n",
              "user_state": {
                "node_key": "7962227981",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "x4I7sWNAVrs",
                  "china_cdn_id": "x4I7sWNAVrs.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Play One Audio File",
                "alt_text": "Quiz to play same audio file for all list items",
                "background_image": "//lh3.googleusercontent.com/P197husxGo8mjyAfQy1cHFu2r40AAhNnSqd-jSWcUPKOgIG9wsPdufwLXJ-ZPdOc7xtc25MKp7ZzA5H1cIY=s0#w=1440&h=856",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227981",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8069870266",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to implement OnClickListener",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.0407574812967581,
                      "y": 0.38016213968957874
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "PO6sOeqUps4",
                  "china_cdn_id": "PO6sOeqUps4.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 57262,
          "key": "79622279840923",
          "title": "Add Remaining MP3 Files",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279840923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 102312,
              "key": "7962227984",
              "title": "Add Remaining MP3 Files",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "<a href=\"https://github.com/udacity/beginner_android_learn_miwok/tree/audio_assets\" target=\"_blank\">Download remaining audio files</a>\n\n\nAdd the audio files to the res/raw directory of your app. It should look like this:\n```\nres/raw/color_black.mp3\nres/raw/color_brown.mp3\netc...\n```\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/670be7acfe5cbbd73d8dc8235c318cdb77b7ec8f\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/670be7acfe5cbbd73d8dc8235c318cdb77b7ec8f\" target=\"_blank\">This is the state of the code after completing the quiz.</a>\n\n---\n\nEmoji art supplied by http://emojione.com\n",
              "user_state": {
                "node_key": "7962227984",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "pJK0tRif3h0",
                  "china_cdn_id": "pJK0tRif3h0.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Add Remaining MP3 Files",
                "alt_text": "Quiz to add remaining MP3 Files",
                "background_image": "//lh3.googleusercontent.com/pDd4lQ7erfuyYxcMnUgcX8iltSogVDnkiCb_A26l5PqWrNiDCC5MW74gWKdaFDhlkCFXk_wjdfPs9AE_l0k=s0#w=1440&h=848",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227984",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8067608560",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox that remaining files have been added",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.08621025561097256,
                      "y": 0.17561668514412418
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "l5iCXIxowF8",
                  "china_cdn_id": "l5iCXIxowF8.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 92793,
          "key": "79622279870923",
          "title": "Which Audio File to Play",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279870923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 89957,
              "key": "7962227987",
              "title": "Which Audio File to Play",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "Reference documentation for <ahref=\"https://developer.android.com/reference/android/widget/AdapterView.OnItemClickListener.html\" target=\"_blank\">onItemClick() </a>method\n\nEmoji art supplied by http://emojione.com",
              "user_state": {
                "node_key": "7962227987",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "cOsRrlVl2SU",
                  "china_cdn_id": "cOsRrlVl2SU.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Which Audio File to Play - Quiz",
                "alt_text": "Quiz to play the correct audio file",
                "background_image": "//lh3.googleusercontent.com/VrVggvWVPi7nTsuUqcWTVKT-XAD3COKZJanZgT9nME1fC1ZTn9af1hSZfJogkBrGW7z6yw7HzIYnBsqc9cg=s0#w=1723&h=993",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227987",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8061812715",
                "widgets": [
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radiobutton - adapterView",
                    "marker": "radio1",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.06094139650872818,
                      "y": 0.5234894678492239
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radiobutton - view",
                    "marker": "radio2",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.0608050187032419,
                      "y": 0.6166504988913526
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radiobutton - position",
                    "marker": "radio3",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.06150639027431421,
                      "y": 0.700180155210643
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radiobutton - id",
                    "marker": "radio4",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.05938279301745636,
                      "y": 0.7864467849223947
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "FdAyQjfD2F0",
                  "china_cdn_id": "FdAyQjfD2F0.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 112849,
          "key": "79622279900923",
          "title": "Play Correct Audio File Per Word",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79622279900923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 57661,
              "key": "7962227990",
              "title": "Play Correct Audio File Per Word",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "More details about <a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html\" target=\"_blank\">anonymous classes<a/>\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/aa0a0d83fc4a036df53e297fae12b96fcde61a8a\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/aa0a0d83fc4a036df53e297fae12b96fcde61a8a\" target=\"_blank\">This is the state of the code after completing the quiz.</a>\n\nEmoji art supplied by http://emojione.com",
              "user_state": {
                "node_key": "7962227990",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "qWQaH73Ad4s",
                  "china_cdn_id": "qWQaH73Ad4s.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Play Correct Audio File Per Word",
                "alt_text": "",
                "background_image": "//lh3.googleusercontent.com/b_YQSqiCeEXSjwYAyjMSX3O55pjUgeXs-8uA1Pkk6PfIok4LOgufYyTHB6HabfGhT5ZBagG7mPnRuIy6nFkW=s0#w=1725&h=1000",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7962227990",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8081148544",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": null,
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.10606296758104738,
                      "y": 0.6022034368070953
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "wauz5hafyxU",
                  "china_cdn_id": "wauz5hafyxU.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 116314,
          "key": "81542017860923",
          "title": "Andrea Interview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "81542017860923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 53226,
              "key": "8154201786",
              "title": "Andrea Interview",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "SFRpzRFSYCo",
                "china_cdn_id": "SFRpzRFSYCo.mp4"
              }
            },
            {
              "id": 6836,
              "key": "c42c16f0-21e1-4fe1-8259-b55b3ab8aee1",
              "title": "Andrea Delgado-Olsen",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Andrea is part of <em>Native American Women in Computing</em>, an Anita Borg <a href=\"http://anitaborg.org/get-involved/systers/\" target=\"_blank\">Systers Community</a>. ",
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 762,
          "key": "81887887670923",
          "title": "The toString() Method (Optional)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "81887887670923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 71695,
              "key": "8188788767",
              "title": "The toString() Method (Optional)",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Current State of the Code\n\nIf you skipped the previous nodes and are re-joining us, welcome back! At this point, your app should play the corresponding audio file when you click on each word. Congratulations on getting the feature working! You can compare your code with the latest version of our <a href=\"https://github.com/udacity/ud839_Miwok/tree/aa0a0d83fc4a036df53e297fae12b96fcde61a8a\" target=\"_blank\">code</a> on GitHub.\n\n## Debugging Tip\n\nBefore we continue with the rest of the app, I would like to provide a quick debugging tip, if you didn’t already know it.\n\nYou can use log statements to figure out the state of any Java object. The easiest way to print out the contents of a Java object is to provide an implementation of toString() method. The purpose of this method is to represent the whole object as a string, usually for debugging purposes. \n\n## Word Class Example\n\nLet me show you an example with the Word object. Within the Word class, override the toString method.\n\n**1)** Put your cursor in an empty space in the file (that is outside of the existing methods, but still within the class). \n\n*See example:*\n\n![Cursor In Empty Space](https://lh3.googleusercontent.com/toUHn1DgKSPjVi5_vTYZfOLqtfl_VhdLr1xtUGnSzyWkavWDIaa4ZwB3ZM58lCKTyCxxgjf55gHT-6t-dz6L=s0#w=437&h=265)\n\n**2)** Then use a keyboard shortcut to automatically “Generate a method (Getters, Setters, Constructors, toString, etc..)”. On Windows, the keyboard shortcut is ALT + Insert. On Mac, the keyboard shortcut is CMD + N. \n\n**3)** You should see this dialog pop-up. Select toString().\n\n![Dialog Pop-up](https://lh3.googleusercontent.com/Ebz2UhlIlTAfeq1XSvBxJU3a8ZSW_CF6XwnBlNsrYwMr72xbsFj_9dJZbKsmlo-Ut3pf_emyHTZxKXbL8Lg=s0#w=175&h=184)\n\n**4)** Accept the default choices by hitting OK.\n\n![Default Choices](https://lh3.googleusercontent.com/Ebz2UhlIlTAfeq1XSvBxJU3a8ZSW_CF6XwnBlNsrYwMr72xbsFj_9dJZbKsmlo-Ut3pf_emyHTZxKXbL8Lg=s0#w=175&h=184)\n\n**5)** This toString() method will be automatically generated by Android Studio and added to your Word class. The method concatenates a bunch of variables and text, in order to print out all the variables in your Word class as a string. As you can see, the return value of the method is a single String.\n\n         /**\n         * Returns the string representation of the {@link Word} object.\n         */\n         @Override\n          public String toString() {\n           return \"Word{\" +\n                \"mDefaultTranslation='\" + mDefaultTranslation + '\\'' +\n                \", mMiwokTranslation='\" + mMiwokTranslation + '\\'' +\n                \", mAudioResourceId=\" + mAudioResourceId +\n                \", mImageResourceId=\" + mImageResourceId +\n                '}';\n         }\n    \n**6)** Then whenever you have a Word object, such as within the onItemClick() method of the OnItemClickListener, you can print out the Word object to the logs. \n\n        // Set a click listener to play the audio when the list item is clicked on listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        @Override\n        public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {\n        // Get the {@link Word} object at the given position the user clicked on\n        Word word = words.get(position);\n        \n        Log.v(\"NumbersActivity\", \"Current word: \" + word);\n        \n        // Create and setup the {@link MediaPlayer} for the audio resource associated with the current word\n        mMediaPlayer = MediaPlayer.create(PhrasesActivity.this, word.getAudioResourceId());\n        \n        // Start the audio file\n        mMediaPlayer.start();\n           }\n        });\n\n**Note:** If you concatenate (with the “+” operator) a string with a Word object, then Java will implicitly call the toString() method on the object. That means, these two statements are equivalent:\n\n`Log.v(\"NumbersActivity\", \"Current word: \" + word);`\n\n\nOR\n\n`Log.v(\"NumbersActivity\", \"Current word: \" + word.toString());`\n\n\n**7)** Then in the Android logcat, you will something like this output. I highlighted the log tag in green font color (NumbersActivity), and I highlighted the return value of the Word toString() in purple font color.\n\n![Log Messages](https://lh3.googleusercontent.com/2uESB4xDw1lcG5DmP14XzZy84wbR_G_NvDFKIq4K8TV7GoR1-U_RjWNXFKivma6sW7DeaEQ4hNH3XhQpiws=s0#w=666&h=134)\n\nTo summarize, we’ve just covered how you can override the toString() method of any class, which is optional. However, it’s a helpful practice because in the future, you may want to print the current state of an object to the logs (instead of using the step-by-step debugger in Android Studio).",
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 116347,
          "key": "80820922960923",
          "title": "Async Callbacks in Android",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820922960923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 467294,
              "key": "45f2a832-ce86-496e-82ff-66a2d4cc6444",
              "title": "Async Callbacks in Android",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1yTziwbo8mo",
                "china_cdn_id": "1yTziwbo8mo.mp4"
              }
            },
            {
              "id": 467288,
              "key": "f1d869af-7bec-4e8e-8be6-904800b78280",
              "title": "Quiz #1",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f1d869af-7bec-4e8e-8be6-904800b78280",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "(Note: The format of the quiz in the video has been changed)\nWhich MediaPlayer callback method will notify us when the MediaPlayer has finished playing the audio file?",
                "answers": [
                  {
                    "id": "a1512166201943",
                    "text": "OnCompletionListener.onCompletion(MediaPlayer mp)",
                    "is_correct": true
                  },
                  {
                    "id": "a1512166308402",
                    "text": "OnBufferingUpdateListener.onBufferingUpdate(MediaPlayer mp, int percent)",
                    "is_correct": false
                  },
                  {
                    "id": "a1512166321325",
                    "text": "OnInfoListener.onInfo(MediaPlayer mp, int what, int extra)",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 467293,
              "key": "59898f9c-f56f-4e75-bb3f-1104c974a783",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "59898f9c-f56f-4e75-bb3f-1104c974a783",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "For our sample music player app, modify the app so that when the song is done playing, it pops up a message saying \"I'm done!\""
              ],
              "positive_feedback": "Done implementing Async Callbacks, but not done with the app just yet :) Continue on and let's dive more into media resources.",
              "video_feedback": null,
              "description": "Quiz #2\nComplete the task to match the screenshot below."
            },
            {
              "id": 467300,
              "key": "e81024c9-866b-4b9d-a33d-a6bcd23ce0b8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/December/5a21d637_screen-shot-2017-12-01-at-2.14.13-pm/screen-shot-2017-12-01-at-2.14.13-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e81024c9-866b-4b9d-a33d-a6bcd23ce0b8",
              "caption": "The app pops up with a message \"I'm done!\" after implementing async callbacks. ",
              "alt": "",
              "width": 426,
              "height": 736,
              "instructor_notes": null
            },
            {
              "id": 467296,
              "key": "f3f1ad20-98be-4728-989d-9ebcce3c08d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Solution",
              "instructor_notes": ""
            },
            {
              "id": 467295,
              "key": "95603e38-bc80-4f1f-8153-8707cad745e3",
              "title": "Async Callbacks in Android 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WrAZMTUJ3tg",
                "china_cdn_id": "WrAZMTUJ3tg.mp4"
              }
            }
          ]
        },
        {
          "id": 58000,
          "key": "80820922990923",
          "title": "Cleaning Up Media Resources",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820922990923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 88199,
              "key": "8082092299",
              "title": "Cleaning Up Media Resources",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "**Code snippet:**\n <a href=\"https://gist.github.com/udacityandroid/f4ec40027031ba7de9352465f143c816\" target=\"_blank\">Helper method</a> to release media player resources. Make sure that you have a global MediaPlayer variable called `mMediaPlayer` in your category activity files, in order for the code snippet to work.\n**Additional resources:**\n* Documentation for the MediaPlayer <a href=\"http://developer.android.com/reference/android/media/MediaPlayer.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#release()\" target=\"_blank\">release()</a> method\n* <a href=\"http://developer.android.com/reference/android/media/MediaPlayer.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#StateDiagram\" target=\"_blank\">MediaPlayer state diagram</a>\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/c2a89bc69a3af9e8aa6d37f1fdaa16e3f6dc4514\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/c2a89bc69a3af9e8aa6d37f1fdaa16e3f6dc4514\" target=\"_blank\">This is the state of the code after completing the quiz.</a>\n\nEmoji art supplied by http://emojione.com",
              "user_state": {
                "node_key": "8082092299",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "XdEHQLyZ8ng",
                  "china_cdn_id": "XdEHQLyZ8ng.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Cleaning Up Media Resources",
                "alt_text": "Quiz to Clean Up Media Resources",
                "background_image": "//lh3.googleusercontent.com/lCegqti0TVcv1RYkY-olyVpGMBy2XoEp0QjmGcFPsteT9xfjTce0bKW821C4jWmVtaQ44v1LVXTIf03OKEk=s0#w=1440&h=828",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092299",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8193888764",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to release resources after sound file as finished",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.09092503117206982,
                      "y": 0.35833564301552107
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to release MediaPlayer resources before",
                    "marker": "check2",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.09780236907730673,
                      "y": 0.5356152993348116
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "-peLvG-3HUk",
                  "china_cdn_id": "-peLvG-3HUk.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 133100,
          "key": "80811827170923",
          "title": "Understanding The Activity Lifecycle",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80811827170923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 126028,
              "key": "8081182717",
              "title": "Understanding The Activity Lifecycle",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "Emoji art supplied by http://emojione.com",
              "video": {
                "youtube_id": "PfOA6th9bJ0",
                "china_cdn_id": "PfOA6th9bJ0.mp4"
              }
            }
          ]
        },
        {
          "id": 112632,
          "key": "80823525070923",
          "title": "Understanding The Activity Callbacks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80823525070923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 25845,
              "key": "8082352507",
              "title": "Understanding The Activity Callbacks",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": null,
              "video": {
                "youtube_id": "VUtB9OjGxiM",
                "china_cdn_id": "VUtB9OjGxiM.mp4"
              }
            }
          ]
        },
        {
          "id": 136980,
          "key": "80820923020923",
          "title": "Sample App With Lifecycle Callbacks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923020923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 54648,
              "key": "8082092302",
              "title": "Sample App With Lifecycle Callbacks",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "- <a href=\"https://gist.github.com/anonymous/8f1c6e624a5374a51dac6d5b1e58cae6\" target=\"_blank\">MainActivity.java code </a>from the Lifecycle sample app we demoed\n\n- StackOverflow [Summary of Activity Lifecycle methods](https://stackoverflow.com/questions/8515936/android-activity-life-cycle-what-are-all-these-methods-for/8516056#8516056) explaining)",
              "video": {
                "youtube_id": "VGFU3UbzcCc",
                "china_cdn_id": "VGFU3UbzcCc.mp4"
              }
            }
          ]
        },
        {
          "id": 125998,
          "key": "80820923030923",
          "title": "MediaPlayer And Activity Lifecycle",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923030923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 98908,
              "key": "8082092303",
              "title": "Mediaplayer And Activity Lifecycle",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "**Hint:** <a href=\"http://developer.android.com/reference/android/media/MediaPlayer.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#release()\" target=\"_blank\">MediaPlayer release() method</a>\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/315130f547fe9b853d59fb01fd77426a7b19ba8c\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/315130f547fe9b853d59fb01fd77426a7b19ba8c\" target=\"_blank\">This is the state of the code after completing the quiz.</a>",
              "user_state": {
                "node_key": "8082092303",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "eR7qRSaS7DY",
                  "china_cdn_id": "eR7qRSaS7DY.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Mediaplayer And Activity Lifecycle",
                "alt_text": "Quiz about MediaPlayer and Activity Lifecycle",
                "background_image": "//lh3.googleusercontent.com/u2mbVrERyjxsleitsHsjlbFgx8VBnsqrYipl5rTC-pvAGiFN1jKzjC-quEXT4sj_z5PCBTdbhu4yu-neidnp=s0#w=1440&h=838",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092303",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8190268822",
                "widgets": [
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radio Button onResume",
                    "marker": "radio1",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.07003974438902744,
                      "y": 0.37153547671840353
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radio Button onCreate",
                    "marker": "radio2",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.32409211346633415,
                      "y": 0.37125831485587585
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radio Button onStop",
                    "marker": "radio3",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.5516287406483791,
                      "y": 0.3786031042128603
                    }
                  },
                  {
                    "group": "group1",
                    "initial_value": "false",
                    "label": "Radio Button onDestroy",
                    "marker": "radio4",
                    "model": "RadioButtonWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.7539549563591023,
                      "y": 0.3728519955654102
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "Ow4ykRjG2TY",
                  "china_cdn_id": "Ow4ykRjG2TY.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 40289,
          "key": "80821326830923",
          "title": "Learn About Audio Focus",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80821326830923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 29383,
              "key": "8082132683",
              "title": "Learn About Audio Focus",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "Skim the following articles to answer the quiz questions.\n\n* <a href=\"https://medium.com/google-developers/how-to-properly-handle-audio-interruptions-3a13540d18fa#.jkibca8ml\" target=\"_blank\">How to properly handle audio interruptions</a> by Developer Advocate Joanna Smith\n\n* <a href=\"https://developer.android.com/guide/topics/media-apps/audio-focus\" target=\"_blank\">Managing Audio Focus</a>",
              "user_state": {
                "node_key": "8082132683",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "DgZN0SaW1es",
                  "china_cdn_id": "DgZN0SaW1es.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Learn About Audio Focus",
                "alt_text": "Quiz about Audio Focus",
                "background_image": "//lh3.googleusercontent.com/WZ7rfPglo4w9RFtJ5dKwviq_puPSVdt-3DVsa2EJZfEd3rhMW2caucAp3dhoNFAduduMuGg8t8xr411oUrU=s0#w=1440&h=798",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082132683",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8188198916",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox about method to request audio focus",
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.13968957871396895,
                      "width": 0.8890274314214464,
                      "x": 0.037542861596009974,
                      "y": 0.2704406873614191
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox for method to release audio focux",
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.13968957871396895,
                      "width": 0.8902743142144638,
                      "x": 0.039452150872817955,
                      "y": 0.4963968957871397
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox to get notified when audio focus state changes",
                    "marker": "text3",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.1419068736141907,
                      "width": 0.8890274314214464,
                      "x": 0.037971477556109724,
                      "y": 0.7859963968957872
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "jBAq2dt1N3g",
                  "china_cdn_id": "jBAq2dt1N3g.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 126481,
          "key": "80820923060923",
          "title": "AudioManager Service",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923060923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 134828,
              "key": "8082092306",
              "title": "AudioManager Service",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "In this course, we won’t be creating our own service, but you can learn more about services in Android <a href=\"http://developer.android.com/guide/components/services.html\" target=\"_blank\">here</a>.\n\nFor now, just know that AudioManager is a system service. You can interact with it like any other Java class. ",
              "video": {
                "youtube_id": "MzVPM07IYTA",
                "china_cdn_id": "MzVPM07IYTA.mp4"
              }
            }
          ]
        },
        {
          "id": 112542,
          "key": "80820923070923",
          "title": "Request Audio Focus",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923070923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 94795,
              "key": "8082092307",
              "title": "Request Audio Focus",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "For a list of possible streamType values, see the constants that start with the name “STREAM_” in the <a href=\"http://developer.android.com/reference/android/media/AudioManager.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics\" target=\"_blank\">AudioManager</a> class.\n\nFor a list of possible durationHint values, see the constants in the parameter description of the <a href=\"http://developer.android.com/reference/android/media/AudioManager.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,%20int,%20int)\" target=\"_blank\">requestAudioFocus</a> method.\n\n**<em>Hint:</em>** They should both be integer constants from the AudioManager class (spelled in capitalized letters)",
              "user_state": {
                "node_key": "8082092307",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "5hUXoGaAic4",
                  "china_cdn_id": "5hUXoGaAic4.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Request Audio Focus",
                "alt_text": null,
                "background_image": "//lh3.googleusercontent.com/ShrR3NlQZNdOHLAQn4sETzenstPI0DzXuPcpEzuK8089ZjQlnEfWLifBgzf4QTVqGkXs1GLiwG6xjfNDmZ4=s0#w=1440&h=834",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092307",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8193698875",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.13082039911308205,
                      "width": 0.8877805486284289,
                      "x": 0.030977244389027433,
                      "y": 0.5062707871396895
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": null,
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.13303769401330376,
                      "width": 0.8877805486284289,
                      "x": 0.0372895885286783,
                      "y": 0.8185282705099778
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "Y0qYdNrmfwA",
                  "china_cdn_id": "Y0qYdNrmfwA.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 770,
          "key": "80820923100923",
          "title": "Audio Focus States",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923100923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 31096,
              "key": "8082092310",
              "title": "Audio Focus States",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "See possible audio focus states in <a href=\"http://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener.html\" target=\"_blank\">OnAudioFocusStateChangeListener</a>\n\n<a href=\"https://medium.com/google-developers/how-to-properly-handle-audio-interruptions-3a13540d18fa#.jkibca8ml\" target=\"_blank\">How to properly handle audio interruptions</a>",
              "user_state": {
                "node_key": "8082092310",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "qb6C5-16-Sk",
                  "china_cdn_id": "qb6C5-16-Sk.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Audio Focus States",
                "alt_text": "Quiz about Audio Focus States",
                "background_image": "//lh3.googleusercontent.com/hrXJSAh6jvKh2UJHJX_KIcxnFUWKoPXVh54oOJOXwT8RIBI8lF0z6SC3YbYpM7IJZaH1a97c7dKI2-EHd8s=s0#w=1440&h=851",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092310",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8186280374",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Gain State Description",
                    "marker": "text1",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.15299334811529933,
                      "width": 0.34413965087281795,
                      "x": 0.32518313591022446,
                      "y": 0.286134977827051
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Gain Miwok Description",
                    "marker": "text2",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.1574279379157428,
                      "width": 0.3167082294264339,
                      "x": 0.6742323877805486,
                      "y": 0.28679323725055433
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss State Description",
                    "marker": "text3",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.15077605321507762,
                      "width": 0.34538653366583544,
                      "x": 0.32329332917705733,
                      "y": 0.4561737804878049
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss Miwok Description",
                    "marker": "text4",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.15299334811529933,
                      "width": 0.3179551122194514,
                      "x": 0.6757325436408977,
                      "y": 0.46001940133037694
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss Transient State Description",
                    "marker": "text5",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.15964523281596452,
                      "width": 0.34413965087281795,
                      "x": 0.3247350374064838,
                      "y": 0.6313400776053215
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss Transient Miwok Description",
                    "marker": "text6",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.16186252771618626,
                      "width": 0.3179551122194514,
                      "x": 0.675109102244389,
                      "y": 0.6297117516629712
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss Transient Can Duck State Description",
                    "marker": "text7",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.164079822616408,
                      "width": 0.34413965087281795,
                      "x": 0.3238972880299252,
                      "y": 0.8038040465631929
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "",
                    "label": "Textbox AudioFocus Loss Transient Can Duck Miwok Description",
                    "marker": "text8",
                    "model": "TextInputWidget",
                    "is_text_area": true,
                    "tabindex": null,
                    "placement": {
                      "height": 0.164079822616408,
                      "width": 0.3167082294264339,
                      "x": 0.674738933915212,
                      "y": 0.8045662416851441
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "Hy1HuPNWT-8",
                  "china_cdn_id": "Hy1HuPNWT-8.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 126479,
          "key": "80820923130923",
          "title": "Manage Audio Focus in the App",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923130923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 3878,
              "key": "8082092313",
              "title": "Manage Audio Focus in the App",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "**Previous Quiz Solutions:**\n\n* <a href=\"https://docs.google.com/document/d/11LgNsw9YXuBJubnQaRCIH-WZfiGbWMiaaueuKdwb5fE/pub\" target=\"_blank\">Solution from Learn About Audio Focus quiz</a>\n* <a href=\"https://docs.google.com/document/d/1uCVf6phRJYTzYycZ2zyreFXqvs6sJG-kUN_JjQCqVUo/pub\" target=\"_blank\">Solution from Request Audio Focus quiz</a>\n* <a href=\"https://docs.google.com/document/d/1JHliOqs-YRKzxGMinUSNjVgg1hgvE3r2uVcedD3JUV8/pub\" target=\"_blank\">Solution from Audio Focus States quiz</a>\n\n**Articles:**\n\n* <a href=\"https://medium.com/google-developers/how-to-properly-handle-audio-interruptions-3a13540d18fa#.jkibca8ml\" target=\"_blank\">How to properly handle audio interruptions</a>\n* <a href=\"https://developer.android.com/guide/topics/media-apps/audio-focus?utm_source=udacity&utm_medium=course&utm_campaign=android_basics\" target=\"_blank\">Managing Audio Focus</a>\n\n**Reference documentation:**\n\n* <a href=\"http://developer.android.com/reference/android/media/AudioManager.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics\" target=\"_blank\">AudioManager</a>\n* <a href=\"http://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics\" target=\"_blank\">OnAudioFocusStateChangeListener</a>\n\n**<em>(Optional) Mid-way checkpoint: </em>**After you’ve attempted task #2, if you want to check your work against our implementation, here’s the <a href=\"https://gist.github.com/anonymous/6d00bb2e8524fb78bb50f118a6180b8a\" target=\"_blank\">code</a> for the OnAudioFocusChangeListener.\n\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/2b548eae0e57d7ad0cbb9c77656fd24215ec6cb4\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/2b548eae0e57d7ad0cbb9c77656fd24215ec6cb4\" target=\"_blank\">This is the state of the code after completing the quiz.</a>\n\nEmoji art supplied by http://emojione.com",
              "user_state": {
                "node_key": "8082092313",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "tmC_XnJbE-M",
                  "china_cdn_id": "tmC_XnJbE-M.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Manage Audio Focus in the App",
                "alt_text": "Quiz about Managing the Audio Focus",
                "background_image": "//lh3.googleusercontent.com/5UTy5ot7Xdl61ty-jjH8fkY9x7JBbun2bMSwNF-48BqRdzAZUcHWmvAIcy1tqGqLaIwoHPnsaGb9NRLQBbur=s0#w=1440&h=840",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092313",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8190380461",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to Request audio focus",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.08147599750623441,
                      "y": 0.3389689578713969
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to create AudioManager instance",
                    "marker": "check2",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.08188513092269327,
                      "y": 0.42603242793791574
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to adapt playback behavior",
                    "marker": "check3",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.07773534912718205,
                      "y": 0.6247574833702882
                    }
                  },
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to release audio focus",
                    "marker": "check4",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.08231374688279301,
                      "y": 0.7141768292682927
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "1i2BqetT70I",
                  "china_cdn_id": "1i2BqetT70I.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 133105,
          "key": "80820923160923",
          "title": "Add Audio Icon to List Item Layout",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923160923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 39441,
              "key": "8082092316",
              "title": "Add Audio Icon to List Item Layout",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "Download the <a href=\"https://design.google.com/icons/#ic_play_arrow\" target=\"_blank\">play arrow icon</a> from the Material Design icons site (use the white 24dp version). Remember to include versions of the icon for all densities into your app (from mdpi → xxxhdpi).\n\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/b7bd85f46a0d3e4c9aaecaca91c4a204db817aeb\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/commit/b7bd85f46a0d3e4c9aaecaca91c4a204db817aeb\" target=\"_blank\">This is the state of the code after completing the quiz.</a>",
              "user_state": {
                "node_key": "8082092316",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": {
                "video": {
                  "youtube_id": "7P3eV0PTR5w",
                  "china_cdn_id": "7P3eV0PTR5w.mp4"
                },
                "text": null
              },
              "question": {
                "title": "Add Audio Icon to List Item Layout",
                "alt_text": "Quiz to add audio icon to list item layout",
                "background_image": "//lh3.googleusercontent.com/5yKyb_S8RmgIhqCKObiolxd8x3CSlMpSpDfkZUlsGUQuyIObI9-0mNaNrmi6AMNbe0Yx2NH-X2uTirJgoxCF=s0#w=1440&h=839",
                "non_google_background_image": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8082092316",
                "semantic_type": "ImageFormQuestion",
                "evaluation_id": "8193640613",
                "widgets": [
                  {
                    "group": null,
                    "initial_value": "false",
                    "label": "Checkbox to modify list_item.xml layout",
                    "marker": "check1",
                    "model": "CheckboxWidget",
                    "is_text_area": null,
                    "tabindex": null,
                    "placement": {
                      "height": 0.05,
                      "width": 0.05,
                      "x": 0.03502961346633417,
                      "y": 0.21029656319290466
                    }
                  }
                ]
              },
              "answer": {
                "text": null,
                "video": {
                  "youtube_id": "a06C24aiEvk",
                  "china_cdn_id": "a06C24aiEvk.mp4"
                }
              }
            }
          ]
        },
        {
          "id": 62300,
          "key": "80820923190923",
          "title": "Quiz: Touch Feedback for Clickable Views",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "80820923190923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 330963,
              "key": "f741fda5-8d76-4d81-bd7d-bd0eaedd23ce",
              "title": "Touch Feedback for Clickable Views",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "Emoji art supplied by http://emojione.com",
              "video": {
                "youtube_id": "Jg8pVEbwx2w",
                "china_cdn_id": "Jg8pVEbwx2w.mp4"
              }
            },
            {
              "id": 331008,
              "key": "d1c884bd-50b1-4825-b45e-c0a435716d90",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d1c884bd-50b1-4825-b45e-c0a435716d90",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Experiment with the background of the numbers category TextView",
                "Change the text color to black"
              ],
              "positive_feedback": "Great work with the changes! Now answer the next question about what you observe.",
              "video_feedback": null,
              "description": ""
            },
            {
              "id": 330961,
              "key": "20d393d5-6859-4669-8d83-2765e13cf87d",
              "title": "Touch Feedback",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "20d393d5-6859-4669-8d83-2765e13cf87d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "What do you observe when you click on the numbers category now?"
              },
              "answer": {
                "text": "Thank you for sharing! See the solution video, below, for our answer.",
                "video": null
              }
            },
            {
              "id": 331007,
              "key": "d74f043f-54ee-47c1-8e89-1fa8f676d1db",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Solution\n",
              "instructor_notes": ""
            },
            {
              "id": 330965,
              "key": "c5de02cf-2b81-4bee-8049-6c46de2dca1b",
              "title": "Touch Feedback for Clickable Views",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wcCwLJQVRTw",
                "china_cdn_id": "wcCwLJQVRTw.mp4"
              }
            }
          ]
        },
        {
          "id": 56189,
          "key": "81909627440923",
          "title": "Pressed States on Category Views",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "81909627440923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 4766,
              "key": "8190962744",
              "title": "Pressed States on Category Views",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Touch feedback provides the user with instantaneous visual confirmation at the point of contact where they interacted with the UI elements on the screen. It is vital that the apps you develop on Android have touch feedback. They can make your app appear fast and responsive, even if nothing else happens yet.\n\nEver since Material Design was introduced in Lollipop, there is a circular ripple animation that happens when you interact with a UI elements. \n\n<img src=\"https://lh3.googleusercontent.com/j0VV4HgdCK_Ti52yDpM8tXPPmv5syLf2ZU0qW2ZoQAmXARmbr2JD4VJf_z8isMAyZKusQxR-_pyiMjLsig=s0#w=199&h=212\" alt=\"Screenshot showing circular ripple.\">\n\nOn older versions of Android, there is a static colored pressed state.\n\n<img src=\"https://lh3.googleusercontent.com/02O_jHqL2up3dxB5W08E2K4xIwRBUpo4IwxlGf5wTkIiVHlAwZ5QxiyUXafPsoI3FoY2us4nZAp42I_NWTI=s0#w=284&h=122\" alt=\"Sunshine app screenshot showing static colored pressed state.\">\n\nIn the last course, when we made the Just Java app, we used the standard Buttons from the Android framework. These buttons come up with standard feedback when you touch them.\n\n<img src=\"https://lh3.googleusercontent.com/qS5cjB6IziSWSjlqM3Qjsm3rUHlgO54n0SBIjWY9XDIoI1Y4bkHEPAmlW3rG4C2fWzZkAL9AwRn97v2tDAU=s0#w=262&h=465\" alt=\"Just Java app screenshot.\">\n\nIn the Miwok app, we are creating our own clickable views - the category views in the MainActivity, and the list items in the category activities. We have to handle pressed states on our own.\n\n<img src=\"https://lh3.googleusercontent.com/j748sPufjA1dFoaO9_jkPYNwPHJne5YbKi3x0ntzEWBX3W1qNDGbCgeLtj93JDcXD6LY6kqC5n5JAX_21LlP=s0#w=1224&h=421\" alt=\"Miwok App screenshots for each activity.\">\n\nBy setting a view to have a background of `?android:attr/selectableItemBackground`, the View will have a transparent background by default. When you touch or press the view, it will show the pressed state (which is the circular ripple animation). This behavior is the default touch feedback behavior defined in the Android framework.\n\n## Modify the Miwok app\n\nIn the last exercise, you modified the numbers category TextView to have the selectable item background. However, we lost the colored background.\n\n**1)** In this coding task, replace the contents of the activity_main.xml with the below XML. Code is also provided in this <a href=\"https://gist.github.com/udacityandroid/e11b81e3bdcff1c073c6e24a4fdb3365\" target=\"_blank\">gist</a>. Each TextView is wrapped in a FrameLayout with a themed background, and then set the background of the TextView to be a `?android:attr/selectableItemBackground`. \n\nThis way, we can keep the colored background per category view, as well as have touch feedback. And by the way, a <a href=\"http://developer.android.com/reference/android/widget/FrameLayout.html\" target=\"_blank\">FrameLayout</a> is simply a ViewGroup that typically contains 1 child view.\n\n**In activity_main.xml file**\n\n     <?xml version=\"1.0\" encoding=\"utf-8\"?>\n     <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:background=\"@color/tan_background\"\n      android:orientation=\"vertical\"\n      tools:context=\"com.example.android.miwok.MainActivity\">\n\n    <!-- Numbers category -->\n    <FrameLayout\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:background=\"@color/category_numbers\">\n       <TextView\n           android:id=\"@+id/numbers\"\n           style=\"@style/CategoryStyle\"\n           android:background=\"?android:attr/selectableItemBackground\"\n           android:text=\"@string/category_numbers\" />\n    </FrameLayout>\n\n    <!-- Family category -->\n    <FrameLayout\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"wrap_content\"\n       android:background=\"@color/category_family\">\n       <TextView\n           android:id=\"@+id/family\"\n           style=\"@style/CategoryStyle\"\n           android:background=\"?android:attr/selectableItemBackground\"\n           android:text=\"@string/category_family\" />\n    </FrameLayout>\n\n    <!-- Colors category -->\n    <FrameLayout\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"wrap_content\"\n       android:background=\"@color/category_colors\">\n       <TextView\n           android:id=\"@+id/colors\"\n           style=\"@style/CategoryStyle\"\n           android:background=\"?android:attr/selectableItemBackground\"\n           android:text=\"@string/category_colors\" />\n    </FrameLayout>\n\n    <!-- Phrases category -->\n    <FrameLayout\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"wrap_content\"\n       android:background=\"@color/category_phrases\">\n       <TextView\n           android:id=\"@+id/phrases\"\n           style=\"@style/CategoryStyle\"\n           android:background=\"?android:attr/selectableItemBackground\"\n           android:text=\"@string/category_phrases\" />\n    </FrameLayout>\n    </LinearLayout>\n    \n**2)** Then run the app on your device and test that each button in the MainActivity has touch feedback.\n\n**Note:** You could move the background attribute to the CategoryStyle definition in styles.xml, but I just declared it inline here, so it’d be easier for you to add into your app.\n\n### More Resources\n\nWe showed you a simplified way of adding touch feedback in your MainActivity in order to avoid going on too far of a tangent with new topics (such as state list drawables and managing resources for backward compatibility on older devices). However, our current approach does introduce more views into the view hierarchy, so it is less efficient. \n\nIf you want to learn the proper and more efficient way to setup touch feedback with a custom drawable, check out this video from the intermediate <a href=\"https://classroom.udacity.com/courses/ud853/lessons/1623168625/concepts/16358494290923\" target=\"_blank\">Udacity Android Fundamentals course</a>. Or you can check out this <a href=\"http://guides.codepath.com/android/ripple-animation\" target=\"_blank\">Codepath tutorial</a> on ripple animations.",
              "instructor_notes": ""
            },
            {
              "id": 306140,
              "key": "05de55be-22c7-41c6-b43e-427a8fba4783",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<a href=\"https://github.com/udacity/ud839_Miwok/commit/05acb6e0134807c6ecd248591afbf246235ecbee\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/05acb6e0134807c6ecd248591afbf246235ecbee\" target=\"_blank\">This is the state of the code after completing the quiz.</a>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 710,
          "key": "81862826670923",
          "title": "Pressed States on List Item Views",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "81862826670923",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 101173,
              "key": "8186282667",
              "title": "Pressed States on List Item Views",
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Now, you need to make one last change so that in all the category activities (NumbersActivity, FamilyActivity, etc…), list items show a pressed state when clicked on.\n\n## OPTION #1\n\nIn the list item layout, you can add a new View that overlaps all other views in the RelativeLayout and matches the RelativeLayout’s width and height. The View has a background of `\"?android:attr/selectableItemBackground”`, so the View will be transparent by default, so you can see the contents of the list item. Then it will show a pressed state (gray ripple animation on Lollipop devices and above) when the list item is clicked on.\n\n\n<a href=\"https://gist.github.com/udacityandroid/e9399aa9b3ffb7690d15b4b7fbe148db\" target=\"_blank\">Gist</a> of modified list_item.xml\n\n## OPTION #2\n\nInstead of adding a new view to the layout, in the word list layout, you can add the attribute `android:drawSelectorOnTop=\"true\"` on the ListView XML element. With this one line change, the pressed state will be shown on each list item.\n\nIn word_list.xml:\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ListView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:id=\"@+id/list\"\n       android:orientation=\"vertical\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"match_parent\"\n       android:drawSelectorOnTop=\"true\"/>\n\nEither option would work. After you make this change, test your app. Then you’re done with Lesson 4! ",
              "instructor_notes": null
            },
            {
              "id": 306141,
              "key": "44926601-8501-4412-a02d-2f6945a1cc15",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<a href=\"https://github.com/udacity/ud839_Miwok/commit/3d055a71fd487403f0d0d513b224b6f23f88d482\" target=\"_blank\">These are the changes needed to complete the quiz.</a>\n<a href=\"https://github.com/udacity/ud839_Miwok/tree/3d055a71fd487403f0d0d513b224b6f23f88d482\" target=\"_blank\">This is the state of the code after completing the quiz.</a>",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    },
    {
      "name": "non_google_background_image",
      "reason": "(2016/8/18) Not sure, ask i18n team for alternative"
    }
  ]
}