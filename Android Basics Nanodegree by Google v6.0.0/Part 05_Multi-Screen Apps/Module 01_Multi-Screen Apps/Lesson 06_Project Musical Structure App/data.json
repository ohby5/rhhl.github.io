{
  "data": {
    "lesson": {
      "id": 633465,
      "key": "0fa0db33-5a3c-45f6-90dd-dc7784a1d0dc",
      "title": "Project: Musical Structure App",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Create the structure of an app to play music for a user.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": null,
      "project": {
        "key": "38288a41-7f6c-4c7f-9208-0f881ccf9827",
        "version": "1.0.0",
        "locale": "en-us",
        "duration": 18720,
        "semantic_type": "Project",
        "title": "Musical Structure App",
        "description": "Create the structure of an app to play music for a user and build it out. \n\n- - - \n\n### Before You Submit\n\nBe sure you follow the steps to prepare your project for submission, clean your build, review the project rubric, and zip your project files. \n- - - \n### Submitting Your Project\n \nTo submit your project, you will upload your zip file. \n \nOn the submission page, you'll see a **Notes to reviewer** section (image below) - \n \n![image](https://lh3.googleusercontent.com/edFd4IyrrwW3EEsm1yZC8M-aPtLX7f9pz9mhugFLn1RcnuRs0cK-Wrlh_FeZaFPleTKc74nvA8HdQhmaQQ=s0#w=1448&h=444)\n \nIn order to help project reviewers test and troubleshoot the project, please provide the devices (emulator and physical) and API level on which you tested your work. Note, providing this information does not guarantee the review will be done on the exact same device type(s); however, it will assist in providing a more efficient review experience for you as a student.\n \nYou can also provide any other additional notes to the reviewer in that section. \n- - - \n### What to Expect After Submitting\n\nIt can take us up to a week to grade the project, but in most cases it is much faster. You will get an email when your submission has been reviewed. \n\nYour reviewer will provide a code review with helpful comments and review your project against the project rubric. ",
        "is_public": true,
        "summary": null,
        "forum_path": "",
        "rubric_id": "2036",
        "terminal_project_id": null,
        "resources": null,
        "image": null
      },
      "lab": null,
      "concepts": [
        {
          "id": 357066,
          "key": "9c9a1ab0-6840-4431-a5a0-6d85be105ba2",
          "title": "Project Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9c9a1ab0-6840-4431-a5a0-6d85be105ba2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 357070,
              "key": "5467a419-cdc0-4a62-bc50-6cd21fb5a93d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Musical Structure App\n<br >   \n<img src=\"https://lh3.googleusercontent.com/22vI-D9H9CprTLOpXtgselsfVjoiMTLOGJEv46a2oQ5EI6jgUGIP-JBiLR6_NSd3oLgKBbGIpjYG14InO0s=s0#w=554&h=50\n\" />\n<br >   \n<br >   \n<img src=\"https://lh3.googleusercontent.com/np6h6ACxXbr44qCmflPYKzACZlQMs31dBJX_it0t6m_v2ylhvQKq8YNWPDAhe2ItZunpU-srNc6-Mg6b-Fdv=s0#w=45&h=45\n\" width=\"45\"/>\n\n## Project Overview\n\nThis project is a chance for you to combine and practice everything you learned so far in this section of the Nanodegree program. You will be making the structure of a music app using Intents, New Activities, Arraylists, Loops and Custom Classes.\n\nThe goal is to design and layout the flow for **the structure of a Music Player app**. Note that for this project, **the app does not actually need to play music**. \n\nThere are many music player apps, and they employ a wide variety of design choices. It will be your job to decide on the kind of structure that you would like your music app to have and build that structure using intents. Will you build an app to play music from the user’s library of music? Will you build an app to stream random songs from a database? Will you build a musical suggestion engine? Those choices are up to you! \n\n- - -\n### Why this project?\nIn the last portion of the Nanodegree program, you learned how to think about the structure of an app and how to use OnClickListeners and explicit Intents to link between different activities within your own app. You also learned how to loop through an ArrayList to retrieve and display information to a ListView. Practicing these skills will drastically improve the quality of the apps you build down the road. \n- - - \n### What will I learn?\n\nThis project is about combining various ideas and skills we’ve been practicing throughout the course. They include:\n\n* Designing an app experience to achieve a certain goal\n* Creating new activities\n* Using explicit Intents to link between activities in your app\n* Using OnClickListeners to add behavior to buttons using Java code.\n* Creating your own Custom Class\n* Looping through an ArrayList\n* Populating a ListView or GridView with an ArrayAdapter\n---\n**Note:** As the focus of this program is Java, only projects completed with Java as the source code will be accepted.  Projects using Kotlin as the source code will not be accepted. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 357071,
          "key": "ce069531-26bd-419e-a2fd-724ce1a26ca0",
          "title": "Build Your Project",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ce069531-26bd-419e-a2fd-724ce1a26ca0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 357072,
              "key": "89792149-b3aa-409a-9a33-4990f35e268f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<img src=\"https://lh3.googleusercontent.com/ggvLXpYBpUrE253PNmbgTnxhZtMn8rfsjq9FujOsrK9QZef-wyLGCYuJ0ddYQJgQ-Z7LBTqxWm3YKQt6w5pz=s0#w=90&h=90\n\" width=50/>\n\n## Build Your Project\n\n*Remember - For this project, you won't need to implement the actual music playing functionality. *\n\nThe goal of this project is to design and layout a music playing app that displays the list of available songs in a ListView or a GridView, navigates to a details screen of the currently playing song, and uses explicit intents to navigate around the app.\n\nData about each song should be stored in a custom class that is retrieved and displayed via a Loop and Adapter. \n\n---\n### Getting Started\n\nFirst, take a look at different kinds of music player apps on the market - check out the Play Music app, the Pandora Radio app, and the Spotify app to start with.\n\nWhat type of user flow do you envision your app to have?\n\n---\n\n### Design Planning\n\nOnce you've made a decision regarding the kind of app you would like to build, write out a couple of ways you could structure your app. Think about where a user will start and what the most common use cases of the app will be.\n\nAt minimum, your app should have 2 screens (a Main screen displaying the list of available songs using a list or grid & a Details screen of the currently playing song). There should be no more than 6 screens. \n\nSome ideas for Activities would be:\n\n* \"Now playing\" screen\n\n* List artists, albums, playlists, or podcasts\n\n* Detail screen or screens for individual artists, albums, or podcasts\n\n* Store screen for buying music online\n\n* Search screen\n\nIf your app include buttons, use OnClickListener objects. Each activity should have a TextView that displays the purpose of the activity, as well as buttons that will let you navigate to other activities. \n\nIf you need help generating bitmaps for your project, refer back to the [Generating Your Own Bitmaps](https://classroom.udacity.com/nanodegrees/nd803/parts/69f595db-7c10-406e-8fec-1938513ed829/modules/feea8b17-3386-4842-b959-94c40d920436/lessons/eda58181-c0ef-46de-97b0-df813a66e88e/concepts/a61b0007-dbed-4b32-8f70-724a1dac7e77?contentVersion=3.0.0&contentLocale=en-us) concept. \n\n\n#### The required components for this project are: \n\n- 2 to 6 Activities that are linked via explicit intents\n- A custom class storing information about each song. Each instance of the custom class must contain at least 2 states (e.g. Song Name, Artist Name). Images (e.g. Album Art) are not required but allowed.\n\n-  A data structure, such as an ArrayList that would store Instances of the custom class. These instances  should be retrieved and displayed in a ListView or GridView via an Adapter.\n\n\nYour project will be evaluated using the [Musical Structure project rubric](https://review.udacity.com/#!/rubrics/2036/view).\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 357078,
          "key": "9390d144-e80f-418e-b3e1-99646f6a49ed",
          "title": "Prepare for Submission",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9390d144-e80f-418e-b3e1-99646f6a49ed",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 357079,
              "key": "d64ba8e4-aef1-43bd-b48e-080c6156159f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<img src=\"https://lh3.googleusercontent.com/OctcO-7n2iK-hJjUVtOp4FWdx1IrxKB1Ue_L5WCt6eI7_5Hm1cHfvjZXBNQfp_eU04mTWJeHbieINZpKs7Kd=s0#w=90&h=90\n\" width=\"50\" />\n## Prepare for Submission\n- - -\n### Clean Your Build\n\nBefore submitting, please follow the instructions for cleaning your project files. This removes some temporary files and greatly decreases the size of your project. \n\n<a href=\"https://d17h27t6h515a5.cloudfront.net/topher/2016/June/5769c116_1000-files-tutorial/1000-files-tutorial.pdf\" target=\"_blank\">\n<img src=\"https://lh3.googleusercontent.com/_hZj1QG9Xd_9F_pIyBKezYJkVlY2xobnK0UwrE-ZEgcZnY4xsd5E2bdKC3aiXUbXbkJ2xpdH7OzO3jR0gg=s0#w=231&h=70\n\" /></a>\n- - - \n### Review the Project Rubric\n\nUdacity reviewers will be reviewing your project based on the project rubric. All specifications must be met to pass the project. \n\n<a href=\"https://review.udacity.com/#!/rubrics/2036/view\">\n<img src=\"https://lh3.googleusercontent.com/_1lofzZ5gdceXR8y82nsf1gy5CeHQbIc21AEB7LDFXPx9m-aM3S1NBzOUAXx79V4PVKi-CAweT_VuwgHMj4=s0#w=206&h=70\n\" /></a>\n- - - \n### Final Submission Checklist\n\nBefore submitting your project for evaluation, we recommend that you check that each of the following is true: \n\n1. Your app compiles and runs as expected.\n2. You are proud of your app and its output.\n3. You completed this project according to instructions. \n4. You cleaned the project using the instructions above. \n5. You checked your project against the rubric.\n- - -\n### Zip Your Project for Submission\n\nBe sure to zip your whole android project only after you have cleaned it. \n\n",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  }
}