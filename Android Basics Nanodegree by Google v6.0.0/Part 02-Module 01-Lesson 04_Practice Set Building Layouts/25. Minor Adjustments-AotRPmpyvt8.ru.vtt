WEBVTT
Kind: captions
Language: ru

00:00:00.430 --> 00:00:03.650
На самом деле, на этот вопрос
есть два правильных ответа:

00:00:03.650 --> 00:00:07.580
методы padding и layout_margin.

00:00:07.580 --> 00:00:10.850
То есть вы могли выбрать любой из них,
оба выбирать не надо.

00:00:10.850 --> 00:00:12.460
Давайте разберёмся почему.

00:00:12.460 --> 00:00:15.290
На практике, в большинстве случаев
при использовании метода

00:00:15.290 --> 00:00:18.830
padding изображение выглядит так же,
как и при использовании layout_margin.

00:00:18.830 --> 00:00:21.550
Давайте на самом деле
нарисуем границы нашего поля.

00:00:21.550 --> 00:00:23.148
Как только вы это сделаете,

00:00:23.148 --> 00:00:26.451
вы сможете увидеть разницу при
применении этих двух методов.

00:00:26.551 --> 00:00:28.095
В случае использования padding,

00:00:28.095 --> 00:00:31.748
вы делаете сам элемент крупнее, 
добавляя значения полей внутри него.

00:00:32.494 --> 00:00:35.875
При использовании layout_margin,
поля добавляются вокруг элемента,

00:00:35.875 --> 00:00:37.925
не внося изменений
в его фактический размер.

00:00:38.835 --> 00:00:42.185
Возможно, вы задаётесь вопросом:
в каких случаях это имеет значение?

00:00:42.185 --> 00:00:44.375
Для чего нужны два разных атрибута?

00:00:44.375 --> 00:00:47.655
Ну, если бы мне нужно было, например,
добавить границу или фоновый

00:00:47.655 --> 00:00:51.080
цвет к обоим нашим элементам,
они бы выглядели совсем по-разному.

00:00:51.080 --> 00:00:54.370
В нашем случае, мы не будем добавлять
границы и фоновый цвет, поэтому

00:00:54.370 --> 00:00:57.060
можно использовать как padding, 
так и layout_margin.

00:00:57.060 --> 00:00:59.260
Использовать оба просто
не имеет смысла.

00:00:59.260 --> 00:01:03.050
Поскольку можно выбрать любой метод, 
я произвольно остановлюсь на

00:01:03.050 --> 00:01:04.700
применении padding.

00:01:04.700 --> 00:01:07.640
Давайте посмотрим, как это
будет выглядеть в Android Studio.

00:01:07.640 --> 00:01:09.990
Итак,
возвращаемся к activity_main.

00:01:09.990 --> 00:01:13.180
Теперь мы хотим добавить атрибут padding
к нашим блокам TextView,

00:01:13.180 --> 00:01:15.790
чтобы отодвинуть их подальше
от границ экрана телефона.

00:01:15.790 --> 00:01:19.580
Атрибуты рadding и layout_margin
добавляют поля со всех четырёх сторон.

00:01:19.580 --> 00:01:21.180
Отлично, давайте их добавим.

00:01:21.180 --> 00:01:24.510
Помните, я сказала, что хочу
добавить по 20dp с каждой стороны, поэтому

00:01:24.510 --> 00:01:26.600
именно это значение я указываю здесь.

00:01:26.600 --> 00:01:29.550
Я обновила предварительный просмотр,
чтобы он показывал поля,

00:01:29.560 --> 00:01:31.480
далее я прокручу экран вниз.

00:01:31.510 --> 00:01:34.824
Для разнообразия теперь я хочу
попробовать другой вариант и добавить

00:01:34.824 --> 00:01:37.880
layout_margin к этому
TextView вместо атрибута раdding.

00:01:37.880 --> 00:01:40.310
Хорошо, это также изменило
параметры блока ТextView.

00:01:40.310 --> 00:01:41.200
Несмотря на это,

00:01:41.200 --> 00:01:45.370
размер TextView не увеличился, когда
я добавила изменения в layout_margin,

00:01:45.370 --> 00:01:50.520
а вот здесь в TextView, фактический
размер TextView претерпел изменения.

00:01:50.520 --> 00:01:53.480
А что произойдет, если добавить и
layout_margin, и padding?

00:01:53.580 --> 00:01:54.650
Давайте проверим.

00:01:55.410 --> 00:01:58.226
Итак, теперь текст расположен на
40dp от края экрана.

00:01:58.226 --> 00:02:02.244
На 20dp здесь и на
20dp поля вот здесь.

00:02:02.244 --> 00:02:04.672
Хорошо, понятно, но
нам не нужно расстояние в 40dp.

00:02:04.672 --> 00:02:06.502
Поэтому вот это я собираюсь
удалить.

00:02:07.804 --> 00:02:10.600
Оставляем 20dp в атрибуте
padding в TextView «From, Lyla».

00:02:10.600 --> 00:02:13.620
И 20dp в атрибуте padding в TextView
«Happy Birthday, Ben».

00:02:13.620 --> 00:02:15.840
Отлично, давайте запустим это на телефоне.

00:02:16.510 --> 00:02:20.000
Позвольте представить вам законченное
мобильное приложение Birthday Card.

00:02:20.000 --> 00:02:21.120
Давайте порадуемся.

00:02:21.840 --> 00:02:24.980
Таким образом, мы разобрались
с последним пунктом в нашем списке.

