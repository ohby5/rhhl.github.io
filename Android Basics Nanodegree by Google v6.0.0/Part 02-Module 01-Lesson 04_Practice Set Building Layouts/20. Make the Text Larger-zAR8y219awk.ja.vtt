WEBVTT
Kind: captions
Language: ja

00:00:00.260 --> 00:00:03.300
さて テキストの文字を大きくするには

00:00:03.300 --> 00:00:04.939
「 textSize 」を使います

00:00:04.939 --> 00:00:07.510
「 textStyle 」だと思った方も
いるかもしれませんが

00:00:07.510 --> 00:00:09.620
texttStyle はテキストを

00:00:09.620 --> 00:00:11.590
太字にしたり
イタリック体にするのに使う属性で

00:00:11.590 --> 00:00:13.470
大きさは変えません

00:00:13.470 --> 00:00:15.180
「 textAlignment 」も
気になったと思いますが

00:00:15.180 --> 00:00:18.010
これはテキストを
ビューの右や左に配置したり

00:00:18.010 --> 00:00:20.180
中央に配置するものです

00:00:20.180 --> 00:00:23.070
ですので 答えは textSize でした
では 分かったところで

00:00:23.070 --> 00:00:25.640
コードの変更へと進みましょう

00:00:25.640 --> 00:00:27.570
さて これがこのコードです

00:00:27.570 --> 00:00:31.090
いつもの通り
「 activity_main.xml 」を見ています

00:00:31.090 --> 00:00:34.290
スクロールダウンしていくと
２つの「 TextView 」が見えてきます

00:00:34.290 --> 00:00:36.660
OK では属性を加えていきましょう

00:00:36.660 --> 00:00:39.490
「 android: 属性の名前＝ 」を挿入して

00:00:39.490 --> 00:00:41.510
OK ではここに
値を入れなければなりません

00:00:41.510 --> 00:00:45.520
クイズの内容を思い出すと
ここの値は 36 sp のはずです

00:00:45.520 --> 00:00:50.300
忘れないでくださいね
いつも値は「 "　" 」で挟まれます

00:00:50.300 --> 00:00:53.670
また「 android: 」が「 textSize 」と値の前に
必要となります

00:00:53.670 --> 00:00:55.580
そして「 = 」も忘れずに

00:00:55.580 --> 00:00:58.860
それが終わったら
こちらのプレビューに行けるはずです

00:00:58.860 --> 00:01:02.930
そして テキストが実際に
大きくなったことが確認できます

00:01:02.930 --> 00:01:05.540
このテキストも同様に大きくしましょう

00:01:05.540 --> 00:01:06.250
良いですね

00:01:06.250 --> 00:01:09.610
ここに「 textSize=36sp 」と
タイプしました

00:01:09.610 --> 00:01:12.260
そして 実際にスマホ上に
アップデートされたのがわかります

00:01:12.260 --> 00:01:14.980
しかし これは実際のスマホでは
ありませんね

00:01:14.980 --> 00:01:16.240
常に―

00:01:16.240 --> 00:01:19.940
必ず自分のスマホで実行して
見た目か正しいかを確認してください

00:01:19.940 --> 00:01:24.905
そのためには 上の緑色の実行ボタンへ行き
スマホを選択してOKを押します

00:01:26.010 --> 00:01:27.330
はい　良くできました

00:01:27.330 --> 00:01:30.680
もう小さなテキストではなく

00:01:30.680 --> 00:01:34.720
大きく美しい 36 sp のテキストが
スマホにディスプレイされました

00:01:34.720 --> 00:01:38.000
ということで テキストを
大きくすることができました

