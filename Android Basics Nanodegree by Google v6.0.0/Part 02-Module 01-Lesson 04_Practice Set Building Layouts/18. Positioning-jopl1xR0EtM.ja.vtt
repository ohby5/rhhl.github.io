WEBVTT
Kind: captions
Language: ja

00:00:00.230 --> 00:00:02.440
では この答えを見てみましょう

00:00:02.440 --> 00:00:05.041
Layout widthもしくはLayout height
という予想でしたら

00:00:05.041 --> 00:00:07.040
間違っていないです

00:00:07.040 --> 00:00:09.750
これらのvalueは 今後
スペースなどに影響を与えるので

00:00:09.750 --> 00:00:12.310
注意して選ばないといけません

00:00:12.310 --> 00:00:14.905
例えば Layout widthを
取り上げてみましょう

00:00:14.905 --> 00:00:17.595
テキストボックスに
hiと書くとします

00:00:17.595 --> 00:00:20.655
そして layout widthを
wrap contentとする

00:00:20.655 --> 00:00:21.545
初期化の状態なので

00:00:21.545 --> 00:00:25.295
テキストボックスは左上の端に
表示されます

00:00:25.295 --> 00:00:28.695
別のアトリビュートを使うと
テキストボックスをもう少し右側に

00:00:28.695 --> 00:00:30.625
移せます

00:00:30.625 --> 00:00:31.315
もしも

00:00:31.315 --> 00:00:36.960
match parentを使うと 「こんにちは」は
再び左上の端に表示されます

00:00:36.960 --> 00:00:40.050
もしアトリビュートを使って
右側に動かそうとすると

00:00:40.050 --> 00:00:42.140
また右側に移すことが
できます

00:00:42.140 --> 00:00:45.520
しかし match parentと全体像に
充分なくらい大きくなるので

00:00:45.520 --> 00:00:48.700
これはすでに充分右側にあります

00:00:48.700 --> 00:00:50.120
match parentを使う場合

00:00:50.120 --> 00:00:52.900
こんにちはは 実際 動いていないことが
分かります

00:00:52.900 --> 00:00:55.760
この例でひとつ明快になっていることは

00:00:55.760 --> 00:00:59.680
wrap contentでは layout widthと
layout heightの両方を使うことです

00:00:59.680 --> 00:01:01.980
つまり コンテントを確実に
ラップしているので

00:01:01.980 --> 00:01:06.160
TextViewに左右上下の指令を出すと

00:01:06.160 --> 00:01:10.210
そこの場所に移すことができます

00:01:10.210 --> 00:01:13.650
だから layout widthとlayout heightは
両方大事です

00:01:13.650 --> 00:01:17.380
TextStyleは太字やイタリックの
アトリビュートなので

00:01:17.380 --> 00:01:20.630
テキストの位置やスペースには
関係ありません

00:01:20.630 --> 00:01:24.530
Orientationはlinear layoutの
時のみ使うアトリビュートで

00:01:24.530 --> 00:01:27.780
テキストが縦になるか横になるか
決定します

00:01:27.780 --> 00:01:31.505
私たちはrelative layoutを使って
いるので これは関係ないですね

00:01:31.505 --> 00:01:35.640
Layout weightは要素を均一に並べる
ことができ便利ですが

00:01:35.640 --> 00:01:37.900
これもlinear layoutの
アトリビュートです

00:01:37.900 --> 00:01:40.150
だから 残りのアトリビュートを
使います

00:01:40.150 --> 00:01:42.920
このアトリビュートは全て
relative layoutと関係あります

00:01:43.980 --> 00:01:48.280
この Layout_to Right OfとLayout_belowは
layout_alignParentのBottom leftやrightとは

00:01:48.280 --> 00:01:52.980
全く違うものです

00:01:52.980 --> 00:01:55.250
これらのアトリビュートで
2つのchild viewを

00:01:55.250 --> 00:01:57.800
相互関係の位置に置くことができます

00:01:57.800 --> 00:02:03.070
例えば Lylaよりを
誕生日おめでとう Ben TextViewの

00:02:03.070 --> 00:02:05.920
右下とします

00:02:05.920 --> 00:02:07.810
どうなるか見てみましょう

00:02:07.810 --> 00:02:09.400
もしこれをした場合

00:02:09.400 --> 00:02:12.920
2つのTextViewを見ていることになります
これがコードです

00:02:12.920 --> 00:02:16.580
誕生日おめでとう BenのTextViewの
IDはここです

00:02:16.580 --> 00:02:21.430
そして そのIDを参照し
LylaよりのTextViewを アトリビュートの

00:02:21.430 --> 00:02:23.080
layout 下 layout右とします

00:02:24.350 --> 00:02:28.530
これがその写真です
不運なことに

00:02:28.530 --> 00:02:30.510
私たちの想定しているものと異なります

00:02:30.510 --> 00:02:33.180
Lylaよりのviewは
誕生日おめでとうBen TextViewの

00:02:33.180 --> 00:02:35.300
右側にあります

00:02:35.300 --> 00:02:39.930
下にありますが
右側の下の方ではありません

00:02:39.930 --> 00:02:41.150
よって この2つは正しくないです

00:02:42.350 --> 00:02:45.110
つまり私たちに残されているのは
この3つのアトリビュートで

00:02:45.110 --> 00:02:47.080
これらは私のTextViewを考慮し

00:02:47.080 --> 00:02:51.720
Parentにたいして一列に並べます
これがスクリーン全部に表示されているもの

00:02:51.720 --> 00:02:54.720
Lylaよりがこの下の

00:02:54.720 --> 00:02:58.310
parentの右側の角に来るようにしたいのです

00:02:58.310 --> 00:03:02.880
layout_alignParentLeftは使わないです

00:03:02.880 --> 00:03:07.330
そのかわり layout_alignParentRightと
layout_alignParentBottomを使います

00:03:07.330 --> 00:03:09.660
コードだとどのようになるか
見て行きましょう

00:03:09.660 --> 00:03:11.114
まずは

00:03:11.114 --> 00:03:14.469
Lyla よりTextViewを見つけ
layout widthとlayout heightが

00:03:14.469 --> 00:03:18.617
両方ともwrap_contentにセットされている
ことを確認します そうしないと

00:03:18.617 --> 00:03:22.910
TextViewが合っていても
予想通りの動きを見せない時があります

00:03:22.910 --> 00:03:25.450
次に 追加のアトリビュートを
付け加えます

00:03:25.450 --> 00:03:27.980
valueはtrueとします

00:03:27.980 --> 00:03:31.430
これで このTextViewが
Parentの右に一列に並べられることを

00:03:31.430 --> 00:03:32.490
認めたことになります

00:03:32.490 --> 00:03:36.080
もう一つの可能性である
Falseとした場合

00:03:36.080 --> 00:03:40.220
Parentの右に一列に並べられることを
不可としており これは違いますね

00:03:40.220 --> 00:03:42.790
では もう一つのアトリビュートを
書き

00:03:43.800 --> 00:03:45.370
これもtrueとセットします

00:03:45.370 --> 00:03:49.310
はい自宅生には
少し分かり難いかもしれないですが

00:03:49.310 --> 00:03:52.650
これで正しくviewを
セットできました

00:03:52.650 --> 00:03:55.480
では 実際にきちんと表示されるのか

00:03:55.480 --> 00:03:57.705
緑のRunボタンを押して
確認してみましょう

00:03:57.705 --> 00:03:59.645
では 自分の携帯を選び
OKをクリックしました

00:04:00.705 --> 00:04:01.665
完璧

00:04:01.665 --> 00:04:05.795
ここに誕生日おめでとうBenがきて
下にLylaよりがきています

00:04:05.795 --> 00:04:07.085
これで

00:04:07.085 --> 00:04:09.395
全て正しいポジションに
位置づけできました

