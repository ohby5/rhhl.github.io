WEBVTT
Kind: captions
Language: ko

00:00:00.430 --> 00:00:03.650
자, 이 문제는 사실
두 개의 정답을 가지고 있어요.

00:00:03.650 --> 00:00:07.580
바로 padding,
그리고 layout_margin입니다.

00:00:07.580 --> 00:00:10.850
둘 중 하나를 선택하면 되지만
둘 다 필요한 건 아니예요.

00:00:10.850 --> 00:00:12.460
왜 그런지 보여드릴게요.

00:00:12.460 --> 00:00:15.030
실제적으로,
padding을 사용하는 뷰는

00:00:15.030 --> 00:00:18.830
layout_margin을 사용하는
뷰와 유사합니다.

00:00:18.830 --> 00:00:21.550
실제로 뷰 가장자리를 그려 볼게요.

00:00:21.550 --> 00:00:23.148
뷰 가장자리를 그린 후에

00:00:23.148 --> 00:00:26.651
이 두 상황의 다른 점을
볼 수 있습니다.

00:00:26.651 --> 00:00:27.815
Padding의 경우,

00:00:27.815 --> 00:00:31.438
그 뷰 안에 공간을 넣음으로써
실제적인 뷰의 크기를 늘리게 되죠.

00:00:32.494 --> 00:00:35.875
layout_margin의 경우,
뷰 둘레에 공간을 넣긴 하지만,

00:00:35.875 --> 00:00:37.685
뷰의 크기는 바뀌지 않습니다.

00:00:38.835 --> 00:00:42.185
자, 이것들이 언제쯤
유용할 지 궁금하시죠?

00:00:42.185 --> 00:00:44.375
왜 두 개의 다른 속성이 있는 걸까요?

00:00:44.375 --> 00:00:47.655
제가 이 두 뷰에 테두리나
배경색을 더하게 된다면,

00:00:47.655 --> 00:00:51.080
이 둘은 사실상 아주 다르게
보이게 됩니다.

00:00:51.080 --> 00:00:54.190
하지만 우리는 테두리나
배경색을 더하는 게 아니기 때문에

00:00:54.190 --> 00:00:57.060
padding이나 layout_margin
중 하나를 골라도 되는 겁니다.

00:00:57.060 --> 00:00:59.260
두 개를 다 선택하는 건 의미가 없죠.

00:00:59.260 --> 00:01:03.050
둘 중 하나를 선택할 수 있으므로
전 임의적으로

00:01:03.050 --> 00:01:04.700
padding을 선택하겠습니다.

00:01:04.700 --> 00:01:07.110
Android Studio에서는
어떻게 보일지 봅시다.

00:01:07.110 --> 00:01:09.990
자, 지금 우리는
activity_main으로 돌아왔어요.

00:01:09.990 --> 00:01:12.990
Padding 속성은
우리가 텍스트 뷰에 더해서

00:01:12.990 --> 00:01:15.790
그것을 화면 가장자리에서
더 멀리 이동시키기 위한 거죠.

00:01:15.790 --> 00:01:19.580
Padding과 layout_margin은
네 가장자리 모두에 공간을 더합니다.

00:01:19.580 --> 00:01:20.680
자, 이제 더해보죠.

00:01:21.720 --> 00:01:25.090
제가 모든 가장자리에
20dp의 공간을 넣고 싶다고 했었죠.

00:01:25.090 --> 00:01:27.110
바로 여기 그 값을 넣고 있습니다.

00:01:27.110 --> 00:01:29.990
더해진 공간과 함께
미리보기가 업데이트 되었어요.

00:01:29.990 --> 00:01:31.710
밑으로 스크롤 해 볼게요.

00:01:31.710 --> 00:01:34.654
자, 약간의 장난기가 발동하네요.

00:01:34.654 --> 00:01:37.880
padding 대신 layout_margin을
이 텍스트 뷰에 더할 겁니다.

00:01:37.880 --> 00:01:40.520
자, 역시 텍스트 뷰가
바깥으로 밀려났네요.

00:01:40.520 --> 00:01:41.150
보시면,

00:01:41.150 --> 00:01:45.370
layout_margin을 바꿨을 때
텍스트 뷰는 커지지 않았어요.

00:01:45.370 --> 00:01:51.040
하지만 이 텍스트 뷰에서는
실제적인 텍스트 뷰의 크기가 바뀌었죠.

00:01:51.040 --> 00:01:53.780
제가 layout_margin과 padding을
둘 다 더하면 어떻게 될까요?

00:01:53.780 --> 00:01:54.550
한번 보죠.

00:01:55.410 --> 00:01:58.226
이젠 제 텍스트가 가장자리에서
40dp만큼 떨어져 있네요.

00:01:58.226 --> 00:02:02.244
여기는 20dp, 그리고 여기도
20dp만큼의 패딩이 있어요.

00:02:02.244 --> 00:02:04.322
하지만 우리는 가장자리에서
40dp만큼 떨어져 있길 원하지 않죠.

00:02:04.322 --> 00:02:05.822
그래서 이것을 지울 겁니다.

00:02:07.634 --> 00:02:10.780
자, From, Lyla 텍스트 뷰에
20dp만큼의 패딩이 있고,

00:02:10.780 --> 00:02:14.020
Happy Birthday, Ben 텍스트 뷰에도
20dp의 패딩이 있죠.

00:02:14.020 --> 00:02:15.460
좋아요, 이제 핸드폰에서
실행시켜 봅시다.

00:02:16.510 --> 00:02:19.970
자, 여러분께 완성된
Birthday Card 앱을 소개할게요.

00:02:19.970 --> 00:02:20.910
손을 흔들어 보세요.

00:02:22.410 --> 00:02:24.780
이것으로 우리가 해야 할 일들 중
마지막 것을 완성했습니다.

