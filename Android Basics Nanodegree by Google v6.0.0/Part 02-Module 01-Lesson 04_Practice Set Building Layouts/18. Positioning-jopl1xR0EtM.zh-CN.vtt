WEBVTT
Kind: captions
Language: zh-CN

00:00:00.230 --> 00:00:02.440
我们来看一下解决办法

00:00:02.440 --> 00:00:05.041
如果你说不是 layout_width 就是 layout_height

00:00:05.041 --> 00:00:07.040
算是不太差劲的答案

00:00:07.040 --> 00:00:09.750
重要的是 你要仔细选择这些值

00:00:09.750 --> 00:00:12.310
它们会影响你的元素占用的空间

00:00:12.310 --> 00:00:14.905
比如 我们来讨论一下 layout_width

00:00:14.905 --> 00:00:17.595
假如这有一个文本框 写着 hi

00:00:17.595 --> 00:00:20.655
然后 我把 layout_width 的值设置成 wrap_content

00:00:20.655 --> 00:00:21.545
默认情况下

00:00:21.545 --> 00:00:25.295
文本框会出现在左上角

00:00:25.295 --> 00:00:28.695
然后 如果我使用另外一个属性把它放在右边

00:00:28.695 --> 00:00:30.625
文本框会出现在这

00:00:30.625 --> 00:00:31.315
相反 如果

00:00:31.315 --> 00:00:36.960
我使用 match_parent hi 文本框会默认出现在左上角

00:00:36.960 --> 00:00:40.050
但如果我尝试设置一个属性把它推到右边

00:00:40.050 --> 00:00:42.140
它会把这个文本框推到右边

00:00:42.140 --> 00:00:45.520
但它已经在最右边了 因为它会扩大

00:00:45.520 --> 00:00:48.700
来适应父元素并充满整个 ViewGroup

00:00:48.700 --> 00:00:50.120
在使用 match_parent 的例子里

00:00:50.120 --> 00:00:52.900
我们可以看到带有 hi 的文本实际上并没有移动

00:00:52.900 --> 00:00:55.760
所以对于这个例子 希望弄清楚的一件事情是 

00:00:55.760 --> 00:00:59.680
我们想同时设置 layout_width 和 layout_height 的值为 wrap_content

00:00:59.680 --> 00:01:01.980
它正好包含这个内容

00:01:01.980 --> 00:01:06.160
然后 当你想要 TextView 去上 下 左 右任何地方

00:01:06.160 --> 00:01:10.210
它就会把文本移动到那里

00:01:10.210 --> 00:01:13.650
所以 layout_width 和 layout_height都很重要

00:01:13.650 --> 00:01:17.380
textStyle 是一个可以改变文本粗细和倾斜程度的属性

00:01:17.380 --> 00:01:20.630
它不包括位置和空间

00:01:20.630 --> 00:01:24.530
Orientation 是线性布局才有的属性

00:01:24.530 --> 00:01:27.780
来决定它们是垂直还是水平

00:01:27.780 --> 00:01:31.505
因为我们使用 RelativeLayout 所以这没什么意义

00:01:31.505 --> 00:01:35.640
layout_weight 在均衡分隔元素时非常有用

00:01:35.640 --> 00:01:37.900
但是这依然是一个 LinearLayout 属性

00:01:37.900 --> 00:01:40.150
留给我们这些属性

00:01:40.150 --> 00:01:42.920
所有这些属性都和 RelativeLayout 有关

00:01:43.980 --> 00:01:48.280
现在 layout_toRightOf 和 layout_below 这些属性

00:01:48.280 --> 00:01:52.980
和 layout_alignParent 的 bottomLeft、bottomRight 是完全不同的

00:01:52.980 --> 00:01:55.250
这些属性有两个子视图

00:01:55.250 --> 00:01:57.800
摆放它们时是相对的

00:01:57.800 --> 00:02:03.070
比如我们可以把 From Lyla！ 这个 TextView 放在

00:02:03.070 --> 00:02:05.920
Happy Birthday Ben！ 的右下方

00:02:05.920 --> 00:02:07.810
让我们看看会怎么样

00:02:07.810 --> 00:02:09.400
如果我们这么做

00:02:09.400 --> 00:02:12.920
我们就看到了两个 TextView 这是我们用到的代码

00:02:12.920 --> 00:02:16.580
在 Happy Birthday Ben！ 这个 TextView 里 我创建一个 ID

00:02:16.580 --> 00:02:21.430
然后我在 from Lyla 这个 TextView 中引用 ID

00:02:21.430 --> 00:02:23.080
并设置 layout_below 和 layout_toRightOf 属性

00:02:24.350 --> 00:02:28.530
这个应用会变成这个样子 不幸的是

00:02:28.530 --> 00:02:30.510
这并不是我们想要的

00:02:30.510 --> 00:02:33.180
From Lyla 这个 TextView 确实在

00:02:33.180 --> 00:02:35.300
Happy Birthday Ben  这个 TextView 的右边

00:02:35.300 --> 00:02:39.930
它也在下边 但不是右下角

00:02:39.930 --> 00:02:41.150
所以这两个不正确

00:02:42.350 --> 00:02:45.110
现在我们还剩下三个属性

00:02:45.110 --> 00:02:47.080
可以使我的 TextView 

00:02:47.080 --> 00:02:51.720
与整个屏幕上的父视图水平

00:02:51.720 --> 00:02:54.720
现在我想让 From Lyla 在这个位置

00:02:54.720 --> 00:02:58.310
也就是在父视图的右下角

00:02:58.310 --> 00:03:02.880
现在我不会使用 layout_alignParentLeft  事实上我

00:03:02.880 --> 00:03:07.330
会使用 layout_alignParentRight  和 layout_alignParentBottom 

00:03:07.330 --> 00:03:09.660
让我们看看在代码中如何实现它们

00:03:09.660 --> 00:03:11.114
首先

00:03:11.114 --> 00:03:14.469
我要找到 From Lyla 这个 TextView 并且要确保

00:03:14.469 --> 00:03:18.617
layout_width 和 layout_height 都被设定为 wrap_content 

00:03:18.617 --> 00:03:22.910
否则即使把TextView放在正确的位置 它也不会动

00:03:22.910 --> 00:03:25.450
接下来我将要添加额外的属性

00:03:25.450 --> 00:03:27.980
把这个值设为 true

00:03:27.980 --> 00:03:31.430
这可以确保 TextView 

00:03:31.430 --> 00:03:32.490
和父节点右端对齐

00:03:32.490 --> 00:03:36.080
还可以把这个值改为 false 这就意味着

00:03:36.080 --> 00:03:40.220
不会与父节点右端对齐 这不是我想要的

00:03:40.220 --> 00:03:42.790
我要写另一个属性来把它放在底部

00:03:43.800 --> 00:03:45.370
把这个值也设为 true

00:03:45.370 --> 00:03:49.310
在家学习的话也许看不太清

00:03:49.310 --> 00:03:52.650
但我已经把视图放在了正确的位置

00:03:52.650 --> 00:03:55.480
让我们看看在手机上是不是正确显示了

00:03:55.480 --> 00:03:57.705
点击绿色的运行按钮

00:03:57.705 --> 00:03:59.645
我选择我的手机 并点击 OK

00:04:00.705 --> 00:04:01.665
棒极了

00:04:01.665 --> 00:04:05.795
上边有 Happy Birthday,Ben! 下边有 From,Lyla! 

00:04:05.795 --> 00:04:07.085
有了这些

00:04:07.085 --> 00:04:09.395
所有东西看起来都在正确的位置

