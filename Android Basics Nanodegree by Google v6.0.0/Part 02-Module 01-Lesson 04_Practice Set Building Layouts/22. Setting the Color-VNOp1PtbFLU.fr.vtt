WEBVTT
Kind: captions
Language: fr

00:00:00.140 --> 00:00:02.270
Ok, j'espčre que
ce n'était pas trop difficile.

00:00:02.270 --> 00:00:03.780
Vous avez utilisé
l'attribut textColor.

00:00:03.780 --> 00:00:08.070
Maintenant, un petit rappel
de ce qu'est cette valeur.

00:00:08.070 --> 00:00:12.930
On utilise @android:Color pour accéder
aux couleurs standards Android,

00:00:12.930 --> 00:00:17.560
et ensuite /white spécifie
que l'on veut utiliser la couleur blanche.

00:00:17.560 --> 00:00:20.460
En fait il n'y a pas beaucoup
d'options standards Android.

00:00:20.460 --> 00:00:23.390
Si vous voulez une couleur spécifique,
il est plus aisé d'utiliser un code hex,

00:00:23.390 --> 00:00:25.310
comme mentionné dans la leçon.

00:00:25.310 --> 00:00:28.870
Pour des ressources de codes hex , il y a
la page de couleurs de design matériel

00:00:28.870 --> 00:00:30.800
du site pour développeurs Android.

00:00:30.800 --> 00:00:32.522
Le lien vers cette page web
se trouve dans les notes de l'instructeur,

00:00:32.522 --> 00:00:34.470
si vous voulez y jetez un ˝il.

00:00:34.470 --> 00:00:35.348
Mais assez avec la couleur.

00:00:35.348 --> 00:00:36.740
On utilise le blanc Android et,

00:00:36.740 --> 00:00:40.210
allons au Android Studio
pour voir ce que ça donne.

00:00:40.210 --> 00:00:44.270
Bien, de retour ŕ notre fidčle
activity_main.xml, et il est probable que

00:00:44.270 --> 00:00:46.660
vous soyez ŕ présent habitués ŕ utiliser
des attributs, je vais donc continuer et

00:00:46.660 --> 00:00:50.070
commencer ŕ taper la textView
'Happy Birthday Ben'.

00:00:50.070 --> 00:00:51.885
Encore une fois, l'attribut
que j'utilise est textColor.

00:00:53.050 --> 00:00:55.876
Bien, et la liste déroulante
me propose en fait quelques options.

00:00:55.876 --> 00:00:59.792
C'est @Android:,

00:00:59.792 --> 00:01:05.750
puis color/white, et quasi immédiatement
mon aperçu se met ŕ jour

00:01:05.750 --> 00:01:08.950
et c'est blanc,
donc c'est plutôt difficile ŕ voir.

00:01:08.950 --> 00:01:10.290
Mais encore une fois,
c'est qu'on voulait faire.

00:01:10.290 --> 00:01:13.976
Bien, faisons la męme chose
avec l'autre textView.

00:01:13.976 --> 00:01:17.009
On clique ici,

00:01:17.009 --> 00:01:21.944
android:textColor="".

00:01:21.944 --> 00:01:29.273
Guillemets, trčs important,
les guillemets, @android:/color.

00:01:30.390 --> 00:01:31.660
Et une fois que j'ai fini de taper ça,

00:01:31.660 --> 00:01:34.270
je peux voir que,
cette textView disparait aussi.

00:01:35.290 --> 00:01:38.380
Encore une fois, attendu, parce que
c'est un texte blanc sur un fond blanc.

00:01:39.460 --> 00:01:43.041
Mais je peux voir
avec le contour de la vue ici

00:01:43.041 --> 00:01:46.950
que le texte existe effectivement.

00:01:47.960 --> 00:01:51.510
Et afin d'ętre rigoureux, continuons
et lançons-le depuis nos téléphones.

00:01:51.510 --> 00:01:55.280
Pour ceux qui regardent de chez eux,
ça pourrait ętre un peu dur ŕ voir,

00:01:55.280 --> 00:01:58.820
mais je vois un peu mon texte blanc
sur mon fond gris clair.

00:01:58.820 --> 00:02:00.570
Donc on dirait qu'on a fait
du bon travail.

00:02:00.570 --> 00:02:01.960
Cela fait un de moins sur notre liste.

00:02:01.960 --> 00:02:03.120
Passons ŕ l'étape suivante.

