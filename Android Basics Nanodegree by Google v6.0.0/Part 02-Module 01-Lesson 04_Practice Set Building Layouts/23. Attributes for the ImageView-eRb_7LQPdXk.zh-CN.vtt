WEBVTT
Kind: captions
Language: zh-CN

00:00:00.230 --> 00:00:03.410
我们已经显示了正确图像 就是这个 Android party 图片

00:00:03.410 --> 00:00:06.790
所以没必要修改源属性

00:00:06.790 --> 00:00:09.790
同样的 它的位置是正确的

00:00:09.790 --> 00:00:11.920
图片只需要放大

00:00:11.920 --> 00:00:15.710
所以我们不使用这些布局对齐属性

00:00:15.710 --> 00:00:17.450
使用 id 属性

00:00:17.450 --> 00:00:21.000
应用本身的布局并没有改变

00:00:21.000 --> 00:00:23.750
只是给视图命名以便你以后参考它

00:00:23.750 --> 00:00:27.250
现在有一个使用背景属性的方式来

00:00:27.250 --> 00:00:28.980
实现我们想要达到的效果

00:00:28.980 --> 00:00:31.300
但是它不涉及 ImageView

00:00:31.300 --> 00:00:34.140
如果你选择背景 技术上是正确的

00:00:34.140 --> 00:00:36.010
我们将采用一种不同的方法

00:00:36.010 --> 00:00:38.060
这就是我们之前在课上学到的方法

00:00:38.060 --> 00:00:41.400
这样我们就剩下 layout_height layout_width 和 ScaleType

00:00:41.400 --> 00:00:44.340
ScaleType 会改变围绕在它周围的视图框中的

00:00:44.340 --> 00:00:45.380
图片大小

00:00:45.380 --> 00:00:46.546
而 layout_width 和

00:00:46.546 --> 00:00:49.940
layout_height 会改变视图框的大小

00:00:49.940 --> 00:00:53.530
在这个例子中 图片足够大 视图框会扩展直至填满

00:00:53.530 --> 00:00:57.740
整个屏幕 不管它是自适应大小还是充满父视图

00:00:57.740 --> 00:01:00.430
在这个特殊的情况下并不重要

00:01:00.430 --> 00:01:01.790
不管我们放的是充满父视图

00:01:01.790 --> 00:01:06.220
还是自适应大小你不需要严格地修改它们 在这个例子里

00:01:06.220 --> 00:01:09.530
就是说 因为我们尝试将这个视图扩展到整个屏幕

00:01:09.530 --> 00:01:13.350
把这些设置为填充父视图是很好的

00:01:13.350 --> 00:01:15.820
然后 如果我们使用更小的图片

00:01:15.820 --> 00:01:18.260
它仍然扩展直至填满整个屏幕

00:01:18.260 --> 00:01:21.940
但是当 layout_height 和 layout_width 是可以设定的时候

00:01:21.940 --> 00:01:25.660
scaleType 是你必须用到的属性

00:01:25.660 --> 00:01:27.330
让图片充满整个屏幕

00:01:28.480 --> 00:01:30.930
问题是我们已经选择了这个属性

00:01:30.930 --> 00:01:32.900
但是我们不知道给 scaleType 设置什么值

00:01:32.900 --> 00:01:35.710
这就是我想让你在下一个问题中整明白的内容

