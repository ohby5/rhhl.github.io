WEBVTT
Kind: captions
Language: zh-CN

00:00:00.300 --> 00:00:01.940
如果你掌握了 非常好

00:00:01.940 --> 00:00:04.970
如果还没有掌握 再试一次寻找答案吧

00:00:06.190 --> 00:00:08.080
现在我在 Android Studio 界面

00:00:08.080 --> 00:00:11.150
正在看 TextView

00:00:11.150 --> 00:00:13.870
但我打算向上滑动 看看 ImageView

00:00:13.870 --> 00:00:16.950
简单解释一下之前我所说的

00:00:16.950 --> 00:00:19.635
如果我把光标放到 ImageView 上

00:00:19.635 --> 00:00:23.473
会出现一个蓝色的框 显示 ImageView 的大小

00:00:23.473 --> 00:00:26.743
这几乎是整个手机屏幕大小了

00:00:26.743 --> 00:00:29.049
现在我要继续添加 ScaleType 了

00:00:29.049 --> 00:00:32.950
有两个选项 分别是 Center 或 CenterCrop

00:00:32.950 --> 00:00:35.450
实际上 Center 并不会调节图像

00:00:35.450 --> 00:00:37.380
也不会改变图像尺寸

00:00:37.380 --> 00:00:40.800
显而易见 我需要用 CenterCrop

00:00:40.800 --> 00:00:44.892
你应该能看到图片扩展到整个

00:00:44.892 --> 00:00:46.770
ImageView 的空间

00:00:46.770 --> 00:00:50.470
你可能注意到了底部这里有一条白色窄带

00:00:50.470 --> 00:00:53.610
图像并没有扩展到这里

00:00:53.610 --> 00:00:57.860
如果在上方 我选择不同设备

00:00:57.860 --> 00:01:01.190
例如Nexus 10平板

00:01:01.190 --> 00:01:04.530
我们可以看到图片没有填充到整个空间

00:01:04.530 --> 00:01:07.600
这就不太好了 因为这意味着如果你在平板上看的话

00:01:07.600 --> 00:01:11.610
将会呈现一个怪异的方形图片周围是留白的空间

00:01:11.610 --> 00:01:13.810
尽管在手机上看起来还不错

00:01:13.810 --> 00:01:14.575
原因是

00:01:14.575 --> 00:01:18.190
我设置的是 wrap_content 而不是 match_parent

00:01:18.190 --> 00:01:20.300
让我把它改成 match_parent

00:01:20.300 --> 00:01:23.680
当我把它改成 match_parent 后 图片扩展

00:01:23.680 --> 00:01:24.910
并充满整个视图

00:01:24.910 --> 00:01:28.235
我要做的就是将 Layout_Width、 Layout_Height 和

00:01:28.235 --> 00:01:30.080
ScaleType 放在一起用

00:01:30.080 --> 00:01:34.080
让我画个小图来详细的解释一下

00:01:34.080 --> 00:01:37.460
实际发生的事情确实会让你产生一丝疑问

00:01:37.460 --> 00:01:39.060
当我们使用 CenterCrop 时

00:01:39.060 --> 00:01:40.910
如果你访问 Android开发者网站时

00:01:40.910 --> 00:01:43.763
你会看到文件中有以下的陈述

00:01:43.763 --> 00:01:46.510
CenterCrop 可以很均匀的调节图像

00:01:46.510 --> 00:01:49.460
意味着它是保持纵横比的

00:01:49.460 --> 00:01:53.980
这个意思是说 图片的宽度和

00:01:53.980 --> 00:01:56.290
高度将等于

00:01:56.290 --> 00:02:00.340
或者大于ImageView相应的维度（内边距不计算在内）

00:02:00.340 --> 00:02:03.380
关于等比调节 我想说的是

00:02:03.380 --> 00:02:07.360
如果你想等比调节一幅图片

00:02:07.360 --> 00:02:12.030
这意味着 避免图片会水平或垂直地伸长

00:02:12.030 --> 00:02:16.320
保持这个比例 再使图像变大

00:02:16.320 --> 00:02:19.380
这样它的高度和宽度

00:02:19.380 --> 00:02:23.700
等于或者大于原图相应的维度

00:02:23.700 --> 00:02:25.070
我们一起看一幅图片

00:02:25.070 --> 00:02:26.910
这是你的手机

00:02:26.910 --> 00:02:29.200
在你的手机上有一个ImageView

00:02:29.200 --> 00:02:31.150
这就是 ImageView 中的图片

00:02:31.150 --> 00:02:34.860
这个绿色的框代表着 ImageView 的真实大小

00:02:34.860 --> 00:02:37.680
CenterCrop 要做的就是放大这个图片

00:02:37.680 --> 00:02:40.790
不变形的把图片放到这个框里

00:02:40.790 --> 00:02:44.627
不改变图片比例 我已经放大图片

00:02:44.627 --> 00:02:46.460
使它适合这个绿框的大小

00:02:46.460 --> 00:02:48.830
因为在这个长方形中图片

00:02:48.830 --> 00:02:51.545
实际上扩展到手机边界外了

00:02:51.545 --> 00:02:54.610
CenterCrop 会使图片位于视图中央

00:02:54.610 --> 00:02:59.000
顾名思义 会裁剪掉部分图像

00:02:59.000 --> 00:03:01.940
我还想说一下另一个你会遇到的问题

00:03:03.400 --> 00:03:06.860
视图会发生重叠 像扑克牌会叠在另一张上

00:03:06.860 --> 00:03:09.670
视图标签的顺序决定了视图

00:03:09.670 --> 00:03:11.610
在屏幕上放置的顺序

00:03:11.610 --> 00:03:12.910
既然 view A 是第一个

00:03:12.910 --> 00:03:17.810
它会被首先放置到屏幕上 之后是 view B 最后是 view C

00:03:17.810 --> 00:03:20.530
因为在 XML 中放置的顺序不同

00:03:20.530 --> 00:03:23.890
view A 不能很清楚的看到

00:03:23.890 --> 00:03:26.910
我们修改一下 XML 看看屏幕上有什么变化

00:03:27.920 --> 00:03:31.710
修改好了 现在是view B、 A、 C

00:03:31.710 --> 00:03:34.170
view B 会首先放置

00:03:34.170 --> 00:03:35.220
然后是 view A

00:03:35.220 --> 00:03:38.140
最后放 view C

00:03:38.140 --> 00:03:39.950
我只是重新排列了这些视图

00:03:39.950 --> 00:03:42.347
所有的都在同样的位置

00:03:42.347 --> 00:03:46.252
但视图的罗列顺序已经改变

00:03:46.252 --> 00:03:48.330
正因为这样 我能看到文字

00:03:48.330 --> 00:03:51.280
你也许会遇到类似的问题

00:03:51.280 --> 00:03:55.010
如果你在这里放两个TextView 和一个ImageView 的话

00:03:55.010 --> 00:03:58.270
因为它可能先显示你的第一个 TextView 然后第二个 TextView

00:03:58.270 --> 00:04:01.870
最后是 ImageView 它会覆盖整个屏幕 也会覆盖文本视图

00:04:01.870 --> 00:04:03.580
所以一定要确认顺序是正确的

00:04:04.750 --> 00:04:07.020
让我们看看它们在代码中的样子

00:04:07.020 --> 00:04:09.330
这是我的代码

00:04:09.330 --> 00:04:12.260
我要演示一下我说的视图顺序是什么意思

00:04:12.260 --> 00:04:16.029
现在 ImageView 被首先放置 然后是两个 TextView

00:04:16.029 --> 00:04:18.550
我们很容易的在屏幕上看到文字

00:04:18.550 --> 00:04:21.829
如果我把 ImageView 剪切了 下滑界面

00:04:21.829 --> 00:04:23.420
把它粘贴到这里

00:04:23.420 --> 00:04:27.950
现在顺序是 TextView、TextView、 ImageView

00:04:27.950 --> 00:04:29.140
它显示 Happy Birthday Ben! 的 TextView

00:04:29.140 --> 00:04:33.140
然后显示 From, Lyla! 的 TextView

00:04:33.140 --> 00:04:37.320
最后出现图片 覆盖了两个TextView

00:04:37.320 --> 00:04:40.890
如果我选择了 TextView 就能看到它们还在这里

00:04:40.890 --> 00:04:43.100
它们只是被 ImageView 覆盖住了

00:04:43.100 --> 00:04:45.040
现在我要改回去

00:04:45.040 --> 00:04:47.350
这样好多了 TextView 现在在上面

00:04:47.350 --> 00:04:50.280
就像之前做的 让我们在手机上模拟一下

00:04:50.280 --> 00:04:53.050
确定通过 match_parent 和 centerCrop 

00:04:53.050 --> 00:04:54.540
一切运转顺利

00:04:54.540 --> 00:04:56.720
非常好 这看起来好极了

00:04:56.720 --> 00:05:02.070
我们的图片填充了整个屏幕 而且能看到文本视图

00:05:02.070 --> 00:05:05.470
还有一点小问题需要修改 尽管目前来说还是不错的

00:05:05.470 --> 00:05:08.630
干的不错 还有一个属性需要修改

00:05:08.630 --> 00:05:10.960
之后我们的生日贺卡就完工了

