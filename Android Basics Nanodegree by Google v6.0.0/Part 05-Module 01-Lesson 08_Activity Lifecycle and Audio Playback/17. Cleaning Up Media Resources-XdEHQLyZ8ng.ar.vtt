WEBVTT
Kind: captions
Language: ar

00:00:00.820 --> 00:00:01.810
في الدرس الثاني،

00:00:01.810 --> 00:00:05.400
لقد تعرفت على الوظيفة الرسمية لإدارة الذاكرة.

00:00:05.400 --> 00:00:07.610
وهذا من الأمور الضرورية في الأجهزة المحمولة

00:00:07.610 --> 00:00:10.330
لأن الهواتف والكمبيوتر اللوحي بها موارد ذاكرة
محدودة

00:00:10.330 --> 00:00:13.840
مقارنة بأجهزة الكمبيوتر الكبيرة التقليدية.

00:00:13.840 --> 00:00:17.610
والآن سترى كيف أن المورد يشغل العامل بكفاء

00:00:17.610 --> 00:00:20.500
فيما يؤثر على وظيفة تصميم إطار عمل آندرويد.

00:00:20.500 --> 00:00:23.410
وقد رأينا ذلك على سبيل المثال في إعادة تدوير
العروض،

00:00:23.410 --> 00:00:26.370
حيث كنا بحاجة إلى تصميم وظيفة فعالة لعرض البيانات.

00:00:26.370 --> 00:00:28.270
والآن هذا فقط نصف القصة.

00:00:29.390 --> 00:00:33.500
من أجل تشغيل جهاز آندرويد بسهولة، استجب بسرعة لإدخال
المستخدم،

00:00:33.500 --> 00:00:36.960
فضلًا عن عدم تفريغ بطارية المستخدم، والمطورين مثلك

00:00:36.960 --> 00:00:39.850
ونحن بحاجة إلى ذاكرة قوية كذلك.

00:00:39.850 --> 00:00:42.820
الآن واحدة من أهم الأشياء لك كمطور يمكنك القيام
بها،

00:00:42.820 --> 00:00:46.030
تفريغ الموارد عندما لم تعد هناك حاجة إليها،

00:00:46.030 --> 00:00:48.880
لذلك فإن تطبيقات الجهاز الأخرى يمكن استخدامها
كذلك.

00:00:48.880 --> 00:00:53.830
والآن مشغل الوسائط سياق ممتاز لهذا النوع من سلوك
المطور.

00:00:53.830 --> 00:00:56.830
لذلك دعونا نلقي نظرة فاحصة على ما علينا فعله لتشغيل
الملف الصوتي.

00:00:57.830 --> 00:01:01.620
أولًا، سنحتاج إلى الحصول على مثيل من فئة مشغل
الوسائط.

00:01:01.620 --> 00:01:04.060
وتذكر أنه كلما قمت بإنشاء كائن،

00:01:04.060 --> 00:01:06.890
فأنت تستخدم بعض الذاكرة المخصصة على التطبيق.

00:01:06.890 --> 00:01:09.440
ثم بعد ذلك أنت بحاجة لتمريره في أي ملف صوتي

00:01:09.440 --> 00:01:12.510
حيث يجب أن يستهلك الذاكرة لتشغيل الملف الصوتي.

00:01:12.510 --> 00:01:17.660
وكل هذه الأشياء تأخذ من الذاكرة ومعروفة أيضًا بموارد
ملء الذاكرة.

00:01:17.660 --> 00:01:20.760
لذلك يصبح السؤال الأمثل أن المهمة أصبحت اثنين.

00:01:20.760 --> 00:01:25.540
الأول، كيف يمكن تحديد وقت عدم الحاجة إلى موارد مشغل
الوسائط؟

00:01:25.540 --> 00:01:28.030
والثاني، وظيفة تفريغ هذه الموارد.

00:01:29.490 --> 00:01:31.810
والآن لتحديد متى لم تعد في حاجة إليها،

00:01:31.810 --> 00:01:36.080
نحن بحاجة إلى التفكير مرة أخرى في حالات مشغل الوسائط
الصوتية.

00:01:36.080 --> 00:01:38.430
لذلك نحن نعلم أنه عند إنشاء مشغل الوسائط،

00:01:38.430 --> 00:01:42.150
نستخدم وظيفة الإنشاء ثم الانتقال إلى حالة الإعداد.

00:01:42.150 --> 00:01:44.170
وبعد ذلك الانتقال إلى حالة بدء التشغيل.

00:01:44.170 --> 00:01:47.780
ثم حالة إيقاف التشغيل، أو حالة الإيقاف

00:01:47.780 --> 00:01:50.140
أو حالة التشغيل أيضًا.

00:01:50.140 --> 00:01:53.180
والآن نحن أمام خطوة نهائية مهمة، حالة الانتهاء.

00:01:53.180 --> 00:01:57.060
عندما يصل كائن مشغل الوسائط إلى حالة الانتهاء، فلا
يمكن استخدامه بعد ذلك.

00:01:57.060 --> 00:01:59.860
ومن ثم يمكننا نقله إلى أي مرحلة أخرى مرة ثانية.

00:01:59.860 --> 00:02:03.550
ولذا عند تدمير مشغل الوسائط للذاكرة المستخدمة عن
طريق المشغل

00:02:03.550 --> 00:02:06.540
يمكن للنظام إعادة طلبها لمهام أخرى.

00:02:06.540 --> 00:02:08.280
وبالعودة إلى السؤال الأصلي،

00:02:08.280 --> 00:02:11.660
كيف يمكن تحديد وقت عدم الحاجة إلى موارد الذاكرة؟

00:02:11.660 --> 00:02:14.310
حسنًا الملفات الصوتية لدينا صغيرة جدًا.

00:02:14.310 --> 00:02:15.980
فقط ثانية أو ثانيتين

00:02:15.980 --> 00:02:19.800
مما يعني أن التشغيل سينتهي سريعًا.

00:02:19.800 --> 00:02:21.540
ومن ثم بعد انتهاء التشغيل.

00:02:21.540 --> 00:02:23.630
لسنا بحاجة إلى هذه الموارد بعد ذلك.

00:02:23.630 --> 00:02:26.770
يجب عدم التمسك بموارد مشغل الوسائط عندما نأمل

00:02:26.770 --> 00:02:29.350
من المستخدم النقر فوق عنصر القائمة ذاته.

00:02:29.350 --> 00:02:33.260
فقط علينا إفلات الموارد على الفور عن طريق طلب
إفلاتها.

00:02:33.260 --> 00:02:37.420
وهذا من شأنه نقل المشغل إلى حالة الانتهاء ومن ثم
ستطلبها الأنظمة.

00:02:37.420 --> 00:02:41.050
وبالنسبة للمعلومات الواردة هنا على وجه التحديد في
هذه الفقرة،

00:02:41.050 --> 00:02:44.860
إنها تسلط الضوء على أن كائن مشغل الوسائط لم يعد
يستخدم بعد.

00:02:44.860 --> 00:02:47.385
عندما أطلب وظيفة الإفلات،

00:02:47.385 --> 00:02:49.735
يتم إفلات الموارد على الفور من محرك التشغيل
الداخلي.

00:02:49.735 --> 00:02:52.985
وهذا قد يتسبب في وجود حالات لكائن مشغل الوسائط
مستقبلًا،

00:02:52.985 --> 00:02:56.735
وذلك بالنسبة لملفات الكائن المستقبلية المطلوب تشغيلها
أو تؤدي بكفاءة ضعيفة

00:02:56.735 --> 00:02:58.865
أو حتى تفرِّغ البطاريات التي نحتاجها.

00:02:58.865 --> 00:03:00.695
إذا كنت بحاجة إلى مزيد من المعلومات عن ذلك،

00:03:00.695 --> 00:03:04.520
أوصي بشدة قراءة المعلومات الواردة في وظيفة
الإفلات.

00:03:04.520 --> 00:03:06.580
وبالعودة إلى مخطط الحالات.

00:03:06.580 --> 00:03:09.450
في حالة نقر المستخدم مرة أخرى، نجد أن الأمر بحاجة
إلى إنشاء

00:03:09.450 --> 00:03:13.900
كائن مشغل وسائط جديد للملف الصوتي نفسه أو آخر
مختلف

00:03:13.900 --> 00:03:16.640
ثم الذهاب إلى دورة حياته الكاملة مرة أخرى.

00:03:16.640 --> 00:03:19.510
والآن في هذا التمرين، أكمل المهام التالية

00:03:19.510 --> 00:03:22.130
لمسح الموارد من التطبيق على نحوٍ صحيح.

00:03:22.130 --> 00:03:25.240
وبالنسبة لخطوة استخدام قصاصة الكود المزودة

00:03:25.240 --> 00:03:28.100
لإفلات الموارد بعد الانتهاء من تشغيل الملف الصوتي.

00:03:29.190 --> 00:03:30.930
لقد قمنا بتزويدك بقصاصة الكود

00:03:30.930 --> 00:03:34.050
لوظيفة المساعد التي تطلب وظيفة الإفلات ذاتها.

00:03:34.050 --> 00:03:36.120
وهنا الشكل الذي تبدو عليه قصاصة الكود.

00:03:36.120 --> 00:03:39.880
يطلق عليها وظيفة المساعد لأنها تؤدي أي مهمة من
شأنها

00:03:39.880 --> 00:03:41.250
مساعدة أي جزء آخر في الكود.

00:03:41.250 --> 00:03:43.430
وبالتالي يمكن نسخ وظيفة المساعد هذه ولصقها،

00:03:43.430 --> 00:03:47.410
وقد قمنا بتسميتها هنا بإفلات مشغل الموسيقى في نشاط
الأرقام،

00:03:47.410 --> 00:03:50.000
كما هو الحال في ملفات نشاط الفئة الأخرى.

00:03:50.000 --> 00:03:54.420
هذه الوظيفة تتحقق مما إذا تم تشغيل مشغل الوسائط أم
لا.

00:03:54.420 --> 00:03:57.410
وإذا لم يكن متغير مشغل الوسائط لاغٍ

00:03:57.410 --> 00:04:00.760
أو ليس فارغًا، فهذا يعني أنه لدينا كائن مشغل وسائط
غير صالح.

00:04:00.760 --> 00:04:02.330
وعلينا استدعاء وظيفة الإفلات في هذا الكائن.

00:04:03.600 --> 00:04:06.870
وبالتالي سترى هذا الإجراء كممارسة شائعة في جافا.

00:04:06.870 --> 00:04:09.590
ولذا في حالة وجود متغير مع أي كائن في أي نوع،

00:04:09.590 --> 00:04:14.670
في هذه الحالة نجد أن مشغل الموسيقى والمتغير الافتراضي
غير صالحين

00:04:14.670 --> 00:04:17.269
مما يعني عدم تعيين شيء يعادل هذا المتغير.

00:04:17.269 --> 00:04:19.010
وقبل استدعاء أي وظيفة في هذا المتغير،

00:04:19.010 --> 00:04:22.600
فأنت بحاجة إلى التأكد من أن المتغير هو كائن صالح
يمكن الرجوع إليه.

00:04:22.600 --> 00:04:25.000
وبخلاف ذلك، سيظهر لك خطأ جافا.

00:04:25.000 --> 00:04:26.690
ومن ثم بمجرد استدعاء الإفلات،

00:04:26.690 --> 00:04:30.770
يمكننا مسح المتغير عن طريق ضبطه بما يساوي القيمة
الفارغة ونحن لا نستخدم أي قيمة

00:04:30.770 --> 00:04:34.750
للإشارة إلى أن مشغل الوسائط لم يتم تكوينه في الوقت
الحالي لتشغيل الملف الصوتي.

00:04:34.750 --> 00:04:36.860
وبالعودة إلى تعليمات هذا التمرين،

00:04:36.860 --> 00:04:40.290
يمكنك نسخ ولصق الوظيفة التي عرضناها في قصاصة الكود

00:04:40.290 --> 00:04:43.970
في جميع ملفات نشاط الفئة الأربعة، ثم بعد ذلك استدعاء
الوظيفة

00:04:43.970 --> 00:04:46.770
بمجرد انتهاء مشغل الوسائط من تشغيل الملف الصوتي.

00:04:46.770 --> 00:04:49.570
ولذا أنت بحاجة إلى استخدام ما تعلمته في التمرين
السابق

00:04:49.570 --> 00:04:53.020
عن طريقة الرد عند انتهاء تشغيل ملف الوسائط

00:04:53.020 --> 00:04:56.430
لمعرفة متى يمك استدعاء وظيفة إفلات مشغل الوسائط.

00:04:56.430 --> 00:04:59.830
وفي النهاية، كما أريد منك استدعاء وظيفة المساعد مرة
أخرى،

00:04:59.830 --> 00:05:03.530
لإفلات موارد مشغل الوسائط على نحوٍ صحيح قبل البدء

00:05:03.530 --> 00:05:07.750
في تهيئة كائن مشغل وسائط آخر، لتشغيل ملف صوتي آخر.

00:05:07.750 --> 00:05:08.320
ونحن نفعل ذلك.

00:05:08.320 --> 00:05:11.990
ولذا مسحنا جميع موارد آندرويد التي كانت مستخدمة
لتشغيل الملف القديم

00:05:11.990 --> 00:05:13.960
قبل الانتقال إلى ملف صوتي جديد.

