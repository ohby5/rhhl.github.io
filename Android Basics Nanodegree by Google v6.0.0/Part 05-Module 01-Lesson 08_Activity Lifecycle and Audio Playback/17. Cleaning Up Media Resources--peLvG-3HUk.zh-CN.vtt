WEBVTT
Kind: captions
Language: zh-CN

00:00:00.110 --> 00:00:03.000
我们先添加我们为你提供的代码段

00:00:03.000 --> 00:00:04.155
添加到 Miwok 应用中

00:00:04.155 --> 00:00:08.220
复制这段代码 切换到 Android Studio

00:00:08.220 --> 00:00:10.050
并粘贴到 NumbersActivity 的底部

00:00:10.050 --> 00:00:13.900
现在 当音频文件完成播放时 我要调用

00:00:13.900 --> 00:00:18.140
我们刚刚添加的这个 releaseMediaPlayer() 方法

00:00:18.140 --> 00:00:21.510
这意味着我需要对 MediaPlayer

00:00:21.510 --> 00:00:23.080
注册一个 onCompletionListener

00:00:23.080 --> 00:00:27.070
注意 在 MediaPlayer 开始后 需要作出这一设置

00:00:27.070 --> 00:00:31.820
我将代码添加到 mMediaPlayer.start() 这行的下面

00:00:31.820 --> 00:00:34.470
我让 Android studio 在这里为我自动填充

00:00:34.470 --> 00:00:36.930
并添加这一接口回调

00:00:36.930 --> 00:00:40.875
在 onCompletion 方法回调中 我可以调用

00:00:40.875 --> 00:00:42.220
releaseMediaPlayer 方法

00:00:44.253 --> 00:00:46.993
我刚刚意识到 有一个方法比这个更高效

00:00:46.993 --> 00:00:50.593
我们可以创建一个该 onCompletionListener 的实例

00:00:50.593 --> 00:00:54.193
并且每次都重复使用它 而不用每次点击某个列表项时

00:00:54.193 --> 00:00:56.870
都创建一个新的 onCompletionListener

00:00:56.870 --> 00:00:59.210
这么做会更高效 因为我们就不用

00:00:59.210 --> 00:01:03.380
每次都创建新的对象 并占用新的资源

00:01:03.380 --> 00:01:06.790
我将这段用来实施 onCompletionListener 接口的代码段

00:01:06.790 --> 00:01:10.070
移走并放入一个全局变量里

00:01:10.070 --> 00:01:11.630
代码就是这样的

00:01:11.630 --> 00:01:14.530
我移走了用来实施 onCompletionListener

00:01:14.530 --> 00:01:15.430
接口的代码段

00:01:17.760 --> 00:01:22.100
并将其放入一个叫做 mCompletionListener 的全局变量里

00:01:22.100 --> 00:01:28.180
回到这里 每次我创建一个新的 MediaPlayer 对象

00:01:28.180 --> 00:01:32.570
并开始该 MediaPlayer 时 我可以将 CompletionListener 设置为该全局变量

00:01:33.700 --> 00:01:36.062
传入 mCompletionListener

00:01:36.062 --> 00:01:39.172
为了做出进一步的解释 我将添加一些注释

00:01:41.401 --> 00:01:43.900
第一项任务就完成了

00:01:43.900 --> 00:01:46.830
我们对 NumbersActivity 采取了措施 当它播放完声音文件后

00:01:46.830 --> 00:01:50.630
它就会释放该 MediaPlayer 资源

00:01:50.630 --> 00:01:54.640
第二项任务是 在 MediaPlayer 被初始化以便播放不同的声音前

00:01:54.640 --> 00:01:57.760
也释放 MediaPlayer 资源

00:01:57.760 --> 00:01:59.630
出现这一情况的示例包括

00:01:59.630 --> 00:02:02.150
用户连续快速点按了多个列表项

00:02:02.150 --> 00:02:06.070
设备可能没有足够的时间播放完每个音频文件

00:02:06.070 --> 00:02:08.380
因此 onCompletionListener 可能未被触发

00:02:09.410 --> 00:02:11.516
如果我们正在播放某个音频

00:02:11.516 --> 00:02:13.785
用户点击了完全不同的音频文件

00:02:13.785 --> 00:02:16.593
那么我们需要停止播放并释放该 MediaPlayer 资源

00:02:16.593 --> 00:02:20.380
然后立即为当前的歌曲创建一个新的 MediaPlayer 对象

00:02:20.380 --> 00:02:25.480
回到 NumbersActivity 在 onItem 方法中

00:02:25.480 --> 00:02:29.280
在 MediaPlayer 被创建之前 我们也需要释放 MediaPlayer 资源

00:02:30.360 --> 00:02:32.890
这么做是为了配置为播放不同的 

00:02:32.890 --> 00:02:33.460
音频文件

00:02:34.890 --> 00:02:38.111
这些就是需要对 NumbersActivity 做出的所有更改

00:02:38.111 --> 00:02:41.199
现在我将对所有其他 Activity 重复相同的操作

00:02:54.081 --> 00:02:57.212
这些就是我们需要对所有 Activity 做出的所有更改

00:02:57.212 --> 00:03:00.340
现在我们测试下应用 确保不会出错

00:03:00.340 --> 00:03:04.490
这是应用在设备上的运行效果

00:03:04.490 --> 00:03:05.810
从外观上来看 没有任何改变

00:03:05.810 --> 00:03:07.180
不错

00:03:07.180 --> 00:03:09.260
现在我们看看是否依然能播放音频

00:03:09.260 --> 00:03:11.620
点按 PhrasesActivity

00:03:11.620 --> 00:03:14.410
无论我是点击某个短语来播放音频

00:03:14.410 --> 00:03:19.060
并让其完成播放 还是快速点击多个列表项

00:03:19.060 --> 00:03:21.130
MediaPlayer 资源都应该被清空

00:03:22.170 --> 00:03:24.800
首先试试一个短语 并让其完成播放

00:03:26.140 --> 00:03:30.260
现在快速点按好几个列表项

00:03:30.260 --> 00:03:32.945
中间的音频应该被切断

00:03:32.945 --> 00:03:40.950
看起来没问题

