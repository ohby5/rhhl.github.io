WEBVTT
Kind: captions
Language: zh-CN

00:00:00.440 --> 00:00:02.260
现在看看我们的任务列表

00:00:02.260 --> 00:00:04.280
我们可以从上往下处理每项任务

00:00:04.280 --> 00:00:06.880
在上一节课中 我提到你可以按照多种方式

00:00:06.880 --> 00:00:08.930
安排任务的优先级

00:00:08.930 --> 00:00:11.240
一种方式是首先尝试最难的或

00:00:11.240 --> 00:00:15.260
最冒险的任务 弄清楚该功能是否可行

00:00:15.260 --> 00:00:18.020
对我们来说 我们之前从来没播放过音频文件

00:00:18.020 --> 00:00:19.920
所以要先确定这一点是可行的

00:00:19.920 --> 00:00:24.060
这个列表中 风险最低的一项是向列表项中

00:00:24.060 --> 00:00:27.920
添加播放按钮图标 因为我们之前已经修改过布局

00:00:27.920 --> 00:00:29.440
所以知道该任务是能够完成的

00:00:29.440 --> 00:00:31.830
所以我们将这个 UI 更改任务留到课程结束时

00:00:31.830 --> 00:00:35.330
到时候我们改善外观时会同时完成这项任务

00:00:35.330 --> 00:00:38.550
要开始 请先创建一个与 Miwok 应用

00:00:38.550 --> 00:00:40.490
独立开来的小型音乐播放器应用

00:00:40.490 --> 00:00:44.717
开发人员通常会写一个小应用 测试下新技术

00:00:44.717 --> 00:00:46.219
然后将该技术添加到自己的大型应用中

00:00:46.219 --> 00:00:49.770
通过创建这个示例应用 你将熟悉

00:00:49.770 --> 00:00:53.656
MediaPlayer API 顺便提下 你可能偶尔听过

00:00:53.656 --> 00:00:58.423
API 这个术语 它是应用程序接口的缩写

00:00:58.423 --> 00:01:00.438
我们之前讨论过接口

00:01:00.438 --> 00:01:03.830
它们就像 Android 提供的一种合同

00:01:03.830 --> 00:01:07.292
保证向我们提供某些功能 例如使用 MediaPlayer 类播放媒体

00:01:08.452 --> 00:01:11.664
我们不需要知道 MediaPlayer 类中的所有细节

00:01:11.664 --> 00:01:14.736
例如如何让设备上的扬声器发出声音

00:01:14.736 --> 00:01:18.186
作为开发人员 我们只关心我们可以使用 MediaPlayer

00:01:18.186 --> 00:01:20.506
并对其调用方法来播放媒体文件

00:01:21.866 --> 00:01:22.956
对于这道测试题

00:01:22.956 --> 00:01:27.660
你将构建一个简单的音乐播放器应用 可以播放一首歌曲

00:01:27.660 --> 00:01:29.232
在这个应用中 点按“播放”

00:01:29.232 --> 00:01:35.985
[MUSIC]

00:01:35.985 --> 00:01:41.407
播放了一首歌曲 点按“暂停”音乐暂停了

00:01:41.407 --> 00:01:43.926
当你再次点按“播放”它会从暂停的位置继续播放

00:01:43.926 --> 00:01:51.381
[音乐]

00:01:51.381 --> 00:01:53.932
首先在 Android Studio 中创建一个新项目

00:01:53.932 --> 00:01:58.740
使用空的 Activity 模板并构建出这个布局

00:01:58.740 --> 00:02:01.960
在测试题下方的备注中 我们提供了相关链接帮助你

00:02:01.960 --> 00:02:03.719
找到并下载示例 MP3 文件并用于你的应用

00:02:04.730 --> 00:02:07.380
注意 你也可以使用自己的 MP3 文件

00:02:07.380 --> 00:02:10.750
确保将音频文件存储在 raw 文件夹中

00:02:10.750 --> 00:02:12.140
位于应用的 res 目录下

00:02:13.480 --> 00:02:17.195
要创建该 raw 文件夹 在应用的项目结构标签页中

00:02:17.195 --> 00:02:22.330
右击 res 文件夹 依次选择“新建 (New)”

00:02:22.330 --> 00:02:27.775
“Android 资源目录 (Android resource directory)”

00:02:27.775 --> 00:02:33.540
然后将新目录命名为“raw”并将资源类型也选择为 raw 按“确定 (OK)”

00:02:35.210 --> 00:02:38.302
然后将歌曲文件复制粘贴到这个 raw 文件夹中

00:02:38.302 --> 00:02:44.622
我们的 MP3 文件是预编码的文件 需要按原样处理 即处理成原始内容

00:02:44.622 --> 00:02:48.730
要详细了解资源文件夹

00:02:48.730 --> 00:02:52.840
请参阅测试题下方备注中提供的资源文章

00:02:52.840 --> 00:02:57.030
然后将提供的音频文件添加到应用的 res/raw 目录下

00:02:58.410 --> 00:03:01.980
然后请修改代码 添加 OnClickListener

00:03:01.980 --> 00:03:04.760
使每个按钮都能实际地播放和暂停歌曲

00:03:05.820 --> 00:03:07.120
同时尝试使用下

00:03:07.120 --> 00:03:10.930
MediaPlayer 类提供的其他功能

00:03:10.930 --> 00:03:15.530
例如 添加一个按钮来更改音量

00:03:15.530 --> 00:03:16.840
甚至跳到歌曲的中间部分

00:03:18.020 --> 00:03:18.792
对于这项任务

00:03:18.792 --> 00:03:22.300
你需要研究如何使用 Android 上的 MediaPlayer

00:03:22.300 --> 00:03:26.030
我们不会提供具体的参考网站

00:03:26.030 --> 00:03:29.960
请你自己查看 Android 中关于 MediaPlayer 的教程

00:03:29.960 --> 00:03:33.260
然后在你的应用上作出尝试 发现错误 并最终使应用能运行

00:03:33.260 --> 00:03:33.880
祝你好运

