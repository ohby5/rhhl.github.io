WEBVTT
Kind: captions
Language: zh-CN

00:00:00.310 --> 00:00:03.380
为了向你展示如何注册这些 Activity 生命周期回调

00:00:03.380 --> 00:00:05.830
我创建了一个新的项目 叫做 Lifecycle

00:00:05.830 --> 00:00:07.770
并且使用的是空的 Activity 模板

00:00:07.770 --> 00:00:10.890
我开始在这里修改 MainActivity 文件

00:00:10.890 --> 00:00:14.666
我重写了每个主要 Activity 生命周期方法

00:00:14.666 --> 00:00:21.680
onCreate、onStart、onResume、onPause 等等

00:00:21.680 --> 00:00:24.060
我在这里示范下

00:00:24.060 --> 00:00:26.810
在我的 Android Studio 版本中 我可以使用键盘快捷键

00:00:26.810 --> 00:00:28.580
调出重写方法菜单

00:00:28.580 --> 00:00:33.040
按下 Ctrl+O 并调出这些可以重写的方法列表

00:00:33.040 --> 00:00:37.010
我选择 onStop 点击确定拉取该方法

00:00:38.810 --> 00:00:42.070
Android Studio 自动向我的应用中添加了该方法

00:00:42.070 --> 00:00:45.357
在每个方法中 我将调用该方法的超级类版本

00:00:45.357 --> 00:00:48.781
这将执行 AppCompatActivity 的

00:00:48.781 --> 00:00:50.292
onStop 方法中的说明

00:00:50.292 --> 00:00:52.790
我们重写的就是这个方法

00:00:52.790 --> 00:00:55.670
该超级类才是真正执行操作的类

00:00:55.670 --> 00:00:57.060
即在屏幕上显示窗口

00:00:57.060 --> 00:00:59.840
及执行其他幕后操作 使 Activity 能运行

00:00:59.840 --> 00:01:03.670
每次重写某个生命周期方法时 一定要先调用该方法的

00:01:03.670 --> 00:01:08.189
超级类版本 我们可以在这行代码之后添加自己的逻辑代码

00:01:08.189 --> 00:01:11.604
我添加一行代码 输出一条日志消息 并指定该方法的名称

00:01:11.604 --> 00:01:14.847
以及点按了哪个 Activity 生命周期方法

00:01:17.661 --> 00:01:21.138
一旦应用在设备上运行后 该 Activity 会立即启动

00:01:21.138 --> 00:01:23.562
我可以查看日志 看到 onCreate onStart 和

00:01:23.562 --> 00:01:25.930
onResume 方法被调用了

00:01:25.930 --> 00:01:30.430
当我点按主屏幕按钮时 该 Activity 不再可见

00:01:30.430 --> 00:01:33.760
所以应该调用了 onPause 和 onStop 方法

00:01:33.760 --> 00:01:34.770
在日志中可以看到它们

00:01:34.770 --> 00:01:35.410
一切操作正常

00:01:36.630 --> 00:01:37.861
如果再回到我的应用

00:01:44.790 --> 00:01:47.610
那么 onStart 和 onResume 方法被调用

00:01:47.610 --> 00:01:51.020
现在 Activity 处于活跃状态 我可以与其互动了

00:01:51.020 --> 00:01:53.630
我知道要消化的内容比较多

00:01:53.630 --> 00:01:55.730
可能一开始很难明白

00:01:55.730 --> 00:01:59.110
但是别担心 在接触了该应用和未来的各种应用后

00:01:59.110 --> 00:02:01.688
你将学会如何更有效地管理 Activity 生命周期

00:02:01.688 --> 00:02:04.280
如果你想练习下 Activity 生命周期方法

00:02:04.280 --> 00:02:06.650
我在下面提供了我们查看的这段代码的链接

