WEBVTT
Kind: captions
Language: zh-CN

00:00:00.250 --> 00:00:03.448
当我们请求 Audio Focus 时 我们必须指定 streamType

00:00:03.448 --> 00:00:06.610
Android 为你提供了这些选项供你选择

00:00:06.610 --> 00:00:10.648
这些内容位于 AudioManager 参考部分的

00:00:10.648 --> 00:00:11.208
公开常量部分

00:00:11.208 --> 00:00:13.364
在阅读了所有这些说明后 

00:00:13.364 --> 00:00:15.480
发现似乎都不合适

00:00:15.480 --> 00:00:17.130
我们的是个简短的音频文件

00:00:17.130 --> 00:00:18.430
不是闹钟

00:00:18.430 --> 00:00:21.850
不是 DTMF 音调（用于拨打电话号码）

00:00:21.850 --> 00:00:24.920
不是音乐或通知

00:00:24.920 --> 00:00:28.300
也不是系统声音或语音电话

00:00:28.300 --> 00:00:31.900
在所有这些选项中 似乎 STREAM_MUSIC 最合适

00:00:31.900 --> 00:00:35.260
当你开发的应用会播放音频 例如音乐或播客播放器时

00:00:35.260 --> 00:00:38.740
你可能就会用到这个 streamType

00:00:38.740 --> 00:00:40.090
对于第一个问题

00:00:40.090 --> 00:00:45.750
我们希望使用的 streamType 是 AudioManager.STREAM_MUSIC

00:00:45.750 --> 00:00:48.060
现在来看看第三个参数 durationHint

00:00:49.280 --> 00:00:52.830
我们回到 requestAudioFocus 方法的文档

00:00:52.830 --> 00:00:55.050
阅读下关于 durationHint 的参数说明

00:00:55.050 --> 00:00:57.760
似乎对我们来说 最合适的应该是

00:00:57.760 --> 00:01:01.730
AUDIOFOCUS_GAIN_TRANSIENT 表示我们要请求 Audio Focus

00:01:01.730 --> 00:01:04.780
并使用很短的时间 因为我们的音频文件非常短

00:01:04.780 --> 00:01:06.960
只播放几秒钟

00:01:06.960 --> 00:01:09.620
其他 Audio Focus 状态对我们来说

00:01:09.620 --> 00:01:10.320
都不太合适

00:01:10.320 --> 00:01:13.320
例如 我们播放的不是一首长的歌曲或视频

00:01:13.320 --> 00:01:15.177
所以不需要 AUDIOFOCUS_GAIN

00:01:15.177 --> 00:01:18.029
也不需要 AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE

00:01:18.029 --> 00:01:20.944
即当我们播放我们的音频时

00:01:20.944 --> 00:01:23.218
系统声音（例如通知）不会播放

00:01:23.218 --> 00:01:26.012
我们不希望用户错过这些重要提示音

00:01:26.012 --> 00:01:28.568
因此不会使用这个选项

00:01:28.568 --> 00:01:29.092
最后

00:01:29.092 --> 00:01:32.650
AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK 看起来合适

00:01:32.650 --> 00:01:35.190
但是使用它的话会存在背景噪音

00:01:35.190 --> 00:01:38.700
现在我们来看看 ducking 的意思 点开这个文档

00:01:38.700 --> 00:01:42.020
第一句话说 用来表示短暂的

00:01:42.020 --> 00:01:45.372
Audio Focus 请求 预计持续短暂的时间

00:01:45.372 --> 00:01:46.560
可以接受在降低输出级别后

00:01:46.560 --> 00:01:50.930
让其他音频应用继续播放

00:01:50.930 --> 00:01:55.500
即闪避 例如闪避在其他内容之下 或降低级别

00:01:55.500 --> 00:01:58.420
对我们来说 例如如果有首歌正在播放 用户想要听听

00:01:58.420 --> 00:02:02.030
某个米沃克单词的发音 则我们不希望在播放米沃克单词发音的同时

00:02:02.030 --> 00:02:06.133
还播放该歌曲 即使该歌曲的音量变低了

00:02:06.133 --> 00:02:09.060
当我们希望播放我们的音频时 我们想要暂时

00:02:09.060 --> 00:02:13.030
完全让所有其他内容保持静音 系统提示音除外

00:02:13.030 --> 00:02:19.448
因此我们使用 AudioManager.AUDIO_GAIN_TRANSIENT

00:02:19.448 --> 00:02:20.990
调查研究做的不错

00:02:20.990 --> 00:02:24.260
你通过阅读这些文档 已经越来越熟悉

00:02:24.260 --> 00:02:25.330
AudioManager 了

00:02:25.330 --> 00:02:27.850
我们再继续学习 进入下一道测试题

