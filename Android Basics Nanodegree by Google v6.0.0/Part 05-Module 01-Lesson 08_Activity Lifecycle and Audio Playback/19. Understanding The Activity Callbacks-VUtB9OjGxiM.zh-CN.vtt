WEBVTT
Kind: captions
Language: zh-CN

00:00:00.230 --> 00:00:03.550
现在你已经知道 Activity 生命周期的不同状态

00:00:03.550 --> 00:00:07.200
如何告诉系统你想要知道某些转换情况呢？

00:00:07.200 --> 00:00:11.030
例如 你可能只希望当用户正在查看你的 Activity 时

00:00:11.030 --> 00:00:13.475
才在屏幕上显示动画

00:00:13.475 --> 00:00:16.155
一旦屏幕对用户不可见

00:00:16.155 --> 00:00:17.535
你就希望停止该动画

00:00:17.535 --> 00:00:20.665
和处理点击操作类似 系统将通过方法回调

00:00:20.665 --> 00:00:24.255
通知你正在发生生命周期转换情况

00:00:24.255 --> 00:00:26.795
每个转换都有自己的回调

00:00:26.795 --> 00:00:29.185
作为开发者 你可以使用这些回调来

00:00:29.185 --> 00:00:33.405
干预和执行声明

00:00:33.405 --> 00:00:37.600
例如恢复或保存任何数据 甚至清空

00:00:37.600 --> 00:00:40.660
不再需要的引用

00:00:40.660 --> 00:00:44.360
打开 NumbersActivity 你可能注意到了

00:00:44.360 --> 00:00:48.420
我们所写的大部分代码都是位于 Activity onCreate 方法中

00:00:48.420 --> 00:00:51.790
这是当系统为你创建 Activity 时执行的回调

00:00:51.790 --> 00:00:56.450
通过重写类定义中的方法

00:00:56.450 --> 00:01:00.360
你将能够指定在该阶段发生的行为

00:01:00.360 --> 00:01:04.110
我们还在这里 inflate 布局 XML 资源

00:01:04.110 --> 00:01:07.390
获取我们想要控制的视图的引用

00:01:07.390 --> 00:01:10.820
并初始化应用正常运行所依赖的任何其他关键对象

00:01:12.210 --> 00:01:14.460
打开 Android Developers 文档

00:01:14.460 --> 00:01:18.080
在 Activity 类这一部分 文档显示了 Activity 生命周期

00:01:18.080 --> 00:01:20.430
各个状态的所有系统回调

00:01:20.430 --> 00:01:24.040
当 Activity 转换到某个特定状态

00:01:24.040 --> 00:01:25.750
如果你想执行某些代码 就可以在你的 Activity 类中

00:01:25.750 --> 00:01:28.020
重写任意方法

