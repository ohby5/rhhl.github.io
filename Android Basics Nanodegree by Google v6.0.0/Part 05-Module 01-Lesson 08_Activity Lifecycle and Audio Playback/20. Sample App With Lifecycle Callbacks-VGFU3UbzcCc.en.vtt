WEBVTT
Kind: captions
Language: en

00:00:00.310 --> 00:00:03.380
To show you how to register at these
activity lifecycle call backs,

00:00:03.380 --> 00:00:05.830
I created a new project named Lifecycle.

00:00:05.830 --> 00:00:07.770
And I used the empty
activity template and

00:00:07.770 --> 00:00:10.890
in here I started modifying
the MainActivity file.

00:00:10.890 --> 00:00:14.666
So I went through and overrode each of
the major activity lifecycle methods,

00:00:14.666 --> 00:00:21.680
onCreate, onStart, onResume,
onPause, and so on.

00:00:21.680 --> 00:00:24.060
And here I give you
an example of how I did that.

00:00:24.060 --> 00:00:26.810
Now on my version of Android Studio I
have a keyboard shortcut

00:00:26.810 --> 00:00:28.580
to pull up the override method menu.

00:00:28.580 --> 00:00:33.040
So I have Ctrl+O and pulls up this
list of methods that I can override.

00:00:33.040 --> 00:00:37.010
For here I want to choose onStop, click
OK, and that pulls in the method for me.

00:00:38.810 --> 00:00:42.070
So Android Studio automatically
helped me add the method into my app.

00:00:42.070 --> 00:00:45.357
Now within each method I'm going to call
a super class version of the method.

00:00:45.357 --> 00:00:48.781
This will execute instructions
within the onStop method of

00:00:48.781 --> 00:00:50.292
the AppCompatActivity.

00:00:50.292 --> 00:00:52.790
And remember that's
the class that we overrode.

00:00:52.790 --> 00:00:55.670
So this super class is the one that
does the real work in terms of

00:00:55.670 --> 00:00:57.060
showing the window on the screen and

00:00:57.060 --> 00:00:59.840
other behind the scenes stuff
that makes the activity work.

00:00:59.840 --> 00:01:03.670
So whenever you override a lifecycle
method be sure to call the superclass

00:01:03.670 --> 00:01:08.189
version of that method first now after
this line we can add in our own logic.

00:01:08.189 --> 00:01:11.604
I add in a line of code that prints
out a log message with the name of

00:01:11.604 --> 00:01:14.847
the method as well as what
activity lifecycle method is hit.

00:01:14.847 --> 00:01:17.661
[BLANK_AUDIO]

00:01:17.661 --> 00:01:21.138
So once the app is running on my device,
the activity immediately launches and

00:01:21.138 --> 00:01:23.562
I can check the logs and
see that onCreate, onStart and

00:01:23.562 --> 00:01:25.930
the onResume methods have been called.

00:01:25.930 --> 00:01:30.430
Now when I hit the Home button,
the activity is no longer visible.

00:01:30.430 --> 00:01:33.760
So the onPause and the onStop
method should have been called and

00:01:33.760 --> 00:01:34.770
here they are in the logs.

00:01:34.770 --> 00:01:35.410
So we're doing good.

00:01:36.630 --> 00:01:37.861
Now if I go back into my app.

00:01:37.861 --> 00:01:44.790
[BLANK_AUDIO]

00:01:44.790 --> 00:01:47.610
Then the onStart and
onResume methods get called.

00:01:47.610 --> 00:01:51.020
And then the activity is now active and
I can interact with it.

00:01:51.020 --> 00:01:53.630
All right, so I know that was a lot
of information to take in and

00:01:53.630 --> 00:01:55.730
it might be a hard concept
to grasp at first, but

00:01:55.730 --> 00:01:59.110
don't worry as you see more scenarios
of this app and future apps,

00:01:59.110 --> 00:02:01.688
you'll learn how to better
manage the activity lifecycle.

00:02:01.688 --> 00:02:04.280
And if you'd like to experiment
with activity lifecycle methods,

00:02:04.280 --> 00:02:06.650
I've linked the code that we've
looked at here down below.

