WEBVTT
Kind: captions
Language: zh-CN

00:00:00.690 --> 00:00:03.320
这是第 1 个问题的图表

00:00:03.320 --> 00:00:06.880
在我们对 Word 类做出修改 使其能够为每个单词都

00:00:06.880 --> 00:00:09.700
存储音频文件后 Word 类将是这样的

00:00:09.700 --> 00:00:13.910
这样 我们可以为每个类别都创建一个 Word 对象数组列表

00:00:13.910 --> 00:00:17.500
对于第 2 个问题 当列表中的某项被点击后

00:00:17.500 --> 00:00:19.555
onItemClickListener 被触发

00:00:19.555 --> 00:00:22.560
onItemClick() 方法被执行

00:00:22.560 --> 00:00:25.180
这个方法有四个输入值

00:00:25.180 --> 00:00:28.540
onItemClick() 方法中的代码可以利用

00:00:28.540 --> 00:00:30.180
下面这些变量

00:00:30.180 --> 00:00:33.090
如果我们查看下之前查阅的关于 onItemClick() 方法的

00:00:33.090 --> 00:00:34.790
官方 Android 文档

00:00:34.790 --> 00:00:36.949
这里描述了每个参数的含义

00:00:38.200 --> 00:00:40.940
我们来看看每个选项

00:00:40.940 --> 00:00:44.120
对于第一个答案“adapterView”指的是 listView

00:00:44.120 --> 00:00:46.700
不是我们在这里要寻找的

00:00:46.700 --> 00:00:50.010
第二个选项“view”是指我们点击的列表项视图

00:00:50.010 --> 00:00:51.830
几乎就是我们要寻找的

00:00:51.830 --> 00:00:54.160
通过它我们可以找到列表项布局中的 TextView

00:00:54.160 --> 00:00:58.200
然后调用 getText 方法来获得目标单词作为字符串

00:00:58.200 --> 00:01:01.090
但是只有字符串无法帮助我们找到与每个单词关联的

00:01:01.090 --> 00:01:02.150
音频文件

00:01:02.150 --> 00:01:04.860
所以这个参数不是我们所需的

00:01:04.860 --> 00:01:08.110
接着是“position”是指列表项在适配器的

00:01:08.110 --> 00:01:10.480
数据源中的位置

00:01:10.480 --> 00:01:12.480
如果第二个列表项被点击

00:01:12.480 --> 00:01:17.265
它会对应到适配器的内部数据列表中的位置 2

00:01:17.265 --> 00:01:20.000
“position”这个选项非常有希望是正确答案

00:01:20.000 --> 00:01:22.520
因为它指向了数组列表中的 Word 对象

00:01:22.520 --> 00:01:25.176
通过 Word 对象 我们可以检索音频资源 ID

00:01:25.176 --> 00:01:28.900
为了考虑全面 我们再来看看最后一个选项

00:01:28.900 --> 00:01:33.400
最后这个选项“ID”是指我们点击的列表项的行 ID

00:01:33.400 --> 00:01:38.000
在适配器中你可以指定数字 ID 来标识每行

00:01:38.000 --> 00:01:40.690
你也可以为每行使用随机数字

00:01:40.690 --> 00:01:42.690
但是大部分情况下 我们不需要依赖 ID

00:01:42.690 --> 00:01:45.840
在看完所有这些答案后

00:01:45.840 --> 00:01:49.280
最佳选项应该是“position”因为通过它

00:01:49.280 --> 00:01:52.780
我们可以从单词数组列表中获得对应的 Word 对象

00:01:52.780 --> 00:01:55.850
也就意味着我们可以找到正确的音频文件 ID

00:01:55.850 --> 00:01:58.330
然后配置 MediaPlayer 对象来播放该音频文件

