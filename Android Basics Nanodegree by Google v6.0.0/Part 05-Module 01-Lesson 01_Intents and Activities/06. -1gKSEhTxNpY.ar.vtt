WEBVTT
Kind: captions
Language: ar

00:00:00.400 --> 00:00:03.901
‫لنفتح ملف MainActivity.java
‫ونراجع ما يحويه

00:00:04.267 --> 00:00:06.734
‫في بداية أي ملف جافا
‫ستجد اسم الحزمة

00:00:07.100 --> 00:00:08.767
‫فيذكر الكلمة (حزمة package)..

00:00:08.834 --> 00:00:11.934
‫وهي كلمة جافا دلالية
‫متبوعة باسم الحزمة

00:00:12.567 --> 00:00:16.334
‫وهي هنا
‫com.example.android.miwok

00:00:16.834 --> 00:00:20.168
‫هذا هو اسم الحزمة الذي حددناه
‫في معالج المشروع الجديد

00:00:20.234 --> 00:00:23.401
‫ليكون معرفاً فريداً لتطبيقنا
‫على جهاز آندرويد

00:00:23.701 --> 00:00:26.635
‫كل تطبيق في متجر (جوجل بلاي)
‫له اسم حزمة مختلف

00:00:26.834 --> 00:00:30.268
‫كل كود تطبيقنا سيجتمع معاً
‫تحت اسم الحزمة هذا

00:00:30.734 --> 00:00:33.201
‫لذا في الاختبار، فإن A
‫هو اسم الحزمة

00:00:33.834 --> 00:00:35.967
‫بعدها لدينا جمل الاستيراد

00:00:36.167 --> 00:00:40.501
‫وهذه الجمل تستورد فئات جافا لم نكتبها
‫ولكن بوسعنا استخدامها في الكود

00:00:41.000 --> 00:00:44.000
‫هذه الملفات تنتمي لحزم كود
‫أخرى في إطار عمل آندرويد..

00:00:44.200 --> 00:00:45.667
‫والتي كتبها فريق آندرويد

00:00:45.968 --> 00:00:49.335
‫مثلاً، فإننا نستورد فئة
‫AppCompactActivity

00:00:49.601 --> 00:00:50.968
‫من الحزمة المسماة..

00:00:51.133 --> 00:00:54.467
‫android.support.v7.app

00:00:55.033 --> 00:00:59.367
‫لا داعي للقلق حول التفاصيل الداخلية
‫في باقة AppCompactActivity

00:00:59.834 --> 00:01:02.335
‫يمكننا ببساطة استغلالهم
‫مجاناً في كودنا

00:01:02.601 --> 00:01:06.535
‫كلما رغبنا في إضافة كود من حزم أخرى،
‫سنضيف جمل استيراد هنا

00:01:07.000 --> 00:01:10.133
‫لذا في الاختبار،
‫B هي عبارات الاستيراد

00:01:10.701 --> 00:01:12.635
‫ثم تالياً لدينا إعلان فئة

00:01:12.901 --> 00:01:16.034
‫سطر (الفئة العامة) هو إعلان فئة

00:01:16.334 --> 00:01:20.601
‫والذي يعلن أن هذا الملف يحوي
‫تعريف الفئة المسماة MainActivity

00:01:21.000 --> 00:01:23.968
‫وهي تمتد من الفئة العليا المسماة
‫AppCompatActivity

00:01:24.033 --> 00:01:27.467
‫وهذا يعني أنها ترث كافة سلوكيات
‫AppCompatActivity

00:01:27.934 --> 00:01:31.134
‫من حيث عرض النافذة على الجهاز
‫وعرض شريط التطبيق

00:01:31.634 --> 00:01:34.968
‫كما يمكننا تخصيص السلوك
‫بتجاوز بعض الوظائف

00:01:35.200 --> 00:01:39.001
‫نغير إعلان الفئة هذا فقط
‫إن أردنا تغيير اسم الفئة..

00:01:39.467 --> 00:01:41.034
‫أو تغيير ما نرث منه

00:01:41.334 --> 00:01:42.334
‫في الاختبار..

00:01:42.501 --> 00:01:44.935
‫فإن C هو إعلان الفئة

00:01:45.601 --> 00:01:47.335
‫ثم بعدها لدينا تجاوز الفئة

00:01:47.567 --> 00:01:49.700
‫هنا نتجاوز وظيفة onCreate..

00:01:50.000 --> 00:01:52.968
‫والمعرفة أساساً في فئة
‫AppCompatActivity

00:01:53.334 --> 00:01:55.434
‫للتذكير، فوظيفة
‫onCreate..

00:01:55.667 --> 00:01:58.800
‫يستدعيها آندرويد عندما ينشئ
‫نسخة من MainActivity

00:01:59.026 --> 00:02:01.117
‫وهذا ما أن تفتح التطبيق على جهازك

00:02:01.434 --> 00:02:05.201
‫وهنا نوضح خطواتنا لما يحدث
‫عند إنشاء تطبيقنا

00:02:05.596 --> 00:02:08.564
‫وفي الاختبار، فإن
‫D هي تجاوز الوظيفة

00:02:08.917 --> 00:02:11.151
‫وأخيراً لدينا
‫setContentView

00:02:11.421 --> 00:02:15.622
‫داخل وظيفة onCreate
‫لدينا سطر ينشئ setContentView

00:02:15.932 --> 00:02:20.276
‫ويمرر المخطط activity_main
‫كوسيط مدخلات

00:02:20.610 --> 00:02:24.116
‫وبذا نخبر آندرويد أن يضع واجهة المستخدم
‫المعرفة في ملف المخطط هذا

00:02:24.188 --> 00:02:25.595
‫في شاشة النشاط تلك

00:02:25.913 --> 00:02:27.857
‫وآخراً في الاختبار،
‫فإن E..

00:02:28.200 --> 00:02:31.001
‫setContentView
‫تضبط لتكون مورد مخطط XML

