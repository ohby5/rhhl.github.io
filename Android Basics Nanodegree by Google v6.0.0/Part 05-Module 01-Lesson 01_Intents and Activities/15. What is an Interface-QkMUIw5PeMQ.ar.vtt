WEBVTT
Kind: captions
Language: ar

00:00:00.667 --> 00:00:03.268
‫لنعد إلى توثيقات
‫OnClickListener

00:00:03.534 --> 00:00:04.534
‫كما أدركنا..

00:00:04.601 --> 00:00:08.701
‫آندرويد مُحدد جداً في تفاصيل
‫كيفية الاستماع لحدث مُدخل

00:00:09.067 --> 00:00:11.035
‫لا يمكن تسمية الوظيفة بأي اسم آخر

00:00:11.067 --> 00:00:16.134
‫يجب أن تسمى onClick ويكون لها مدخلاً
‫واحداً فقط هو الواجهة التي يُنقر عليها

00:00:16.234 --> 00:00:18.367
‫ولا قيمة إرجاع لها

00:00:18.601 --> 00:00:20.734
‫لذا يمكنك التفكير في المخطط هنا..

00:00:20.834 --> 00:00:23.568
‫عن OnClickListener
‫فيما يتعلق بالفئة والوظائف..

00:00:23.634 --> 00:00:26.968
‫كعقد عليك التزامه بصفتك المطور

00:00:27.033 --> 00:00:29.066
‫ليتم إخطارك بأحداث النقر

00:00:29.300 --> 00:00:33.234
‫بمصطلحات جافا الرسمية..
‫فهذا تعريف لواجهة وسيطة Interface

00:00:33.300 --> 00:00:35.234
‫في بداية صفحة التوثيقات هذه..

00:00:35.367 --> 00:00:37.567
‫وبخط صغير ذكرت.. واجهة وسيطة

00:00:37.701 --> 00:00:43.368
‫مستقبلاً، فغالباً ما ستمر بمكون
‫آندرويد آخر لتجده واجهة وسيطة أيضاً

00:00:43.868 --> 00:00:45.769
‫عند هذه النقطة، قد تتساءل..

00:00:46.033 --> 00:00:47.033
‫رويدك!

00:00:47.234 --> 00:00:49.202
‫كيف تختلف الواجهة الوسيطة عن الفئة؟

00:00:49.267 --> 00:00:51.201
‫فالتوثيقات تكاد تتطابق

00:00:51.467 --> 00:00:55.001
‫في الدورة السابقة تعلمنا
‫عن فئات مثل TextView

00:00:55.467 --> 00:00:59.201
‫والتي تحتوي حالات ووظائف كاملة التطبيق

00:00:59.400 --> 00:01:01.934
‫بما يعني وجود تعليمات في كل وظيفة

00:01:02.400 --> 00:01:04.567
‫الآن نتعرف على الواجهات الوسيطة

00:01:04.868 --> 00:01:08.769
‫والتي لا تملك حالات،
‫ولكنها تملك توقيعات الوظائف

00:01:09.067 --> 00:01:12.367
‫تذكر أن توقيع الوظيفة
‫يشير إلى قيمة الإرجاع..

00:01:12.501 --> 00:01:15.701
‫واسم الوظيفة وباراميترات الإدخال
‫وتنتهي بفاصلة منقوطة..

00:01:15.801 --> 00:01:20.135
‫ولا أقواس معقوفة تحوي كوداً
‫بينها لتطبيق الوظيفة

00:01:20.501 --> 00:01:22.634
‫بما يعني أنها وظيفة تجريدية

00:01:22.868 --> 00:01:26.268
‫تطبيق الوظائف التجريدية
‫تُرك فارغاً عن قصد

00:01:26.601 --> 00:01:29.901
‫ليمكن لمطور مثلك، يرغب في
‫استخدام الواجهة الوسيطة..

00:01:30.133 --> 00:01:32.600
‫وضع تعليماته الخاصة لأجلها

00:01:32.734 --> 00:01:37.368
‫ولسان حالها يقول "املأ الفراغ بما
‫تريد حدوثه عند نقر الواجهة."

00:01:38.200 --> 00:01:40.834
‫قد توجد عدة وظائف تجريدية
‫في واجهة وسيطة

00:01:41.000 --> 00:01:45.267
‫لكن هذا المثال عن واجهة onClickListener
‫بها وظيفة تجريدية واحدة

00:01:45.400 --> 00:01:46.467
‫وظيفة
‫onClick

00:01:46.667 --> 00:01:49.368
‫مستقبلاً، سنلاقي فئات تجريدية

00:01:49.501 --> 00:01:51.868
‫وهي فئات مُطبقة جزئياً

00:01:51.968 --> 00:01:55.402
‫وتحتوي حالات ووظائف مُطبقة بالكامل

00:01:55.501 --> 00:01:59.568
‫بينما بعض الوظائف تُركت تجريدية
‫لآخرين ليحددوا سلوكها

00:01:59.734 --> 00:02:01.435
‫لذا اعتبرها مسلسلاً..

00:02:01.467 --> 00:02:03.734
‫حيث الواجهات الوسيطة
‫غير مطبقة تماماً

00:02:03.767 --> 00:02:05.834
‫والفئات التجريدية مطبقاً جزئياً

00:02:05.868 --> 00:02:08.068
‫والفئات الصلبة مطبقة بالكامل

00:02:08.200 --> 00:02:11.233
‫كيف لا تكون onClickListener
‫فئة صلبة؟

00:02:11.334 --> 00:02:13.434
‫ولم لا تكون TextView واجهة وسيطة؟

00:02:13.501 --> 00:02:16.369
‫والشيء نفسه مع ViewGroup
‫ليست فئة تجريدية؟

00:02:16.501 --> 00:02:18.969
‫اتخذ فريق آندرويد هذه القرارات..

00:02:19.000 --> 00:02:22.567
‫اعتماداً على ما يسهل العمل على
‫مطورين مثلك في بناء التطبيقات

00:02:22.667 --> 00:02:25.134
‫كل مطور سيحتاج لعرض نص على الشاشة

00:02:25.234 --> 00:02:28.534
‫فأنشأوا فئة TextView صلبة لتحقيق ذلك

00:02:28.801 --> 00:02:31.868
‫يمكننا بسهولة استدعاء وظائف
‫لتغيير النص في الواجهة

00:02:31.934 --> 00:02:34.067
‫لذا في حالة الفئة التجريدية..

00:02:34.133 --> 00:02:38.800
‫أردنا وضع معايير لسلوكيات مجموعة
‫الواجهات كونها حاوية لعدة واجهات تابعة

00:02:38.901 --> 00:02:43.702
‫رغم هذا، فتفاصيل تخطيط الواجهات
‫على الشاشة تُركت بلا تعريف

00:02:43.834 --> 00:02:45.368
‫ولتحددها الفئة الفرعية

00:02:45.534 --> 00:02:48.268
‫في هذه الحالة، فالمخططان
‫النسبي والخطي..

00:02:48.334 --> 00:02:50.467
‫فئتان فرعيتان من فئة (مجموعة الواجهات)

00:02:50.801 --> 00:02:54.801
‫حيث تعرف كل منهما قواعدها الخاصة
‫لكيفية تراص الواجهات على الشاشة

00:02:54.971 --> 00:02:56.104
‫على الجانب الآخر..

00:02:56.182 --> 00:03:00.516
‫عرف فريق آندرويد أن كثيراً من المطورين
‫سيرغبون في تخصيص سلوك onClick

00:03:00.795 --> 00:03:04.688
‫فليس منطقياً تعريف سلوك افتراضي
‫لما يحدث عند نقر زر

00:03:04.768 --> 00:03:07.928
‫لكن وضعوا معايير لما سيكونه
‫استدعاء الوظيفة

00:03:08.000 --> 00:03:10.590
‫وما سيكونه نوع التحويل في
‫onClickListener

00:03:10.657 --> 00:03:14.406
‫ثم يتركون المنطق داخل الوظيفة
‫ليحدده المطور بنفسه

00:03:14.646 --> 00:03:17.927
‫للتلخيص، إذا مررت بوظيفة
‫صلبة في آندرويد..

00:03:18.070 --> 00:03:19.399
‫يمكنك استخدامها فوراً

00:03:19.434 --> 00:03:22.302
‫أما إذا مررت بفئة تجريدية،
‫ستحتاج لتفريعها

00:03:22.417 --> 00:03:25.190
‫ثم كتابة الكود الخاص بك
‫للوظائف التجريدية

00:03:25.267 --> 00:03:29.501
‫وإذا مررت بواجهة وسيطة،
‫فستكتب لكافة وظائفها التجريدية

