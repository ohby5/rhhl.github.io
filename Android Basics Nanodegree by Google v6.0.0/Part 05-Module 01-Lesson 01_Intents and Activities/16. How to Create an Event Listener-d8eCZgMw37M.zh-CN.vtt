WEBVTT
Kind: captions
Language: zh-CN

00:00:00.530 --> 00:00:01.839
希望你已经更加明白

00:00:01.839 --> 00:00:05.220
为什么 OnClickListener 是接口

00:00:05.220 --> 00:00:07.820
并具有抽象方法 OnClick

00:00:07.820 --> 00:00:11.460
作为开发者 你的角色是为应用中要处理的

00:00:11.460 --> 00:00:14.230
输入事件设置事件监听器

00:00:14.230 --> 00:00:19.080
更具体地说 对于每个监听器 你都需要完成三步操作

00:00:19.080 --> 00:00:21.430
第一步 定义事件监听器

00:00:21.430 --> 00:00:24.500
以及事件发生时会出现的自定义行为

00:00:24.500 --> 00:00:27.290
第二步 通过调用构造函数为事件监听器

00:00:27.290 --> 00:00:29.278
创建新的对象实例

00:00:29.278 --> 00:00:33.440
第三步 为你想要在其上面监听事件的视图附加一个监听器

00:00:33.440 --> 00:00:36.170
我将展示下每步要编写的代码

00:00:36.170 --> 00:00:39.070
首先 我们需要定义一个事件监听器类来实现

00:00:39.070 --> 00:00:39.990
该接口

00:00:39.990 --> 00:00:43.310
你可以为该类取任何名称 只要能遵守关于类名称的 Java 规则

00:00:43.310 --> 00:00:44.840
即可

00:00:44.840 --> 00:00:48.255
在此示例中 我们将该类命名为 NumbersClickListener

00:00:48.255 --> 00:00:52.580
这段代码位于新的文件里 叫做 NumbersClickListener.java

00:00:52.580 --> 00:00:56.210
当我们定义 NumbersClickListener 类时 声明部分应该包含

00:00:56.210 --> 00:00:59.530
public class 后面紧跟着类名称和单词 implements

00:00:59.530 --> 00:01:03.930
然后是接口名称 此处是 OnClickListener

00:01:03.930 --> 00:01:07.240
注意 implements 是一种 Java 关键字 具有特殊含义

00:01:07.240 --> 00:01:09.870
你可以在这个 Java Oracle 文档中找到

00:01:09.870 --> 00:01:12.060
这些特殊关键字的列表

00:01:12.060 --> 00:01:16.270
我们用 implements 来表示 NumbersClickListener 类

00:01:16.270 --> 00:01:20.450
将支持特定的接口 并为所有的抽象方法提供代码

00:01:20.450 --> 00:01:23.150
通过实现 OnClickListener 接口

00:01:23.150 --> 00:01:27.460
对于 Android 代码中所有会出现 OnClickListener 对象类型的代码段

00:01:27.460 --> 00:01:29.570
我们都可以使用 NumbersClickListener

00:01:29.570 --> 00:01:33.810
在这个方法前面 我们添加了这个 @override 注释

00:01:33.810 --> 00:01:37.550
表示我们将重写接口中的空方法

00:01:37.550 --> 00:01:39.280
并提供我们自己的实现内容

00:01:39.280 --> 00:01:42.969
我们对 OnClick 方法的实现是弹出一个消息

00:01:42.969 --> 00:01:45.390
上面显示“打开数字列表 (Open the list of numbers)”

00:01:45.390 --> 00:01:47.900
我们可以提供任何其他的自定义行为

00:01:47.900 --> 00:01:49.010
这只是一个例子

00:01:49.010 --> 00:01:51.480
定义好 NumbersClickListener 类后

00:01:51.480 --> 00:01:53.630
我们需要为其创建对象实例

00:01:53.630 --> 00:01:57.050
记得在上一门课程中 我们画出了类模板

00:01:57.050 --> 00:01:59.360
但是我们需要为其创建对象实例

00:01:59.360 --> 00:02:02.990
我们只是画出了平面图 我们还需要实际的房子

00:02:02.990 --> 00:02:06.230
记得之前我们学过使用构造函数创建对象的语法

00:02:06.230 --> 00:02:09.229
要创建 NumbersClickListener 对象实例

00:02:09.229 --> 00:02:12.660
我们可以调用该类的构造函数 并包含 new 关键字

00:02:12.660 --> 00:02:16.100
这会创建一个新的对象 但是我们可以

00:02:16.100 --> 00:02:19.218
在左侧存储这个变量 该变量将为静态类型

00:02:19.218 --> 00:02:20.320
在 Miwok 应用中

00:02:20.320 --> 00:02:23.080
这就是 MainActivity 文件中的代码

00:02:23.080 --> 00:02:26.900
我们修改了 MainActivity 以便创建该 Activity 后

00:02:26.900 --> 00:02:29.600
就可以立即开始监听点击事件

00:02:29.600 --> 00:02:32.870
我们将创建一个新的 NumbersClickListener 对象

00:02:32.870 --> 00:02:35.470
并将其存储在 clickListener 变量中

00:02:35.470 --> 00:02:38.980
它具有 NumbersClickListener 变量数据类型

00:02:38.980 --> 00:02:42.040
创建好 NumbersClickListener 对象实例后

00:02:42.040 --> 00:02:45.790
我们需要将其附到我们想在其上面监听点击行为的视图上

00:02:45.790 --> 00:02:47.140
这就是相关的代码

00:02:47.140 --> 00:02:50.560
假设我们将该视图存储成了变量 ButtonView

00:02:50.560 --> 00:02:54.150
我们只需要在该视图上调用 setOnClickListener 方法

00:02:54.150 --> 00:02:58.240
并传入一个参数变量 即 clickListener 变量

00:02:58.240 --> 00:03:01.620
我们怎么知道要调用这个方法 并使用这个输入参数呢？

00:03:01.620 --> 00:03:03.860
再回到这个非常实用的文档

00:03:03.860 --> 00:03:07.370
我们来看看 View 类 它有一个方法

00:03:07.370 --> 00:03:11.508
叫做 setOnClickListener 并传入 onClickListener

00:03:11.508 --> 00:03:14.270
因为 NumbersClickListener 实现的是此接口

00:03:14.270 --> 00:03:17.070
因此也被视为 onClickListener 数据类型

00:03:17.070 --> 00:03:20.180
我们可以将其当做输入传入到该方法中

00:03:20.180 --> 00:03:23.640
现在我们看看在该应用中代码是怎样的

00:03:23.640 --> 00:03:26.730
但现在你还不需要做出这些更改

00:03:26.730 --> 00:03:29.680
下一个视频中的练习将针对需要完成的操作

00:03:29.680 --> 00:03:31.160
给出具体的说明

00:03:31.160 --> 00:03:34.420
请按照这些说明操作 并试图理解其中的逻辑

00:03:34.420 --> 00:03:37.010
在这里我创建了 NumbersClickListener 类

00:03:37.010 --> 00:03:39.450
并在其 Java 文件中对其进行了定义

00:03:39.450 --> 00:03:42.810
注意 我们在代码中规定了文件包名称

00:03:42.810 --> 00:03:46.380
这样我们的代码就全都位于这一唯一文件包名称下

00:03:46.380 --> 00:03:49.330
这里是 import 语句 因为我们要使用 View

00:03:49.330 --> 00:03:50.340
和 Toast 类

00:03:50.340 --> 00:03:52.560
虽然我们没有自己创建这两个类

00:03:52.560 --> 00:03:53.900
我们可仍以通过导入方法来使用它们

00:03:53.900 --> 00:03:59.630
在类声明中 这里是 implements View.OnClickListener

00:03:59.630 --> 00:04:03.310
强调下 添加 View.OnClickListener

00:04:03.310 --> 00:04:06.990
是为了明确表明我们引用的是 OnClickListener

00:04:06.990 --> 00:04:10.070
它属于该文件包中的 View.java 文件的一部分

00:04:10.070 --> 00:04:14.460
我们使用点运算符来访问 Java 类成员

00:04:14.460 --> 00:04:18.031
所以在这个 NumbersClickListener 中 我创建了 onClick 方法

00:04:18.031 --> 00:04:21.320
并在该方法中表明 当用户点击 Numbers 类别时

00:04:21.320 --> 00:04:26.030
我们会显示一条消息“打开数字列表 (Open the list of numbers)”

00:04:26.030 --> 00:04:26.980
就在这儿

00:04:26.980 --> 00:04:28.810
这就是 NumbersClickListener

00:04:28.810 --> 00:04:30.893
现在我们转到 MainActivity

00:04:30.893 --> 00:04:32.740
在 onCreate 方法的末尾

00:04:32.740 --> 00:04:35.420
我们需要创建一个新的 ClickListener 对象

00:04:35.420 --> 00:04:38.420
现在 我们需要将 ClickListener 附到 Numbers 类别视图上

00:04:38.420 --> 00:04:42.040
但是 首先我们需要在视图层级里找到该视图对象

00:04:42.040 --> 00:04:46.190
你应该已经在上一门课程中的 Just Java 应用中熟悉了这一流程

00:04:46.190 --> 00:04:48.600
所以我们将这么编写代码

00:04:48.600 --> 00:04:52.890
找到显示 numbers 类别的视图

00:04:53.980 --> 00:04:57.030
在这里我调用了 findViewById 方法

00:04:57.030 --> 00:04:59.860
并请求具有相关 ID 编号的视图

00:04:59.860 --> 00:05:01.380
找到该 TextView 后

00:05:01.380 --> 00:05:03.870
我们可以将其存储在一个变量里 将其称为 numbers

00:05:03.870 --> 00:05:07.910
然后对该 textView 调用 setOnClickListener 方法

00:05:07.910 --> 00:05:10.370
将 ClickListener 对象传递为输入值

00:05:10.370 --> 00:05:12.110
代码应该是这样的

00:05:12.110 --> 00:05:15.565
在这里我们在 textView 上设置了 setOnClickListener 方法

00:05:15.565 --> 00:05:17.757
将 ClickListener 对象当做输入传入进来

00:05:17.757 --> 00:05:21.487
这里的 textView numbers 将存储 ClickListener 对象

00:05:21.487 --> 00:05:25.830
稍后 当用户按下该 textView ClickListener 会立即执行操作

00:05:25.830 --> 00:05:29.116
为了测试下这段 Java 代码是否能运行

00:05:29.116 --> 00:05:32.741
我需要删除之前为按钮点击编写的旧代码

00:05:32.741 --> 00:05:34.783
在 activity_main.xml 文件中

00:05:34.783 --> 00:05:39.910
我需要删除 numbers TextView 上的 Android onClick 属性

00:05:39.910 --> 00:05:46.510
在 MainActivity 中 我还需要删除 openNumbersList 方法

00:05:46.510 --> 00:05:52.155
使 MainActivity 只有一个方法 即 onCreate 方法

00:05:52.155 --> 00:05:53.547
现在在设备上运行该应用

00:05:53.547 --> 00:05:55.809
点击 Numbers 类别弹出了一条消息

00:05:55.809 --> 00:05:56.309
太棒了！我的 ClickListener 代码可以正常运行了

