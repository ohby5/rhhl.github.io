WEBVTT
Kind: captions
Language: ko

00:00:00.460 --> 00:00:01.440
만세!

00:00:01.440 --> 00:00:03.870
여러분은 방금 여러분이 만든 앱이
사용자와 상호작용하도록 만들었어요

00:00:03.870 --> 00:00:06.930
이전에는 버튼을 눌렀을 때,
어떠한 행동도 하지 않았습니다.

00:00:06.930 --> 00:00:08.410
지금은 코드 변경으로 인해

00:00:08.410 --> 00:00:11.680
여러분이 버튼을 누를 때,
화면상에 무엇인가 변화가 생깁니다.

00:00:11.680 --> 00:00:12.780
잘 했어요!

00:00:13.340 --> 00:00:16.000
여러분이 방금 해낸 것에 대해
조금 더 깊이 들어가 봅시다

00:00:16.400 --> 00:00:20.800
먼저 새로운 android:onClick=
속성을 버튼 XML 요소에 추가했습니다

00:00:21.120 --> 00:00:22.800
이것은 버튼을 클릭했을 때

00:00:23.540 --> 00:00:27.960
자바 내부에서 우리가 말한 것처럼 수행
혹은 실행할 것이라는 것을 의미하죠

00:00:27.960 --> 00:00:30.900
submitOrder라고 이름 붙인
명령어들의 집합을 말이죠

00:00:32.060 --> 00:00:33.550
좋아요, 제가 드린

00:00:33.550 --> 00:00:35.030
메인 액티비티 파일로 갑시다

00:00:35.300 --> 00:00:37.830
이 화면에 이상한 기호와
단어가 많은 것이 보여요

00:00:37.830 --> 00:00:40.630
하지만 당신이 알아야 하는 것은
이건 메소드이고

00:00:40.630 --> 00:00:42.930
메소드의 이름은
submitOrder 입니다

00:00:42.930 --> 00:00:45.620
메소드는 Java 코드 여러 줄을
포함할 수 있어요.

00:00:45.620 --> 00:00:48.200
이것은 기기가 이해하고 수행할 수 있는

00:00:48.200 --> 00:00:50.340
명령어들로 번역됩니다

00:00:51.050 --> 00:00:53.720
이 메소드에 여러 줄의 코드가 있다면

00:00:53.720 --> 00:00:57.830
컴퓨터는 첫 번째 줄을 먼저 수행하고
다음에 두 번째 줄을, 그리고

00:00:57.830 --> 00:00:59.550
메소드의 마지막 줄까지 수행합니다

00:00:59.940 --> 00:01:03.890
메소드에 이름을 붙이는 이유는
나중에 쉽게 참조하기 위해서입니다

00:01:03.890 --> 00:01:08.200
예를 들어, XML에서 지금 submit
Order 메소드를 참조할 수 있어요

00:01:08.200 --> 00:01:10.380
이것은 저와 여러분이 이름을
가지고 있는 것과 비슷합니다.

00:01:10.380 --> 00:01:12.560
여러분에게 애완동물이 있다면,

00:01:12.560 --> 00:01:14.670
쉽게 부르기 위해서
이름을 붙여줄 것입니다

00:01:14.670 --> 00:01:18.050
코드에서, 참조하고 싶은
선언문이 매우 많다면

00:01:18.050 --> 00:01:21.100
우리는 메소드 안에 그걸 넣고
메소드에 이름을 붙일 수 있어요

00:01:21.570 --> 00:01:25.850
제 1강에서, XML에는
유효한 XML인지 아닌지를 판단하는

00:01:25.850 --> 00:01:30.100
특정 문법 규칙이
있다는 것을 기억하세요

00:01:30.100 --> 00:01:34.360
Java에는 Java 코드가 유효한지
판단하는 비슷한 규칙이 있습니다

00:01:34.700 --> 00:01:38.800
메소드 안의 선언문들은
이 구불구불한

00:01:38.800 --> 00:01:42.220
열고 닫는 중괄호 안에
들어 있어야 합니다

00:01:42.510 --> 00:01:45.650
여기 위에서, 이것도
onCreate라 불리는 메소드입니다

00:01:45.650 --> 00:01:49.930
이 메소드 안의 선언문들은
여는 중괄호와 닫는 중괄호

00:01:49.930 --> 00:01:51.260
사이에 있습니다

00:01:51.770 --> 00:01:54.480
마지막으로 display라 불리는
이 메소드가 있습니다

00:01:54.800 --> 00:01:59.840
이 안의 코드 선언문은
열고 닫는 중괄호로 표시되죠

00:01:59.840 --> 00:02:03.070
또한 MainActivity를 위한
열고 닫는 중괄호도 있는 걸

00:02:03.070 --> 00:02:04.070
알아챘을 겁니다

00:02:04.220 --> 00:02:06.432
MainActivity의 모든 기능은

00:02:06.432 --> 00:02:09.060
이 열고 닫는 중괄호
사이에서 정의됩니다

00:02:09.910 --> 00:02:13.049
지금까지 이 MainActivity는
안에 세 메소드를 포함했어요

00:02:13.699 --> 00:02:15.075
당신이 메소드를 선언하고 나면

00:02:15.075 --> 00:02:19.000
즉 메소드를 정의하고 나면
실제로 그 메소드를 사용할 수 있어요

00:02:19.000 --> 00:02:22.020
이 예에서, display
메소드를 선언했고

00:02:22.020 --> 00:02:25.370
이 코드 행에서
이것의 이름을 불러 사용했어요

00:02:25.370 --> 00:02:29.085
여긴 메소드를 선언하는 곳이고
여긴 메소드를 호출하는 곳이죠

00:02:29.375 --> 00:02:32.235
요약하자면, UI에서 버튼이 눌러질 때

00:02:32.235 --> 00:02:34.735
이는 submitOrder 메소드가
호출되도록 만듭니다

00:02:34.735 --> 00:02:38.375
그럼 submitOrder 메소드의
각 코드 행을 실행하죠

00:02:38.375 --> 00:02:40.375
메소드의 맨 위부터 맨 아래까지요

00:02:40.375 --> 00:02:44.115
이 경우, 이 안에 단 하나의 코드
선언문이 있으므로 그냥 실행해요

00:02:44.115 --> 00:02:47.540
좋아요, 이제 display(1)이라
말하는 이 코드 행을 봅시다

00:02:48.070 --> 00:02:50.910
제가 이 행을 고른 이유는
괄호 안의 숫자가

00:02:50.910 --> 00:02:56.030
여기 화면에 보이는 숫자와
같아보이기 때문입니다

00:02:56.930 --> 00:02:59.570
UI에서 이 주문 버튼을 누르면

00:02:59.570 --> 00:03:02.850
이는 submitOrder 메소드가
메인 액티비티에서 호출되게 합니다

00:03:02.850 --> 00:03:07.010
그럼 display(1)이라 말하는
이 코드 행을 수행하죠

00:03:07.010 --> 00:03:09.867
이것은 여기 화면이 1을
표시하도록 업데이트해요

00:03:09.867 --> 00:03:13.220
여기서 이걸 2로 바꾸면
무슨 일이 일어날 것 같나요?

00:03:13.220 --> 00:03:15.340
알아보기 위해 앱을 실행합시다

00:03:15.340 --> 00:03:18.970
이제 이 버튼을 누르면 2가 표시되네요

00:03:18.970 --> 00:03:22.310
주문 버튼을 누르는 것은 submit
Order 메소드가 호출되게 합니다

00:03:22.310 --> 00:03:25.649
그리고 display(2)라 말하는
이 코드 행을 수행하죠

00:03:25.649 --> 00:03:28.148
그것이 화면을 업데이트해
2를 보여주게 합니다

00:03:28.148 --> 00:03:30.160
이제 당신의 차례입니다

00:03:30.160 --> 00:03:33.010
여기 괄호 안의 숫자를
다른 숫자로 바꿔볼 수 있나요?

00:03:33.010 --> 00:03:36.560
다른 작은 숫자, 큰 숫자,
혹은 음수를 선택할 수 있어요

00:03:36.560 --> 00:03:39.770
메인 액티비티의 이 코드 행으로
실험해 보았고

00:03:39.770 --> 00:03:41.720
다 했으면 이 박스를 체크하세요

