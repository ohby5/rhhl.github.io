WEBVTT
Kind: captions
Language: ja

00:00:01.400 --> 00:00:01.970
やあ

00:00:01.970 --> 00:00:03.380
こんにちは
どうしたの？

00:00:03.380 --> 00:00:04.442
ちょっと待ってね

00:00:04.442 --> 00:00:05.820
いいよ
それではですね

00:00:05.820 --> 00:00:08.880
皆さん アプリでコーヒーの
注文杯数という変数があったのを

00:00:08.880 --> 00:00:09.840
覚えてますでしょうか

00:00:09.840 --> 00:00:10.840
この箱ですね
そうです

00:00:10.840 --> 00:00:11.942
その中には 2 という値が入っていました

00:00:11.942 --> 00:00:13.620
はい その通りです

00:00:13.620 --> 00:00:16.010
もしそのアプリのプラスのボタンを押すと

00:00:16.010 --> 00:00:17.130
ビーッ
そうすると

00:00:17.130 --> 00:00:19.570
今あるコーヒーの数の値は何ですか

00:00:19.570 --> 00:00:24.030
ええと １つ増えたので
新しい値は 3 です

00:00:24.030 --> 00:00:25.230
そうですね
それでは

00:00:25.230 --> 00:00:28.105
古い値は捨てて
新しい値を入れます

00:00:28.105 --> 00:00:30.840
はい
もしプラスのボタンをもう一度押すと

00:00:30.840 --> 00:00:31.530
ビーッ

00:00:31.530 --> 00:00:33.420
何杯のコーヒーになりましたか？

00:00:33.420 --> 00:00:36.630
今は 4 杯に増えました

00:00:36.630 --> 00:00:38.728
そうです
では これを捨てて 4 を入れます

00:00:38.728 --> 00:00:40.580
はい
それでは 次にマイナスボタンを押すと

00:00:40.580 --> 00:00:42.160
ビーッ ビーッ ビーッ

00:00:42.160 --> 00:00:44.240
コーヒーは何杯になりますか？

00:00:44.380 --> 00:00:46.476
でもキャサリン 計算はないって
言ってなかった？

00:00:46.476 --> 00:00:47.848
1 です

00:00:47.848 --> 00:00:49.520
書いてください

00:00:49.520 --> 00:00:50.540
ありがとう
オッケー

00:00:50.560 --> 00:00:51.560
1
そうですね

00:00:51.560 --> 00:00:52.740
こちらをどうぞ

00:00:52.740 --> 00:00:53.820
ありがとう

00:00:53.820 --> 00:00:56.420
これら全てをアプリに
加えていきましょう

00:00:56.420 --> 00:00:58.690
あなたの計算に関しては後から対応しましょう

00:00:58.690 --> 00:01:01.160
アプリのプラスボタンを押すことで

00:01:01.160 --> 00:01:05.000
どのようにしてコーヒーの注文個数が増える
のか疑似コードを見てみましょう

00:01:05.000 --> 00:01:08.570
疑似コードとはアプリが何を
するかを段階的に説明するー

00:01:08.570 --> 00:01:10.180
高水準に記述されたものです

00:01:10.180 --> 00:01:13.260
それはコンピュータでなく
人が読めるようにするためのものなので

00:01:13.260 --> 00:01:15.810
誰かに説明するように記述することができます

00:01:15.810 --> 00:01:19.360
これにより私達の考えをまとめた上で
次の段階でおこるべきことを

00:01:19.360 --> 00:01:21.350
直線的な流れで表すことができます

00:01:21.350 --> 00:01:24.630
疑似コードを書く時 特別な構造や

00:01:24.630 --> 00:01:27.950
フォーマットに従う必要はなく 後で
そのコードを書く時に役立つ詳細を

00:01:27.950 --> 00:01:29.920
含んでいればよいのです

00:01:30.180 --> 00:01:34.460
私達のシナリオでは コーヒーの注文個数の
経過を追うことと

00:01:34.460 --> 00:01:38.080
初期化の値を 2 とする
量的変数を作りたいです

00:01:38.080 --> 00:01:42.010
プラスボタンが押されたとき 量変数を
3 に更新できます

00:01:42.550 --> 00:01:45.020
プラスボタンをもう数回押すと

00:01:45.020 --> 00:01:47.730
量を 4 または 5 に増やすことができます

00:01:48.090 --> 00:01:51.780
一旦自分の頭の中で コードが
何の役割をするかコンセプトが決まれば

00:01:51.780 --> 00:01:54.600
実際の Java コードを
書くのに集中できます

00:01:54.600 --> 00:01:57.398
この段階では Java の文法
大文字小文字の区別

00:01:57.398 --> 00:01:59.840
記号やスペースに関するルールや

00:01:59.840 --> 00:02:03.650
Java コードを書く際の他の特別な
ルールに注目します

00:02:03.650 --> 00:02:07.800
実際のコードはこのように見えます
2 という量変数を作るには

00:02:07.800 --> 00:02:10.633
セミコロンを後に付けて
「 int quantity = 2; 」となり

00:02:10.633 --> 00:02:13.020
前回のビデオで習った通りです

00:02:13.020 --> 00:02:16.487
量変数を 3 に更新するには
量の部分を 3 にして

00:02:16.487 --> 00:02:18.890
セミコロンを後に付ければいいのです

00:02:18.890 --> 00:02:23.150
量を 4 または 5 に更新すると
コードはこのように見えます

00:02:24.160 --> 00:02:26.310
この練習問題では 空欄に

00:02:26.310 --> 00:02:29.590
これらのコードを入力して練習してください

00:02:29.590 --> 00:02:31.860
これにより整変数を作り

00:02:31.860 --> 00:02:34.360
それをアップデートする練習ができます

00:02:34.360 --> 00:02:38.690
これらを入力する際 各文字と記号に
注意して入力してください

00:02:38.690 --> 00:02:41.540
入力した後 入力したコードの
フォーマットに関して

00:02:41.540 --> 00:02:43.610
何か気づくことはありましたか？

00:02:43.610 --> 00:02:46.397
例えば 決まったパターン等が
確認できましたか？

00:02:46.397 --> 00:02:49.161
こちらの空欄に何でも
気づいたことを入力してください

