WEBVTT
Kind: captions
Language: ru

00:00:00.008 --> 00:00:00.986
Хорошо, Кэтрин.

00:00:00.986 --> 00:00:02.175
- Да.
- Нажимаем знак плюса.

00:00:02.175 --> 00:00:05.209
И число чашек кофе меняется
с двух на три.

00:00:05.209 --> 00:00:06.585
- Хорошо.
- Продолжим нажимать.

00:00:06.585 --> 00:00:07.709
Снова.

00:00:07.709 --> 00:00:08.669
И снова.

00:00:08.669 --> 00:00:13.043
Но у нас так и остаётся две чашки кофе,
их количество не увеличивается.

00:00:13.043 --> 00:00:15.864
Я думаю, это происходит из-за того,
что мы кое-что упустили,

00:00:15.864 --> 00:00:17.730
а именно область видимости переменной.

00:00:17.730 --> 00:00:19.020
Область видимости переменной?

00:00:19.020 --> 00:00:20.620
- Да.
- Объяснишь?

00:00:20.640 --> 00:00:21.740
Это означает,

00:00:21.740 --> 00:00:23.660
что когда переменная объявлена
внутри метода,

00:00:23.660 --> 00:00:26.248
она может быть использована
только внутри этого метода.

00:00:26.248 --> 00:00:27.190
Слушай внимательно!

00:00:27.190 --> 00:00:27.890
Кэтрин.

00:00:27.890 --> 00:00:29.480
- Да.
- Мы говорим на «птичьем» языке.

00:00:29.480 --> 00:00:31.190
Нашим студентам положена медаль за то,

00:00:31.190 --> 00:00:32.990
что они забегают настолько вперёд.

00:00:32.990 --> 00:00:35.140
- Хорошо.
- Давай помедленнее, и объясним подробно.

00:00:35.140 --> 00:00:36.305
Извини. Сейчас объясню.

00:00:36.305 --> 00:00:37.955
Мы нажимаем кнопку плюса.

00:00:37.955 --> 00:00:39.290
- Да.
- И таким образом вызываем

00:00:39.290 --> 00:00:40.450
метод инкремента из кода.

00:00:40.450 --> 00:00:41.480
- Да.
- И что потом?

00:00:41.480 --> 00:00:43.920
- Мы создаём переменную количества.
- Верно.

00:00:43.920 --> 00:00:45.970
- Ей присваивается значение «два».
- Верно.

00:00:45.970 --> 00:00:47.980
И мы обновляем её до трёх чашек кофе.

00:00:47.980 --> 00:00:51.470
И что происходит, когда
метод инкремента завершает работу?

00:00:51.470 --> 00:00:53.165
Тогда переменная уничтожается.

00:00:54.325 --> 00:00:56.382
Итак, когда я снова нажимаю 
кнопку плюса,

00:00:56.382 --> 00:00:58.939
в нашем коде вызывается метод инкремента.

00:00:58.939 --> 00:01:01.450
И затем мы создаём переменную количества.

00:01:01.450 --> 00:01:03.240
Ничего себе. Ещё одна как по волшебству.

00:01:03.240 --> 00:01:04.385
Да, совершенно новая.

00:01:04.385 --> 00:01:06.160
- Отлично.
- Ей присваивается значение «два»,

00:01:06.160 --> 00:01:07.600
и затем мы обновляем его до трёх.

00:01:07.600 --> 00:01:10.700
И что происходит, когда
метод инкремента снова завершает работу?

00:01:10.700 --> 00:01:11.955
Переменная уничтожается.

00:01:11.955 --> 00:01:15.462
На самом деле нам нужна
глобальная переменная.

00:01:15.480 --> 00:01:18.440
Да. Переменная, доступ к которой
может получить

00:01:18.440 --> 00:01:20.630
любая часть кода 
внутри нашего приложения.

00:01:20.630 --> 00:01:22.650
Как и любой метод, метод инкремента

00:01:22.650 --> 00:01:23.935
или метод декремента.

00:01:23.935 --> 00:01:26.540
- Да.
- Итак, мы создаём глобальную переменную.

00:01:26.580 --> 00:01:28.690
Она всё ещё переменная количества.

00:01:28.690 --> 00:01:29.935
- Да.
- Но теперь глобальная.

00:01:29.935 --> 00:01:33.200
- Да.
- После того, как метод завершает работу,

00:01:33.200 --> 00:01:34.590
переменная не уничтожается.

00:01:34.590 --> 00:01:36.960
Хорошо, давай используем это в нашем коде.

00:01:36.960 --> 00:01:40.540
Проблема в нашем приложении состоит в том,
что если я нажимаю кнопку «+» много раз,

00:01:40.540 --> 00:01:43.010
количество чашек кофе никогда 
не становится больше трёх.

00:01:43.010 --> 00:01:47.880
Это происходит из-за того, что кнопка «+»
запускает метод инкремента.

00:01:47.880 --> 00:01:50.290
В этом методе всегда создаётся
новая переменная количества,

00:01:50.290 --> 00:01:51.900
и ей присваивается значение «2».

00:01:52.600 --> 00:01:55.730
Когда мы обновляем количество,
её значение всегда остаётся равным 3.

00:01:55.730 --> 00:01:59.650
Этот метод «не помнит» того, 
что я уже вызывала его ранее

00:01:59.650 --> 00:02:04.050
нажатием на кнопку «+», и что
на дисплее уже отображаются 3 чашки кофе.

00:02:04.050 --> 00:02:06.310
Метод «не понимает»,
что сейчас я хочу 4 чашки.

00:02:07.300 --> 00:02:10.512
В старом коде мы объявили локальную
переменную для количества

00:02:10.512 --> 00:02:14.890
в методе инкремента и локальную переменную
для количества в методе декремента.

00:02:14.890 --> 00:02:18.480
Мы можем объявить переменную 
с одинаковым именем дважды,

00:02:18.480 --> 00:02:20.690
так как они находятся
в разных областях видимости.

00:02:21.950 --> 00:02:24.920
Это область видимости 
переменной quantity,

00:02:24.920 --> 00:02:26.380
объявленной в методе инкремента.

00:02:26.380 --> 00:02:30.100
В этих границах мы можем ссылаться на 
эту переменную и обновлять её значение.

00:02:30.100 --> 00:02:31.463
Но вне этих границ

00:02:31.463 --> 00:02:34.770
другие методы не будут знать
об этой переменной.

00:02:34.770 --> 00:02:37.790
Вы получите ошибку "Unresolved
symbol",

00:02:37.790 --> 00:02:40.170
потому что другие методы не будут
знать об этой переменной.

00:02:41.190 --> 00:02:43.660
Аналогичным образом,
это область видимости

00:02:43.660 --> 00:02:47.150
для локальной переменной quantity,
объявленной в методе декремента.

00:02:47.150 --> 00:02:50.770
Внутри этого метода вы можете отобразить
переменную и обновить её значение,

00:02:50.770 --> 00:02:54.690
но за границами этой области
вы не можете ссылаться на неё.

00:02:54.690 --> 00:02:58.400
Вот как это выглядит в обновлённом коде
с глобальной переменной.

00:02:58.790 --> 00:03:01.920
Вместо объявления переменной quantity
в методе инкремента,

00:03:01.920 --> 00:03:05.820
мы как бы «вытаскиваем» её,
объявляя в верхней части MainActivity.

00:03:05.820 --> 00:03:09.150
Она объявляется внутри открывающих
и закрывающих скобок в MainActivity.

00:03:09.540 --> 00:03:12.500
Таким образом, всем элементам, 
находящимся внутри MainActivity,

00:03:12.500 --> 00:03:14.150
будет известно об этой переменной.

00:03:14.150 --> 00:03:18.055
Это область видимости 
для глобальной переменной quantity.

00:03:18.055 --> 00:03:20.700
Все методы и другие переменные
в MainActivity

00:03:20.700 --> 00:03:24.430
могут теперь ссылаться на эту переменную,
а также обновлять её значение.

00:03:24.430 --> 00:03:28.300
Метод инкремента обновляет значение
переменной и отображает его на дисплее.

00:03:28.300 --> 00:03:32.330
Метод декремента также обновляет значение
переменной и показывает его на дисплее.

00:03:32.330 --> 00:03:35.950
и переменная quantity -- всегда ссылка
на глобальную переменную.

00:03:35.950 --> 00:03:39.510
Преимущество «вытаскивания» переменной,
объявляя её глобальной, в том,

00:03:39.510 --> 00:03:41.580
что теперь знание
о точном количестве чашек кофе,

00:03:41.580 --> 00:03:42.880
которое хочет пользователь,

00:03:42.880 --> 00:03:44.130
исходит из единого источника.

00:03:44.130 --> 00:03:47.100
Даже если мы много раз увеличим
число чашек кофе,

00:03:47.100 --> 00:03:49.280
а затем мы уменьшим число чашек,

00:03:49.280 --> 00:03:52.910
будет использоваться последнее известное
значение переменной quantity.

00:03:52.910 --> 00:03:55.890
Сначала казалось странным,
что у нас есть две переменные quantity,

00:03:55.890 --> 00:03:57.770
потому что они могли рассогласоваться,

00:03:57.770 --> 00:04:00.770
и пользователь в конечном итоге
видел бы только одно значение.

00:04:00.770 --> 00:04:03.990
Так что целесообразно иметь
один единственный источник истины,

00:04:03.990 --> 00:04:07.440
глобальную переменную, отслеживающую
количество заказанных чашек кофе.

00:04:07.440 --> 00:04:10.910
Вы можете удивиться, почему просто
не сделать глобальными все переменные

00:04:10.910 --> 00:04:12.780
для решения всех наших проблем.

00:04:12.780 --> 00:04:17.040
Вам не нужно делать переменную глобальной,
пока нет реальной необходимости в том,

00:04:17.040 --> 00:04:21.060
чтобы другие элементы в MainActivity
ссылались на неё.

00:04:21.060 --> 00:04:24.770
Если вам нужно использовать метод
только в рамках одного метода,

00:04:24.770 --> 00:04:26.750
вы можете просто
оставить переменную локальной.

00:04:26.750 --> 00:04:28.600
Как будто вы храните секрет.

00:04:28.600 --> 00:04:31.705
Вы говорите о нём
только ограниченному кругу лиц.

00:04:31.705 --> 00:04:34.475
Таким же образом вы показываете
только те переменные,

00:04:34.475 --> 00:04:38.045
о которых другие люди обязаны знать
для того, чтобы приложение работало.

00:04:39.275 --> 00:04:41.615
В методе инкремента в MainActivity

00:04:41.615 --> 00:04:45.269
я собираюсь скопировать эту строку кода,
которая объявляет переменную quantity.

00:04:46.270 --> 00:04:50.320
Я просто нажимаю Cmd+X или Ctrl+X,
чтобы вырезать.

00:04:50.320 --> 00:04:54.520
И затем я вставляю эту строку 
в самом верху класса MainActivity.

00:04:54.520 --> 00:04:58.610
Строка будет вставлена сразу
за открывающими скобками MainActivity.

00:04:58.610 --> 00:05:02.180
Обратите внимание, что она находится
вне скобок других методов.

00:05:03.000 --> 00:05:06.070
В противном случае, если бы переменная
находилась внутри скобок,

00:05:06.070 --> 00:05:07.890
она считалась бы локальной.

00:05:07.890 --> 00:05:11.580
Quantity теперь -- глобальная переменная
внутри класса MainActivity.

00:05:11.580 --> 00:05:14.122
Мы узнаем больше о классах
на следующем уроке.

00:05:14.122 --> 00:05:18.800
MainActivity -- это класс, который
содержит методы и переменные.

00:05:18.800 --> 00:05:23.130
Сейчас любой метод в MainActivity 
может ссылаться на эту переменную.

00:05:23.130 --> 00:05:27.790
Этот метод инкремента просто обновляет
количество и отображает его на дисплее.

00:05:27.790 --> 00:05:31.240
Обратите внимание, что имя глобальной
переменной отображается фиолетовым цветом.

00:05:32.350 --> 00:05:35.940
Если же переменная локальная,
её имя отображается чёрным цветом.

00:05:35.940 --> 00:05:38.960
Теперь вы можете различать
локальные

00:05:38.960 --> 00:05:40.330
и глобальные переменные.

00:05:40.330 --> 00:05:43.580
Говоря о локальных переменных, мы хотим
избавиться от этой локальной переменной

00:05:43.580 --> 00:05:47.000
в методе декремента, потому что мы хотим
использовать глобальную переменную.

00:05:48.390 --> 00:05:53.120
Имя переменной в этих методах должно точно
совпадать с именем глобальной переменной.

00:05:53.120 --> 00:05:55.770
Если написать здесь quantities, 
мы получили бы ошибку,

00:05:55.770 --> 00:05:59.710
потому что quantities нигде не определена
как локальная или глобальная переменная.

00:06:01.030 --> 00:06:03.230
Я сделаю отмену,
чтобы всё снова заработало.

00:06:03.350 --> 00:06:06.150
Давайте посмотрим, что происходит
при запуске приложения.

00:06:06.150 --> 00:06:08.470
Приложение начинает со значения «2».

00:06:08.470 --> 00:06:11.800
Если я нажимаю кнопку «+»,
значение увеличивается.

00:06:11.800 --> 00:06:14.420
Если нажимаю кнопку «-»,
значение уменьшается.

00:06:14.420 --> 00:06:15.740
Это просто замечательно.

00:06:15.740 --> 00:06:18.620
Мы смогли создать наш
элемент выбора количества.

00:06:18.620 --> 00:06:23.000
Теперь я хочу, чтобы вы создали его
на своём смартфоне.

00:06:23.000 --> 00:06:26.730
Вы можете увеличивать или уменьшать
количество сколько вашей душе угодно.

00:06:26.730 --> 00:06:30.960
Мы включили сюда ссылку 
на код MainActivity для вашего удобства.

00:06:30.960 --> 00:06:34.170
Я бы предпочла, чтобы вы ввели его 
самостоятельно, следуя этому видео,

00:06:34.170 --> 00:06:36.520
вместо того, чтобы
просто скопировать и вставить код.

00:06:36.520 --> 00:06:40.180
Так вы сможете сами создавать
глобальные переменные в будущем.

00:06:41.030 --> 00:06:42.530
Я хочу подключить отладчик,

00:06:42.530 --> 00:06:45.650
чтобы мы смогли внимательно посмотреть,
как меняется переменная quantity.

00:06:46.120 --> 00:06:48.705
Я добавлю точки останова
в методы инкремента и декремента

00:06:48.705 --> 00:06:50.890
и затем запущу отладчик.

00:06:50.890 --> 00:06:54.270
Когда я нажимаю клавишу «+»,
срабатывает эта точка останова.

00:06:54.270 --> 00:06:56.970
Ещё до выполнения этой строки кода

00:06:56.970 --> 00:07:00.340
мы видим,что глобальная переменная
уже существует со значением «2»

00:07:00.340 --> 00:07:03.320
благодаря этой строке кода.

00:07:03.320 --> 00:07:06.910
Если я перехожу к следующей строке,
эта строка заканчивает выполнение

00:07:06.910 --> 00:07:09.640
и количество увеличивается до трёх.

00:07:09.640 --> 00:07:12.910
Я могу нажать «продолжить», чтобы
приложение обновило значение до «3».

00:07:12.910 --> 00:07:17.360
Если я нажимаю клавишу «+» снова, 
то ещё до выполнения этой строки

00:07:17.360 --> 00:07:21.310
значение глобальной переменной
станет равным «3».

00:07:21.310 --> 00:07:24.750
Это значение было последним известным,
и переменная всё ещё «помнит» его.

00:07:25.940 --> 00:07:27.770
Если я увеличу количество на 1,

00:07:27.770 --> 00:07:30.610
глобальная переменная будет
иметь значение «4».

00:07:30.610 --> 00:07:33.005
Если нажать «продолжить»,
экран обновится, показав «4».

00:07:33.850 --> 00:07:37.390
Теперь мы видим, что каждый раз
при вызове метода инкремента мы можем

00:07:37.390 --> 00:07:41.990
продолжать увеличивать существующее
значение количества.

00:07:41.990 --> 00:07:44.840
Давайте посмотрим, как это работает
с методом декремента.

00:07:44.840 --> 00:07:48.160
Если я нажимаю клавишу «-»,
срабатывает эта точка останова.

00:07:48.160 --> 00:07:50.630
Глобальная переменная имеет значение «4»,

00:07:50.630 --> 00:07:52.970
на котором мы оставили её в прошлый раз.

00:07:52.970 --> 00:07:57.950
Если я уменьшаю количество на 1, 
оно снижается до 3 чашек кофе.

00:07:57.950 --> 00:08:01.720
Я могу отобразить это на экране.

00:08:01.720 --> 00:08:04.700
С одной глобальной переменной
для количества

00:08:04.700 --> 00:08:09.980
методы инкремента и декремента могут
увеличивать или уменьшать число чашек на 1

00:08:09.980 --> 00:08:12.190
от последнего значения количества.

00:08:13.560 --> 00:08:15.180
Теперь ваша очередь.

00:08:15.180 --> 00:08:18.420
Попробуйте заменить
две локальные переменные одной глобальной.

00:08:18.420 --> 00:08:20.910
Затем воспользуйтесь отладчиком,
чтобы убедиться в том,

00:08:20.910 --> 00:08:23.480
что переменная quantity
действительно обновилась.

00:08:23.480 --> 00:08:26.020
После того, как ваш элемент выбора
количества заработает,

00:08:26.020 --> 00:08:27.420
можете сплясать на радостях.

00:08:27.420 --> 00:08:30.640
А теперь можете немного 
поэкспериментировать.

00:08:30.640 --> 00:08:33.795
Что, если начальное значение
будет другим, например равным нулю?

00:08:34.480 --> 00:08:37.710
Или попробуйте удваивать количество
при нажатии клавиши «+».

00:08:37.710 --> 00:08:41.460
Или уменьшать вдвое
при нажатии клавиши «-».

00:08:41.460 --> 00:08:44.760
Не стесняйтесь экспериментировать
с тем, что вам интересно.

00:08:44.760 --> 00:08:48.000
Вы когда-нибудь задумывались о том,
что произойдёт, если сделать то или это?

00:08:48.000 --> 00:08:50.060
Иногда это лучшие моменты в обучении,

00:08:50.060 --> 00:08:51.640
потому что вы их не ждёте.

00:08:52.180 --> 00:08:54.650
Когда закончите, отметьте галочками 
здесь для продолжения.

