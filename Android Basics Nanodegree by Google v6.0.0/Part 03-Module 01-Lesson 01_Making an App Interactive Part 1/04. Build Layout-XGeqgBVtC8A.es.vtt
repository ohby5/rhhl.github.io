WEBVTT
Kind: captions
Language: es

00:00:00.160 --> 00:00:04.080
Para crear este diseño tengo que abrir
el archivo <i>activity_main.xml</i>.

00:00:04.720 --> 00:00:06.560
Sé que necesito
un diseño vertical y lineal

00:00:06.640 --> 00:00:09.240
para poner cada una de estas vistas
en una columna vertical.

00:00:09.320 --> 00:00:12.320
Así que primero cambiaré
el RelativeLayout por el LinearLayout.

00:00:12.800 --> 00:00:14.360
En seguida me aparece un error,

00:00:14.440 --> 00:00:18.000
diciendo que la etiqueta de apertura
no coincide con la de cierre.

00:00:18.080 --> 00:00:20.760
Lo soluciono copiando esta de aquí
y pegándola aquí abajo.

00:00:20.840 --> 00:00:22.000
Ahora las etiquetas coinciden.

00:00:22.080 --> 00:00:23.800
Lo siguiente es añadir las vistas.

00:00:23.880 --> 00:00:25.760
En la primera vista
pone "quantity" [cantidad].

00:00:25.840 --> 00:00:29.520
Me voy a TextView,
le cambio el texto y pongo <i>quantity</i>.

00:00:29.880 --> 00:00:31.880
Ahora tengo una vista en la que pone 0.

00:00:31.960 --> 00:00:34.680
Copio la primera TextView
y la pego en la de abajo.

00:00:34.840 --> 00:00:38.360
La cambiaré para que aquí ponga 0
al igual que en la captura de pantalla.

00:00:38.440 --> 00:00:41.200
El último hijo en este diseño lineal
es un botón.

00:00:41.480 --> 00:00:44.920
Como no hemos añadido ningún botón antes
en nuestro diseño, busquémoslo en Google.

00:00:45.000 --> 00:00:47.960
Abre tu navegador y busca:
"botón android".

00:00:48.160 --> 00:00:51.920
Este primer enlace tiene buena pinta,
la página es: <i>developer.android.com</i>.

00:00:52.520 --> 00:00:56.640
Aquí hay información para "botón".
Ignoremos esta parte de texto de aquí.

00:00:56.720 --> 00:00:59.160
Deslicémonos hacia abajo
para leer un resumen de la clase.

00:00:59.240 --> 00:01:02.400
Habla un poco sobre el código Java,
el cual aún no hemos aprendido.

00:01:02.880 --> 00:01:05.920
Aquí abajo tenemos algo de XML
que sirve para poner un botón.

00:01:06.280 --> 00:01:08.760
Podemos copiarlo para ver
qué hace en nuestro código.

00:01:09.200 --> 00:01:12.480
En nuestro diseño añadiré un botón
debajo de estas dos TextView.

00:01:12.760 --> 00:01:15.720
Voy a pegar aquí el código
que hemos encontrado en nuestra búsqueda.

00:01:16.040 --> 00:01:20.080
Y ahora en lugar del hilo <i>self_destruct</i>,
voy a buscar algo más amistoso

00:01:20.160 --> 00:01:21.760
como, por ejemplo,
Order [Pedir].

00:01:22.200 --> 00:01:24.920
Podemos borrar esta última línea también
ya que no la necesitamos.

00:01:25.000 --> 00:01:28.480
Ahora tienes una TextView de "Cantidad",
una TextView en la que pone 0,

00:01:28.560 --> 00:01:29.800
y un botón de "Pedido".

00:01:30.200 --> 00:01:32.360
Ejecutémoslo en nuestra app
para ver qué aspecto tiene,

00:01:32.400 --> 00:01:34.440
pulsando el botón de reproducción
de color verde.

00:01:34.560 --> 00:01:36.560
Aquí podemos ver que aún se está creando.

00:01:37.120 --> 00:01:38.920
Esto no es lo que queríamos.

00:01:39.120 --> 00:01:43.320
Parece que nuestro LinearLayout
es horizontal en lugar de vertical.

00:01:43.480 --> 00:01:46.800
Vamos a asegurarnos de que hemos añadido
el atributo sobre la orientación.

00:01:47.760 --> 00:01:51.560
Vamos a cambiar esto para que ponga:
<i>android:orientation="vertical"</i>.

00:01:52.000 --> 00:01:53.480
Esto debería resolver el problema.

00:01:53.560 --> 00:01:55.280
Pulsemos otra vez el botón de reproducir.

00:01:55.480 --> 00:01:56.920
Bien, eso está mejor.

00:01:57.000 --> 00:02:00.000
Los tres hijos se muestran
en una columna vertical.

00:02:00.240 --> 00:02:01.840
Ahora tenemos que diseñar estos campos

00:02:01.920 --> 00:02:04.960
para que se parezcan un poco más
a la captura de pantalla que nos dieron.

00:02:05.280 --> 00:02:09.000
En la captura de pantalla, el TextView
"Cantidad" está todo en mayúsculas.

00:02:09.560 --> 00:02:13.840
En la lección uno hablamos de un atributo
llamado <i>android:textAllCaps</i>,

00:02:13.920 --> 00:02:16.040
y nos aparece aquí,
en autocompletar.

00:02:16.240 --> 00:02:18.240
Cuando lo veas así,
si le das a <i>Enter</i>,

00:02:18.320 --> 00:02:20.640
se te añadirá automáticamente
en el código.

00:02:21.400 --> 00:02:24.440
A este valor le hemos puesto <i>true</i>
porque lo queremos todo en mayúsculas.

00:02:24.880 --> 00:02:28.520
Es mejor utilizar este atributo
para poner en mayúsculas todo el texto

00:02:28.600 --> 00:02:32.560
porque cuando queramos cambiar la UI
para que la cantidad salga en minúsculas,

00:02:32.640 --> 00:02:35.560
todo lo que tendremos que hacer
es quitar este atributo

00:02:35.640 --> 00:02:37.560
sin necesidad de cambiar este texto.

00:02:38.000 --> 00:02:42.680
Sigamos. Este texto en el que pone 0
debería tener un tamaño de texto de 16sp.

00:02:42.880 --> 00:02:45.880
Lo voy a añadir ahora y justo me sale
como sugerencia de autocompletar.

00:02:45.960 --> 00:02:50.360
Le doy a <i>Enter</i>
y después escojo 16sp como valor.

00:02:50.600 --> 00:02:52.760
También queremos que tenga
una fuente de color negro.

00:02:53.160 --> 00:02:55.240
Utilizaré el color negro
del sistema de Android,

00:02:55.320 --> 00:02:57.160
que lleva el mismo nombre.

00:02:57.400 --> 00:03:00.600
Bien, esto sirve tanto para la TextView
de "Cantidad" como para la de 0.

00:03:00.840 --> 00:03:02.520
El botón de "Pedido" está bien como está.

00:03:02.760 --> 00:03:06.240
Escribirá en mayúsculas el texto
en el botón de manera automática

00:03:06.440 --> 00:03:08.800
y la altura y el ancho son <i>wrap_content</i>.

00:03:08.880 --> 00:03:11.640
Necesitamos arreglar
este espacio vertical de aquí.

00:03:11.880 --> 00:03:14.520
Queremos 16dp de empaquetado o margen

00:03:14.600 --> 00:03:16.960
entre las vistas de texto
de "Cantidad" y 0.

00:03:17.200 --> 00:03:21.160
También queremos 16dp de empaquetado
entre el 0 y el botón de "Pedido".

00:03:21.440 --> 00:03:23.760
Puedes implementar esto
de muchas maneras diferentes.

00:03:23.960 --> 00:03:28.040
Voy a añadirlo como diseño
del margen superior para este botón.

00:03:31.400 --> 00:03:34.840
Y lo añadiré como margen inferior
para la vista de texto de "Cantidad".

00:03:37.760 --> 00:03:40.760
Si lo prefieres, hazlo de otra manera,
pero haz que se parezca a este.

00:03:40.840 --> 00:03:43.360
He escogido poner un margen superior
y uno inferior

00:03:43.440 --> 00:03:46.760
porque sé que este área de aquí en medio
más tarde cambiará.

00:03:47.040 --> 00:03:49.200
Lo cambiaremos para que sea
un selector de cantidad,

00:03:49.280 --> 00:03:53.360
con un botón de más y menos,
y aún quiero tener 16dp de espacio

00:03:53.440 --> 00:03:56.400
entre el título de cantidad y el selector.

00:03:56.680 --> 00:03:58.400
Usaremos el mismo criterio para el botón.

00:03:58.600 --> 00:04:01.080
Bien, ejecutémoslo ahora
otra vez en nuestro dispositivo.

00:04:01.240 --> 00:04:03.280
Perfecto, tiene justo
la apariencia que queríamos.

00:04:03.360 --> 00:04:05.560
La vista de texto de "Cantidad"
está en mayúsculas,

00:04:05.880 --> 00:04:09.920
la vista de texto del 0 está
en una fuente negra y hace16sp de tamaño,

00:04:10.040 --> 00:04:11.640
y tenemos el botón de "Pedido" aquí.

00:04:11.720 --> 00:04:14.600
También tenemos
16dp de espacio entre las vistas.

00:04:15.760 --> 00:04:18.160
Buen trabajo.
Oh, casi se me olvida.

00:04:18.240 --> 00:04:21.200
El test también pregunta
qué pasa cuando pulsas este botón.

00:04:21.560 --> 00:04:25.640
Bueno, en realidad no pasa nada,
al menos por ahora.

00:04:25.880 --> 00:04:27.760
Sigue atento para descubrir
qué pasa después.

