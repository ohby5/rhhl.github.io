WEBVTT
Kind: captions
Language: pt-BR

00:00:00.640 --> 00:00:02.719
- Katherine, nosso app está evoluindo.
- Sim.

00:00:02.960 --> 00:00:04.984
Mas tem um grande problema com ele.

00:00:05.080 --> 00:00:06.363
- Qual é o problema?
- Bem...

00:00:06.387 --> 00:00:08.130
Somente encomenda duas xícaras de café.

00:00:08.140 --> 00:00:09.563
Qual é o problema em duas xícaras?

00:00:09.570 --> 00:00:11.655
Três é melhor que duas,
quatro é melhor que três,

00:00:11.667 --> 00:00:12.690
às vezes preciso de mais.

00:00:12.710 --> 00:00:14.356
Já entendi!
Você precisa de mais café.

00:00:14.430 --> 00:00:16.251
O que eu posso fazer é alterar o código,

00:00:16.460 --> 00:00:17.932
para em vez de dois,
só dizer três.

00:00:18.190 --> 00:00:21.353
Então no nosso código aqui,
teremos que mudar

00:00:21.409 --> 00:00:23.716
o número de xícaras de café aqui...

00:00:24.276 --> 00:00:25.470
- E aqui.
-Sim.

00:00:25.620 --> 00:00:29.027
Mas e se eu quiser dez xícaras de café
para mim e meus amigos mais tarde?

00:00:29.261 --> 00:00:33.240
Você tem amigos?
Oh, então precisamos de algo mais.

00:00:33.556 --> 00:00:34.701
Precisamos de algo melhor.

00:00:34.756 --> 00:00:37.255
E se, eu já sei,
podemos usar variáveis.

00:00:37.770 --> 00:00:40.215
Variáveis, como em algo que varia?

00:00:40.460 --> 00:00:42.455
Sim, uma variável não tem um valor fixo.

00:00:42.720 --> 00:00:44.966
Você pode pensar em uma variável
como uma caixa.

00:00:45.907 --> 00:00:46.793
[SOM] 
Como essa!

00:00:48.135 --> 00:00:50.030
- Ok!
- Sim, isto é uma variável.

00:00:50.200 --> 00:00:52.338
É uma caixa e você pode
colocar um valor dentro dela.

00:00:52.400 --> 00:00:55.476
- Diz "int".
- Sim, "int" significa inteiro.

00:00:55.495 --> 00:00:57.009
Então você pode colocar um inteiro?

00:00:57.033 --> 00:00:59.015
- Ou um número nessa caixa?
- Exato!

00:00:59.150 --> 00:01:00.510
E pode até dar um nome para ela.

00:01:00.713 --> 00:01:02.690
Vamos chamá-la de número de...

00:01:02.750 --> 00:01:05.169
- ....xícaras de café pedidas.
- Ok.

00:01:06.920 --> 00:01:08.276
Teve que escolher um nome longo.

00:01:09.304 --> 00:01:10.504
...pedidas.
[Risos]

00:01:11.292 --> 00:01:13.040
- Mal coube.
- Ok.

00:01:13.741 --> 00:01:16.070
Então, agora podemos nos referir
a essa variável

00:01:16.086 --> 00:01:19.396
usando esse nome no código,
em vez de colocar o valor dois.

00:01:19.550 --> 00:01:20.880
- Ok.
- E...

00:01:21.130 --> 00:01:22.726
Podemos atualizar depois,
se quisermos.

00:01:23.021 --> 00:01:25.138
Vamos colocar o valor dentro agora.

00:01:25.206 --> 00:01:26.670
- Como faremos isso?
- Bem...

00:01:26.950 --> 00:01:27.963
Eu tenho alguns adesivos.

00:01:28.080 --> 00:01:29.033
[SOM]

00:01:29.876 --> 00:01:31.250
De onde eles vieram?

00:01:31.420 --> 00:01:35.113
Vamos dizer que o número
de xícaras de café pedidas é 2.

00:01:35.415 --> 00:01:37.255
- Por que apenas duas?
- Uma para mim...

00:01:37.673 --> 00:01:41.680
- E outra para minha amiga, Katherine.
- Oh, obrigada!

00:01:41.710 --> 00:01:43.975
[Risos] Então, agora temos uma variável

00:01:44.200 --> 00:01:46.113
que é chamada "<i>númeroDeCafésPedidos</i>",

00:01:46.135 --> 00:01:47.780
e seu valor é 2.

00:01:48.264 --> 00:01:49.513
Vamos colocar isso em código.

00:01:50.260 --> 00:01:53.180
Estávamos usando antes,
um valor literal para representar

00:01:53.206 --> 00:01:55.150
a quantidade de xícaras de café pedidas.

00:01:55.784 --> 00:01:58.670
Um 'literal' significa um valor fixo,
como o número 2.

00:01:59.427 --> 00:02:02.473
O 5 e esse 2 são também
valores literais, tecnicamente,

00:02:02.824 --> 00:02:05.790
mas apenas estamos falando
em usar literais para a quantidade agora.

00:02:07.138 --> 00:02:09.990
Se dissermos que a quantidade
é 2 xícaras de café pedidas,

00:02:10.470 --> 00:02:13.729
então quando calculamos o preço, 
precisamos fazer 2 vezes 5,

00:02:14.110 --> 00:02:15.600
como cada xícara custa $5.

00:02:16.010 --> 00:02:18.594
Se queremos cobrar dos clientes
por um copo de papel,

00:02:18.873 --> 00:02:20.338
porque eles não trouxeram seus copos

00:02:20.369 --> 00:02:21.600
e gostam de desperdiçar árvores,

00:02:21.980 --> 00:02:23.772
então vamos cobrar $2,
por copo.

00:02:24.455 --> 00:02:26.363
Isso é 2 copos vezes 2 dólares.

00:02:26.830 --> 00:02:29.563
Quando usamos um literal,
você pode ver que não é ideal

00:02:29.569 --> 00:02:33.089
porque precisamos repetir
a quantidade várias vezes.

00:02:33.620 --> 00:02:35.741
Por outro lado,
podemos usar uma variável

00:02:35.920 --> 00:02:38.418
para representar o número
de xícaras de café pedidas.

00:02:39.181 --> 00:02:42.849
Portanto, se dizemos que a quantidade
é essa variável chamada <i>numberOfCoffees</i>,

00:02:43.250 --> 00:02:44.609
então quando calculamos o preço,

00:02:44.953 --> 00:02:48.140
podemos apenas usar o nome de variável,
<i>numberOfCoffees</i>,

00:02:48.326 --> 00:02:50.006
e multiplicá-lo por $5 a xícara.

00:02:50.541 --> 00:02:52.380
Para calcular o preço do copo de papel,

00:02:52.880 --> 00:02:55.378
pegamos de novo o nome da variável, 
<i>numberOfCoffees</i>,

00:02:55.590 --> 00:02:58.043
e multiplicamos por 2,
por $2.

00:02:58.440 --> 00:03:02.080
Assim, a diferença entre essas duas,
é que em vez de valor literal,

00:03:02.424 --> 00:03:03.421
usamos uma variável.

00:03:03.760 --> 00:03:06.246
Depois o valor dessa variável

00:03:06.500 --> 00:03:09.833
será substituído quando
avaliarmos esta expressão.

00:03:10.450 --> 00:03:12.073
Então, quando nós calculamos o preço,

00:03:12.330 --> 00:03:15.612
apenas precisamos verificar o valor
antes de multiplicar por cinco.

00:03:16.180 --> 00:03:19.243
O passo adicional que é preciso fazer
ao usar uma variável,

00:03:19.526 --> 00:03:20.550
é, no começo,

00:03:20.590 --> 00:03:24.941
definir um valor inicial para a variável
<i>numberOfCoffees</i>.

00:03:25.330 --> 00:03:27.932
Neste caso, nós a configuramos
para um valor inicial de 2,

00:03:28.326 --> 00:03:29.403
que também é um literal.

00:03:29.760 --> 00:03:32.073
Mas desta vez,
só usamos o literal em um lugar,

00:03:32.110 --> 00:03:33.790
em vez de em vários lugares.

00:03:33.975 --> 00:03:35.778
O resultado final ainda será o mesmo,

00:03:36.043 --> 00:03:39.020
porque <i>numberOfCoffees</i>
mapeará para o valor 2.

00:03:39.144 --> 00:03:42.086
Assim, a quantidade ainda será 2,
o preço ainda será 10,

00:03:42.258 --> 00:03:44.055
e o copo de papel ainda será 4.

00:03:44.941 --> 00:03:46.369
A verdadeira vantagem dessa opção

00:03:46.580 --> 00:03:49.390
é poder alterar o valor da variável
a qualquer momento.

00:03:50.147 --> 00:03:52.590
Digamos que eu queria mudar
<i>numberOfCoffees </i>para 3.

00:03:53.249 --> 00:03:55.160
Só preciso mudá-lo em um lugar aqui,

00:03:55.446 --> 00:03:57.230
e tudo o resto ainda está correto.

00:03:57.880 --> 00:03:59.852
A quantidade ainda é <i>numberOfCoffees</i>,

00:04:00.080 --> 00:04:01.697
que agora tem o valor de 3.

00:04:02.080 --> 00:04:04.676
O preço é agora <i>numberOfCoffees</i> vezes 5,

00:04:04.970 --> 00:04:06.633
e o valor é 3 vezes 5,

00:04:07.451 --> 00:04:10.314
e o copo de papel ainda é
<i>numberOfCoffees </i>vezes 2.

00:04:10.720 --> 00:04:12.043
Que agora é 3 vezes 2.

00:04:13.064 --> 00:04:14.450
Se estivéssemos usando um literal,

00:04:14.630 --> 00:04:16.829
então teríamos que mudar
a quantidade para ser 3 aqui.

00:04:17.107 --> 00:04:19.735
Teríamos que atualizar
o cálculo do preço para ser 3 vezes 5,

00:04:20.036 --> 00:04:21.913
e o copo de papel para ser 3 vezes 2.

00:04:22.412 --> 00:04:23.852
Quando usamos uma variável,

00:04:24.141 --> 00:04:27.150
não precisamos referir
o valor específico cada vez.

00:04:27.390 --> 00:04:29.181
Podemos apenas referir o nome da variável

00:04:29.390 --> 00:04:32.689
e isso nos levará, automaticamente,
ao último valor nessa variável.

00:04:33.716 --> 00:04:36.621
Podemos olhar mais perto
para como se pareceria o código

00:04:37.000 --> 00:04:38.529
para criar e usar uma variável.

00:04:39.370 --> 00:04:41.187
Para criar a variável dizemos

00:04:41.255 --> 00:04:43.840
<i>int numberOfCoffees igual a 2</i>.

00:04:44.160 --> 00:04:47.969
Isso cria uma variável com este nome,
<i>numberOfCoffees</i>,

00:04:48.290 --> 00:04:51.452
e coloca o valor 2 na caixa dessa variável.

00:04:51.990 --> 00:04:56.116
Estas duas linhas usam a variável
que criámos na primeira linha

00:04:56.700 --> 00:04:58.344
a fim de atualizar esta tela.

00:04:58.920 --> 00:05:00.695
Podemos exibir o número de cafés,

00:05:01.107 --> 00:05:02.830
que envolve olhar para essa variável

00:05:03.021 --> 00:05:05.501
e verificar o valor dentro,
que é 2.

00:05:05.735 --> 00:05:06.886
Então mostramos o dois aqui.

00:05:07.400 --> 00:05:08.902
E para exibir o preço,

00:05:09.330 --> 00:05:12.504
nós olhamos o valor da variável
<i>numberOfCoffees</i>,

00:05:12.787 --> 00:05:13.889
que tem o 2 dentro.

00:05:14.300 --> 00:05:16.320
Então dizemos 2 vezes 5 igual a 10,

00:05:16.640 --> 00:05:18.055
e, portanto,
o preço é $10.

00:05:19.273 --> 00:05:20.886
Posso facilmente mudar este código,

00:05:21.090 --> 00:05:23.815
para o <i>numberOfCoffees</i> ser 3 e não 2.

00:05:24.344 --> 00:05:27.156
Para a caixa que representa
nossa variável <i>numberOfCoffees</i>,

00:05:27.538 --> 00:05:30.590
nós agora colocamos 3 como
valor inicial dentro dessa variável.

00:05:31.300 --> 00:05:33.120
Estas duas linhas de código não têm que mudar

00:05:33.150 --> 00:05:34.726
porque usamos o nome da variável.

00:05:35.710 --> 00:05:38.018
Quando pedimos para mostrar
<i>numberOfCoffees</i>,

00:05:38.510 --> 00:05:40.670
o valor dessa variável é 3,

00:05:40.930 --> 00:05:42.468
e então mostramos Quantidade 3.

00:05:43.600 --> 00:05:44.726
Para exibir o preço,

00:05:45.353 --> 00:05:48.061
olhamos o valor de <i>numberOfCoffees</i>,
que é 3.

00:05:48.295 --> 00:05:51.421
E multiplicamos por 5,
de modo que obtemos $15.

00:05:53.080 --> 00:05:55.606
Isto é como a mudança no código
resultaria no <i>Android Studio.</i>

00:05:56.700 --> 00:06:00.055
Está usando,atualmente,
o valor literal 2 para a quantidade.

00:06:00.690 --> 00:06:02.455
Em vez disso,
vamos criar uma variável.

00:06:03.015 --> 00:06:06.713
Eu vou <i>digitar int numberOfCoffees = 2</i>.

00:06:07.827 --> 00:06:10.400
Então agora tenho uma variável com o valor 2.

00:06:10.756 --> 00:06:12.670
A propósito, 
este texto está cinzento

00:06:12.700 --> 00:06:15.335
e diz que a variável<i>numberOfCoffees</i>
nunca foi usada,

00:06:15.780 --> 00:06:17.470
porque eu não me referi a ela novamente.

00:06:17.796 --> 00:06:19.126
Mas estou a ponto de usá-la agora.

00:06:19.560 --> 00:06:21.667
Em vez de exibir o valor literal 2,

00:06:21.890 --> 00:06:23.932
vou mudá-lo para usar o nome da variável.

00:06:24.120 --> 00:06:26.532
Aparece como opção
do preenchimento automático,

00:06:26.530 --> 00:06:27.741
então basta apertar Enter,

00:06:28.000 --> 00:06:29.563
e ele preenche automaticamente.

00:06:29.950 --> 00:06:31.864
O nome da variável deixa de estar cinzento

00:06:32.104 --> 00:06:34.326
porque agora nós a usámos
em pelo menos um lugar.

00:06:34.695 --> 00:06:36.726
Posso fazer o mesmo para <i>displayPrice</i>.

00:06:37.150 --> 00:06:39.298
Em vez de usar o valor literal 2,
eu vou mudar

00:06:39.538 --> 00:06:42.227
para ser a variável <i>numberOfCoffees</i>,

00:06:42.652 --> 00:06:44.369
aperto Enter para preencher automaticamente.

00:06:44.800 --> 00:06:48.252
Tecnicamente, eu também poderia criar
uma variável para o valor de preço 5.

00:06:48.630 --> 00:06:50.436
Mas como ele só é usado em um lugar,

00:06:50.800 --> 00:06:52.880
é preferível eu deixá-lo como valor literal.

00:06:53.316 --> 00:06:55.673
Agora vamos salvar o código
e executá-lo no dispositivo.

00:06:56.073 --> 00:06:57.830
E isso é o que aparece no dispositivo.

00:06:57.852 --> 00:07:01.150
Quando aperta Pedido,
a quantidade é 2 e o preço $10.

00:07:01.556 --> 00:07:03.803
Esse é exatamente o mesmo
comportamento de antes,

00:07:04.116 --> 00:07:06.283
mas agora o nosso código é mais robusto.

00:07:06.486 --> 00:07:10.233
Robusto significa que o código é menos
propenso a erros no futuro.

00:07:10.603 --> 00:07:13.160
Por exemplo, se alguém estivesse
tentando mudar esse código,

00:07:13.365 --> 00:07:16.125
e usar a quantidade em outros lugares,

00:07:16.436 --> 00:07:18.473
então teriam que mudar o número 2

00:07:18.756 --> 00:07:20.246
em todos esses lugares diferentes.

00:07:20.810 --> 00:07:23.298
Mas se usarmos a variável
<i>numberOfCoffees</i>,

00:07:23.490 --> 00:07:25.470
então só precisaremos mudá-la em um lugar,

00:07:25.661 --> 00:07:27.390
e o resto será atualizado automaticamente.

00:07:28.180 --> 00:07:31.169
Desse modo, evitará perder
em erro uma linha de código

00:07:31.366 --> 00:07:33.470
que precisa do valor de
<i>numberOfCoffees</i> atualizado.

00:07:34.000 --> 00:07:36.276
E só tem que alterá-lo em um único lugar.

00:07:37.250 --> 00:07:39.526
Agora, antes de você tentar
fazer isso no Android Studio,

00:07:39.730 --> 00:07:42.436
Eu quero que você pratique
primeiro nesse exercício.

00:07:42.780 --> 00:07:46.160
Vá em frente e digite esta linha
de código logo abaixo dela.

00:07:46.620 --> 00:07:48.960
Esta linha de código irá criar
uma nova variável integral,

00:07:49.430 --> 00:07:52.621
e estas duas linhas usarão
essa variável integral.

00:07:53.330 --> 00:07:55.040
O motivo que eu quero
que pratique primeiro

00:07:55.260 --> 00:07:58.461
é para você tomar atenção
a cada caractere quando digita.

00:07:59.175 --> 00:08:02.460
Senão, se você esquecer caracteres,
obterá um erro no Android Studio,

00:08:02.680 --> 00:08:04.529
e pode ser difícil ler a mensagem de erro.

00:08:04.790 --> 00:08:07.563
Então vá em frente e digite
exatamente como você o vê.

00:08:07.840 --> 00:08:10.977
Isto está ajudando a você tomar atenção
em cada um dos caracteres aqui.

00:08:11.200 --> 00:08:13.390
Seja uma letra maiúscula
ou uma letra minúscula,

00:08:13.427 --> 00:08:15.780
ou se não há espaços,
ou se há um espaço.

00:08:16.529 --> 00:08:19.090
Você também vai começar
a se acostumar com as regras de Java,

00:08:19.090 --> 00:08:21.901
com relação a criar ou usar uma variável.

00:08:22.406 --> 00:08:23.544
E como aprendeu antes,

00:08:24.050 --> 00:08:26.787
cada instrução de código Java
também tem que terminar com ";".

00:08:27.120 --> 00:08:28.424
Se você digitar incorretamente,

00:08:28.680 --> 00:08:30.043
por exemplo,
o nome da variável,

00:08:30.230 --> 00:08:31.876
você obterá um erro de Java.

00:08:32.200 --> 00:08:35.224
No entanto, outras coisas são mais
convencionais e melhores práticas,

00:08:35.611 --> 00:08:39.765
como adicionar um espaço antes
e depois de operadores como este.

00:08:40.090 --> 00:08:43.034
Se não seguir este espaçamento
não terá um erro explícito.

00:08:43.380 --> 00:08:45.538
Simplesmente,
é uma melhor prática de programação

00:08:45.563 --> 00:08:47.581
seguir estas convenções de estilo de código.

00:08:47.956 --> 00:08:49.643
Desse jeito fica mais fácil ler seu código.

00:08:50.020 --> 00:08:51.243
Quando terminar este exercício,

00:08:51.476 --> 00:08:53.180
continue para o próximo vídeo.

