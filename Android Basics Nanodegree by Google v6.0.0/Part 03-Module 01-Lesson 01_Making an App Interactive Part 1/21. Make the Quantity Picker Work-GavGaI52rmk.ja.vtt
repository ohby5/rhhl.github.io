WEBVTT
Kind: captions
Language: ja

00:00:00.270 --> 00:00:03.630
最初の２つは前回のビデオで説明しました

00:00:03.630 --> 00:00:06.670
それを使ってできる実験をお見せしましょう

00:00:07.450 --> 00:00:10.040
数量の初期値を変えたいと思います

00:00:10.040 --> 00:00:13.690
アプリを起動したときに２ではなく
０から始まるようにです

00:00:13.690 --> 00:00:17.030
そのためには全部の数量変数を

00:00:17.030 --> 00:00:19.400
０に初期化する方法でやってみます

00:00:19.400 --> 00:00:22.930
数を減増するメソッドも活かせるからです

00:00:22.930 --> 00:00:24.390
数を増やすメソッドがコールされると

00:00:24.390 --> 00:00:26.570
最新の数量値に１を足します

00:00:26.570 --> 00:00:31.140
数を減らすメソッドがコールされると
１減らした数量になります

00:00:31.140 --> 00:00:33.250
ではやってみましょう

00:00:33.250 --> 00:00:34.040
変ですね

00:00:34.040 --> 00:00:35.490
０にしたかったのに

00:00:35.490 --> 00:00:39.700
１を押すと１になってしまいます

00:00:39.700 --> 00:00:43.850
減算されていますね
今は加算されています

00:00:43.850 --> 00:00:46.110
ボタンは動いているようですが

00:00:46.110 --> 00:00:49.120
なぜか初期値が間違っています

00:00:49.120 --> 00:00:52.350
Activity main layout の
ファイルを変え忘れていました

00:00:52.350 --> 00:00:56.710
このレイアウトで初期値は２であるという
テキストビューがあります

00:00:56.860 --> 00:01:01.290
起動したときに２が出ていた
問題を解決できます

00:01:01.290 --> 00:01:04.640
初期値が０になりました

00:01:04.660 --> 00:01:07.310
＋を押せばちゃんと更新されます

00:01:07.310 --> 00:01:09.340
－を押しても更新されますね

00:01:10.500 --> 00:01:15.760
２か所に初期数量値があるというのは
少し複雑ですね

00:01:15.900 --> 00:01:19.660
同じことを表すコードが２か所にあると

00:01:19.660 --> 00:01:24.080
後で先程のようなバグの要因となりえます

00:01:24.080 --> 00:01:28.150
応用的な解決策として
アプリを起動させたときに―

00:01:28.150 --> 00:01:31.990
レイアウトが初期値を出すのを待つのではなく

00:01:31.990 --> 00:01:35.040
メインアクティビティがすぐに
０という数量を表示することです

00:01:35.040 --> 00:01:37.890
そうすれば１つの信用できるソースが
大域の変数になるからです

00:01:37.890 --> 00:01:39.260
今は心配しないで大丈夫です

00:01:39.260 --> 00:01:43.280
レッスン３の後にできる応用的なものですから

00:01:43.280 --> 00:01:47.060
他にコードで試せることとして
＋ボタンを押したとき―

00:01:47.060 --> 00:01:49.510
毎回 注文杯数を２倍にしたり

00:01:49.510 --> 00:01:53.450
－ボタンで注文の杯数を半分にすることです

00:01:53.450 --> 00:01:55.360
初期数量を２にしてやってみましょう

00:01:55.360 --> 00:01:59.110
－ボタンを押したら一度で
半分の数になるように

00:02:00.140 --> 00:02:01.730
増幅メソッドがコールされたら

00:02:01.730 --> 00:02:04.110
コーヒーの注文数を２倍にしましょう

00:02:04.110 --> 00:02:07.900
現在の数量を元に２倍にします

00:02:07.900 --> 00:02:10.288
その値が新しい数量として更新され

00:02:10.288 --> 00:02:12.550
画面に表示されるようにします

00:02:12.550 --> 00:02:14.900
一方で減算メソッドがコールされたら

00:02:14.900 --> 00:02:19.090
減算メソッドではコーヒーの注文数を
半分の数にします

00:02:19.090 --> 00:02:21.720
現在の数量を元に２で割ります

00:02:22.960 --> 00:02:24.470
それが新しい数量値になり―

00:02:24.470 --> 00:02:26.360
画面に表示されるようにします

00:02:26.360 --> 00:02:27.350
やってみましょう

00:02:28.060 --> 00:02:32.000
初期数量値を変えたい時
常にエラーの原因となっているのが分かります

00:02:32.000 --> 00:02:34.250
両方のコードを変える必要があるからです

00:02:34.250 --> 00:02:36.065
アプリを実行しましょう

00:02:36.460 --> 00:02:38.650
初期数量は２になっています

00:02:38.650 --> 00:02:41.660
＋ボタンを押したら数が２倍になるはずです

00:02:41.660 --> 00:02:43.070
なりますね

00:02:43.070 --> 00:02:44.350
－ボタンを押したら

00:02:44.350 --> 00:02:46.820
コーヒーの注文数が半減していくはずです

00:02:47.830 --> 00:02:49.530
できました

00:02:49.530 --> 00:02:54.260
デバッガを実行すると
変数が毎回どのように更新するか見られます

00:02:54.260 --> 00:02:57.358
初期数量値は２として始まり
４に更新されます

00:02:59.608 --> 00:03:01.830
４という数量で始まると

00:03:01.830 --> 00:03:05.050
８に更新されるというように続きます

00:03:06.870 --> 00:03:11.230
この数量ピッカーでできる
クリエイティブなことが思いつくはずです

00:03:11.300 --> 00:03:15.420
大域変数の使い方を
より理解してもらえたら嬉しいです

00:03:15.420 --> 00:03:21.060
でも注文ボタンを押しても
注文したコーヒーの値段が表示されません

00:03:21.200 --> 00:03:22.430
次のビデオで修正しましょう

