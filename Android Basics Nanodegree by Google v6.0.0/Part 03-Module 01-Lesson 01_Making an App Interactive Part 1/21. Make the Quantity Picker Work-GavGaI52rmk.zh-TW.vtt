WEBVTT
Kind: captions
Language: zh-TW

00:00:00.160 --> 00:00:03.320
我們已經在上一個視頻中學習了前兩步

00:00:03.520 --> 00:00:06.980
現在我為大家展示您可能已嘗試過的一兩種情況

00:00:07.380 --> 00:00:09.920
我將改變初始數值

00:00:09.940 --> 00:00:12.880
以便應用程式啟動時顯示 0 而非 2

00:00:13.540 --> 00:00:16.900
我實現的方式是修改這一全域變數

00:00:17.034 --> 00:00:19.034
使其初始值為 0

00:00:19.320 --> 00:00:22.420
然後，自增和自減方法將正常工作

00:00:22.820 --> 00:00:24.500
當調用自增方法的時候

00:00:24.620 --> 00:00:27.000
它將採用最新的數值並加上 1

00:00:27.180 --> 00:00:30.560
當調用自減方法的時候，它將在數值上減去 1

00:00:31.040 --> 00:00:32.580
接下來讓我們嘗試這種操作

00:00:33.260 --> 00:00:35.780
那似乎有點怪異，我本想讓它顯示 0

00:00:35.980 --> 00:00:37.500
如果我點擊加號按鈕

00:00:37.900 --> 00:00:39.340
很奇怪，它顯示為 1

00:00:39.700 --> 00:00:41.160
似乎是減少了

00:00:41.600 --> 00:00:43.500
但是現在開始增加了

00:00:43.820 --> 00:00:45.760
那麼似乎這些按鈕是正常的

00:00:45.760 --> 00:00:48.400
但是出於什麼原因，初始值是錯的

00:00:49.020 --> 00:00:51.580
哦，我們忘了修改活動主佈局檔了

00:00:52.260 --> 00:00:53.960
在這個佈局內，我們有一個文本視圖

00:00:54.040 --> 00:00:56.560
那應會解決我們在應用程式啟動時顯示2的問題

00:00:56.780 --> 00:01:00.440
它聲明了初始文本數值為 2

00:01:01.160 --> 00:01:04.140
不錯，現在它顯示初始數值為 0

00:01:04.660 --> 00:01:07.140
然後如果我按下“增加”，它會正確更新

00:01:07.220 --> 00:01:09.440
然後如果我按下“減少”，它也會正確更新

00:01:10.460 --> 00:01:12.380
您可以發現，有點棘手的是

00:01:12.380 --> 00:01:15.160
我們在兩個地方有初始數值

00:01:15.760 --> 00:01:19.520
在程式碼中有兩個地方代表同樣的東西

00:01:19.620 --> 00:01:22.140
在將來可能會成為漏洞的來源

00:01:22.140 --> 00:01:23.460
正如我們剛才所看到的那樣

00:01:23.960 --> 00:01:25.900
解決這一問題的一個進階方式

00:01:26.000 --> 00:01:31.840
是在應用程式啟動後讓主活動即刻顯示數值 0

00:01:31.940 --> 00:01:34.520
而不是讓其初始值依賴於佈局檔

00:01:35.000 --> 00:01:38.100
那樣，這一全域變數將成為單一資料源

00:01:38.240 --> 00:01:39.300
但是，現在還不必為此擔憂

00:01:39.340 --> 00:01:42.660
那是第三課之後才會更多涉及的進階內容

00:01:43.160 --> 00:01:45.380
我們還有另外一種試驗程式碼的方法

00:01:45.460 --> 00:01:49.280
並讓減號按鈕將每次點的咖啡數量減半

00:01:49.400 --> 00:01:52.800
就是讓加號按鈕將每次點的咖啡數量加倍

00:01:53.400 --> 00:01:55.140
讓我們從初始數值 2 開始

00:01:55.140 --> 00:01:57.060
以便如果我們先按下減號按鈕

00:01:57.140 --> 00:01:59.200
我們 至少可以將數量減半一次

00:02:00.080 --> 00:02:03.720
當調用了自增方法時，我們希望將點的咖啡加倍

00:02:03.980 --> 00:02:07.560
我們將取當前數值並將其乘以 2

00:02:07.840 --> 00:02:11.880
那將讓數值更新，我們會讓其顯示在螢幕上

00:02:12.400 --> 00:02:14.440
另一方面，我們有自減方法

00:02:14.920 --> 00:02:18.660
通過自減方法，我們希望把點的咖啡數量減半

00:02:18.980 --> 00:02:22.000
因此，我們將取當前數值並將其除以 2

00:02:22.880 --> 00:02:25.900
那將是新的數值，我們將其顯示在螢幕上

00:02:26.240 --> 00:02:27.200
讓我們試一下

00:02:27.980 --> 00:02:29.760
你可以看到，它可能是一個錯誤來源

00:02:29.760 --> 00:02:33.720
每次你改變初始值的時候，必須改變兩個地方

00:02:34.020 --> 00:02:35.300
現在讓我們運行應用程式

00:02:36.160 --> 00:02:38.460
好，它啟動時的初始值是 2

00:02:38.580 --> 00:02:41.060
如果我按下加號，每次都應讓數值加倍

00:02:41.560 --> 00:02:42.720
很棒，確實加倍了

00:02:42.980 --> 00:02:47.480
如果我按下減號，每次都應讓所點的咖啡減半

00:02:47.740 --> 00:02:48.840
奏效了

00:02:49.480 --> 00:02:50.540
如果我在除錯器內運行應用程式

00:02:50.540 --> 00:02:53.880
你將會看到它每次是如何更新變數的

00:02:54.200 --> 00:02:56.020
數值初始時為 2

00:02:56.240 --> 00:02:57.640
然後更新為 4

00:02:58.460 --> 00:03:01.240
然後數值從 4 開始

00:03:01.580 --> 00:03:05.540
更新為 8，諸如此類

00:03:06.680 --> 00:03:08.860
我確信你們想出了更有創意的方法

00:03:08.880 --> 00:03:10.940
來操練這個數量選擇器

00:03:11.260 --> 00:03:14.560
希望那會幫你更好的使用全域變數

00:03:15.300 --> 00:03:16.860
但是如果我按下“下單”按鈕

00:03:17.560 --> 00:03:20.820
它並不向我顯示所點的咖啡的價格

00:03:20.820 --> 00:03:23.240
讓我們在下個視頻中解決該問題

