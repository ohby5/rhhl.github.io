WEBVTT
Kind: captions
Language: ja

00:00:00.240 --> 00:00:02.680
この問題の正解は
1 つだけではありません

00:00:02.680 --> 00:00:06.151
アプリの不具合と正しい動作の
違いを区別するために―

00:00:06.151 --> 00:00:10.285
一番やりやすい方法によります

00:00:10.285 --> 00:00:12.640
ここに 指摘された
ポイントがいくつかあります

00:00:12.640 --> 00:00:15.990
不具合動作は
Order ボタンを押す度に―

00:00:15.990 --> 00:00:19.990
変わるべきでない数量 （ Quantity ）が
同じ値に変わってしまうことです

00:00:19.990 --> 00:00:22.760
次に 料金（ Price ）は数量に対して
正しいのですが―

00:00:22.760 --> 00:00:25.840
これは数量調節ボタンで
選んだ最終数量に対して―

00:00:25.840 --> 00:00:27.670
正しい料金であるべきです

00:00:27.670 --> 00:00:31.570
これは先ほどの
変わるべきではない数量とつながっています

00:00:31.570 --> 00:00:34.230
現状のコードを見て
問題の発生原因を考えましょう

00:00:35.390 --> 00:00:39.320
activity_main のレイアウトファイルです
Order ボタンはここに示されています

00:00:39.320 --> 00:00:40.576
Order ボタンが押された時―

00:00:40.576 --> 00:00:44.042
MainActivity 内で submitOrder という
メソッドが呼ばれます

00:00:44.042 --> 00:00:47.890
MainActivity.java ファイルの
ここに submitOrder メソッドがあります

00:00:47.890 --> 00:00:51.030
長い間変更されていない
古いコードで―

00:00:51.030 --> 00:00:54.570
「整数量変数の初期設定は 5 」と
なっています

00:00:54.570 --> 00:00:56.660
また「これをスクリーン上に表示します」―

00:00:56.660 --> 00:01:00.610
「料金はコーヒーの杯数 × $5 で
表示されます」ともあります

00:01:00.610 --> 00:01:02.460
このコードは既にあまり意味がありません

00:01:02.460 --> 00:01:06.000
なぜなら 注文を入れようとする時に
数量を更新しようとするからです

00:01:06.440 --> 00:01:09.411
もう 1 つの問題はコーヒーの杯数に
従って変化することになっているー

00:01:09.411 --> 00:01:11.758
グローバル量変数が既にあるのに―

00:01:11.758 --> 00:01:14.777
もう 1 つ整数の量変数を作成したことです

00:01:14.777 --> 00:01:18.026
MainActivity 内にすでに
グローバル量変数があるので―

00:01:18.026 --> 00:01:22.520
この内部にあるメソッドは
この量変数を参照できます

00:01:22.520 --> 00:01:27.060
しかしながら submitOrder メソッドの中に
新たにローカル量変数が作成されています

00:01:27.060 --> 00:01:29.810
技術的にはローカル変数は―

00:01:29.810 --> 00:01:32.200
グローバル変数と同名でも構いません

00:01:32.200 --> 00:01:34.812
これはこのメソッドの内容でのみ
という意味です

00:01:34.812 --> 00:01:38.581
この変数が示された後なら
いつでも数量を参照できます

00:01:38.581 --> 00:01:42.515
ここはこの「値 5 のローカル量変数」を
実際には参照していて―

00:01:42.515 --> 00:01:45.606
「値 2 のグローバル量変数」
ではありません

00:01:45.606 --> 00:01:47.490
ですから「 display(quantity) 」 も―

00:01:47.490 --> 00:01:51.500
「 displayPrice(quantity *5) 」も
この量変数を参照しています

00:01:51.500 --> 00:01:54.080
これがこのローカル変数の及ぶ範囲です

00:01:54.080 --> 00:01:55.490
この範囲の外側では―

00:01:55.490 --> 00:01:59.490
量を参照する時はいつでも
このグローバル変数の量を意味します

00:01:59.490 --> 00:02:00.530
このことを考えると

00:02:00.530 --> 00:02:03.430
注文を出す時 新たに数値を作成して―

00:02:03.430 --> 00:02:07.040
スクリーン上に表示する意味がないのです

00:02:07.040 --> 00:02:11.110
本来やりたいのは
コーヒーの杯数の増減に従って―

00:02:11.110 --> 00:02:14.900
変化しつづける数量を使うことです

00:02:14.900 --> 00:02:18.040
ですから 料金計算をするべきはそれです

00:02:18.040 --> 00:02:22.070
コードを修正するにあたって
ローカル量変数を示すべきではありません

00:02:22.070 --> 00:02:25.130
グローバル量変数だけを使うべきです

00:02:25.130 --> 00:02:28.550
また スクリーン上の数量を
更新する試みを止めるべきです

00:02:28.550 --> 00:02:30.900
+ （プラス）と - （マイナス）ボタンが
既に適切な値を―

00:02:30.900 --> 00:02:33.520
スクリーン上に更新する操作をしています

00:02:33.520 --> 00:02:37.570
しかし submitOrder ボタンによっても
料金が更新されてほしいのです

00:02:37.570 --> 00:02:41.600
でも 今回はグローバル量変数を使って―

00:02:41.600 --> 00:02:43.990
数量 × 5 の計算をします

00:02:43.990 --> 00:02:47.720
このコードを上書きすると
今 話したことが反映されます

00:02:47.720 --> 00:02:50.860
この量変数が紫色になっているか
気を付けてください

00:02:50.860 --> 00:02:54.750
これはつまり MainActivity 内で
グローバル量変数を使っているという意味です

00:02:54.750 --> 00:02:57.940
ボタンが押されると
submitOrder メソッドの引き金になり―

00:02:57.940 --> 00:03:00.000
スクリーン上に料金が表示されます

00:03:00.000 --> 00:03:04.184
その料金はグローバル量変数 × 5 で
計算されています

00:03:04.970 --> 00:03:06.670
良さそうですので
デバイスで実行しましょう

00:03:07.680 --> 00:03:09.530
最終テストの時間です

00:03:09.530 --> 00:03:12.730
数量を 6 に変えて
Order ボタンを押すと

00:03:12.730 --> 00:03:14.510
やったー！
$30 になっています

00:03:14.510 --> 00:03:17.630
まぐれではないことを確かめるために
他の数量でも試します

00:03:17.630 --> 00:03:20.718
合ってます
これもあってます

00:03:20.718 --> 00:03:22.600
良いですね！
ちゃんと動作します

00:03:22.600 --> 00:03:24.310
最初のバグを修正しました

00:03:24.310 --> 00:03:26.400
とてもよくできました

00:03:26.400 --> 00:03:28.970
アプリの機能が
とても適切に動いています

00:03:28.970 --> 00:03:32.280
でも ユーザーインターフェイス（ UI ）が
少し殺風景なのは認めざるをえません

00:03:32.280 --> 00:03:35.800
特に この数量調節ボタンは
UI を愛らしくできます

00:03:35.800 --> 00:03:37.380
次はそれについてやりましょう

