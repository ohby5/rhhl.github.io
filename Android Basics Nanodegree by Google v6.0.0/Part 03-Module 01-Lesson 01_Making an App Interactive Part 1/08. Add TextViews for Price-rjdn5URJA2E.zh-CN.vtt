WEBVTT
Kind: captions
Language: zh-CN

00:00:00.410 --> 00:00:03.080
我希望大家自己创建这个布局

00:00:03.080 --> 00:00:06.060
你需要在这里添加一个 TextView 来显示价格标题

00:00:06.060 --> 00:00:09.310
再添加另一个 TextView 显示 0 美元

00:00:09.310 --> 00:00:15.650
你还需要设定第二个 TextView 视图的ID为 price_text_view

00:00:15.650 --> 00:00:18.580
之所以需要你添加 ID 是因为我们需要

00:00:18.580 --> 00:00:21.780
在之后更新价格时引用这个视图

00:00:21.780 --> 00:00:25.860
当你构建布局时 要确保这两个 TextView 的样式 

00:00:25.860 --> 00:00:27.760
和之前显示数量的 TextView 一致

00:00:27.760 --> 00:00:31.630
两个视图间的垂直距离 都设为 16dp

00:00:31.630 --> 00:00:34.210
为了可以更新价格

00:00:34.210 --> 00:00:37.800
我们还需要修改一下 MainActivity.java 文件

00:00:37.800 --> 00:00:39.730
我们会给大家提供一些帮助

00:00:39.730 --> 00:00:42.540
我们会提供一个新的方法 将这个方法添加到

00:00:42.540 --> 00:00:44.260
MainActivity.java 文件中

00:00:44.260 --> 00:00:47.640
打开讲师注释的 Gist 链接

00:00:47.640 --> 00:00:50.790
顺便提一句 Gist 指的是

00:00:50.790 --> 00:00:54.530
你想分享给其他人的一段或一部分可重复使用的代码

00:00:54.530 --> 00:00:58.390
在这里 我们先打开 GitHub Gist 页面

00:00:58.390 --> 00:01:02.290
我们先创建了一段 Gist 给你们使用

00:01:02.290 --> 00:01:05.780
现在只要分享给你们这个链接 你们就能得到代码了

00:01:05.780 --> 00:01:09.140
我们先选中代码 然后复制它

00:01:09.140 --> 00:01:11.050
记住别忘了复制这部分注释

00:01:11.050 --> 00:01:13.852
这是为读者所做的注释 还有下面的闭合大括号

00:01:13.852 --> 00:01:17.960
现在把代码粘到 MainActivity.java 中

00:01:17.960 --> 00:01:18.740
免费的代码太好了

00:01:19.740 --> 00:01:22.940
确保你粘贴代码后大括号仍然排列正确

00:01:22.940 --> 00:01:26.180
大括号是痛苦之源

00:01:26.180 --> 00:01:30.040
如果大括号排列错误 你会看到很多错误

00:01:30.040 --> 00:01:33.850
例如 如果我把代码粘贴到这里

00:01:33.850 --> 00:01:37.740
我会得到一个错误提示说需要类或接口

00:01:37.740 --> 00:01:40.880
原因是代码放错了地方

00:01:40.880 --> 00:01:45.380
我们需要将它放到 MainActivity 类的开始起始大括号和闭合

00:01:45.380 --> 00:01:47.380
大括号之间

00:01:47.380 --> 00:01:51.780
所以让我们把这段代码放到 MainActivity 的闭合大括号之前

00:01:51.780 --> 00:01:53.910
这样就对了

00:01:53.910 --> 00:01:58.590
另一个潜在的错误是如果你忘记复制闭合大括号

00:01:58.590 --> 00:02:00.870
而只是复制了上面的部分

00:02:00.870 --> 00:02:01.530
这种情况下

00:02:01.530 --> 00:02:05.540
你会得到另一个错误提示 缺少闭合大括号

00:02:05.540 --> 00:02:07.170
所以你需要添加一个闭合大括号

00:02:07.170 --> 00:02:10.038
另一个可能遇到的潜在错误是 一不小心

00:02:10.038 --> 00:02:12.050
把方法添加到了这里

00:02:12.050 --> 00:02:15.940
也就是 display 方法在闭合大括号之前

00:02:15.940 --> 00:02:18.760
现在整个代码都在 display 方法的闭合大括号之前了

00:02:18.760 --> 00:02:20.290
这不是我们想要的

00:02:20.290 --> 00:02:23.710
我们希望它能和 display 方法并列 添加在这里

00:02:25.420 --> 00:02:27.540
你明白了吧 犯错的地方可能很多

00:02:27.540 --> 00:02:30.730
你需要小心 确保大括号正确排列

00:02:30.730 --> 00:02:33.730
另一种检查方式是将光标放在这里

00:02:33.730 --> 00:02:37.850
也就是在起始大括号后面 会看到它对应的闭合大括号

00:02:37.850 --> 00:02:39.000
是高亮的

00:02:39.000 --> 00:02:40.320
同样 如果我点击这里

00:02:40.320 --> 00:02:42.860
匹配的括号在这里

00:02:44.130 --> 00:02:49.430
submitOrder 、onCreate 甚至 MainActivity 都一样

00:02:50.440 --> 00:02:52.450
这是 MainActivity的起始大括号

00:02:52.450 --> 00:02:55.370
对应的闭合大括号是蓝色高亮的

00:02:55.370 --> 00:02:58.650
现在很不幸 还有一个错误

00:02:58.650 --> 00:03:03.160
旁边提示说 无法解析 NumberFormat 符号

00:03:03.160 --> 00:03:05.910
NumberFormat 实际上是由 Android 提供

00:03:05.910 --> 00:03:07.620
用来格式化数字

00:03:07.620 --> 00:03:10.630
这里我们要格式化表示价格的数字

00:03:10.630 --> 00:03:14.690
在它前面加上美元或其它钱币符号

00:03:14.690 --> 00:03:16.370
我们需要添加一条输入语句

00:03:16.370 --> 00:03:21.100
因为目前 Android Studio 无法识别这个

00:03:21.100 --> 00:03:24.410
为了解决这个问题 我来演示如何打开自动导入功能

00:03:24.410 --> 00:03:26.790
在Android Studio 顶部菜单中

00:03:26.790 --> 00:03:29.390
点击 Android Studio 的 Preferences

00:03:29.390 --> 00:03:32.260
打开 Android Studio 偏好设置页面

00:03:32.260 --> 00:03:35.030
这里有很多我从未变更过的偏好设置

00:03:35.030 --> 00:03:38.310
如果你需要 只需使用搜索功能即可

00:03:38.310 --> 00:03:40.510
我来搜索Auto Import

00:03:40.510 --> 00:03:41.670
可以看到

00:03:41.670 --> 00:03:44.470
在 XML 和 Java 中自动导入相关设置

00:03:44.470 --> 00:03:48.820
勾选 Add Unambiguous Imports 复选框

00:03:48.820 --> 00:03:51.850
也许你不太明白这个说法 但没关系

00:03:51.850 --> 00:03:53.730
这句话本来就听着令人困惑

00:03:54.920 --> 00:03:59.420
它所做的就是告诉 Android Studio 可以

00:03:59.420 --> 00:04:01.410
在应用中自动添加一些额外代码

00:04:01.410 --> 00:04:06.050
如果它知道我们需要引用的东西 它就会导入声明

00:04:06.050 --> 00:04:06.560
演示一下

00:04:07.700 --> 00:04:09.930
实际上 这个过程已经完成

00:04:09.930 --> 00:04:12.930
我们输入的数字的默认格式

00:04:12.930 --> 00:04:13.930
就是这个格式

00:04:13.930 --> 00:04:15.970
这样它就自动为我们解决了这个问题

00:04:15.970 --> 00:04:17.170
太棒了

00:04:17.170 --> 00:04:19.140
这时 如果再次运行应用

00:04:19.140 --> 00:04:22.410
当你点击 ORDER 按钮 数量就会变化

00:04:22.410 --> 00:04:23.710
但价格不变

00:04:23.710 --> 00:04:26.140
我们需要修改一下 submitOrder 方法

00:04:26.140 --> 00:04:29.670
使它同时更新价格和数量

00:04:29.670 --> 00:04:31.100
所以再添加一行代码

00:04:32.910 --> 00:04:36.980
我会调用 displayPrice 方法 

00:04:36.980 --> 00:04:41.716
需要计算的价格是两杯咖啡乘以单价的5美元

00:04:41.716 --> 00:04:44.780
之所以每杯咖啡五美元是因为

00:04:44.780 --> 00:04:47.460
我们是从埃塞俄比亚进口的阿拉比卡咖啡豆

00:04:47.460 --> 00:04:50.260
总之 我们要让设备帮我们计算

00:04:50.260 --> 00:04:53.742
两杯咖啡的价格

00:04:53.742 --> 00:04:56.130
注意我们使用美元单位

00:04:56.130 --> 00:04:58.610
你完全可以使用你们当地的货币单位

00:04:58.610 --> 00:05:01.310
这个数学表达式中没有美元符号

00:05:01.310 --> 00:05:04.420
在之后的displayPrice 方法中它会被添加

00:05:04.420 --> 00:05:07.110
但不必担心 displayPrice 方法的细节

00:05:07.110 --> 00:05:08.790
我们会在第三课中详细讲解

00:05:09.840 --> 00:05:12.360
现在只需要将精力集中在计算咖啡价格的

00:05:12.360 --> 00:05:14.540
数学表达式上即可

00:05:14.540 --> 00:05:18.030
另外记住在每行代码后面加上分号

00:05:18.030 --> 00:05:22.160
否则你会看到由此导致的错误

00:05:22.160 --> 00:05:25.570
例如删掉分号 你会得到一个错误提示

00:05:25.570 --> 00:05:27.130
说是需要一个分号

00:05:28.160 --> 00:05:33.030
强调一下 分号键是这个

00:05:33.030 --> 00:05:34.720
不是上面的冒号 而是下面的分号

00:05:34.720 --> 00:05:37.190
好啦 当你完成全部代码以后

00:05:37.190 --> 00:05:39.910
你应该会在这里看到两个用于显示价格的 TextView

00:05:39.910 --> 00:05:42.810
你应该修改 MainActivity 

00:05:42.810 --> 00:05:44.480
把我们提供的新方法添加进去

00:05:44.480 --> 00:05:47.040
并且修改 submitOrder 方法

00:05:47.040 --> 00:05:49.150
添加一行用于显示价格的代码

00:05:50.240 --> 00:05:53.060
当在设备上运行时 应该是这样的界面

00:05:53.060 --> 00:05:55.237
初始值是0杯咖啡0美元

00:05:55.237 --> 00:05:58.904
点击ORDER按钮 就变成了2杯咖啡10美元

00:06:00.070 --> 00:06:04.010
大家可以自由改变咖啡数量和单价

00:06:04.010 --> 00:06:06.890
如果你想变成一杯咖啡10美元也可以

00:06:06.890 --> 00:06:10.160
记住最后改回到一杯5美元

00:06:10.160 --> 00:06:12.770
这样和我们接下来的内容能保持一致

00:06:12.770 --> 00:06:14.100
完成以后勾上这些复选框

