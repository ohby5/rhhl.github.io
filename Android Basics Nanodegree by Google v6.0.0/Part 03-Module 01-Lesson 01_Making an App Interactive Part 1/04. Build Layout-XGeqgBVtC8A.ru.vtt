WEBVTT
Kind: captions
Language: ru

00:00:00.180 --> 00:00:04.710
Чтобы создать данный макет,
открываем файл activity_main.xml.

00:00:04.710 --> 00:00:07.670
Я знаю, что нам нужен вертикальный
линейный дизайн макета, где каждый элемент

00:00:07.670 --> 00:00:09.340
будет выстроен в вертикальный столбец.

00:00:09.340 --> 00:00:12.870
Для начала необходимо поменять
относительную структуру на линейную.

00:00:12.870 --> 00:00:17.110
Сразу же мы получаем ошибку, сообщающую
что открывающий тег не соответствует

00:00:17.110 --> 00:00:20.840
закрывающему тегу, поэтому я просто
скопирую это и вставлю сюда.

00:00:20.840 --> 00:00:22.100
Теперь теги совпадают.

00:00:22.100 --> 00:00:23.930
Далее, я могу добавить элементы.

00:00:23.930 --> 00:00:25.720
Во-первых, у нас есть поле количества.

00:00:25.720 --> 00:00:29.880
Возьмем этот текстовый элемент и
изменим надпись на Quantity [Количество].

00:00:29.880 --> 00:00:31.960
Далее, у нас есть поле с надписью 0.

00:00:31.960 --> 00:00:34.460
Тогда я скопирую первое поле и
вставлю его ниже.

00:00:34.460 --> 00:00:38.430
Я изменю его, чтобы надпись была 0,
как показано на снимке экрана.

00:00:38.430 --> 00:00:41.500
Последний дочерний элемент этого
линейного макета это кнопка.

00:00:41.500 --> 00:00:45.020
Мы еще не добавляли кнопки ранее на наш
макет, поэтому давайте поищем в Google.

00:00:45.020 --> 00:00:48.160
Открыв браузер, вы можете
начать поиск по словам «кнопка Android».

00:00:48.160 --> 00:00:51.500
Первая ссылка выглядит интересно,
это сайт developer.android.com.

00:00:52.570 --> 00:00:56.700
И здесь есть документация по кнопкам, мы
можем просто пропустить большинство текста

00:00:56.700 --> 00:00:59.250
Прокрутим вниз, чтобы перейти к
обзору класса.

00:00:59.250 --> 00:01:03.000
Здесь рассказывает о коде Java, который
мы еще не изучали, но

00:01:03.000 --> 00:01:06.300
здесь также есть XML-код для кнопки.

00:01:06.300 --> 00:01:09.280
Мы скопируем это и проверим,
как это будет работать в нашем коде.

00:01:09.280 --> 00:01:12.420
На нашем макете я добавлю
кнопку ниже этих двух текстовых полей.

00:01:12.420 --> 00:01:16.030
Я вставлю код
из документации сюда.

00:01:16.030 --> 00:01:18.900
И теперь вместо строки selfdestruct
[самоуничтожение] я вставлю что-нибудь

00:01:18.900 --> 00:01:22.280
более дружественное,
вроде «Заказать».

00:01:22.280 --> 00:01:24.900
Последние строки мы также можем
удалить, поскольку они нам не нужны.

00:01:24.900 --> 00:01:28.580
Здорово, теперь у нас есть текстовое поле
количество, поле с нулем и

00:01:28.580 --> 00:01:29.270
кнопка выполнения заказа.

00:01:30.320 --> 00:01:32.220
Теперь запустим это в приложении,
чтобы проверить, как это выглядит,

00:01:32.220 --> 00:01:33.540
нажав зеленую кнопку запуска.

00:01:33.540 --> 00:01:36.290
Мы видим, что приложение
все еще генерируется.

00:01:37.690 --> 00:01:38.660
Ой, это не то, что мы хотели.

00:01:38.660 --> 00:01:43.470
Оказалось, что наш линейный макет на самом
деле горизонтальный, а не вертикальный.

00:01:43.470 --> 00:01:47.586
Поэтому необходимо добавить
атрибут ориентации.

00:01:47.586 --> 00:01:52.020
Изменим это на
android;orientation="vertical".

00:01:52.020 --> 00:01:53.570
Это должно помочь решить проблему.

00:01:53.570 --> 00:01:54.490
Нажмем запуск еще раз.

00:01:55.520 --> 00:01:57.010
Отлично, так то лучше.

00:01:57.010 --> 00:02:00.270
Три дочерних элемента показаны
в вертикальном виде.

00:02:00.270 --> 00:02:01.810
Теперь необходимо
настроить стили этих полей таким образом,

00:02:01.810 --> 00:02:04.160
чтобы они выглядели похоже на те
на снимке экрана, который нам дали.

00:02:05.280 --> 00:02:08.460
На изображении мы видим, что поле
количества написано заглавными буквами.

00:02:09.600 --> 00:02:13.950
На первом уроке мы изучили
атрибут android:textAllCaps,

00:02:13.950 --> 00:02:16.230
и он появился здесь
в автозавершении кода.

00:02:16.230 --> 00:02:18.310
Если он появляется таким образом,
можно просто нажать Enter и

00:02:18.310 --> 00:02:20.390
он будет автоматически
добавлен в ваш код.

00:02:21.400 --> 00:02:24.970
Мы устанавливаем это значение в True,
чтобы текст отображался заглавными буквами

00:02:24.970 --> 00:02:28.580
Причина, по которой лучше использовать
этот атрибут для изменения текста,

00:02:28.580 --> 00:02:32.620
в том, что если когда-либо мы захотим
изменить интерфейс, поменяв буквы на

00:02:32.620 --> 00:02:35.650
маленькие, как здесь, все что нам нужно —
просто удалить этот атрибут

00:02:35.650 --> 00:02:38.020
вместе замены всего текста.

00:02:38.020 --> 00:02:41.840
Далее, для теста, где написан ноль,
необходимо установить размер в 16sp.

00:02:41.840 --> 00:02:45.970
Добавим это и атрибут появляется в
списке автозавершения, поэтому

00:02:45.970 --> 00:02:50.000
я просто нажму Enter и
выберу 16sp в качестве значения.

00:02:50.000 --> 00:02:52.450
Также необходимо поменять цвет
текста на черный.

00:02:52.450 --> 00:02:54.700
Используем системный цвет
Android в качестве

00:02:54.700 --> 00:02:57.380
черного, что выглядит вот так.

00:02:57.380 --> 00:03:00.558
Здорово, это изменит оба текстовых поля —
количества и нуля.

00:03:00.558 --> 00:03:05.011
Кнопка заказа уже в порядке, система
автоматически изменит формат текста для

00:03:05.011 --> 00:03:08.820
вас, а высота и ширина
изменяться под содержимое.

00:03:08.820 --> 00:03:11.898
Нам необходимо разобраться с
этим вертикальным пространством.

00:03:11.898 --> 00:03:15.810
Необходимо установить интервалы или
отступ в 16dp между надписью «Quantity»

00:03:15.810 --> 00:03:17.190
нулем.

00:03:17.190 --> 00:03:20.027
Также интервал в 16dp необходим
между надписью 0 и

00:03:20.027 --> 00:03:21.430
кнопкой заказа.

00:03:21.430 --> 00:03:23.960
Вы можете добиться этого
множеством способов,

00:03:23.960 --> 00:03:27.650
а я сделаю это путем добавления верхнего
отступа для этой кнопки.

00:03:31.410 --> 00:03:34.490
Также я добавлю нижний отступ
для текстового поля количества.

00:03:37.810 --> 00:03:40.810
Вы можете спокойно сделать это иным
способом, если результат будет такой же.

00:03:40.810 --> 00:03:44.000
Причина, по которой я решила сделать это
путем нижнего и верхнего отступов, в том,

00:03:44.000 --> 00:03:47.040
потому что я знаю, что данная область
в середине будет изменяться далее.

00:03:47.040 --> 00:03:49.670
Мы изменим это, чтобы
можно было выбирать количество кнопками

00:03:49.670 --> 00:03:54.620
плюс и минус, и я также хочу оставить 
отступ в 16dp между надписью

00:03:54.620 --> 00:03:56.830
количество и селектором.

00:03:56.830 --> 00:03:57.560
То же самое для кнопки.

00:03:58.610 --> 00:04:01.280
Хорошо, давайте запустим это
еще раз на нашем устройстве.

00:04:01.280 --> 00:04:03.350
Отлично! Выглядит как мы хотели.

00:04:03.350 --> 00:04:07.150
Количество теперь заглавными буквами,
текстовое поле с нулем написано

00:04:07.150 --> 00:04:11.710
черным шрифтом, размера 16sp, и далее
у нас кнопка заказа.

00:04:11.710 --> 00:04:14.540
Также, между элементами
установлен интервал в 16dp.

00:04:15.760 --> 00:04:18.240
Прекрасно!
Ой, я почти забыла.

00:04:18.240 --> 00:04:21.560
В задании спрашивается, что произойдет
когда вы нажмете на кнопку?

00:04:21.560 --> 00:04:25.950
Вообще-то, ничего не произойдет,
по крайней мере пока.

00:04:25.950 --> 00:04:27.660
Смотрите далее, чтобы
узнать больше.

