WEBVTT
Kind: captions
Language: ru

00:00:00.008 --> 00:00:00.980
Так, Катерина.

00:00:00.980 --> 00:00:01.580
&gt;&gt; Хм.
&gt;&gt; Итак,

00:00:01.580 --> 00:00:03.620
когда мы нажимаем кнопку + в приложении.

00:00:03.620 --> 00:00:05.380
Количество кружек кофе увеличивается.

00:00:05.380 --> 00:00:07.320
&gt;&gt; Точно, оно растет от
двух кружек до трех.

00:00:07.320 --> 00:00:10.110
А что произойдет, если мы нажмем
кнопку + еще раз?

00:00:10.110 --> 00:00:11.990
&gt;&gt; Значение так и останется на 3.

00:00:11.990 --> 00:00:12.590
Действительно.

00:00:12.590 --> 00:00:15.700
Не важно сколько раз мы
нажимаем кнопку + в этом приложении,

00:00:15.700 --> 00:00:18.360
количество кружек кофе
остается равным трем.

00:00:18.360 --> 00:00:19.930
&gt;&gt; Точно.
&gt;&gt; Почему так происходит?

00:00:19.930 --> 00:00:23.870
&gt;&gt; Я думаю, потому что в нашем коде
мы изменяем это значение только на 3.

00:00:23.870 --> 00:00:25.200
И никогда ничего другого.

00:00:25.200 --> 00:00:27.720
&gt;&gt; Верно.
Эта цифра вписана в программу.

00:00:27.720 --> 00:00:29.100
&gt;&gt; Точно.
&gt;&gt; Знаешь, что это мне напоминает?

00:00:29.100 --> 00:00:30.040
&gt;&gt; Что?

00:00:30.040 --> 00:00:32.840
&gt;&gt; Ну, [СМЕЕТСЯ] мой преподаватель
по информатике в колледже говорил.

00:00:32.840 --> 00:00:33.340
&gt;&gt; Что?

00:00:34.410 --> 00:00:36.230
Когда вы сдаете свою дипломную работу.

00:00:36.230 --> 00:00:37.100
&gt;&gt; Ага?

00:00:37.100 --> 00:00:39.100
&gt;&gt; Пожалуйста, никаких магических чисел.

00:00:39.100 --> 00:00:40.260
&gt;&gt; А что такое магическое число?

00:00:40.260 --> 00:00:41.730
&gt;&gt; Существует три вида магических чисел.

00:00:41.730 --> 00:00:43.930
&gt;&gt; Да.
&gt;&gt; Число магическое, потому что

00:00:43.930 --> 00:00:46.475
мы производим вычисления в голове,
и переносим на компьютер.

00:00:46.475 --> 00:00:48.115
&gt;&gt; Мы сообщаем ему ответ.

00:00:48.115 --> 00:00:52.535
&gt;&gt; Точно, правильнее было бы, если бы
компьютер сам вычислил это.

00:00:52.535 --> 00:00:53.105
&gt;&gt; Подожди.

00:00:53.105 --> 00:00:55.025
Говоря о математических вычислениях.

00:00:55.025 --> 00:00:56.515
&gt;&gt; Ага.
&gt;&gt; Мне нужно записать действия.

00:00:56.515 --> 00:00:57.565
&gt;&gt; Да.

00:00:57.565 --> 00:00:58.515
Давайте напишем некоторый абстрактный код.

00:00:59.555 --> 00:01:01.895
Запишем псевдокод для такой ситуации.

00:01:01.895 --> 00:01:04.595
Допустим, мы создали переменную
количества и установили ее значение в 2.

00:01:04.595 --> 00:01:07.575
При нажатии на кнопку +
в приложении,

00:01:07.575 --> 00:01:10.450
мы берем текущее значение
переменной количества, что равно двум.

00:01:10.450 --> 00:01:12.480
&gt;&gt; Прибавляем единицу, получая 3, и

00:01:12.480 --> 00:01:16.550
затем сохраняем это в качестве нового
значения в переменной количества.

00:01:16.550 --> 00:01:19.510
Если мы нажмем кнопку + еще раз,
то мы берем текущее значение

00:01:19.510 --> 00:01:23.840
переменной количества, что теперь равно 3,
и прибавляем единицу, получая 4.

00:01:23.840 --> 00:01:26.700
И затем сохраняем это в качестве нового
значения в самой переменной,

00:01:26.700 --> 00:01:30.200
а вот и фактический Java-код для этого.

00:01:30.200 --> 00:01:32.310
Вначале, мы инициализируем переменную.

00:01:32.310 --> 00:01:33.980
Если нажимается кнопка +,

00:01:33.980 --> 00:01:36.890
то мы берем текущее значение
переменной количества, прибавляем единицу,

00:01:36.890 --> 00:01:39.990
а затем сохраняем это в качестве нового
значения в переменной количества.

00:01:41.670 --> 00:01:45.160
Смотря на эти строки кода,
вы можете представить себе поля.

00:01:45.160 --> 00:01:47.850
Несмотря на то, что мы привыкли читать
слева направо,

00:01:47.850 --> 00:01:50.960
я всегда начинаю с того, что справа от
знака равенства.

00:01:51.970 --> 00:01:54.240
В нашем случае
здесь у нас текущее значение количества.

00:01:54.240 --> 00:01:58.100
Что равно двум, и мы прибавляем единицу,
что дает нам 3.

00:01:58.100 --> 00:02:02.090
Затем мы сохраняем эту тройку в
переменную, как показано.

00:02:02.090 --> 00:02:05.590
Справа представлено выражение,
о которых мы говорили ранее.

00:02:05.590 --> 00:02:08.850
Выражение может состоять из
переменных, операторов и

00:02:08.850 --> 00:02:10.630
непосредственно значений, и прочего.

00:02:10.630 --> 00:02:15.200
Если мы нажмем кнопку + еще раз,
то можно сказать quantity = quantity + 1.

00:02:15.200 --> 00:02:17.660
В данный момент текущее
значение количества равно 3,

00:02:17.660 --> 00:02:20.680
и мы прибавляем единицу,
что дает нам 4.

00:02:20.680 --> 00:02:23.970
Затем сохраняем 4 в качестве нового
значения в переменную, как показано.

00:02:25.320 --> 00:02:27.660
Фактически, мы создали
общий шаблон,

00:02:27.660 --> 00:02:31.290
который компьютер может использовать
каждый раз, когда нажимается кнопка +.

00:02:31.290 --> 00:02:35.940
Вместо того, чтобы писать новые строчки
кода, задавая конкретные значения

00:02:35.940 --> 00:02:40.010
количеств кружек кофе,
мы можем просто quantity = quantity + 1,

00:02:40.010 --> 00:02:44.200
продолжая наращивать текущее
значение количества.

00:02:44.200 --> 00:02:46.060
Это намного более удобно.

00:02:46.060 --> 00:02:48.395
Допустим, вы захотите изменить
начальное значение на 3,

00:02:48.395 --> 00:02:51.595
тогда остальные строки кода вам
не придется менять.

00:02:51.595 --> 00:02:55.675
Потому что мы будем всегда использовать
последнее значение количества,

00:02:55.675 --> 00:02:59.535
которое, по нашему старому методу, если бы
мы захотели установить в 3,

00:02:59.535 --> 00:03:02.985
и затем нажали бы кнопку +,
вам пришлось бы писать новую строку кода,

00:03:02.985 --> 00:03:07.360
которая бы присваивала количеству значение
четыре, затем 5.

00:03:07.360 --> 00:03:10.960
Когда мы обновляем количество до
абсолютно нового значения каждый раз,

00:03:10.960 --> 00:03:13.870
компьютеру сложно понять,
какой шаблон за этим стоит.

00:03:14.870 --> 00:03:18.680
Но если мы обновляем количество на основе
текущего значения этой переменной

00:03:18.680 --> 00:03:21.750
и увеличиваем его предсказуемым образом,
тогда компьютер сможет делать это

00:03:21.750 --> 00:03:25.090
каждый раз,
когда нажимается кнопка +.

00:03:25.090 --> 00:03:27.929
Такой способ намного лучше подойдет
нашему приложению для заказа.

00:03:28.930 --> 00:03:30.440
Каждый раз при нажатии на кнопку +,

00:03:30.440 --> 00:03:33.590
мы можем просто увеличивать текущее
значение количества на 1.

00:03:33.590 --> 00:03:37.330
Потренируйтесь в написании этих строк кода
набирая их в полях, которые

00:03:37.330 --> 00:03:38.860
мы здесь приводим.

00:03:38.860 --> 00:03:41.060
Обращайте внимание на каждый знак
и символ.

00:03:42.120 --> 00:03:45.900
Это первый раз, когда вы обновляете
переменную, используя ее саму, поэтому

00:03:45.900 --> 00:03:48.850
убедитесь, что набрали имя
переменной верно.

00:03:48.850 --> 00:03:52.190
Когда завершите, заполните этот столбец,
который представляет текущее значение

00:03:52.190 --> 00:03:54.720
количества после выполнения
каждой строки кода.

