WEBVTT
Kind: captions
Language: ko

00:00:00.430 --> 00:00:03.750
우리는 이 코드행을 이해하고
그걸 입력하는 법을 연습했어요.

00:00:03.750 --> 00:00:07.450
진행하여 그것을 MainActivity 안의
increment 메소드에 추가하세요.

00:00:07.450 --> 00:00:11.610
초보자가 하는 흔한 실수는
테이더 종류를 다시 특정짓는 겁니다.

00:00:11.610 --> 00:00:15.500
당신은 변수를 선언할 때만
데이터 종류를 한 번 특정해야 합니다.

00:00:15.500 --> 00:00:18.010
그 후에는 그냥 변수 이름만 
추가하면 되죠.

00:00:18.010 --> 00:00:21.260
25행에 중단점을 추가하고
디버거를 실행하면

00:00:21.260 --> 00:00:24.300
수량 변수가 각 단계에서
무엇인지 확인할 수 있어요.

00:00:25.390 --> 00:00:29.140
이 더하기 버튼을 누르면
25행의 중단점이 실행되죠.

00:00:29.140 --> 00:00:31.840
다음 코드 행으로 가기위해
step over를 클릭합니다.

00:00:31.840 --> 00:00:35.480
수량 변수가 2의 값으로
만들어진 게 보이죠.

00:00:35.480 --> 00:00:37.200
step over를 다시 누르면

00:00:37.200 --> 00:00:39.660
수량 변수가 3으로
업데이트된 것이 보여요.

00:00:39.660 --> 00:00:43.760
이는 수량= 수량 +1이기 때문이죠.

00:00:43.760 --> 00:00:45.720
앱을 재실행하기 위해
재생 버튼을 누르고

00:00:45.720 --> 00:00:48.530
최근 수량 변수가 여기
화면에 보여지는 걸 봅니다.

00:00:50.090 --> 00:00:52.360
당신 앱의 버전에서도
같은 것을 하세요.

00:00:52.360 --> 00:00:57.520
increment 메소드를 변경해
수량=수량+1 이 되도록 변경하세요.

00:00:57.520 --> 00:00:59.030
그리고 단계를 보기 위해
디버거를 사용하고

00:00:59.030 --> 00:01:01.330
각 단계의 수량 변수를 확인하세요.

00:01:02.330 --> 00:01:05.550
그 다음, 수량 변수를
업데이트하기 위한

00:01:05.550 --> 00:01:06.700
다른 표현식을 시험해보세요.

00:01:06.700 --> 00:01:10.090
수량+1도 되고, 1+수량도
사용해볼 수 있어요.

00:01:10.090 --> 00:01:14.350
변수 이름을 두 번 쓰거나
원하는 만큼 사용할 수 있고

00:01:14.350 --> 00:01:16.950
다른 연산법을 사용할 수도 있어요.

00:01:16.950 --> 00:01:19.690
무엇이 발생하는지 이것을
여러분 기기에서 실행할 수 있어요.

00:01:19.690 --> 00:01:22.980
실험이 끝났다면 계속해서
전에 했던 것으로 돌려놓으세요.

00:01:22.980 --> 00:01:25.040
다음 강의를 계속할 수 있게요.

00:01:26.520 --> 00:01:27.820
다 하셨으면 이 박스를 체크하세요.

