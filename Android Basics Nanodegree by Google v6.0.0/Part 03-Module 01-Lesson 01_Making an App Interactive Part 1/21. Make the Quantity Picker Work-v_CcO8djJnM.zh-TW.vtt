WEBVTT
Kind: captions
Language: zh-TW

00:00:00.008 --> 00:00:00.986
好的，凱瑟琳。

00:00:00.986 --> 00:00:02.175
&gt;&gt;嗯。
&gt;&gt;我們按下「加號」。

00:00:02.175 --> 00:00:05.209
[聲音]咖啡杯數由二加至三。

00:00:05.209 --> 00:00:06.585
&gt;&gt;好的。
&gt;&gt;我們繼續按「加號」。

00:00:06.585 --> 00:00:07.709
[聲音]再一次。

00:00:07.709 --> 00:00:08.669
[聲音]再一次。

00:00:08.669 --> 00:00:13.043
[聲音]而咖啡的杯數
停留在二，無上升。

00:00:13.043 --> 00:00:16.554
&gt;&gt;好的，我認為這是因為
我們缺少一個概念，

00:00:16.554 --> 00:00:18.260
就是變數的可視範圍。

00:00:18.260 --> 00:00:19.020
&gt;&gt;變數的可視範圍？

00:00:19.020 --> 00:00:19.520
&gt;&gt;對呀。

00:00:19.520 --> 00:00:20.640
&gt;&gt;希望解釋嗎？

00:00:20.640 --> 00:00:23.230
&gt;&gt;變數的可視範圍即是，
當一個變數在方法中宣告，

00:00:23.230 --> 00:00:25.748
它只可於那方法範圍內使用。

00:00:25.748 --> 00:00:27.220
&gt;&gt; [聲音]
&gt;&gt;要注意。

00:00:27.220 --> 00:00:27.780
&gt;&gt;凱瑟琳。

00:00:27.780 --> 00:00:29.480
&gt;&gt;對呀。
&gt;&gt;我們正在胡言亂語。

00:00:29.480 --> 00:00:31.880
有人需要給這個課程的學生一枚獎章

00:00:31.880 --> 00:00:32.990
因為他們已學到這麼多。

00:00:32.990 --> 00:00:35.140
&gt;&gt;好的。
&gt;&gt;讓我們慢下來，解釋清楚。

00:00:35.140 --> 00:00:36.305
&gt;&gt;對不起。
好的，我可以解釋。

00:00:36.305 --> 00:00:37.955
&gt;&gt;好的，我們按下「加號」按鈕。

00:00:37.955 --> 00:00:39.540
&gt;&gt;嗯。
&gt;&gt;代碼裡的增量方法

00:00:39.540 --> 00:00:40.450
被呼叫。

00:00:40.450 --> 00:00:41.480
&gt;&gt;是的。
&gt;&gt;然後會發生什麼事？

00:00:41.480 --> 00:00:43.300
&gt;&gt;嗯，
我們建立了數量變數。

00:00:43.300 --> 00:00:43.920
&gt;&gt; 對的。

00:00:43.920 --> 00:00:45.309
&gt;&gt;初始數值為 2。

00:00:45.309 --> 00:00:46.150
&gt;&gt;對的。
&gt;&gt;我們

00:00:46.150 --> 00:00:47.980
把它更新為三杯咖啡。

00:00:47.980 --> 00:00:51.470
&gt;&gt;當增量方法結束，
那麼會發生什麼事？

00:00:51.470 --> 00:00:53.165
&gt;&gt;嗯，
那麼變數會被銷毀。

00:00:53.165 --> 00:00:54.742
[聲音]
&gt;&gt;好的，

00:00:54.742 --> 00:00:58.169
當我再次按「加號」按鈕
[聲音]增量方法

00:00:58.169 --> 00:00:58.966
在我們的代碼裡被呼叫 -
&gt;&gt;而且

00:00:58.966 --> 00:01:01.450
然後我們建立了一個數量變數。

00:01:01.450 --> 00:01:02.110
&gt;&gt;哦，嘩。

00:01:02.110 --> 00:01:03.220
另一個像奇蹟般出現。

00:01:03.220 --> 00:01:04.385
&gt;&gt;是的，一個全新的。

00:01:04.385 --> 00:01:06.160
&gt;&gt;好的。
&gt;&gt;它的初始值為 2，

00:01:06.160 --> 00:01:07.550
然後我們把它更新為 3。

00:01:07.550 --> 00:01:10.700
&gt;&gt;然後增量法再次結束，
跟著會發生什麼？

00:01:10.700 --> 00:01:11.955
&gt;&gt;變數被銷毀。

00:01:11.955 --> 00:01:15.462
[聲音]我們真正需要的是
一個全域變數。

00:01:15.462 --> 00:01:16.250
&gt;&gt;哦，是的。

00:01:16.250 --> 00:01:20.630
一個可任由我們應用程式內的
部份及全部代碼存取的變數。

00:01:20.630 --> 00:01:22.650
&gt;&gt;沒錯，像任何方法，
增量方法或

00:01:22.650 --> 00:01:23.935
減量方法。

00:01:23.935 --> 00:01:24.730
&gt;&gt;嗯。
&gt;&gt;所以我們建立

00:01:24.730 --> 00:01:26.580
一個像這樣的全域變數，

00:01:26.580 --> 00:01:28.750
它仍是數量變數。

00:01:28.750 --> 00:01:29.855
&gt;&gt;嗯。
&gt;&gt;但現在它是全域的。

00:01:29.855 --> 00:01:33.020
&gt;&gt;嗯。
&gt;&gt;所以方法完成執行後，

00:01:33.020 --> 00:01:34.590
它不會被破壞。

00:01:34.590 --> 00:01:36.960
&gt;&gt;好吧，
讓我們在下一個代碼中使用。

00:01:36.960 --> 00:01:40.540
這個應用程式的問題是，
即使我按下 +按鈕數次，

00:01:40.540 --> 00:01:43.010
咖啡杯數
也不能超過3。

00:01:43.010 --> 00:01:47.880
原因是 +按鈕
觸發增量法。

00:01:47.880 --> 00:01:50.910
在這方法中，我們總是
建立一個新的數量變數，

00:01:50.910 --> 00:01:51.800
並初始化為2。

00:01:51.800 --> 00:01:55.730
所以，當我們更新數量時，
它總是設定為 3。

00:01:55.730 --> 00:01:59.650
這方法對於之前所呼叫的事實
並沒有記憶，

00:01:59.650 --> 00:02:04.050
通過點擊+按鈕，
經已顯示 3 杯咖啡，

00:02:04.050 --> 00:02:06.310
而它不知道現在我要 4 杯。

00:02:06.310 --> 00:02:10.512
在舊代碼中，我們為增量法中的數量
宣告一個區域變數，

00:02:10.512 --> 00:02:14.890
也為減量法中的數量
宣告一個區域變數，

00:02:14.890 --> 00:02:18.760
我們能夠兩次宣告
具有相同名稱的變數是因為

00:02:18.760 --> 00:02:20.690
它們位於
不同的變數可視範圍。

00:02:21.950 --> 00:02:24.920
這是增量方法中所宣告的

00:02:24.920 --> 00:02:26.380
數量變數的範圍。

00:02:26.380 --> 00:02:30.100
在這些範圍內，我們可以提及
數量並更新數量。

00:02:30.100 --> 00:02:31.463
但在這些範圍外，

00:02:31.463 --> 00:02:34.770
其他方法將不知道
這個數量變量。

00:02:34.770 --> 00:02:37.790
你會見到一個未解決的
符號錯誤，

00:02:37.790 --> 00:02:40.170
是因為其他方法未能
知道這個變數。

00:02:41.190 --> 00:02:43.660
同樣地，這是減量法中
所宣告的

00:02:43.660 --> 00:02:47.150
區域數量變數的
變數範圍。

00:02:47.150 --> 00:02:50.770
在這方法中，你能夠顯示
變數及更新變數，

00:02:50.770 --> 00:02:54.690
但是超出此範圍的界限，
就不能引用。

00:02:54.690 --> 00:02:57.170
在包含全域變數的
更新代碼中，

00:02:57.170 --> 00:02:58.790
這就是它的樣子。

00:02:58.790 --> 00:03:01.920
不要在增量法中
宣告數量變數，

00:03:01.920 --> 00:03:05.820
我們已經將它拿出來
放在主要活動的頂部宣告。

00:03:05.820 --> 00:03:09.540
它於主要活動的左大括號
及右大括號內宣告。

00:03:09.540 --> 00:03:14.150
因此，主要活動裡的任何事情
都會知道數量變數。

00:03:14.150 --> 00:03:18.055
這是此全域數量變數
的變數範圍。

00:03:18.055 --> 00:03:20.700
所有方法及
主要活動內的其他變數

00:03:20.700 --> 00:03:24.430
現時可以參照數量，
並且更新它。

00:03:24.430 --> 00:03:28.300
因此，增量法更新
數量變數，並顯示它，

00:03:28.300 --> 00:03:32.330
而減量法也可更新
數量及顯示它，

00:03:32.330 --> 00:03:35.950
而數量總可以重提
這裡的全域變數，

00:03:35.950 --> 00:03:39.860
把它拉出來放進
單一全域變數的好處是

00:03:39.860 --> 00:03:44.130
現在我們能夠從單一的真值來源
知道用戶要多少杯咖啡。

00:03:44.130 --> 00:03:47.100
即使我們多次增加咖啡杯數，

00:03:47.100 --> 00:03:49.280
然後減少咖啡杯數，

00:03:49.280 --> 00:03:52.520
它仍只會使用
最後一個的已知數量值。

00:03:52.520 --> 00:03:55.890
我們有兩個數量變數
是很奇怪的事情，是因為

00:03:55.890 --> 00:04:00.770
這兩個變數未能同步，
而用戶只看到一個數值。

00:04:00.770 --> 00:04:03.990
因此，真值來自單一的來源
是合理的，

00:04:03.990 --> 00:04:07.440
使用一個全域變數來追踪
咖啡的定購數量。

00:04:07.440 --> 00:04:10.910
你可能會問我們為什麼不把
所有一切設定為一個全域變數，

00:04:10.910 --> 00:04:12.780
以便解決所有問題。

00:04:12.780 --> 00:04:17.040
其實你真的不需要一個全域變數，
除非有真正的需要

00:04:17.040 --> 00:04:21.060
使主要活動裡的其他事情
需要引用變數。

00:04:21.060 --> 00:04:24.770
如果在一個方法的範圍內，
只需要使用一個方法，

00:04:24.770 --> 00:04:26.750
你就應該把它保持為
一個區域變數。

00:04:26.750 --> 00:04:28.600
這有點像一個秘密。

00:04:28.600 --> 00:04:31.705
你告訴別人
只需要他了解的事情。

00:04:31.705 --> 00:04:34.475
同樣地，你只需要透露

00:04:34.475 --> 00:04:38.045
其他人必須知道的變數，
使應用程式運作。

00:04:39.275 --> 00:04:41.615
在增量法的主要活動中，

00:04:41.615 --> 00:04:44.879
我要複製這行代碼
以宣告數量變數。

00:04:46.270 --> 00:04:50.320
我只需按 Cmd+X，
或者按 Ctrl+X 以剪下，

00:04:50.320 --> 00:04:54.520
然後在主要活動類別的頂部
將其貼上。

00:04:54.520 --> 00:04:58.610
這將會在主要活動的
左括號的旁邊貼上。

00:04:58.610 --> 00:05:01.880
要注意，它是位於
其他方法的括號外面。

00:05:02.960 --> 00:05:05.310
否則，如果它位於
一個方法的括號裡面，

00:05:05.310 --> 00:05:07.890
它將被視為一個區域變數。

00:05:07.890 --> 00:05:11.580
現在數量是一個主要活動類別裡
的全域變數。

00:05:11.580 --> 00:05:14.122
在下一課，我們將會
進一步了解類別。

00:05:14.122 --> 00:05:18.800
主要活動是一個類別，
包含方法及變數。

00:05:18.800 --> 00:05:23.130
現在，主要活動內的任何方法
都可以引用此數量變數。

00:05:23.130 --> 00:05:27.790
所以這個增量法
會更新數量並顯示它。

00:05:27.790 --> 00:05:31.240
要注意，一個全域變數的
變數名為紫色字體。

00:05:32.350 --> 00:05:35.940
如果它是一個區域變數，
變數名的字體顏色則為黑色。

00:05:35.940 --> 00:05:38.960
所以，你可以看出
全域變數及區域變數

00:05:38.960 --> 00:05:40.330
的區別。

00:05:40.330 --> 00:05:43.580
說到區域變數，我們要
清除減量法中的區域變數，

00:05:43.580 --> 00:05:47.000
因為我們要使用
全域數量變數。

00:05:48.390 --> 00:05:53.120
在這些方法中的變數名
必須跟全域變數名完全匹配。

00:05:53.120 --> 00:05:56.080
如果在這裡我說數量，
就會出現錯誤，

00:05:56.080 --> 00:05:59.530
因為數量未被定義為
區域或全域變數。

00:06:01.030 --> 00:06:02.670
我會把它復原
使它再次運作。

00:06:03.700 --> 00:06:06.150
我嘗試運行應用程式，
看看發生什麼事情。

00:06:06.150 --> 00:06:08.470
應用程式設定數量為 2。

00:06:08.470 --> 00:06:11.800
如果我按 +按鈕，
它真的增加了。

00:06:11.800 --> 00:06:14.470
如果我按 -按鈕，
它真的減少了。

00:06:14.470 --> 00:06:15.540
真的很棒。

00:06:15.540 --> 00:06:18.620
我們成功地建設
數量選擇器。

00:06:18.620 --> 00:06:23.000
現在，我希望你能夠建立它
到你的手機上，這樣可以增加或

00:06:23.000 --> 00:06:26.730
減少數量，
就如你心中所想。

00:06:26.730 --> 00:06:30.960
這裡包含主要活動代碼的連結，
以供你參考。

00:06:30.960 --> 00:06:34.170
我寧願你按照這條影片
自行輸入，

00:06:34.170 --> 00:06:36.520
而不是複製及貼上代碼。

00:06:36.520 --> 00:06:39.470
這樣將來你才能夠
自行創建

00:06:39.470 --> 00:06:39.990
全域變數。

00:06:41.030 --> 00:06:42.290
我在此附上調試器，

00:06:42.290 --> 00:06:45.120
我們可以小心看到
數量變數所發生的事情。

00:06:45.120 --> 00:06:48.705
我要在增量法及減量法
添加斷點，

00:06:48.705 --> 00:06:50.890
然後運行調試器。

00:06:50.890 --> 00:06:54.270
當我按下 +按鈕，

00:06:54.270 --> 00:06:56.720
在這行代碼執行前，

00:06:56.720 --> 00:07:00.340
我們看到全域變數
已經存有數值 2 ，

00:07:00.340 --> 00:07:03.320
是因為這行代碼。

00:07:03.320 --> 00:07:06.910
如果我設置到下一行，
那麼這行已經執行完畢，

00:07:06.910 --> 00:07:09.640
而數量已增加到最多為 3。

00:07:09.640 --> 00:07:12.910
我能夠按下重新開始，
這樣應用程式就會更新數量為 3。

00:07:12.910 --> 00:07:17.360
如果我再次點擊 +按鈕，
然後執行這行代碼，

00:07:17.360 --> 00:07:21.310
我們已經把全域變數的
數值設置為 3。

00:07:21.310 --> 00:07:24.750
這是最後一個已知數量，
而且它仍記得這個數值。

00:07:25.940 --> 00:07:27.770
如果我把數量增加 1，

00:07:27.770 --> 00:07:30.610
那麼全域數量變數
現在變為 4。

00:07:30.610 --> 00:07:32.755
我能夠按下重新開始，
更新屏幕為 4。

00:07:33.850 --> 00:07:37.390
現在，我們可以看到
每次增量方法被呼叫時，

00:07:37.390 --> 00:07:41.990
事實上我們可以繼續
建立現有數量值。

00:07:41.990 --> 00:07:44.840
讓我們來看看它怎樣
跟減量法相互作用。

00:07:44.840 --> 00:07:48.160
如果我按下 -按鈕，
那麼這斷點就會觸發。

00:07:48.160 --> 00:07:50.630
全域數量變數的
數值為 4，

00:07:50.630 --> 00:07:52.970
這是我們上次離開時的數值。

00:07:52.970 --> 00:07:57.950
如果我把數量減少 1
那麼變為 3杯咖啡。

00:07:57.950 --> 00:08:01.720
在屏幕上就會顯示，
數量更改為3。

00:08:01.720 --> 00:08:05.740
隨著一個全域數量變數，
增量法及減量法

00:08:05.740 --> 00:08:07.990
現在可以增加或

00:08:07.990 --> 00:08:12.190
減少咖啡的1 杯數量，
以數量的最新值為基礎。

00:08:13.560 --> 00:08:15.180
現在，輪到你，

00:08:15.180 --> 00:08:18.420
用1 個全域變數
更換 2 個區域變數。

00:08:18.420 --> 00:08:21.560
然後，使用調試器來驗證
數量變數實際上

00:08:21.560 --> 00:08:23.480
是否正如預期那樣更新。

00:08:23.480 --> 00:08:27.420
一旦你的數量選擇器順利運作，
繼續努力，開心跳一下舞。

00:08:27.420 --> 00:08:30.640
然後繼續嘗試
進行一點點實驗。

00:08:30.640 --> 00:08:33.445
如果有一個不同的初始值，如0
這將會發生什麼事情？

00:08:34.480 --> 00:08:37.710
或者嘗試按下 + 按鈕時
每次增加一倍的數量。

00:08:37.710 --> 00:08:41.460
或者嘗試按下 - 按鈕時
每次減少一半的數量。

00:08:41.460 --> 00:08:44.760
隨意試驗
任何你感到好奇的事。

00:08:44.760 --> 00:08:47.850
你有沒有想過，
如果我做這做那，將會發生什麼事？

00:08:47.850 --> 00:08:50.060
這是一些最好的學習時光，

00:08:50.060 --> 00:08:51.120
因為它們往往是意想不到的。

00:08:52.530 --> 00:08:54.650
當你完成時
單擊這些框格以繼續。

