WEBVTT
Kind: captions
Language: zh-CN

00:00:00.410 --> 00:00:02.580
现在你已经修改了第一行 Java 代码

00:00:02.580 --> 00:00:04.660
我们来看看还有什么其它可做的

00:00:04.660 --> 00:00:07.540
事实上我们可以写一些数学表达式

00:00:07.540 --> 00:00:09.690
如果你听到数学就头疼的话

00:00:09.690 --> 00:00:13.570
有个好消息就是 Android 会帮你计算

00:00:13.570 --> 00:00:15.660
你只需想出问题即可

00:00:15.660 --> 00:00:17.580
假设你有两个人

00:00:17.580 --> 00:00:20.470
每个人都想要两杯咖啡

00:00:20.470 --> 00:00:24.130
这个会显示出你要给他们的咖啡总数

00:00:25.310 --> 00:00:28.700
在设备上运行一下这个程序 点击 ORDER 按钮 这里会显示 4

00:00:28.700 --> 00:00:31.820
在这里可以看到我们是如何输入数学表达式的

00:00:31.820 --> 00:00:34.340
它会自动的计算

00:00:34.340 --> 00:00:37.060
我们还能计算更难的表达式

00:00:37.060 --> 00:00:39.260
比如那些我们不想自己亲自计算的问题

00:00:39.260 --> 00:00:42.780
例如 这里有一群 Android 开发者

00:00:42.780 --> 00:00:43.990
他们非常渴

00:00:43.990 --> 00:00:46.160
每人想喝三杯咖啡

00:00:46.160 --> 00:00:48.240
因为他们不是早起的人

00:00:48.240 --> 00:00:51.645
并且我们也想多加几杯

00:00:51.645 --> 00:00:52.985
好多咖啡

00:00:52.985 --> 00:00:55.170
让我们看看事实上一共多少

00:00:55.170 --> 00:00:58.810
点击 ORDER 按钮 显示59

00:00:58.810 --> 00:00:59.310
真有趣

00:01:00.350 --> 00:01:03.020
我猜喝了如此多的咖啡因 开发者者一定能

00:01:03.020 --> 00:01:04.450
写出更好的代码

00:01:04.450 --> 00:01:07.990
一会儿 我会教大家输入自己的数学表达式

00:01:07.990 --> 00:01:10.960
先提醒一下 如果运行出现错误 例如

00:01:10.960 --> 00:01:12.500
如果一不小心输错一个字母

00:01:12.500 --> 00:01:15.690
右手边会出现红色错误提示

00:01:15.690 --> 00:01:18.690
错误说无法解析符号 a 因为

00:01:18.690 --> 00:01:19.810
a 并不是有效的数字

00:01:21.100 --> 00:01:24.450
还有一种可能 如果你不小心多次输入乘号

00:01:24.450 --> 00:01:27.410
这里会出现错误

00:01:27.410 --> 00:01:30.426
这种情况下 最好是点击撤销

00:01:30.426 --> 00:01:33.165
你的代码就能继续工作了

00:01:33.165 --> 00:01:37.685
第一课提到过的 你可以首先尝试读一下错误提示

00:01:37.685 --> 00:01:41.255
有时错误提示并不能准确描述问题

00:01:41.255 --> 00:01:43.075
你也可以和能运行的代码比对

00:01:43.075 --> 00:01:46.595
我们刚才就展示了一个可以运行的数学表达式

00:01:46.595 --> 00:01:49.950
你可以尝试点击撤销 回到上一步

00:01:49.950 --> 00:01:51.240
或者 寻求帮助

00:01:52.280 --> 00:01:56.020
现在轮到你想一个

00:01:56.020 --> 00:01:57.340
计算咖啡杯顺序的复杂问题了

00:01:57.340 --> 00:02:00.810
你可以尝试不同的数学表达式

00:02:00.810 --> 00:02:01.885
这里有个例子

00:02:01.885 --> 00:02:06.300
如你所见 你可以使用不同符号

00:02:06.300 --> 00:02:08.240
加、减、乘、除

00:02:08.240 --> 00:02:10.370
这些都是算术运算符

00:02:11.520 --> 00:02:14.390
如果你需要引用这些运算符 你可以搜索

00:02:14.390 --> 00:02:17.590
arithmetic operators（算术运算符） java

00:02:17.590 --> 00:02:21.440
这页列出了在 java 中所有不同的运算符

00:02:21.440 --> 00:02:23.750
这里是算术运算符

00:02:23.750 --> 00:02:27.300
如果有兴趣的话 也可以学习一下其它运算符

00:02:27.300 --> 00:02:30.580
但是这个测试 只涉及算术运算符

00:02:30.580 --> 00:02:33.500
我们之所以称这个为算术表达式是因为

00:02:33.500 --> 00:02:37.560
它是由一系列符号和数字组成 最终结果是一个值

00:02:37.560 --> 00:02:42.640
这个表达式是根据运算得到的

00:02:42.640 --> 00:02:44.590
运算顺序是之前在数学课上学过的

00:02:44.590 --> 00:02:48.440
先计算括号中的部分 结果是4

00:02:48.440 --> 00:02:51.540
然后再从左到右做乘法和除法

00:02:51.540 --> 00:02:54.330
我不知道实际的结果

00:02:54.330 --> 00:02:55.960
但你可以在你的应用上运行一下

00:02:55.960 --> 00:02:58.910
在习惯了使用各种不同的数学表达式以后

00:02:58.910 --> 00:03:00.360
试着计算一下这个问题

00:03:00.360 --> 00:03:04.050
你需要输出所需咖啡的数量

00:03:04.050 --> 00:03:08.440
一共有77名 Android 开发者 每人喝两杯咖啡

00:03:08.440 --> 00:03:11.380
然后有一个迟到的人也需要一杯咖啡

