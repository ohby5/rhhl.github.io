WEBVTT
Kind: captions
Language: ko

00:00:00.008 --> 00:00:00.980
네, Katherine

00:00:00.980 --> 00:00:01.580
&gt;&gt; 으흠.
&gt;&gt; 그래서

00:00:01.580 --> 00:00:03.620
우리가 앱에서 + 버튼을 누를 때

00:00:03.620 --> 00:00:05.380
커피의 수는 증가합니다.

00:00:05.380 --> 00:00:07.320
&gt;&gt; 네. 2잔에서 3잔으로 늘어났죠.

00:00:07.320 --> 00:00:10.110
그럼 우리가 + 버튼을 다시 누르면
어떤 일이 일어날까요?

00:00:10.110 --> 00:00:11.990
&gt;&gt; 음, 사실은 3에서 변하지 않죠.

00:00:11.990 --> 00:00:12.590
네.

00:00:12.590 --> 00:00:15.700
우리가 얼마나 열심히
+ 버튼을 눌렀던 간에,

00:00:15.700 --> 00:00:18.090
커피의 수는 3에 머물러 있어요.

00:00:18.090 --> 00:00:19.930
&gt;&gt; 맞아요.
&gt;&gt; 왜 그런가요?

00:00:19.930 --> 00:00:23.870
&gt;&gt; 음, 제 생각에 이건 우리가
코드를 3으로만 갱신해서 그래요.

00:00:23.870 --> 00:00:25.200
절대 3을 넘어설 수 없죠.

00:00:25.200 --> 00:00:27.720
&gt;&gt; 맞아요. 그 숫자는 
변경이 어렵게 되어 있어요.

00:00:27.720 --> 00:00:29.100
&gt;&gt; 네.
&gt;&gt; 이게 우리에게 뭘 떠오르게 하죠?

00:00:29.100 --> 00:00:30.040
&gt;&gt; 그게 뭔데요?

00:00:30.040 --> 00:00:32.840
&gt;&gt; 음, [웃음] 저희 대학의
컴퓨터 과학 교수님의 말씀인데요.

00:00:32.840 --> 00:00:33.960
&gt;&gt; 네.

00:00:34.410 --> 00:00:36.230
최종 프로젝트를 제출할 때에는

00:00:36.230 --> 00:00:37.100
&gt;&gt; 그래서요?

00:00:37.100 --> 00:00:39.100
&gt;&gt; 마법수는 안 된다고 하셨어요.

00:00:39.100 --> 00:00:40.260
&gt;&gt; 잠깐, 마법수가 뭐죠?

00:00:40.260 --> 00:00:41.730
&gt;&gt; 3이 일종의 마법 수에요.

00:00:41.730 --> 00:00:43.930
&gt;&gt; 아.
&gt;&gt; 우리가 머릿속으로 덧셈을 하고

00:00:43.930 --> 00:00:46.475
컴퓨터에게 그걸
옳은 숫자라고 말하기 때문에

00:00:46.475 --> 00:00:48.115
&gt;&gt; 이걸 마법수라고 해요.

00:00:48.115 --> 00:00:52.535
&gt;&gt; 네, 그러면 컴퓨터가 직접
계산하도록 하는 게 낫겠는데요.

00:00:52.535 --> 00:00:53.105
&gt;&gt; 잠깐만요.

00:00:53.105 --> 00:00:55.025
수학에서 계산을 말할 땐

00:00:55.025 --> 00:00:56.515
&gt;&gt; 으-흠.
&gt;&gt; 저는 뭔가를 써야 해요.

00:00:56.515 --> 00:00:57.565
&gt;&gt; 그래요.

00:00:57.565 --> 00:00:59.185
유사 부호를 써 봅시다.

00:00:59.555 --> 00:01:01.895
이것의 유사 코드를 써 봅시다.

00:01:01.895 --> 00:01:04.595
우리가 이미 수량 변수를 만들었고
그걸 2로 설정했다고 가정하죠,

00:01:04.595 --> 00:01:07.575
앱에서 + 버튼이 눌리면

00:01:07.575 --> 00:01:10.450
우리는 현재 수량 값인 2에
1이 더해져서

00:01:10.450 --> 00:01:12.320
&gt;&gt; 3이 될 거라고 생각한 다음,

00:01:12.320 --> 00:01:16.220
새로운 값을 수량변수에 저장합니다.

00:01:16.220 --> 00:01:20.550
만약 우리가 + 버튼을 다시 누르면
우리는 수량 변수가 이제

00:01:20.550 --> 00:01:23.840
3에서 1을 더한
4가 될 거라고 생각하고

00:01:23.840 --> 00:01:26.700
새 값을 변수에 저장합니다.

00:01:26.700 --> 00:01:30.200
그리고 이것이 실제 Java 코드죠.

00:01:30.200 --> 00:01:32.310
이 번수를 우선 초기화합니다.

00:01:32.310 --> 00:01:33.980
+ 버튼이 다시 눌러지면

00:01:33.980 --> 00:01:37.070
존재하는 수량 값에 1을 더하고

00:01:37.070 --> 00:01:40.420
수량 변수에 새 값을 저장합니다.

00:01:41.670 --> 00:01:45.160
여러분은 이 코드들을 읽을 때,
머릿속 박스를 상상할 수 있을 겁니다.

00:01:45.160 --> 00:01:47.850
비록 우리가 좌에서 우로
읽어나가는 데 익숙하긴 하지만

00:01:47.850 --> 00:01:51.300
저는 언제나 =의 우변에 무엇이 올지
우선적으로 생각합니다.

00:01:51.970 --> 00:01:54.900
이 경우에 우리는
현재 수량의 값 2를 가졌네요.

00:01:54.900 --> 00:01:57.850
그리고 우리가 하나를 더하면 3이 돼죠.

00:01:57.850 --> 00:02:02.090
그리고 이렇게 3을 변수로 저장합니다.

00:02:02.090 --> 00:02:05.590
우리가 이전에 배운 것처럼,
우변은 하나의 식입니다.

00:02:05.590 --> 00:02:08.850
그리고 식은 변수, 연산자,

00:02:08.850 --> 00:02:10.630
문자값 등이 될 수 있습니다.

00:02:10.630 --> 00:02:15.200
만약 우리가 다시 + 버튼을 누르면
수량=수량+1이라고 할 수 있죠.

00:02:15.200 --> 00:02:17.660
이 지점에서 현재 수량 값은 3입니다.

00:02:17.660 --> 00:02:20.680
그리고 우리가 1을 더하면
이는 4가 됩니다.

00:02:20.680 --> 00:02:24.340
그리고 4를 이렇게
수량의 새 변수로 저장합니다.

00:02:25.210 --> 00:02:27.660
본래 우리는 이걸 일반적인 패턴에
이르기까지 줄여 왔는데,

00:02:27.660 --> 00:02:31.290
+ 버튼을 누르면 컴퓨터는 매번
이를 반복합니다.

00:02:31.290 --> 00:02:37.560
커피 수의 참값에 대한 코드 줄을
새로 쓰는 것 대신,

00:02:37.560 --> 00:02:40.010
우리는 간단히 수량 = 소량 + 1
이라고 작성할 수 있고,

00:02:40.010 --> 00:02:44.200
계속해서 수량의 현재값에
쌓아갈 수 있습니다.

00:02:44.200 --> 00:02:46.060
훨씬 융통성 있죠.

00:02:46.060 --> 00:02:48.615
당신이 초기 수량을 3으로
변경하고 싶다고 가정합시다.

00:02:48.615 --> 00:02:51.595
나머지 코드를 모두 수정할 필요는
전혀 없습니다.

00:02:51.595 --> 00:02:55.675
우리가 언제나 수량의 가장 최근값을
그게 무엇이든 사용할 것이니까요,

00:02:55.675 --> 00:02:59.535
우리의 이전 접근법에서는 수량을
3으로 갱신해야 한다면

00:02:59.535 --> 00:03:04.725
+ 버튼을 누른 후, 여러분은
수량이 4나 5로 갱신된다고

00:03:04.725 --> 00:03:07.360
새로운 코드 줄을 써야 했겠죠.

00:03:07.360 --> 00:03:10.960
우리가 수량을 완전히 새로운
문자값으로 갱신할 때마다

00:03:10.960 --> 00:03:14.440
컴퓨터가 그 사이의 어떠한 패턴을
찾아내는 건 어렵습니다.

00:03:14.870 --> 00:03:18.530
그 대신 우리가 현재 값이나
변수에 기반해 수량을 갱신한다면

00:03:18.530 --> 00:03:21.750
우리는 값을 예측 가능한 방법으로
더할 것이고, 컴퓨터는 이것을

00:03:21.750 --> 00:03:25.090
매번 + 버튼이 눌러질 때마다
수행할 수 있을 것입니다.

00:03:25.090 --> 00:03:28.529
이러한 접근법이 우리 커피 주문 앱에서
훨씬 나을 것입니다.

00:03:28.930 --> 00:03:30.440
+ 버튼을 누를 때마다

00:03:30.440 --> 00:03:33.590
우리는 현재 수량 값을
1씩 더할 수 있습니다.

00:03:33.590 --> 00:03:36.220
이 코드 줄들을 우리가 제공한

00:03:36.220 --> 00:03:38.860
이 박스에 써나가면서 연습해 보세요.

00:03:38.860 --> 00:03:41.550
글자 하나하나와 기호를
주의깊게 살펴보세요.

00:03:42.120 --> 00:03:45.900
여러분은 이번에 변수가 그 자체를
사용해 갱신하는 것을 처음 배웠으니

00:03:45.900 --> 00:03:48.850
이 변수의 이름을 정확하게
입력했는지 잘 확인하세요.

00:03:48.850 --> 00:03:52.190
다 입력하고 나면, 이 세로 줄을
각 코드 줄이 수행되었을 때를

00:03:52.201 --> 00:03:55.471
나타내는 값으로 채우세요.

