WEBVTT
Kind: captions
Language: vi

00:00:00.008 --> 00:00:00.980
Được rồi Katherine.

00:00:00.980 --> 00:00:01.580
&gt;&gt; Mm-hm.
&gt;&gt; Vậy

00:00:01.580 --> 00:00:03.620
khi chúng ta nhấn nút cộng trong ứng dụng đó.

00:00:03.620 --> 00:00:05.380
Số cốc cà phê sẽ tăng lên.

00:00:05.380 --> 00:00:07.320
&gt;&gt; Vâng số cốc cà phê sẽ tăng 
từ hai lên ba cốc.

00:00:07.320 --> 00:00:10.110
Và điều gì sẽ xảy ra khi chúng ta 
nhấn nút cộng một lần nữa?

00:00:10.110 --> 00:00:11.990
&gt;&gt; À số cốc cà phê vẫn giữ nguyên là ba cốc.

00:00:11.990 --> 00:00:12.590
Vâng.

00:00:12.590 --> 00:00:15.700
Như vậy bất kể chúng ta nhấn nút cộng 
bao nhiêu lần trong ứng dụng đó,

00:00:15.700 --> 00:00:18.360
số cốc cà phê vẫn giữ nguyên là ba cốc.

00:00:18.360 --> 00:00:19.930
&gt;&gt; Vâng.
&gt;&gt; Tại sao điều đó lại xảy ra?

00:00:19.930 --> 00:00:23.870
&gt;&gt; À, tôi nghĩa đó là bởi vì, trong mã lệnh của chúng ta, 
chúng ta chỉ cập nhật số cốc cà phê là ba cốc.

00:00:23.870 --> 00:00:25.200
Và chúng ta chưa bao giờ vượt qua số lượng đó.

00:00:25.200 --> 00:00:27.720
&gt;&gt; Đúng vậy.
Con số đó rất khó mã lệnh hóa ở đó.

00:00:27.720 --> 00:00:29.100
&gt;&gt; Vâng.
&gt;&gt; Bạn có biết điều này nhắc tôi nhớ đến cái gì không?

00:00:29.100 --> 00:00:30.040
&gt;&gt;Cái gì vậy?

00:00:30.040 --> 00:00:32.840
&gt;&gt; À, [LAUGH] (CƯỜI) giáo sư dạy khoa học máy tính 
của tôi ở trường đại học thường nói.

00:00:32.840 --> 00:00:33.340
&gt;&gt; Nói gì vậy?

00:00:34.410 --> 00:00:36.230
Khi bạn nộp bản đồ án cuối cùng của mình.

00:00:36.230 --> 00:00:37.100
&gt;&gt; Vâng sao?

00:00:37.100 --> 00:00:39.100
&gt;&gt; Đừng sử dụng những con số ảo.

00:00:39.100 --> 00:00:40.260
&gt;&gt; Khoan đã, con số ảo là sao?

00:00:40.260 --> 00:00:41.730
&gt;&gt; À, có ba loại số ảo.

00:00:41.730 --> 00:00:43.930
&gt;&gt; Vâng.
&gt;&gt; Đó là số ảo bởi vì,

00:00:43.930 --> 00:00:46.475
chúng ta thực hiện phép cộng trong đầu của chúng ta 
nhưng sau đó chúng ta lại ghi kết quả vào máy tính.

00:00:46.475 --> 00:00:48.115
&gt;&gt; Chúng ta nói đó là câu trả lời đúng.

00:00:48.115 --> 00:00:52.535
&gt;&gt; Ồ, vâng, sẽ tốt hơn nếu đúng là máy tính 
đã thực hiện phép tính đó.

00:00:52.535 --> 00:00:53.105
&gt;&gt; Đợi đã.

00:00:53.105 --> 00:00:55.025
Khi bạn nói về tính toán trong toán học.

00:00:55.025 --> 00:00:56.515
&gt;&gt; Ừ.
&gt;&gt; Tôi cần phải ghi chép các phép tính.

00:00:56.515 --> 00:00:57.565
&gt;&gt; Được.

00:00:57.565 --> 00:00:58.515
Hãy viết một số giả mã lệnh.

00:00:59.555 --> 00:01:01.895
Chúng ta hãy viết mã lệnh giả cho điều này.

00:01:01.895 --> 00:01:04.595
Giả sử rằng chúng ta đã tạo được biến số lượng và 
thiết lập giá trị của bó bằng hai.

00:01:04.595 --> 00:01:07.575
Khi nhấn nút cộng trong ứng dụng,

00:01:07.575 --> 00:01:10.450
tức là chúng ta đã tính giá trị hiện tại của số lượng là hai.

00:01:10.450 --> 00:01:12.480
&gt;&gt; Cộng với một để giá trị này trở thành ba, và

00:01:12.480 --> 00:01:16.550
sau đó giữ giá trị này là giá trị mới của biến số lượng.

00:01:16.550 --> 00:01:19.510
Nếu chúng ta nhấn nút cộng thêm một lần nữa 
thì tức là chúng ta lấy giá trị hiện tại của

00:01:19.510 --> 00:01:23.840
số lượng là ba, và cộng với một để giá trị này trở thành bốn.

00:01:23.840 --> 00:01:26.700
Và sau đó giữ giá trị này là giá trị mới của biến số lượng,

00:01:26.700 --> 00:01:30.200
Và đây là mã lệnh Java thực tế của biến này.

00:01:30.200 --> 00:01:32.310
Trước tiên chúng ta khởi tạo một biến số.

00:01:32.310 --> 00:01:33.980
Nếu nhấn nút cộng thêm một lần nữa,

00:01:33.980 --> 00:01:36.890
thì tức là chúng ta lấy giá trị số lượng hiện tại cộng với một,

00:01:36.890 --> 00:01:39.990
và sau đó giữ giá trị này là giá trị mới của biến số lượng.

00:01:41.670 --> 00:01:45.160
Khi bạn đọc những dòng mã lệnh này, 
bạn có thể tưởng tượng các hộp trong đầu mình.

00:01:45.160 --> 00:01:47.850
Mặc dù chúng ta thường đọc theo thứ tự từ trái sang phải,

00:01:47.850 --> 00:01:50.960
Tôi lại luôn luôn bắt đầu với phần 
bên tay phải của dấu bằng trước.

00:01:51.970 --> 00:01:54.240
Trong trường hợp này, chúng ta đã có 
giá trị hiện tại của số lượng.

00:01:54.240 --> 00:01:58.100
Mà đang bằng hai, và sau đó chúng ta cộng thêm 
với một, giá trị đó trở thành ba.

00:01:58.100 --> 00:02:02.090
Sau đó chúng ta giữ giá trị ba này 
trong biến số, giống như thế này.

00:02:02.090 --> 00:02:05.590
Phần bên tay phải là một biểu thức mà
chúng ta đã được học trước đó.

00:02:05.590 --> 00:02:08.850
Và chúng ta có thể thêm vào 
biểu thức các biến số, toán tử và

00:02:08.850 --> 00:02:10.630
giá trị bằng chữ và nhiều hơn nữa.

00:02:10.630 --> 00:02:15.200
Nếu chúng ta nhấn nút cộng một lần nữa, 
thì chúng ta có thể nói số lượng = số lượng + 1.

00:02:15.200 --> 00:02:17.660
Tại thời điểm này giá trị hiện tại 
của số lượng là ba,

00:02:17.660 --> 00:02:20.680
sau đó chúng ta cộng thêm với một, và giá trị này trở thành bốn.

00:02:20.680 --> 00:02:23.970
Sau đó chúng ta giữ bốn là giá trị mới trong biến số lượng như thế này.

00:02:25.320 --> 00:02:27.660
Về cơ bản, chúng ta đã đã giảm biểu thức này thành một mô hình phổ biến,

00:02:27.660 --> 00:02:31.290
mà máy tính có thể lặp lại mỗi lần chúng ta nhấn dấu cộng.

00:02:31.290 --> 00:02:35.940
Thay vì phải viết một dòng mã mới
mà giá trị rõ ràng của nó là

00:02:35.940 --> 00:02:40.010
số cốc cà phê, chúng ta có thể chỉ tính bằng số lượng = số lượng + 1,

00:02:40.010 --> 00:02:44.200
và tiếp tục xây dựng giá trị hiện tại của số lượng.

00:02:44.200 --> 00:02:46.060
Điều này linh hoạt hơn rất nhiều.

00:02:46.060 --> 00:02:48.395
Nếu nói Bạn muốn thay đổi số lượng ban đầu bằng 3,

00:02:48.395 --> 00:02:51.595
Thì phần còn lại của các dòng mã lệnh sẽ không thay đổi gì.

00:02:51.595 --> 00:02:55.675
Bởi vì chúng ta luôn có thể sử dụng giá trị mới nhất của số lượng bất kể giá trị đó bằng bao nhiêu đi nữa,

00:02:55.675 --> 00:02:59.535
mà, trong cách tiếp cận trước đây của chúng ta, nếu chúng ta muốn cập nhận giá trị số lượng thành 3,

00:02:59.535 --> 00:03:02.985
thì sau khi bạn nhấn nút cộng, bạn có thể viết một dòng mã lệnh mới

00:03:02.985 --> 00:03:07.360
nói rằng số lượng bằng 4 và cập nhật mã lệnh này để số lượng bằng 5.

00:03:07.360 --> 00:03:10.960
Mỗi lần khi chúng ta cập nhật số lượng thành một giá trị bằng chữ mới hoàn toàn,

00:03:10.960 --> 00:03:13.870
Máy tính khó có thể nhận biết được mô hình giữa chúng.

00:03:14.870 --> 00:03:18.680
Thay vào đó chúng ta có thể cập nhật số lượng dựa trên giá trị hiện tại của biến số đó và

00:03:18.680 --> 00:03:21.750
chúng ta tăng dần giá trị theo cách chúng ta dự đoán được, sau đó máy tính cũng có thể nhận biết được

00:03:21.750 --> 00:03:25.090
mỗi lần nút cộng được nhấn.

00:03:25.090 --> 00:03:27.929
Cách tiếp cận này sẽ hiệu quả hơn rất nhiều cho ứng dụng đặt hàng cà phê của chúng ta.

00:03:28.930 --> 00:03:30.440
Mỗi lần chúng ta nhấn nút cộng,

00:03:30.440 --> 00:03:33.590
chúng ta chỉ có thể tăng giá trị số lượng hiện tại lên 1.

00:03:33.590 --> 00:03:37.330
Hãy thực hành viết từng dòng mã lệnh lệnh bằng cách gõ chúng vào các hộp mà chúng tôi

00:03:37.330 --> 00:03:38.860
tạo sẵn ở đây.

00:03:38.860 --> 00:03:41.060
Hãy chú ý đến từng ký tự và biểu tượng một.

00:03:42.120 --> 00:03:45.900
Đây là lần đầu tiên bạn cập nhật một biến số 
bằng cách sử dụng chính biến số đó, vì vậy

00:03:45.900 --> 00:03:48.850
hãy đảm bảo rằng bạn gõ tên biến chính xác.

00:03:48.850 --> 00:03:52.190
Khi bạn hoàn thành, hãy điền cột này với giá trị số lượng hiện tại

00:03:52.190 --> 00:03:54.720
sau khi thực hiện mỗi dòng mã lệnh lệnh.

