WEBVTT
Kind: captions
Language: ja

00:00:00.430 --> 00:00:03.390
このコードは変数を作ることができます

00:00:03.390 --> 00:00:06.510
変数とはこの‟コーヒーの数”という箱だと思ってください

00:00:06.510 --> 00:00:08.290
中に２という値があります

00:00:08.290 --> 00:00:10.700
このレッスンではコードのパーツについて解説し―

00:00:10.700 --> 00:00:13.500
もっと変数を増やしていきましょう

00:00:13.500 --> 00:00:17.040
変数を宣言するための決まったルールがあることがわかりました

00:00:18.160 --> 00:00:23.800
変数の宣言とは変数の”意味づけ”や‟作成”と同じことです

00:00:23.970 --> 00:00:26.560
このコードは見ましたね

00:00:26.560 --> 00:00:30.420
javaで変数を宣言するための決まった型に従っています

00:00:30.420 --> 00:00:32.490
数式のようにも考えられます

00:00:32.490 --> 00:00:35.840
まず変数に入るデータのタイプ

00:00:35.840 --> 00:00:39.350
ここではinteger（整数）を省略してintです

00:00:39.350 --> 00:00:41.400
次は変数の名前

00:00:41.400 --> 00:00:44.570
今回はnumberOfCoffeesです

00:00:44.570 --> 00:00:46.830
最後に初期値が来ます

00:00:46.830 --> 00:00:50.310
今回は初期値は２
コーヒーを２杯注文します

00:00:50.310 --> 00:00:54.250
Javaのルールに従ってコードは ; で閉じます

00:00:54.250 --> 00:00:56.860
１つずつ見ていきましょう

00:00:56.860 --> 00:00:58.580
最初はデータタイプでした

00:00:58.580 --> 00:01:02.070
変数の中に入るデータタイプを指定しています

00:01:02.070 --> 00:01:06.380
この場合は整数だけが変数の中に入れます

00:01:06.450 --> 00:01:09.690
intはinteger（整数）の省略です

00:01:09.690 --> 00:01:11.440
つまり整数です

00:01:11.440 --> 00:01:16.835
整数とは０と負の数を含んだ
分数や少数ではない数字です

00:01:16.845 --> 00:01:21.450
０ ５ 145　これらの数字は整数です

00:01:21.450 --> 00:01:24.750
コーヒーの注文数は整数しかできません

00:01:24.750 --> 00:01:26.320
１杯 ２杯 ４杯 など

00:01:26.320 --> 00:01:29.890
1.5カップの注文は受け付けません

00:01:29.890 --> 00:01:32.470
１杯以上ほしければ２杯買ってもらい

00:01:32.470 --> 00:01:35.020
残りは友達に分けてもらいましょう

00:01:35.020 --> 00:01:38.450
負の数字は 今回は当てはまりません

00:01:38.450 --> 00:01:42.160
Javaでは正の数だけを使えるデータタイプはありません

00:01:42.160 --> 00:01:48.600
次のレッスンで負の数字が変数に
入らないようにするコードの書き方を学びます

00:01:48.690 --> 00:01:52.250
宣言の次のパートは変数の名前です

00:01:52.250 --> 00:01:54.570
今回はnumberOfCoffeesです

00:01:54.570 --> 00:01:56.890
キャメルケースで書かれています

00:01:56.890 --> 00:02:02.940
最初は小文字で始まりますが複数語であるため
続く単語の頭が大文字になります

00:02:03.020 --> 00:02:06.450
変数にネームタグを付けると考えましょう

00:02:06.450 --> 00:02:09.160
変数の呼び名を決めるということです

00:02:09.160 --> 00:02:11.490
このように絵にしてみました

00:02:11.490 --> 00:02:13.960
この変数箱に名前がついています

00:02:13.960 --> 00:02:18.670
この値を参照したり変更するとき
この名前を使うことになります

00:02:18.690 --> 00:02:25.020
変数の使い道によってあなたの好みで
適切な名前を決めましょう

00:02:25.050 --> 00:02:28.420
今回の変数はコーヒーの注文数を保存しておくものなので

00:02:28.420 --> 00:02:30.310
この名前にしました

00:02:30.310 --> 00:02:37.240
コーヒー数とかコーヒーの注文数
注文されたコーヒーの数などでもかまいません

00:02:37.250 --> 00:02:43.570
変数の意味が他の人にも分かりやすいように
名前を決めましょう

00:02:43.680 --> 00:02:45.960
何でもいいとは言っても

00:02:45.960 --> 00:02:49.570
実はJavaには変数名のルールがいつかあります

00:02:49.570 --> 00:02:51.430
ルールをみてみましょう

00:02:52.100 --> 00:02:54.560
変数名　Javaと検索します

00:02:54.560 --> 00:02:55.680
このリンクでいいでしょう

00:02:57.090 --> 00:03:00.070
Oracleが提供するJaveの公式ドキュメントです

00:03:00.070 --> 00:03:02.130
ここで変数について説明しています

00:03:02.130 --> 00:03:03.990
時間がある時に読んでください

00:03:04.910 --> 00:03:06.870
ここが読みたい箇所です

00:03:06.870 --> 00:03:09.110
変数のネーミングについてです

00:03:09.110 --> 00:03:13.770
‟どんな長さでもよい”
でも長すぎるのは実用的ではありません

00:03:13.770 --> 00:03:16.810
反対に短すぎる名前もいいですが

00:03:16.810 --> 00:03:21.550
例えば‟N”だけだと何だかわかりません

00:03:21.550 --> 00:03:26.790
意味があり 毎回書くのに疲れないような
ちょうどいいバランスが必要です

00:03:27.440 --> 00:03:30.770
詳細が書かれていますので
読みたければ読んでください

00:03:30.770 --> 00:03:37.190
大事なのは‟一単語だけの名前の場合
すべて小文字で書くこと”です

00:03:37.360 --> 00:03:40.470
cadence speed gearなど

00:03:40.470 --> 00:03:43.330
‟複数語の名前の場合は―

00:03:43.330 --> 00:03:48.470
各単語の頭を大文字にするが
最初の単語の頭は小文字にすること”

00:03:48.500 --> 00:03:51.380
例えばgearRatioやcurrentGearとなります

00:03:51.710 --> 00:03:54.580
私たちのコーヒー数もこのルールに従っています

00:03:55.630 --> 00:03:59.560
さて宣言の次のパートは代入演算子つまり＝です

00:04:00.880 --> 00:04:04.440
算数の授業では１＋１＝２となりますが

00:04:04.440 --> 00:04:07.070
Javaで＝は別の意味になります

00:04:07.070 --> 00:04:10.270
＝は値を変数に割り当てるという意味です

00:04:10.270 --> 00:04:14.628
つまり２という値を変数numberOfCoffeesに当てます

00:04:14.628 --> 00:04:16.029
箱の例えを使うと

00:04:16.029 --> 00:04:20.550
コーヒーの数を表す変数の箱に２という数字を入れたのです

00:04:20.550 --> 00:04:22.250
＝の記号を見たら

00:04:22.250 --> 00:04:24.950
記号の右にあるものを掴んで

00:04:24.950 --> 00:04:28.570
左にある変数に入れると考えてください

00:04:28.570 --> 00:04:30.540
すでに話しましたが

00:04:30.540 --> 00:04:33.790
２という値は変数の初期値です

00:04:33.790 --> 00:04:36.530
２を変数に入れます

00:04:36.530 --> 00:04:42.250
この初期値はデータタイプに合った
タイプであることを忘れないでください

00:04:42.270 --> 00:04:44.800
今回は整数だけが変数に入れます

00:04:45.610 --> 00:04:49.190
２は整数ですので この変数に入れます

00:04:50.500 --> 00:04:53.720
そして最後に；を忘れないように

00:04:54.790 --> 00:04:56.620
おさらいします　変数を宣言するとき

00:04:56.620 --> 00:05:00.090
データタイプを特定し変数を書きます

00:05:00.090 --> 00:05:04.440
そして＝の後に初期値；を書きます

00:05:05.510 --> 00:05:08.570
今回はnumberOfCoffeesという変数を作ります

00:05:08.570 --> 00:05:12.770
データタイプはint
つまり整数だけが変数になります

00:05:12.770 --> 00:05:17.110
２という初期値をこの変数に当てます

00:05:17.110 --> 00:05:19.910
説明したルールに従って変数名を変えることができます

00:05:19.910 --> 00:05:24.070
同じデータタイプなら初期値も変更できます

00:05:24.070 --> 00:05:27.550
データタイプは変えられません　intと書きます

00:05:27.550 --> 00:05:30.240
他のデータタイプも学んでいきますが

00:05:30.240 --> 00:05:32.410
決まった方法で書かれなければいけません

00:05:33.530 --> 00:05:36.900
変数を使いたいときは名前を書くだけで

00:05:36.900 --> 00:05:41.210
アプリが起動しているときは
実際の値と置換してくれます

00:05:42.350 --> 00:05:45.130
それでは自身のアプリに
これらのコードを書いてみてください

00:05:45.130 --> 00:05:47.080
でもコピー＆ペーストはしないでください

00:05:47.080 --> 00:05:51.310
実際に入力を練習して変数を作ってみてほしいからです

00:05:51.310 --> 00:05:52.800
携帯でアプリを起動させてみましょう

00:05:52.800 --> 00:05:55.390
order（注文）ボタンを押したら
同じようになるように

00:05:56.760 --> 00:05:59.770
それが終わったら少し実験をしてみてください

00:05:59.770 --> 00:06:01.940
新しい初期値を変数に当ててみてください

00:06:03.160 --> 00:06:06.070
そして新しい変数名も付けてみてください

00:06:06.070 --> 00:06:07.420
numberOfCoffeesの代わりに

00:06:07.420 --> 00:06:09.930
例えば量（quantity）のように

00:06:11.290 --> 00:06:14.630
初心者だと正しく入力したと思っても間違っていることがあります

00:06:14.630 --> 00:06:17.650
ざっと全体を見てしまうからです

00:06:17.650 --> 00:06:20.140
それぞれの文字を注意深く見ると

00:06:20.140 --> 00:06:21.950
問題を見つけることができます

00:06:23.020 --> 00:06:25.810
時間がかかるかもしれませんが

00:06:25.810 --> 00:06:29.050
入力した文字をよく見てみましょう

00:06:29.050 --> 00:06:32.650
問題が発生したらエラーメッセージを読んでください

00:06:32.650 --> 00:06:38.160
例えばこれは‟numberOCoffeesは解読できません”とあります

00:06:38.160 --> 00:06:41.160
Javaが解読できなかった原因は

00:06:41.160 --> 00:06:44.950
変数名前の中の Ofのｆが抜けていたからですね

00:06:44.950 --> 00:06:48.370
自分で解決できなければ‟やり直し”を押してみると

00:06:48.370 --> 00:06:49.900
エラーが解決することもあります

00:06:51.080 --> 00:06:54.370
私が提供したコードのように正しいコードに戻ってもいいでしょう

00:06:55.386 --> 00:06:58.267
終わったらボックスにチェックを入れて続けてください

