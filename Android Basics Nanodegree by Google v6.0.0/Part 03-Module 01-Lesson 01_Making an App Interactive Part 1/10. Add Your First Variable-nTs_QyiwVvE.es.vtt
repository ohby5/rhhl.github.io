WEBVTT
Kind: captions
Language: es

00:00:00.430 --> 00:00:03.010
Esta línea de código
es responsable de crear una variable.

00:00:03.390 --> 00:00:06.420
Recuerda que una variable
es como esta caja, número de cafés

00:00:06.510 --> 00:00:07.770
con el valor dos dentro.

00:00:08.290 --> 00:00:10.480
Hablaremos de cada parte
de esta línea de código

00:00:10.700 --> 00:00:12.820
y crearemos más variables en esta lección.

00:00:13.460 --> 00:00:14.460
Puede que hayas visto

00:00:14.630 --> 00:00:17.170
que hay reglas específicas
para declarar una variable.

00:00:18.160 --> 00:00:19.480
Cuando digo declarar una variable

00:00:19.540 --> 00:00:23.100
significa lo mismo
que definir o crear una variable.

00:00:23.940 --> 00:00:26.100
Esta el la línea de código
que hemos visto hasta ahora.

00:00:26.530 --> 00:00:29.910
Sigue un formato muy específico
de cómo crear variables en Java.

00:00:30.380 --> 00:00:32.159
Puedes verlo casi como una fórmula.

00:00:32.490 --> 00:00:35.450
Primero hay que decir qué tipos de datos
pueden ir dentro de una variable.

00:00:35.780 --> 00:00:39.060
En este caso es un <i>integer</i> [entero]
al que llamamos <i>int</i> para abreviar.

00:00:39.260 --> 00:00:40.900
Lo siguiente es el nombre de la variable..

00:00:41.330 --> 00:00:43.860
En este caso,
el nombre es <i>numberOfCoffees</i>

00:00:44.280 --> 00:00:46.320
seguido del valor inicial.

00:00:46.800 --> 00:00:49.450
En este caso es 2
para dos tazas de café pedidas.

00:00:50.180 --> 00:00:52.230
Esta declaración de código
acaba con un punto y coma

00:00:52.300 --> 00:00:53.640
siguiendo las reglas de Java.

00:00:54.250 --> 00:00:56.320
Veamos esta línea por partes.

00:00:56.790 --> 00:00:58.300
La primera palabra es el tipo de datos.

00:00:58.580 --> 00:01:01.710
Es el tipo de datos
que puede ir dentro de esta variable.

00:01:02.070 --> 00:01:04.180
En este caso,
solo dejamos a los números enteros

00:01:04.280 --> 00:01:05.930
entrar en la variable.

00:01:06.400 --> 00:01:09.240
Como ya he dicho,
<i>int</i> es la abreviatura de <i>integer</i>.

00:01:09.650 --> 00:01:11.070
Un <i>integer</i> es un número entero.

00:01:11.440 --> 00:01:14.340
Básicamente cualquier número,
incluídos el cero y los números negativos

00:01:14.710 --> 00:01:16.280
que no sean ni fracciones ni decimales.

00:01:16.840 --> 00:01:20.600
0, 5, 145,
todos estos son ejemplos de enteros.

00:01:21.450 --> 00:01:24.030
El número de cafés pedidos
debería ser solo un número entero

00:01:24.120 --> 00:01:26.230
como, por ejemplo, uno, dos, cuatro, etc.

00:01:26.320 --> 00:01:29.600
No queremos
que el cliente pida 1,5 tazas de café.

00:01:29.770 --> 00:01:32.170
Si quieren más que una taza de café,
tendrán que comprar dos.

00:01:32.370 --> 00:01:34.620
Le pueden da la mitad que sobra
a un amigo, o lo que sea.

00:01:34.970 --> 00:01:38.100
En cuanto a los números negativos,
no tienen mucho sentido en este caso.

00:01:38.450 --> 00:01:41.550
No hay ningún tipo de datos en Java
que permita solo números positivos.

00:01:42.160 --> 00:01:43.510
Más adelante, en la próxima lección

00:01:43.720 --> 00:01:45.020
aprenderemos a añadir un código

00:01:45.100 --> 00:01:48.240
que evite que los números negativos
entren en la variable.

00:01:48.690 --> 00:01:51.490
La siguiente parte de la declaración
es el nombre de la variable.

00:01:52.250 --> 00:01:54.100
En este caso es <i>numberOfCoffees</i>.

00:01:54.570 --> 00:01:56.500
Fíjate que está escrito en <i>camel case</i>.

00:01:56.890 --> 00:01:59.930
Empieza con una minúscula,
pero en cuanto hay más palabras

00:02:00.230 --> 00:02:02.400
la primera letra de cada palabra
va en mayúsculas.

00:02:03.240 --> 00:02:05.960
Imagínate que pones
una tarjeta de nombre en la variable.

00:02:06.450 --> 00:02:08.509
Puedes referenciar
esta variable con este nombre.

00:02:09.160 --> 00:02:10.940
Aquí también la he dibujado así.

00:02:11.490 --> 00:02:13.240
Esta caja de variable tiene este nombre.

00:02:13.920 --> 00:02:16.650
Si quieres saber
qué valor es este o cambiarlo

00:02:16.890 --> 00:02:18.130
tienes que usar el nombre.

00:02:18.690 --> 00:02:22.200
Escoger el nombre de variable apropiado
depende de ti, el desarrollador

00:02:22.340 --> 00:02:24.200
dependiendo de para qué uses la variable.

00:02:25.050 --> 00:02:28.180
En este caso,
como almacena el número de cafés pedidos,

00:02:28.320 --> 00:02:29.930
he escogido este nombre para la variable.

00:02:30.310 --> 00:02:32.520
Podías haber escogido otro nombre,
como conteo de cafés

00:02:32.980 --> 00:02:36.940
número de cafés pedidos o cafés pedidos.

00:02:37.180 --> 00:02:38.640
En realidad podría ser cualquier cosa

00:02:38.740 --> 00:02:42.990
siempre y cuando sea fácil entender
qué representa la variable.

00:02:43.680 --> 00:02:45.800
Acabo de decir que el nombre
puede ser cualquier cosa

00:02:45.910 --> 00:02:49.130
pero Java tiene un par de reglas
en cuanto a los nombres de las variables.

00:02:49.570 --> 00:02:50.920
Veamos ahora esas reglas.

00:02:51.840 --> 00:02:53.940
Voy a escribir nombres de variables Java.

00:02:54.560 --> 00:02:55.780
Este link tiene buena pinta.

00:02:57.090 --> 00:02:59.580
Es la documentación oficial de Java
de Oracle.

00:03:00.000 --> 00:03:01.790
Esta parte de aquí
habla sobre las variables.

00:03:02.130 --> 00:03:04.240
Puedes leerlo en tu infinito tiempo libre.

00:03:04.920 --> 00:03:06.440
Aquí está lo que nos interesa.

00:03:06.830 --> 00:03:08.730
Habla sobre cómo nombrar las variables.

00:03:09.030 --> 00:03:10.270
Puede ser tan largo como quieras

00:03:10.730 --> 00:03:13.280
pero un nombre muy largo
no es muy práctico.

00:03:13.770 --> 00:03:16.470
Por otro lado,
un nombre corto puede estar bien

00:03:16.710 --> 00:03:18.920
pero si es solo un carácter, como N

00:03:19.320 --> 00:03:21.180
puede que no sepas a qué se refiere N.

00:03:21.500 --> 00:03:23.950
Tienes que encontrar el equilibrio
entre un nombre descriptivo

00:03:24.080 --> 00:03:26.900
y algo
que no sea un incordio escribir cada vez.

00:03:27.550 --> 00:03:30.020
Aquí hay muchos más detalles
que puedes leer si quieres.

00:03:30.770 --> 00:03:34.230
Pero lo más importante es
que si tu nombre tiene solo una palabra

00:03:34.580 --> 00:03:36.800
la escribas completamente en minúsculas.

00:03:37.360 --> 00:03:39.760
Como cadencia,
velocidad, marcha y cosas así.

00:03:40.420 --> 00:03:42.490
Si el nombre de la variable
tiene más de una palabra

00:03:42.780 --> 00:03:45.660
escribe en mayúsculas
la primera letra de cada palabra.

00:03:45.900 --> 00:03:47.710
Pero la primera letra
tiene que ser minúscula.

00:03:48.100 --> 00:03:50.850
Por ejemplo,
<i>gearRatio</i> o <i>currentGear</i>.

00:03:51.660 --> 00:03:54.650
Nuestro ejemplo,
<i>numberOfCoffees</i>, sigue estas reglas.

00:03:55.630 --> 00:03:59.750
La siguiente parte de la declaración
es el operador de asignación [símbolo =].

00:04:00.880 --> 00:04:04.180
En la clase de matemáticas
habrás visto uno más uno igual a dos.

00:04:04.540 --> 00:04:06.720
Pero en Java, igual a significa otra cosa.

00:04:07.020 --> 00:04:09.870
Igual a significa
asignar un valor a una variable.

00:04:10.270 --> 00:04:14.030
En este caso le asignamos el valor 2
a la variable <i>numberOfCoffees</i>.

00:04:14.530 --> 00:04:15.870
Si usamos la metáfora de la caja

00:04:16.019 --> 00:04:19.970
ponemos el número 2 dentro de la variable
que representa el número de cafés.

00:04:20.550 --> 00:04:22.070
Cuando veas el símbolo de igual a

00:04:22.250 --> 00:04:24.540
piensa en coger lo que hay a la derecha

00:04:24.760 --> 00:04:27.820
y meterlo en la variable de la izquierda.

00:04:28.570 --> 00:04:30.200
Ya hemos hablado un poco sobre esto.

00:04:30.400 --> 00:04:33.560
Este 2 de aquí
es el valor inicial de la variable.

00:04:33.790 --> 00:04:35.960
Pones el 2 dentro de la variable.

00:04:36.530 --> 00:04:40.160
Recuerda que el valor inicial
debe ser de un tipo de valor válido

00:04:40.330 --> 00:04:41.580
según este tipo de datos.

00:04:42.270 --> 00:04:44.800
En esta variable,
solo están permitidos los enteros.

00:04:45.640 --> 00:04:49.310
Dos es un entero válido,
así que puede ir dentro de esta variable.

00:04:50.420 --> 00:04:53.710
Por último, pero no menos importante,
tenemos el punto y coma al final.

00:04:54.580 --> 00:04:55.500
Resumiendo

00:04:55.710 --> 00:04:58.540
cuando declaras una variable
tienes que especificar el tipo de datos

00:04:58.930 --> 00:05:01.870
seguido del nombre de la variable,
después el símbolo igual a

00:05:02.310 --> 00:05:04.580
luego el valor inicial
y por último el punto y coma.

00:05:05.450 --> 00:05:08.160
En este caso,
creamos la variable <i>numberOfCoffees</i>.

00:05:08.570 --> 00:05:12.090
El tipo de datos es <i>int</i>,
así que solo podemos almacenar enteros.

00:05:12.700 --> 00:05:16.460
Como valor inicial de esta variable,
asignamos el valor 2.

00:05:17.050 --> 00:05:20.070
Puedes cambiar el nombre de la variante
siguiendo las reglas que hemos visto.

00:05:20.320 --> 00:05:23.640
Puedes cambiar el valor incial
siempre que sea del mismo tipo de datos.

00:05:24.070 --> 00:05:27.760
No puedes cambiar este tipo de datos
tienes que escribir <i>int</i>, I-N-T.

00:05:28.280 --> 00:05:30.460
También vamos a ver otros tipos de datos

00:05:30.710 --> 00:05:32.470
con su sintaxis específica.

00:05:33.530 --> 00:05:36.540
Cada vez que tengas que usar una variable,
utiliza su nombre.

00:05:36.700 --> 00:05:41.420
que será sustituido por el valor real
cuando ejecutes la app.

00:05:42.350 --> 00:05:44.890
Ahora quiero que añadas
estas líneas de código a tu app.

00:05:45.790 --> 00:05:47.030
No copies y pegues

00:05:47.090 --> 00:05:50.540
porque quiero que practiques
cómo escribir, crear y usar una variable.

00:05:51.260 --> 00:05:53.030
Después ejecuta la app en el teléfono.

00:05:53.260 --> 00:05:55.580
Asegúrate de que ves esto
cuando pulsas Pedir.

00:05:56.680 --> 00:05:59.320
A continuación,
quiero que experimentes un poco.

00:05:59.770 --> 00:06:02.110
Intenta asignar
un nuevo valor inicial a la variable.

00:06:03.160 --> 00:06:05.660
Después intenta asignar
un nuevo nombre de variable.

00:06:06.070 --> 00:06:07.380
En lugar de <i>numberOfCoffees</i>

00:06:07.450 --> 00:06:10.080
prueba otra cosa
como, por ejemplo, <i>quantity</i>.

00:06:11.240 --> 00:06:14.300
Un error de principiante muy común
es pensar que lo has escrito bien

00:06:14.630 --> 00:06:17.190
porque tus ojos
escanean la frase muy rápido.

00:06:17.650 --> 00:06:19.960
Pero si te fijas
en cada carácter por separado

00:06:20.140 --> 00:06:22.060
te darás cuenta
de que podría haber un problema.

00:06:23.020 --> 00:06:25.470
Esto te llevará
algún tiempo, pero tranquilo

00:06:25.670 --> 00:06:28.260
presta mucha atención
a cada carácter que escribas.

00:06:29.000 --> 00:06:31.860
Si surge algún problema
intenta leer el mensaje de error.

00:06:32.650 --> 00:06:34.470
Por ejemplo,
este mensaje de error dice

00:06:34.580 --> 00:06:37.350
"No se puede resolver
el símbolo <i>numberOCoffees</i>".

00:06:38.160 --> 00:06:40.910
Java no reconoce qué es <i>numberOCoffees</i>

00:06:41.160 --> 00:06:44.220
porque, en realidad,
el nombre era <i>numberOfCoffees</i>.

00:06:44.950 --> 00:06:48.040
Espero que encuentres el error
o puedes pulsar deshacer.

00:06:48.240 --> 00:06:50.100
A veces esto también resuelve el problema.

00:06:51.080 --> 00:06:54.370
O puedes volver a un código
que funcione, como el que te dimos.

00:06:55.720 --> 00:06:57.960
Cuando hayas acabado,
marca estas casillas y continúa.

