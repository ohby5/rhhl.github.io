WEBVTT
Kind: captions
Language: zh-TW

00:00:00.240 --> 00:00:02.680
這個問題不是只有一個正確的的方式來回答。

00:00:02.680 --> 00:00:06.151
這真的取決於什麼是最有助於您找出

00:00:06.151 --> 00:00:09.245
不正確的應用程式使用與正確的應用程式使用兩者之間的區別。

00:00:09.245 --> 00:00:12.640
下面是一些我注意到的東西。

00:00:12.640 --> 00:00:15.990
在不正確的應用程式使用，當您點擊訂單按鈕，

00:00:15.990 --> 00:00:19.990
數量每一次都改變為相同的值，其實它不應該改變。

00:00:19.990 --> 00:00:22.320
接下來我也注意到對應這個數量的價格是正確的，

00:00:22.320 --> 00:00:25.010
但真正的價格應該是

00:00:25.010 --> 00:00:28.310
數量選擇器最後選擇的數量。

00:00:28.310 --> 00:00:31.570
再次，事實上該數量不應該改變。

00:00:31.570 --> 00:00:34.230
讓我們來看看現有代碼為什麼會發生這種情況。

00:00:35.390 --> 00:00:39.320
在activity_main設計佈置圖文件，我們有訂單按鈕。

00:00:39.320 --> 00:00:40.576
當單擊該訂單按鈕，

00:00:40.576 --> 00:00:43.102
我們會在主要活動啟動一個方法稱為submitOrder。

00:00:43.102 --> 00:00:47.890
在MainActivity.java檔，這是submitOrder方法。

00:00:47.890 --> 00:00:51.030
這是舊的代碼，已有很長時間，而我們沒有作任何變化。

00:00:51.030 --> 00:00:54.570
但是，我們創建了一個整數數量變量及初始化為5。

00:00:54.570 --> 00:00:56.300
我們將它顯示到屏幕上。

00:00:56.300 --> 00:01:00.610
我們還顯示價格為咖啡數量乘每杯$ 5。

00:01:00.610 --> 00:01:03.700
就算這段代碼並不太合理，我們試圖提交

00:01:03.700 --> 00:01:06.530
這個我們正在嘗試更新數量的訂單。

00:01:06.530 --> 00:01:09.411
而另一個問題是，我們正在創建一個整數數量變量，

00:01:09.411 --> 00:01:12.478
而其車我們已經有一個全局數量的變量，它可以追踪

00:01:12.478 --> 00:01:13.747
咖啡杯數。

00:01:13.747 --> 00:01:18.026
在MainActivity我們已經有一個全局數量的變量，

00:01:18.026 --> 00:01:22.520
所以任何這裡的方法都可參照此數量變量。

00:01:22.520 --> 00:01:27.060
然而，在submitOrder方法我們創建一個新的局部數量變量。

00:01:27.060 --> 00:01:30.410
從技術上講，您可以有一個局部變量

00:01:30.410 --> 00:01:32.200
跟全局變量使用相同的名稱。

00:01:32.200 --> 00:01:34.812
這只意味著，在這種方法的內容中，

00:01:34.812 --> 00:01:38.581
之後，當這個變量已經定義，每當您表示數量，

00:01:38.581 --> 00:01:41.985
它實際上指的是這個值為5的局部數量變量，

00:01:41.985 --> 00:01:44.396
不是值2的全局數量變量。

00:01:44.396 --> 00:01:46.310
所以顯示（數量）和

00:01:46.310 --> 00:01:51.500
顯示價格（數量* 5）兩者都是指這個值。

00:01:51.500 --> 00:01:54.080
這是此局部變量的範圍。

00:01:54.080 --> 00:01:55.490
此範圍外，

00:01:55.490 --> 00:01:59.490
每當您表示數量，都是指全局變量的數量。

00:01:59.490 --> 00:02:00.330
如果您想想看，

00:02:00.330 --> 00:02:03.430
不過，這並不完全合理，當您提交訂單，

00:02:03.430 --> 00:02:07.040
您將創建一個新的數量然後顯示在屏幕上。

00:02:07.040 --> 00:02:10.370
您真正想要做的就是使用我們一直所指的數量，

00:02:10.370 --> 00:02:14.900
因為我們一直在增加和減少咖啡杯數。

00:02:14.900 --> 00:02:18.040
所以，我們就應該可計算價格了。

00:02:18.040 --> 00:02:22.070
要解決我們的代碼，我們不應該定義局部數量變量。

00:02:22.070 --> 00:02:25.130
相反，我們應該只使用這個全局變量的數量。

00:02:25.130 --> 00:02:28.550
我們還應該停止嘗試更新屏幕上的數量。

00:02:28.550 --> 00:02:31.270
加號和減號按鈕已經可以做屏幕更新，

00:02:31.270 --> 00:02:33.520
只要配合適當的數量值。

00:02:33.520 --> 00:02:37.570
不過，我們還希望submitOrder按鈕仍然可以更新該價格。

00:02:37.570 --> 00:02:41.600
但是，這一次，我們要計算出的價格為數量* 5

00:02:41.600 --> 00:02:43.990
並使用全局變量的數量。

00:02:43.990 --> 00:02:47.720
我會更新代碼讓它反映了我們剛才講的。

00:02:47.720 --> 00:02:50.860
注意，數量變量已經變成了紫色的字體顏色，

00:02:50.860 --> 00:02:54.030
這意味著我們正在MainActivity中使用的全局數量變量。

00:02:54.030 --> 00:02:57.940
當按下按鈕它將觸發submitOrder方法。

00:02:57.940 --> 00:02:59.580
這將在屏幕上的顯示價格，

00:02:59.580 --> 00:03:03.934
那裡的價格計算為全局量變量乘5。

00:03:04.970 --> 00:03:06.670
這看起來是正確的，所以讓我們的設備上運行。

00:03:07.680 --> 00:03:09.530
好了，現在做最終測試。

00:03:09.530 --> 00:03:13.660
我要的數量更改為6然後點擊訂單按鈕，

00:03:13.660 --> 00:03:14.510
好，這是$30。

00:03:14.510 --> 00:03:17.630
讓我試試其他值，好讓我知道這是不是僥倖。

00:03:17.630 --> 00:03:18.958
這看起來是正確的。
這看起來是正確的。

00:03:18.958 --> 00:03:22.600
好，成功了!

00:03:22.600 --> 00:03:24.310
您解決了您的第一個問題。

00:03:24.310 --> 00:03:26.400
您做得很好。

00:03:26.400 --> 00:03:28.970
我們應用程式的功能運作非常好。

00:03:28.970 --> 00:03:32.280
但我不得不承認，用戶界面是有點難看。

00:03:32.280 --> 00:03:35.800
具體地，數量選擇器可以使用一些用戶界面，所以

00:03:35.800 --> 00:03:36.740
下一步讓我們處理這個。

