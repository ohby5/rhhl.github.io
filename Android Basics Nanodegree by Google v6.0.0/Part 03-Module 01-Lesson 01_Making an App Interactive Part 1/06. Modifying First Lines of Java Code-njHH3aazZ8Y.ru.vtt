WEBVTT
Kind: captions
Language: ru

00:00:00.860 --> 00:00:01.859
Ура!

00:00:01.940 --> 00:00:03.870
Ваше приложение только что стало
интерактивным.

00:00:03.870 --> 00:00:06.930
До этого при нажатии на кнопку ничего
не происходило.

00:00:06.930 --> 00:00:08.610
А теперь, после внесения изменений в код,

00:00:08.610 --> 00:00:11.580
когда вы нажимаете на кнопку, на экране
происходит какое-то действие.

00:00:11.680 --> 00:00:12.680
Отлично!

00:00:13.340 --> 00:00:16.400
Давайте разберемся, чему мы научились.

00:00:16.400 --> 00:00:21.120
Сначала вы добавили новый атрибут
android:onClick= на XML-элемент button.

00:00:21.120 --> 00:00:23.200
Это значит, что, когда происходит нажатие 
на кнопку,

00:00:23.200 --> 00:00:27.660
система пробует выполнить ряд инструкций,

00:00:27.960 --> 00:00:30.900
которые в нашем коде названы submit order.

00:00:32.060 --> 00:00:33.750
Окей. Перейдем к файлу main activity,

00:00:33.750 --> 00:00:35.300
который вы получили.

00:00:35.300 --> 00:00:37.830
Знаю, что на экране сейчас много странных
символов и слов.

00:00:37.830 --> 00:00:40.930
Но все, что вам пока нужно знать,
это вот этот метод

00:00:40.930 --> 00:00:42.930
под названием submit order.

00:00:42.930 --> 00:00:45.620
Метод может состоять из нескольких строк
java-кода.

00:00:45.620 --> 00:00:48.200
Они передают ряд инструкций, которые

00:00:48.200 --> 00:00:51.050
устройство может понять и выполнить.

00:00:51.050 --> 00:00:53.720
Если в методе содержатся несколько
строк кода,

00:00:53.720 --> 00:00:57.830
устройство сначала выполнит первую
строку, затем вторую и т. д.,

00:00:57.830 --> 00:00:59.550
пока не дойдет до конца метода.

00:00:59.550 --> 00:01:03.890
Мы даем методам названия, чтобы обращаться
к ним впоследствии.

00:01:03.890 --> 00:01:08.200
Например, в XML мы теперь может вызвать
метод submitOrder.

00:01:08.200 --> 00:01:10.380
Точно так же, как у каждого из нас
есть имя.

00:01:10.380 --> 00:01:12.660
Если вы заведете домашнее животное,
вы и ему дадите имя,

00:01:12.660 --> 00:01:14.670
чтобы обращаться к нему.

00:01:14.770 --> 00:01:17.950
Таким образом, в коде, если нам нужно
обратиться к ряду утверждений,

00:01:18.350 --> 00:01:21.570
мы помещаем их в метод и даем название
этому методу.

00:01:21.570 --> 00:01:25.850
Помните, в первом уроке мы говорили, что
в XML используется определенный

00:01:25.850 --> 00:01:30.100
синтаксис, определяющий, будет XML
работать или нет?

00:01:30.100 --> 00:01:34.700
В Java есть похожие типы правил
для определения правильного кода.

00:01:34.700 --> 00:01:38.800
Блок утверждений внутри метода
должен начинаться

00:01:38.800 --> 00:01:42.510
с открывающей фигурной скобки
и закрываться второй фигурной скобкой.

00:01:42.510 --> 00:01:45.650
Наверху мы видим второй метод onCreate.

00:01:45.650 --> 00:01:49.930
Утверждения внутри метода начинаются
с открывающей скобки

00:01:49.930 --> 00:01:51.770
и закрываются второй.

00:01:51.770 --> 00:01:54.800
И наконец, здесь у нас еще один
метод display.

00:01:54.800 --> 00:01:58.320
Утверждения внутри метода начинаются
с открывающей скобки

00:01:58.320 --> 00:01:59.930
и закрываются второй.

00:01:59.930 --> 00:02:02.920
Вы, наверно, заметили, что MainActivity
также начинается

00:02:02.920 --> 00:02:03.922
и заканчивается скобками.

00:02:03.922 --> 00:02:06.300
Вся функциональность файла MainActivity

00:02:06.600 --> 00:02:10.199
определена внутри этих двух скобок.

00:02:10.199 --> 00:02:13.165
Сейчас MainActivity состоит
из трех методов.

00:02:13.165 --> 00:02:15.340
После того как вы вводите метод,

00:02:15.340 --> 00:02:19.500
то есть определяете его, можно начинать
его использовать.

00:02:19.500 --> 00:02:22.430
В этом примере мы вводим метод display,
а затем

00:02:22.430 --> 00:02:25.805
используем его в строке кода,
где указываем его название.

00:02:25.805 --> 00:02:29.655
Итак, в этом месте мы определяем метод,
а тут вызываем его.

00:02:29.655 --> 00:02:32.495
Таким образом, когда в интерфейсе
происходит нажатие кнопки,

00:02:32.495 --> 00:02:34.995
это инициирует вызов метода submitOrder.

00:02:34.995 --> 00:02:38.635
Затем одна за другой выполняется
каждая строка кода

00:02:38.635 --> 00:02:40.895
в методе submitOrder сверху вниз.

00:02:40.895 --> 00:02:44.690
В этом случае всего одно утверждение,
поэтому выполняется только оно.

00:02:44.690 --> 00:02:48.370
А теперь давайте разберем строку кода,
в которой написано «display 1».

00:02:48.370 --> 00:02:51.980
Я выбрала именно ее, потому что, 
судя по всему,

00:02:51.980 --> 00:02:55.800
в скобках указывается число, которое
должно отобразиться на экране.

00:02:56.980 --> 00:02:59.870
Итак, когда я нажимаю на экране
кнопку «Заказать»,

00:02:59.870 --> 00:03:03.570
это запускает вызов метода submit order
в MainActivity.

00:03:03.570 --> 00:03:07.377
Затем переходим к выполнению
этой строки кода — display 1.

00:03:07.377 --> 00:03:10.270
В результате число меняется на 1.

00:03:10.270 --> 00:03:13.730
Как вы думаете, что произойдет, если я
здесь поменяю число на 2?

00:03:13.730 --> 00:03:14.980
Давайте запустим приложение.

00:03:15.990 --> 00:03:18.260
Теперь, когда я нажимаю на кнопку,
отображается 2.

00:03:18.260 --> 00:03:22.709
Нажатие кнопки «Заказать» приводит
к вызову метода submit order.

00:03:22.709 --> 00:03:25.918
Затем выполняется строка кода, в которой
мы прописали 2.

00:03:25.918 --> 00:03:27.970
Именно поэтому на экране появляется
новое число 2.

00:03:27.970 --> 00:03:29.050
Теперь ваша очередь.

00:03:29.350 --> 00:03:33.150
Попробуйте поменять число вот здесь
в скобках.

00:03:33.150 --> 00:03:37.130
Можете выбрать другое маленькое,
большое или даже отрицательное число.

00:03:37.130 --> 00:03:40.170
После того как вы закончите
с экспериментами в MainActivity,

00:03:40.170 --> 00:03:41.610
отметьте это поле для продолжения.

