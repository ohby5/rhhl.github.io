WEBVTT
Kind: captions
Language: zh-CN

00:00:00.430 --> 00:00:03.250
当应用程序意外退出时 程序发生崩溃

00:00:03.250 --> 00:00:05.880
并且显示一个对话框 说应用已经停止

00:00:07.160 --> 00:00:10.320
Android 开发人员每天会遇到很多次这种情况

00:00:10.320 --> 00:00:11.990
即使是最有经验的开发人员也是一样

00:00:11.990 --> 00:00:16.400
有时候问题是因为他们编码中的一个错字 或者是一个很傻的错误

00:00:16.400 --> 00:00:20.250
有时是因为对如何写某一功能的代码

00:00:20.250 --> 00:00:23.010
理解错误

00:00:23.010 --> 00:00:26.910
尽管你可能恐慌 但是你大脑里的声音告诉你

00:00:26.910 --> 00:00:30.200
继续并且调试这个应用

00:00:30.200 --> 00:00:33.900
在这节视频中 我们将会学习到怎样调试 Android 应用的崩溃

00:00:33.900 --> 00:00:38.910
调试也就是确认和修复你的应用里的故障和错误

00:00:38.910 --> 00:00:42.050
如果它是一个明显的错误 像 Java 语法错误

00:00:42.050 --> 00:00:44.660
Android's DU 会识别出来并且

00:00:44.660 --> 00:00:48.870
在将应用安装到你的手机之前会显示一个红色的错误

00:00:48.870 --> 00:00:52.480
这称为编译期错误 因为它无法创建任何应用

00:00:52.480 --> 00:00:53.860
来安装到你的设备上

00:00:55.170 --> 00:00:58.690
如果你想创建一个编译错误删除

00:00:58.690 --> 00:01:02.140
这个括号或分号 然后你会看到错误弹出

00:01:03.370 --> 00:01:07.710
这就像是第一节课里我们故意创造一个 XML 错误一样

00:01:07.710 --> 00:01:10.760
然后我们阅读这个错误信息撤销了这个修改

00:01:11.810 --> 00:01:15.700
其他的错误是 如果我尝试删除这个左括号 然后我会

00:01:15.700 --> 00:01:20.220
得到一个错误 或者我忘记了右括号 我也会得到一个错误

00:01:21.390 --> 00:01:25.140
但是有时只有当你开始使用应用时错误才会发生

00:01:25.140 --> 00:01:28.270
这个叫做运行期错误 因为只有你的应用运行时它才会发生

00:01:29.370 --> 00:01:31.940
我们有意在应用中产生一个崩溃并且

00:01:31.940 --> 00:01:35.390
弄清楚解决它的步骤 所以当你真的产生一个崩溃时

00:01:35.390 --> 00:01:37.510
你会知道怎样靠你自己解决它

00:01:37.510 --> 00:01:41.330
这实际上是一个我看到的学生遇到的崩溃

00:01:41.330 --> 00:01:43.520
对于初学者来说 它是很有可能发生的

00:01:43.520 --> 00:01:45.410
首先我会带着你们过一遍所有步骤

00:01:45.410 --> 00:01:46.849
然后你们自己单独做一遍

00:01:47.990 --> 00:01:50.450
为了故意在应用中产生一个崩溃

00:01:50.450 --> 00:01:52.500
我会修改 MainActivity.Java 文件

00:01:52.500 --> 00:01:58.090
我会将这个方法的名字改成 submitOrders 也就是加一个 s

00:01:58.090 --> 00:02:00.070
然后我要在设备上运行它

00:02:00.070 --> 00:02:02.130
开始时一切都很顺利 但是

00:02:02.130 --> 00:02:04.800
当我点击 ORDER 按钮时 应用崩溃了

00:02:06.000 --> 00:02:10.500
它会给我一个信息 不幸的是 Just Java 已经停止运行了

00:02:10.500 --> 00:02:13.110
我唯一能做的就是点击 OK 然后退出应用

00:02:14.840 --> 00:02:18.190
幸运的是 我们能够使用 Android Studio 来弄清楚实际上发生了什么

00:02:19.660 --> 00:02:21.330
当你在设备上运行应用时

00:02:21.330 --> 00:02:25.860
你会看到在屏幕的底部弹出了 Android DDMS 窗口

00:02:25.860 --> 00:02:28.990
它显示了用来监控你的 Android 设备的信息

00:02:28.990 --> 00:02:32.980
包括那些在屏幕后运行的用户看不见的事情

00:02:32.980 --> 00:02:36.230
如果它没有打开 你可以点击这的 Android 标签

00:02:36.230 --> 00:02:38.970
然后你就打开了 Android DDMS 窗口

00:02:38.970 --> 00:02:41.930
你可以通过拖拽这个箭头来调整窗口的大小

00:02:42.938 --> 00:02:44.480
如果你向右拖拽箭头

00:02:44.480 --> 00:02:47.450
你会看到一个连接到电脑的设备列表

00:02:47.450 --> 00:02:49.460
现在只有我的 Nexus 6 连接

00:02:49.460 --> 00:02:53.940
我再一次打开了 Just Java 应用 所以这就是它在这里的原因

00:02:55.190 --> 00:02:58.565
我们再次向左拖动箭头 以便我们有更多的空间看日志

00:02:58.565 --> 00:03:02.850
在右手边显示的是日志信息

00:03:02.850 --> 00:03:05.380
如果你在这个下拉菜单中选择无过滤

00:03:05.380 --> 00:03:08.750
那么它会给你显示整个系统和其他应用的日志信息

00:03:10.440 --> 00:03:14.850
它显示的关于活动管理器 音频 声音

00:03:14.850 --> 00:03:17.470
麦克风 以及其他事情

00:03:17.470 --> 00:03:20.710
一个系统日志就像是你的手机写的关于

00:03:20.710 --> 00:03:21.789
设备上发生了什么的日记

00:03:22.850 --> 00:03:25.150
我们也把它叫做 logcat

00:03:25.150 --> 00:03:25.780
如果你用 Google 搜索什么是 logcat

00:03:25.780 --> 00:03:30.840
从 Android 开发人员网站上弹出一个定义

00:03:30.840 --> 00:03:33.380
它说到 logcat 是 Android 日志系统

00:03:33.380 --> 00:03:36.200
在这里你可以收集和浏览调试的输出

00:03:37.480 --> 00:03:42.170
回到日志 最近发生的事情在窗口的最底下

00:03:42.170 --> 00:03:43.790
所以如果你想要看到之前的信息

00:03:43.790 --> 00:03:46.940
也许你要向上滚动鼠标来寻找你想要的信息

00:03:46.940 --> 00:03:51.660
我们改变应用的过滤器设置 选择 .justjava

00:03:51.660 --> 00:03:55.140
这在很大程度上减少了日志数量

00:03:55.140 --> 00:03:56.850
它仅显示和我们应用相关的信息

00:03:56.850 --> 00:03:58.430
这使得阅读起来很方便

00:03:59.480 --> 00:04:01.260
当在设备上发生崩溃时

00:04:01.260 --> 00:04:05.720
手机试图想要做的事情的描述就会在日志上输出

00:04:05.720 --> 00:04:07.410
红色的文本就是我们的崩溃信息

00:04:08.480 --> 00:04:10.140
这就是所说的查看堆栈信息

00:04:10.140 --> 00:04:13.840
因为它可以追踪到错误的起源

00:04:13.840 --> 00:04:16.550
我们知道这是我们的应用 因为这是我们的进程

00:04:16.550 --> 00:04:19.560
即 com.example.android.justjava

00:04:19.560 --> 00:04:22.730
对于我们的应用 进程名与包名是匹配的

00:04:22.730 --> 00:04:24.440
但是它并不是必须匹配

00:04:24.440 --> 00:04:26.560
我们没有真正的学过进程

00:04:26.560 --> 00:04:30.730
但是 实质上 它是用来标识我们的应用的

00:04:30.730 --> 00:04:32.640
现在 在堆栈信息中有很多的文本

00:04:32.640 --> 00:04:34.488
你不需要阅读所有的信息

00:04:34.488 --> 00:04:35.400
我们只想要浏览

00:04:35.400 --> 00:04:39.170
与帮助我们解决我们的问题相关的那些信息

00:04:39.170 --> 00:04:42.410
我们应该在堆栈信息中找到有关的方法

00:04:42.410 --> 00:04:45.710
或者相关的文件

00:04:45.710 --> 00:04:48.580
所以我们要留意文件名 MainActivity

00:04:49.660 --> 00:04:51.700
我们开始阅读错误信息吧

00:04:51.700 --> 00:04:52.890
我会跳过这部分

00:04:52.890 --> 00:04:57.120
并且只阅读 IllegalStateException 不能够找到 submitOrder 方法

00:04:58.490 --> 00:05:02.720
错误信息进一步解释了为什么它是无效状态

00:05:03.830 --> 00:05:06.942
原因是在 MainActivity 中找不到

00:05:06.942 --> 00:05:09.950
submitOrder 方法

00:05:09.950 --> 00:05:13.760
也就是 按钮控件对应的响应事件

00:05:13.760 --> 00:05:17.830
在这句话里有很多词 它可能没有很大的意义

00:05:17.830 --> 00:05:19.910
但是还是有一些有用的线索

00:05:19.910 --> 00:05:22.920
它这里提到了按钮 并且在我们的应用里只有一个按钮

00:05:22.920 --> 00:05:26.610
我们推测它可能和那个按钮有关

00:05:26.610 --> 00:05:29.530
然后它说到找不到 submitOrder

00:05:29.530 --> 00:05:31.930
在 activity 中

00:05:31.930 --> 00:05:36.500
回看一下我们的按钮代码 当按下按钮时我们确实指定了一个方法

00:05:36.500 --> 00:05:38.850
它应该触发一个叫做 submitOrder 的方法

00:05:38.850 --> 00:05:39.710
所以我们现在看一下

00:05:39.710 --> 00:05:43.415
我会将 DDMS 窗口向下拖拽

00:05:43.415 --> 00:05:46.315
并且打开我们的 activity_main.xml 文件

00:05:46.315 --> 00:05:48.955
这就是按钮在 XML 中的元素

00:05:48.955 --> 00:05:54.215
确实我们说到 android:onClick 应该触发 submitOrder 方法

00:05:54.215 --> 00:05:56.395
如果我回到 MainActivity 页面

00:05:56.395 --> 00:06:00.090
然后我们看到 submitOrder 不再是一个方法

00:06:00.090 --> 00:06:04.240
确实 我们将它改成了 submitOrders 这就是问题产生的原因

00:06:04.240 --> 00:06:08.330
如果我继续并且去掉多出的 s 现在在MainActivity就

00:06:08.330 --> 00:06:11.950
有了 submitOrder 方法 并且当我再次运行应用的时候

00:06:11.950 --> 00:06:13.113
它应该能工作

00:06:13.113 --> 00:06:16.380
我点击ORDER按钮 然后应用没有崩溃

00:06:16.380 --> 00:06:19.790
继续 在你的应用里通过改变 submitOrder 的方法名

00:06:19.790 --> 00:06:21.800
创建这个崩溃

00:06:23.000 --> 00:06:25.390
然后检查堆栈日志

00:06:25.390 --> 00:06:26.950
然后仔细阅读错误信息

00:06:28.000 --> 00:06:31.390
然后继续 修改错误 使你的应用再次工作

00:06:31.390 --> 00:06:32.610
当你完成后选中这个框

