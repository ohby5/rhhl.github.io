WEBVTT
Kind: captions
Language: fr

00:00:00.430 --> 00:00:03.100
Le rôle de cette ligne de code
est de créer une variable.

00:00:03.420 --> 00:00:05.340
Une variable est comme cette boîte,

00:00:05.340 --> 00:00:08.290
le nombre de tasses de café,
avec une valeur de deux à l'intérieur.

00:00:08.290 --> 00:00:10.700
On va examiner chaque partie
de cette ligne de code

00:00:10.700 --> 00:00:13.150
et puis, on va créer
plusieurs variables dans ce cours.

00:00:13.500 --> 00:00:15.573
Peut-être que vous avez vu
qu'il y a des règles

00:00:15.573 --> 00:00:17.066
pour déclarer une variable.

00:00:18.160 --> 00:00:20.470
Déclarer une variable
signifie la même chose

00:00:20.470 --> 00:00:22.920
que définir ou créer une variable.

00:00:23.970 --> 00:00:26.560
Voici la ligne de code
que nous avons vu jusqu'à maintenant.

00:00:26.560 --> 00:00:30.070
Ça suit une présentation spécifique
pour déclarer les variables dans Java.

00:00:30.420 --> 00:00:32.490
C'est un peu comme une formule.

00:00:32.490 --> 00:00:35.840
D'abord, il faut dire quel type de données
peut entrer dans la variable.

00:00:35.840 --> 00:00:39.120
Ici, c'est un nombre entier, ou <i>int</i>.

00:00:39.350 --> 00:00:41.250
Après, on a le nom de la variable.

00:00:41.260 --> 00:00:43.830
Ici le nom est numberOfCoffees,

00:00:44.110 --> 00:00:46.230
suivi de la valeur initiale.

00:00:46.830 --> 00:00:49.430
Ici, c'est deux,
pour deux tasses de café commandées.

00:00:50.240 --> 00:00:53.650
Ce code doit finir avec un point virgule
pour suivre les règles Java.

00:00:54.250 --> 00:00:56.250
Examinons cette ligne
une partie à la fois.

00:00:56.860 --> 00:00:58.580
Le premier mot est <i>Data type</i>.

00:00:58.580 --> 00:01:02.070
C'est le type de données qui est autorisé
à entrer dans la variable.

00:01:02.070 --> 00:01:04.250
Pour nous, on autorise
seulement les nombres entiers

00:01:04.250 --> 00:01:05.980
à être conservé dans la variable.

00:01:06.450 --> 00:01:09.690
Comme j'ai déjà dit,
<i>int</i> signifie nombre entier,

00:01:09.690 --> 00:01:11.440
donc sans décimaux :

00:01:11.440 --> 00:01:14.235
tous les nombres, zéro inclus,
et les nombres négatifs,

00:01:14.235 --> 00:01:16.505
qui ne sont ni des fractions,
ni des décimaux.

00:01:16.845 --> 00:01:20.620
Zéro, cinq, cent quarante-cinq
sont tous des exemples de nombres entiers.

00:01:21.450 --> 00:01:24.000
Le nombre de tasses commandées
devrait être des nombres entiers

00:01:24.000 --> 00:01:26.320
comme un, deux, quatre etc.

00:01:26.320 --> 00:01:29.780
Nous ne voulons pas que le client commande
une tasse et demie de café.

00:01:29.780 --> 00:01:32.280
S'ils veulent plus d'une tasse,
il va falloir en acheter deux,

00:01:32.280 --> 00:01:35.030
et ils peuvent donner l'autre moitié
à leur ami ou quelque chose.

00:01:35.030 --> 00:01:38.140
Pour les nombres négatifs,
ce n'est pas très logique dans notre cas.

00:01:38.450 --> 00:01:42.160
Il n'y a pas de type de données dans Java
qui permet des nombres positifs seulement.

00:01:42.160 --> 00:01:45.020
Donc, dans le prochain cours,
on va apprendre à ajouter un code

00:01:45.020 --> 00:01:48.230
qui empêche les nombres négatifs
d'entrer dans la variable.

00:01:48.690 --> 00:01:51.690
La prochaine partie de la déclaration
est le nom de la variable.

00:01:52.250 --> 00:01:54.050
Ici, c'est numberOfCoffees.

00:01:54.570 --> 00:01:56.620
Voyez que c'est écrit en CamelCase.

00:01:56.890 --> 00:02:00.220
Ça commence avec une minuscule,
et puisqu'il y a plusieurs mots,

00:02:00.230 --> 00:02:02.590
les prochains mots commencent
avec une majuscule.

00:02:03.070 --> 00:02:05.760
C'est comme faire une étiquette
pour chaque variable.

00:02:06.450 --> 00:02:09.160
On peut mentionner cette variable
en utilisant ce nom.

00:02:09.160 --> 00:02:11.490
Ici, je l'ai montré de cette façon aussi.

00:02:11.490 --> 00:02:13.560
Cette boîte de variable
s'appelle comme ça.

00:02:13.960 --> 00:02:15.630
Si on veut connaître la valeur

00:02:15.950 --> 00:02:18.040
ou la changer, il faut utiliser son nom.

00:02:18.520 --> 00:02:20.400
Le choix d'un nom convenable
pour la variable

00:02:20.400 --> 00:02:22.340
repose sur vous, le développeur

00:02:22.340 --> 00:02:24.960
et ça dépend de l'utilisation voulue
pour la variable.

00:02:24.960 --> 00:02:28.420
Ici, puisque la variable garde
le nombre de tasses commandées,

00:02:28.420 --> 00:02:30.310
j'ai utilisé ce nom
qui signifie la même chose.

00:02:30.310 --> 00:02:32.590
On aurait pu l'appeler autre chose,
comme nombreTasses

00:02:32.590 --> 00:02:36.700
ou nombreTassesDeCafeCommandees
ou tassesCommandees.

00:02:37.250 --> 00:02:40.050
Ça peut être ce que vous voulez,
du moins que c'est facile

00:02:40.050 --> 00:02:43.160
pour les autres de comprendre
ce que représente cette variable.

00:02:43.510 --> 00:02:46.050
J'ai dit la variable peut être appelée
ce que vous voulez,

00:02:46.050 --> 00:02:49.570
il y a en fait quelques règles précisées
par Java pour les noms des variables.

00:02:49.570 --> 00:02:50.870
Regardons ces règles.

00:02:50.870 --> 00:02:53.960
J'entre noms de variables Java.

00:02:54.560 --> 00:02:55.990
Le premier lien semble bien.

00:02:57.090 --> 00:02:59.790
C'est de l'information officielle
pour Java par Oracle.

00:03:00.070 --> 00:03:02.130
La partie en haut concerne les variables,

00:03:02.130 --> 00:03:04.250
que vous pouvez lire plus tard.

00:03:04.760 --> 00:03:06.870
On s'intéresse à cette partie-là.

00:03:06.870 --> 00:03:09.110
Ça concerne les noms des variables.

00:03:09.110 --> 00:03:10.770
Le nom peut être
de n'importe quelle longueur,

00:03:10.770 --> 00:03:13.170
mais si c'est long
ce n'est pas très pratique.

00:03:13.770 --> 00:03:16.580
Par contre, un nom très court
pourrait être utile,

00:03:16.580 --> 00:03:19.060
mais si ce n'est
qu'une seule lettre, comme N,

00:03:19.390 --> 00:03:21.550
on ne connaîtrait pas
la signification de N.

00:03:21.550 --> 00:03:24.090
Donc il faut trouver un équilibre
entre un nom descriptif

00:03:24.090 --> 00:03:26.660
et un nom qui prend du temps
à écrire à chaque fois.

00:03:27.360 --> 00:03:30.570
Il y a un tas d'autres détails
que vous pouvez lire si vous voulez.

00:03:30.770 --> 00:03:34.300
Mais le point à retenir est que si le nom
est seulement un mot,

00:03:34.580 --> 00:03:36.820
écrivez le mot tout en minuscules.

00:03:37.360 --> 00:03:40.470
Comme cadence, vitesse et outil,
ce genre de chose.

00:03:40.470 --> 00:03:42.770
Si le nom de la variable
est composé de plus d'un mot,

00:03:42.770 --> 00:03:45.940
il faut mettre la première lettre des mots
qui suivent en majuscule,

00:03:45.940 --> 00:03:48.100
mais le tout début
doit commencer avec une minuscule.

00:03:48.100 --> 00:03:50.870
Donc gearRatio est un exemple,
ou sinon currentGear.

00:03:51.710 --> 00:03:54.580
Notre exemple avec numberOfCoffees
suit aussi cette règle.

00:03:55.630 --> 00:03:58.430
La prochaine partie de la déclaration
est l'opérateur d'affectation

00:03:58.430 --> 00:03:59.700
ou le signe égal.

00:04:00.880 --> 00:04:04.440
En maths, on est habitué à voir des choses
comme un plus un est égal à deux.

00:04:04.440 --> 00:04:07.070
Mais en Java, le signe égal
signifie autre chose.

00:04:07.070 --> 00:04:10.270
« Égal » signifie affecter une valeur
à une variable.

00:04:10.270 --> 00:04:13.928
Ici, on affecte la valeur de deux
à la variable numberOfCoffees.

00:04:14.528 --> 00:04:16.029
Avec notre métaphore de la boîte,

00:04:16.029 --> 00:04:19.870
on met le nombre deux dans la variable
qui représente le nombre de tasses.

00:04:20.450 --> 00:04:22.250
À chaque fois
que vous voyez le signe égal,

00:04:22.250 --> 00:04:24.670
pensez à prendre ce qui est à droite

00:04:24.670 --> 00:04:27.810
et de le mettre à l'intérieur
de la variable sur le côté gauche.

00:04:28.570 --> 00:04:30.540
On en a déjà parlé un peu,

00:04:30.540 --> 00:04:33.410
mais ce deux-là
est la valeur initiale de la variable.

00:04:33.790 --> 00:04:35.950
Donc on met le deux dans la variable.

00:04:36.530 --> 00:04:40.380
N'oubliez pas que cette valeur initiale
doit suivre les règles

00:04:40.380 --> 00:04:42.270
concernant le type de données.

00:04:42.270 --> 00:04:45.530
Dans ce cas, seulement les nombres entiers
sont permis pour cette variable.

00:04:45.530 --> 00:04:49.190
Deux est permis,
donc ça peut entrer dans la variable.

00:04:50.500 --> 00:04:53.610
Et finalement,
on a le point-virgule tout à la fin.

00:04:54.580 --> 00:04:56.620
Pour résumer,
quand on déclare une variable,

00:04:56.620 --> 00:05:00.090
il faut préciser le type de données,
puis le nom de la variable,

00:05:00.580 --> 00:05:04.440
puis le signe égal et la valeur initiale,
et puis un point-virgule.

00:05:05.510 --> 00:05:08.190
Ici, on crée une variable
nommée numberOfCoffees.

00:05:08.570 --> 00:05:12.150
Le type de données est int,
donc seulement les nombres entiers.

00:05:12.770 --> 00:05:16.330
Et on affecte la valeur deux
pour être la valeur initiale.

00:05:17.110 --> 00:05:20.060
Ou on choisit un autre nom de variable
en suivant les règles Java.

00:05:20.060 --> 00:05:21.720
On peut changer la valeur initiale

00:05:21.720 --> 00:05:24.070
en s'assurant que c'est toujours
le même type de données.

00:05:24.070 --> 00:05:27.550
On ne peut pas changer ce type de données,
il faut l'écrire int : I-N-T.

00:05:28.130 --> 00:05:30.650
Vous allez apprendre
d'autres types de données aussi

00:05:30.650 --> 00:05:32.950
et il faut les écrire
d'une certaine façon aussi.

00:05:33.360 --> 00:05:35.310
Quand vous avez besoin
d'utiliser une variable,

00:05:35.310 --> 00:05:36.750
utilisez simplement son nom,

00:05:36.750 --> 00:05:39.920
et puis, elle sera échangée
pour la valeur réelle plus tard,

00:05:39.920 --> 00:05:41.320
quand l'appli est lancée.

00:05:42.350 --> 00:05:43.360
Maintenant, allez-y,

00:05:43.360 --> 00:05:47.080
ajoutez ces lignes de code à votre appli,
mais ne copiez et collez pas.

00:05:47.080 --> 00:05:50.790
Je veux que vous vous entraîniez à écrire,
à créer et à utiliser une variable.

00:05:51.310 --> 00:05:53.240
Puis lancez l'appli sur votre téléphone.

00:05:53.240 --> 00:05:55.240
Assurez-vous que vous voyez ça
quand vous appuyez

00:05:55.240 --> 00:05:56.760
sur le bouton Order ou Commander.

00:05:56.760 --> 00:05:59.210
Après, je veux
que vous expérimentiez un peu.

00:05:59.770 --> 00:06:02.350
Affectez une nouvelle valeur initiale
à la variable.

00:06:03.160 --> 00:06:05.610
Et puis, essayez
de changer le nom de la variable.

00:06:06.070 --> 00:06:07.420
Au lieu de numberOfCoffees,

00:06:07.420 --> 00:06:09.930
essayez quelque chose
comme quantity ou quantite.

00:06:11.190 --> 00:06:14.630
Une erreur faite par beaucoup de débutants
est de penser qu'on l'a écrit correctement

00:06:14.630 --> 00:06:17.110
car nos yeux passent dessus
et on le lit vite fait.

00:06:17.650 --> 00:06:19.800
Mais si on regarde
chaque caractère individuellement,

00:06:20.140 --> 00:06:22.120
on s'aperçoit
qu'il y a peut-être un problème.

00:06:23.020 --> 00:06:25.810
Ça vous prendra un peu de temps
pour tout faire, mais prenez votre temps

00:06:25.810 --> 00:06:28.250
et faites bien attention
aux caractères que vous tapez.

00:06:29.050 --> 00:06:31.780
Si vous rencontrez des problèmes,
lisez le message d'erreur.

00:06:32.650 --> 00:06:37.330
Par exemple, ce message d'erreur dit
qu'il y a un problème avec numberOCoffees.

00:06:38.160 --> 00:06:40.820
Java ne sait pas ce qu'est numberOCoffees,

00:06:41.160 --> 00:06:44.160
car le nom de la variable est en fait
numberOfCoffees.

00:06:44.950 --> 00:06:46.760
Résolvez le problème grâce au message

00:06:46.760 --> 00:06:49.900
ou sinon appuyez sur Undo
et parfois ça résout le problème aussi.

00:06:51.080 --> 00:06:53.190
Ou utilisez un code
que vous êtes sûrs va marcher

00:06:53.190 --> 00:06:54.680
comme celui qu'on vous a donné.

00:06:55.464 --> 00:06:57.974
Quand vous avez fini,
cochez ces cases et continuez.

