WEBVTT
Kind: captions
Language: ja

00:00:00.410 --> 00:00:02.580
Javaコードの最初の行を変えたので

00:00:02.580 --> 00:00:04.660
他に何ができるか見てみましょう

00:00:04.660 --> 00:00:07.950
数式を作ることだってできます

00:00:07.950 --> 00:00:11.000
数学がお嫌いなら 朗報です―

00:00:11.010 --> 00:00:13.570
Android が代わりに計算してくれます

00:00:13.570 --> 00:00:15.660
問題を作ればいいだけです

00:00:15.660 --> 00:00:17.580
二人の人がいて

00:00:17.580 --> 00:00:20.470
それぞれが２杯のコーヒーが欲しいとします

00:00:20.470 --> 00:00:24.610
これでコーヒーが合計何倍必要か
表示されます

00:00:25.310 --> 00:00:28.700
デバイスで実行し
Orderを押すと４が出ます

00:00:28.700 --> 00:00:31.820
数式を入れると

00:00:31.820 --> 00:00:34.340
自動的に解けるのが分かりますね

00:00:34.340 --> 00:00:37.060
もっと複雑な数式もできます

00:00:37.060 --> 00:00:39.260
暗算できそうもない式でも大丈夫です

00:00:39.260 --> 00:00:41.890
例えばたくさんの Android 開発者が

00:00:41.890 --> 00:00:43.990
とてものどが乾いているとしましょう

00:00:43.990 --> 00:00:46.160
それぞれ３杯のコーヒーが欲しいとします

00:00:46.160 --> 00:00:48.240
朝の苦手な人たちとしましょう

00:00:48.240 --> 00:00:51.315
もう少し余分にコーヒーが欲しいですね

00:00:51.315 --> 00:00:52.985
コーヒーがたくさんです

00:00:52.985 --> 00:00:56.130
実際にいくつか見てみましょう

00:00:56.130 --> 00:00:58.320
Orderを押すと59と出ます

00:00:58.320 --> 00:00:59.900
面白いですね

00:01:00.350 --> 00:01:02.330
カフェインをたくさん摂ると

00:01:02.330 --> 00:01:04.450
よりよいコードが書けるかと思います

00:01:04.450 --> 00:01:07.990
では自分で数式を書いてもらいますが

00:01:07.990 --> 00:01:10.460
もし問題に行き当たったら

00:01:10.460 --> 00:01:12.500
例えば間違って文字を書いたりすると

00:01:12.500 --> 00:01:15.690
この右手に赤いエラーが出ます

00:01:15.690 --> 00:01:18.690
このエラーは記号 a が
解釈できないとしています

00:01:18.690 --> 00:01:20.500
有効な数でないからです

00:01:21.100 --> 00:01:23.630
これはエラーの別の例ですが

00:01:23.630 --> 00:01:27.410
もし乗算の記号を複数書くと
ここにエラーが出ます

00:01:27.410 --> 00:01:30.426
この場合は Undo すると

00:01:30.426 --> 00:01:32.875
コードが動くようになります

00:01:32.875 --> 00:01:37.685
レッスン１でお話ししたように
まずエラーメッセージを読みましょう

00:01:37.685 --> 00:01:41.255
時々エラーメッセージでは
問題がつかめないことがあります

00:01:41.255 --> 00:01:43.075
動いているコードと比較してもいいですね

00:01:43.075 --> 00:01:46.595
ちゃんと動く数式の例をお見せしました

00:01:46.595 --> 00:01:49.830
Undo を押して元に戻してみることもできます

00:01:49.830 --> 00:01:51.590
あるいは 誰かに聞きましょう

00:01:52.170 --> 00:01:54.710
それでは実機に計算させるー

00:01:54.710 --> 00:01:57.340
複雑なコーヒー注文を考えてください

00:01:57.960 --> 00:02:00.810
いろいろな数式を試しましょう

00:02:00.825 --> 00:02:04.940
これは例の1つですが
お分かりのように異なる記号があります

00:02:04.940 --> 00:02:08.240
加算 減算 乗算 除算です

00:02:08.240 --> 00:02:10.530
これらは演算子です

00:02:11.370 --> 00:02:14.390
もし後で忘れてしまったら

00:02:14.390 --> 00:02:17.590
”算術演算子 java”で検索してみてください

00:02:17.590 --> 00:02:21.440
このページはすべての Java の演算子が
載っているまとめです

00:02:21.440 --> 00:02:23.750
こちらが算術演算子のリストですが

00:02:23.750 --> 00:02:27.300
他の演算子についても学べます

00:02:27.300 --> 00:02:30.580
このクイズでは
算術演算子に集中しましょう

00:02:30.580 --> 00:02:32.580
これを数式と呼ぶのは

00:02:32.580 --> 00:02:35.200
複数の記号や数があっても
評価された結果―

00:02:35.200 --> 00:02:37.560
最終的には1つの値になるからです

00:02:37.560 --> 00:02:42.640
この式は演算順序に応じて評価されます

00:02:42.640 --> 00:02:44.510
数学の授業で習ったと思います

00:02:44.510 --> 00:02:48.440
カッコがあればそれが優先されます

00:02:48.440 --> 00:02:51.950
そして乗算と除算が左から右に行われ

00:02:51.950 --> 00:02:54.330
実際 私はこの答えは知りませんが

00:02:54.330 --> 00:02:55.960
あなたのアプリで試してみてください

00:02:55.960 --> 00:02:58.910
異なる数式を試してみて慣れてきたら

00:02:58.910 --> 00:03:00.360
この問題をやってみましょう

00:03:00.360 --> 00:03:04.050
以下の必要なコーヒーの杯数を示しましょう

00:03:04.050 --> 00:03:08.440
77人の Android 開発者が
２杯ずつコーヒーを飲み

00:03:08.440 --> 00:03:11.880
そしてひとり遅れて来た人も
１杯コーヒーを飲むものとします

