WEBVTT
Kind: captions
Language: zh-TW

00:00:00.400 --> 00:00:01.440
萬歲！

00:00:01.440 --> 00:00:03.870
你剛剛把你的應用程序
改良成能與用戶互動了。

00:00:03.870 --> 00:00:06.930
在這之前，當你點擊按鈕時，
並沒有事情發生。

00:00:06.930 --> 00:00:08.410
但現在，對代碼做了一些更改後，

00:00:08.410 --> 00:00:11.480
當你點擊按鈕時，屏幕會出現一些更新。

00:00:11.480 --> 00:00:12.560
做得好！

00:00:13.340 --> 00:00:16.400
讓我們來深入了解你剛剛達成的事。

00:00:16.400 --> 00:00:21.120
首先你在Button的XML元素下添加了
新的android:onClick=屬性

00:00:21.120 --> 00:00:22.800
這意味著當按鈕被點擊時，

00:00:22.800 --> 00:00:27.960
它會嘗試如我們在Java裡所說的，執行

00:00:27.960 --> 00:00:30.900
被命名為submit order
的一組指令。

00:00:32.060 --> 00:00:33.750
好了，我們現在看看我們給你的

00:00:33.750 --> 00:00:35.300
main activity文件夾。

00:00:35.300 --> 00:00:37.830
我知道這個屏幕上有很多奇怪的符號和文字。

00:00:37.830 --> 00:00:40.930
可是你現在只需知道它是一個計算機方法，

00:00:40.930 --> 00:00:42.930
和它的名叫submit order。

00:00:42.930 --> 00:00:45.620
一個計算機方法可以含有
多行的java代碼。

00:00:45.620 --> 00:00:48.200
而這會被轉化為一組

00:00:48.200 --> 00:00:51.050
裝置可以明白和執行的指令。

00:00:51.050 --> 00:00:53.720
如果這個計算機方法裡有多行的代碼，

00:00:53.720 --> 00:00:57.830
裝置會先執行第一行，其次是第二行等等，

00:00:57.830 --> 00:00:59.550
直到計算機方法的最後一行。

00:00:59.550 --> 00:01:03.890
我們給計算機方法命名的目的
是為了方便我們以後參看。

00:01:03.890 --> 00:01:08.200
例如,在XML裡，我們現在可以參看
submitOrder計算機方法了。

00:01:08.200 --> 00:01:10.380
就好像我和你都有名字一樣.

00:01:10.380 --> 00:01:12.560
如果你有寵物，你也會給它起名字

00:01:12.560 --> 00:01:14.670
好方便你稱呼它。

00:01:14.670 --> 00:01:18.350
所以在代碼裡，
如果我們有很多需要參看的執行指定敘述，

00:01:18.350 --> 00:01:21.570
我們可以把它放進一個計算機方法裡，
然後給那個計算機方法命名。

00:01:21.570 --> 00:01:25.850
還記得在第一課裡，
我們說過XML有非常特定的語法規則。

00:01:25.850 --> 00:01:30.100
它們決定某物是不是有效的XML。

00:01:30.100 --> 00:01:34.700
Java也有類似的規則
來決定什麼是有效的Java代碼。

00:01:34.700 --> 00:01:38.800
對於計算機方法，
它們裡面的執行指定敘述一定要包含在

00:01:38.800 --> 00:01:42.510
這個左大括號和右大掛號裡。

00:01:42.510 --> 00:01:45.650
在這裡，也有一個叫onCreate
的計算機方法。

00:01:45.650 --> 00:01:49.930
這個計算機方法裡的執行指定敘述
被包含在這個左大掛號

00:01:49.930 --> 00:01:51.770
和右大掛號裡。

00:01:51.770 --> 00:01:54.800
最後，這裡有個計算機方法叫display。

00:01:54.800 --> 00:01:58.320
它的代碼語句被這個左大掛號和

00:01:58.320 --> 00:01:59.930
右大掛號劃分出來。

00:01:59.930 --> 00:02:02.920
你也可以注意到MainActivity
也有左大掛號

00:02:02.920 --> 00:02:04.040
和右大掛號。

00:02:04.080 --> 00:02:06.600
MainActivity的所有功能

00:02:06.600 --> 00:02:10.199
被定義在這個左大掛號和右大掛號裡。

00:02:10.199 --> 00:02:13.165
目前為止，這個MainActivity
包含了三個計算機方法。

00:02:13.165 --> 00:02:15.340
當你表明一個計算機方法後，

00:02:15.340 --> 00:02:19.500
也就是給計算機方法下定義後，
那你就可以使用那個計算機方法了。

00:02:19.500 --> 00:02:22.430
在這個例子裡我們表明了
display的計算機方法

00:02:22.430 --> 00:02:25.805
然後我們在這一行代碼裡使用它。
在這裡，我們用它的名字稱呼它。

00:02:25.805 --> 00:02:29.655
這是我們表明計算機方法的地方，
而這是我們召喚計算機方法的地方。

00:02:29.655 --> 00:02:32.495
總結來說，當按鈕在UI裡被點擊時，

00:02:32.495 --> 00:02:34.995
它會促使submitOrder
計算機方法被召喚。

00:02:34.995 --> 00:02:38.635
然後我們從計算機方法的
開端至尾端執行submitOrder

00:02:38.635 --> 00:02:40.895
計算機方法裡的每一行代碼。

00:02:40.895 --> 00:02:44.690
在這個情況裡，它只有一個執行指定敘述，
所以我們只是運行它。

00:02:44.690 --> 00:02:48.370
好，現在讓我們看看
這一行顯示display 1的代碼。

00:02:48.370 --> 00:02:51.980
我選擇這一行代碼，因為

00:02:51.980 --> 00:02:55.800
被顯示在屏幕上的像是掛號裡的號碼。

00:02:56.980 --> 00:02:59.870
那麼，當我在UI裡點擊這個按鈕，

00:02:59.870 --> 00:03:03.570
它會促使main activity召喚
submit order計算機方法。

00:03:03.570 --> 00:03:07.377
然後我們執行這行顯示
display 1的代碼。

00:03:07.377 --> 00:03:10.270
這會使屏幕更新，然後顯示1。

00:03:10.270 --> 00:03:13.730
如果我把這裡換成2，
你認為會發生什麼事情呢？

00:03:13.730 --> 00:03:14.980
讓我們運行應用程序看看。

00:03:15.990 --> 00:03:18.260
現在當我點擊這個按鈕時，它會顯示2。

00:03:18.260 --> 00:03:22.709
點擊order按鈕會促使
submit order計算機方法被召喚。

00:03:22.709 --> 00:03:25.918
然後我們執行這行顯示2的代碼。

00:03:25.918 --> 00:03:27.870
這會把屏幕更新成顯示2。

00:03:27.870 --> 00:03:29.350
現在輪到你了。

00:03:29.350 --> 00:03:33.150
你可以嘗試把掛號裡的號碼
換成另外一個號碼嗎？

00:03:33.150 --> 00:03:37.130
你可以選擇其他的小數目，大數目，或者負數。

00:03:37.130 --> 00:03:40.170
你在main activity裡
對這行代碼進行實驗後，

00:03:40.170 --> 00:03:41.610
請在這個格子裡打勾。

