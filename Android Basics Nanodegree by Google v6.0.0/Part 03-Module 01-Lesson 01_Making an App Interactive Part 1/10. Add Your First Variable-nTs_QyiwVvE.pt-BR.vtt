WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:02.890
Essa linha de código é responsável
por criar uma variável.

00:00:03.090 --> 00:00:06.010
Lembre-se que uma variável é
como essa caixa de número de cafés,

00:00:06.210 --> 00:00:07.790
com o valor inteiro dentro.

00:00:07.990 --> 00:00:10.200
Vamos falar sobre cada parte
dessa linha de código e

00:00:10.400 --> 00:00:13.000
então vamos criar mais
variáveis nessa aula.

00:00:13.200 --> 00:00:16.940
Você deve ter notado que existem regras
específicas de como declarar uma variável.

00:00:17.860 --> 00:00:21.580
Quando eu digo declarar uma variável,
significa o mesmo que definir uma variável,

00:00:21.780 --> 00:00:23.470
ou criar uma variável.

00:00:23.670 --> 00:00:26.060
Essa é a linha de código
que vimos até agora.

00:00:26.260 --> 00:00:29.920
Segue um formato bem específico de
como declarar uma variável em Java.

00:00:30.120 --> 00:00:31.990
Você pode pensar nela como uma fórmula.

00:00:32.189 --> 00:00:35.340
Primeiro, precisamos dizer o tipo de dado
que pode ser inserido na variável.

00:00:35.540 --> 00:00:38.850
Nesse caso, é um <i>integer</i>,
que chamamos de int.

00:00:39.050 --> 00:00:40.900
O próximo é o nome da variável.

00:00:41.100 --> 00:00:46.330
Nesse caso, o nome da variável é 
<i>numberOfCoffes</i> seguido pelo valor inicial.

00:00:46.530 --> 00:00:49.810
Nesse caso é 2, 
para 2 xícaras de café pedidas, e

00:00:50.010 --> 00:00:53.750
essa linha de código termina com”;"
de acordo com as regras do Java.

00:00:53.950 --> 00:00:56.360
Vamos desmembrar essa linha
uma parte de cada vez.

00:00:56.560 --> 00:00:58.080
A primeira palavra é Tipo de Dado,

00:00:58.280 --> 00:01:01.570
esse é um tipo de dado permitido
dentro dessa variável.

00:01:01.770 --> 00:01:03.750
Nesse caso, nós só
aceitamos números inteiros.

00:01:03.950 --> 00:01:05.950
Ficam armazenados dentro da variável.

00:01:06.150 --> 00:01:09.190
Como eu mencionei antes, 
int é diminutivo de <i>integer</i>.

00:01:09.390 --> 00:01:10.940
Uma variável inteira 
é um número inteiro.

00:01:11.140 --> 00:01:13.235
Basicamente qualquer
número incluindo zero,

00:01:13.435 --> 00:01:16.345
e números negativos que
não sejam frações ou decimais.

00:01:16.545 --> 00:01:20.950
0, 5, 145 são exemplos
de inteiros.

00:01:21.150 --> 00:01:24.400
O número de cafés pedidos deve
apenas ser um número inteiro como um,

00:01:24.600 --> 00:01:25.820
dois, quatro e etc.

00:01:26.020 --> 00:01:29.390
Nós não queremos que o cliente faça
um pedido de 1,5 xícaras de café.

00:01:29.590 --> 00:01:31.280
Se eles querem mais de um,
terão que comprar dois,

00:01:31.480 --> 00:01:34.520
então eles podem dar a metade
que sobrar para um amigo.

00:01:34.720 --> 00:01:37.950
Os números negativos,
não fazem muito sentido no nosso caso.

00:01:38.150 --> 00:01:41.660
Não tem tipo de dado no Java 
que só permita números positivos.

00:01:41.860 --> 00:01:44.520
Então depois, na próxima aula
vamos aprender como adicionar um código

00:01:44.720 --> 00:01:48.190
que previne números negativos
de entrar na variável.

00:01:48.390 --> 00:01:51.750
A próxima parte da declaração
do nome da variável.

00:01:51.950 --> 00:01:54.070
Que nesse caso é <i>"numberOfCoffes."</i>.

00:01:54.270 --> 00:01:56.390
Perceba que é escrito com
letras maiúsculas e minúsculas.

00:01:56.590 --> 00:01:59.730
Começa com uma letra minúscula e
como são várias palavras,

00:01:59.930 --> 00:02:01.750
a inicial das próximas palavras
são em letra maiúscula.

00:02:01.950 --> 00:02:05.950
Você pode pensar como se fosse colocar
uma etiqueta de identificação na variável.

00:02:06.150 --> 00:02:08.660
Você pode se referir
a variável por esse nome.

00:02:08.860 --> 00:02:10.990
Aqui eu também fiz um desenho explicativo.

00:02:11.190 --> 00:02:13.460
Essa caixa de variável tem esse nome.

00:02:13.660 --> 00:02:15.450
Se você quiser saber o valor,

00:02:15.650 --> 00:02:18.190
ou mudá-lo, você precisa usar esse nome.

00:02:18.390 --> 00:02:21.840
Escolhendo um nome apropriado
para a variável cabe ao programador,

00:02:22.040 --> 00:02:24.550
dependendo pra que
serve a variável.

00:02:24.750 --> 00:02:27.920
Nesse caso, como a variável
está armazenando o "númeroDeCafés" pedido,

00:02:28.120 --> 00:02:29.810
eu escolhi esse nome para a variável.

00:02:30.010 --> 00:02:33.110
Você pode ter escolhido outros nomes,
como "contador de café" ou,

00:02:33.310 --> 00:02:36.750
"número de cafés pedido", ou
"cafés pedidos".

00:02:36.950 --> 00:02:39.550
Sinceramente, pode ser
qualquer nome, contanto que

00:02:39.750 --> 00:02:43.180
seja fácil para outras pessoas
entenderem o que essa variável representa.

00:02:43.380 --> 00:02:45.460
Quando eu digo que o nome da variável
pode ser qualquer um,

00:02:45.660 --> 00:02:49.070
na verdade tem algumas regras no Java
sobre nomes das variáveis.

00:02:49.270 --> 00:02:50.720
Vamos ver essas regras agora.

00:02:51.520 --> 00:02:54.060
Vou pesquisar por nomes de variáveis Java.

00:02:54.260 --> 00:02:55.780
Esse primeiro link está bom.

00:02:56.880 --> 00:02:59.570
Esse é manual oficial do Java da Oracle.

00:02:59.770 --> 00:03:01.630
Essa primeira parte fala sobre variáveis,

00:03:01.830 --> 00:03:04.190
que você pode ler
no seu tempo livre.

00:03:04.390 --> 00:03:06.370
Aqui embaixo está a parte
que nos interessa.

00:03:06.570 --> 00:03:08.610
Fala sobre como nomear uma variável.

00:03:08.810 --> 00:03:13.270
Pode ser de qualquer tamanho,
mas um nome muito longo não é prático.

00:03:13.470 --> 00:03:16.310
Um nome muito curto por outro lado,
pode ser bom, mas,

00:03:16.510 --> 00:03:21.050
se for só uma letra, como um "N",
você pode não saber o que significa.

00:03:21.250 --> 00:03:23.760
Então você quer acertar o balança
entre um nome descritivo e

00:03:23.960 --> 00:03:26.160
um que não seja longo demais
para digitar sempre.

00:03:26.360 --> 00:03:30.270
Tem vários detalhes aqui
que você pode ler se quiser.

00:03:30.470 --> 00:03:34.080
Mas o ponto principal é que se seu
nome só consiste em uma palavra,

00:03:34.280 --> 00:03:36.860
então escreva essa palavra
em letras minúsculas,

00:03:37.060 --> 00:03:39.970
como, <i>cadence, speed, gear</i>
ou algo assim.

00:03:40.170 --> 00:03:43.030
Se o nome da variável consiste
em mais de um palavra, então você

00:03:43.230 --> 00:03:45.440
vai colocar a primeira letra, de
cada palavra subsequente em maiúscula,

00:03:45.640 --> 00:03:48.000
mas a primeira precisa
ser em letra minúscula.

00:03:48.200 --> 00:03:50.200
Então <i>gearRatio, currentGear</i>

00:03:50.400 --> 00:03:54.080
Nosso exemplo de <i>numberOfCoffes</i>
também segue essa regra.

00:03:54.280 --> 00:03:59.060
A próxima parte da declaração é o
operador de declaração ou sinal de igual.

00:03:59.260 --> 00:04:03.940
Na aula de matemática, você está
acostumado a ver coisas como 1+1=2.

00:04:04.140 --> 00:04:06.570
Mas em Java, o sinal de igual
significa algo diferente.

00:04:06.770 --> 00:04:09.770
O sinal de igual significa: 
atribuir um valor a uma variável.

00:04:09.970 --> 00:04:14.128
Nesse caso, estamos atribuindo
o valor 2 a variável <i>numberOfCoffees</i>.

00:04:14.328 --> 00:04:15.529
Usando nossa metáfora da caixa,

00:04:15.729 --> 00:04:20.050
nós colocamos o número 2 dentro da variável
que represente o número de cafés.

00:04:20.250 --> 00:04:21.750
Então sempre que você ver o sinal de igual,

00:04:21.950 --> 00:04:24.450
pense em pegar o que
tem no lado direito do sinal,

00:04:24.650 --> 00:04:28.070
e colocar dentro da variável
do lado esquerdo.

00:04:28.270 --> 00:04:30.640
Nós já falamos sobre isso um pouco, mas

00:04:30.840 --> 00:04:33.290
esse 2 aqui é o valor inicial da variável.

00:04:33.490 --> 00:04:36.030
Então você coloca o 2
dentro dessa variável.

00:04:36.230 --> 00:04:39.880
Lembre-se que esse valor inicial
deve ser um válido,

00:04:40.080 --> 00:04:41.770
de acordo com o tipo de dado.

00:04:41.970 --> 00:04:44.300
Nesse caso, somente números inteiros
são permitidos nessa variável.

00:04:44.700 --> 00:04:48.690
2 é um número inteiro válido, então não
tem problemas de entrar nessa variável.

00:04:48.890 --> 00:04:54.080
E não menos importante
nós temos isso, bem no final.

00:04:54.280 --> 00:04:56.120
Então para resumir,
quando você declara uma variável,

00:04:56.320 --> 00:04:59.590
você precisa especificar o tipo de dado,
seguido pelo nome da variável,

00:04:59.790 --> 00:05:03.940
um sinal de igual, um valor inicial,
e então um ponto e vírgula.

00:05:04.140 --> 00:05:08.070
Aqui, estamos criando uma variável
chamada <i>numberOfCofffes</i>.

00:05:08.270 --> 00:05:12.270
O tipo de dado é inteiro, então somente
números inteiros podem ser armazenados.

00:05:12.470 --> 00:05:16.610
E estamos atribuindo o número 2 como
o valor inicial dessa variável.

00:05:16.810 --> 00:05:19.810
Ou você pode mudar o nome da variável
de acordo com as regras que mostrei.

00:05:20.010 --> 00:05:23.570
E você pode mudar o valor inicial,
contanto que seja o mesmo tipo de dado.

00:05:23.770 --> 00:05:27.050
Você não pode mudar esse tipo de dado,
tem que estar escrito int, I-N-T.

00:05:27.250 --> 00:05:29.740
Nós vamos aprender
sobre tipos de dados também,

00:05:29.940 --> 00:05:31.910
e eles devem ser escritos
de uma maneira específica.

00:05:32.110 --> 00:05:36.400
Agora, qualquer hora que precise usar
uma variável, apenas se refira pelo nome,

00:05:36.600 --> 00:05:37.910
e então será trocado pelo

00:05:38.110 --> 00:05:40.820
valor atualizado quando
o aplicativo estiver rodando.

00:05:41.020 --> 00:05:42.990
Agora quero que siga em frente e

00:05:43.190 --> 00:05:46.580
adicione essas linhas de código
em seu aplicativo, não copie e cole,

00:05:46.780 --> 00:05:50.810
porque quero que você pratique digitando,
criando e usando a variável.

00:05:51.010 --> 00:05:52.800
Então vá em frente e
rode o aplicativo no seu telefone.

00:05:53.000 --> 00:05:55.690
Tenha certeza que quando você clicar
no botão de pedido, vai ver isso.

00:05:56.690 --> 00:05:59.270
Depois disso, quero que faça
um experimento.

00:05:59.470 --> 00:06:01.440
Tente atribuir um 
novo valor inicial para a variável.

00:06:01.640 --> 00:06:05.570
Então, tente atribuir
um novo nome a variável.

00:06:05.770 --> 00:06:06.920
Ao invés de <i>numberOfCoffees</i>,

00:06:07.120 --> 00:06:09.430
tente algo diferente como
<i>quantity</i>

00:06:09.630 --> 00:06:14.130
Um erro comum de iniciante é pensar
que você digitou tudo certo,

00:06:14.330 --> 00:06:17.150
pois você está passando
os olhos bem rápido.

00:06:17.350 --> 00:06:19.640
Mas se você olhar
individualmente cada caractere,

00:06:19.840 --> 00:06:21.850
você pode notar algum problema.

00:06:22.650 --> 00:06:25.310
Isso vai levar um tempo para terminar,
mas tome o tempo que quiser e

00:06:25.510 --> 00:06:28.550
preste bastante atenção em
cada caractere que você digitou.

00:06:28.750 --> 00:06:32.150
Se você se deparar com problemas,
tente ler a mensagem de erro.

00:06:32.350 --> 00:06:37.660
Por exemplo, essa mensagem de erro diz
que não pode ler o símbolo <i>numberOCoffees</i>.

00:06:37.860 --> 00:06:40.660
O Java não reconhece 
o que significa <i>numberOCoffees</i>,

00:06:40.860 --> 00:06:44.450
pois o nome da variável era na verdade
<i>numberOfCoffees.</i>

00:06:44.650 --> 00:06:47.870
Ainda bem que você pode descobrir pelo erro
ou você pode clicar em desfazer e

00:06:48.070 --> 00:06:49.900
isso as vezes resolve o erro.

00:06:50.700 --> 00:06:53.870
Ou você pode voltar para o código que você
trabalha agora, como o código que demos.

00:06:54.070 --> 00:06:57.280
Quando você acabar, 
cheque esses boxes e continue.

