WEBVTT
Kind: captions
Language: es

00:00:00.220 --> 00:00:01.220
Bueno, Katherine.

00:00:01.353 --> 00:00:03.340
Cuando pulsamos el "+" en la app

00:00:03.620 --> 00:00:05.255
el número de tazas de café aumenta.

00:00:05.380 --> 00:00:07.160
Sí, pasa de dos a tres tazas.

00:00:07.320 --> 00:00:09.926
¿Y qué pasa si volvemos a pulsar?

00:00:10.110 --> 00:00:12.386
-En realidad se queda en tres.
-Sí.

00:00:12.590 --> 00:00:15.486
No importa cuántas veces
le demos al "+" en esta app

00:00:15.700 --> 00:00:18.168
el número de tazas de café es tres.

00:00:18.360 --> 00:00:19.736
-Sí.
-¿Por qué es así?

00:00:19.930 --> 00:00:23.673
Bueno, creo que es
porque actualizamos el código hasta tres.

00:00:23.773 --> 00:00:25.142
Y nunca pasamos de ahí.

00:00:25.200 --> 00:00:27.978
-Ese número está codificado.
-Sí

00:00:28.078 --> 00:00:29.613
-¿Sabes a qué me recuerda?
-¿A qué?

00:00:30.040 --> 00:00:33.016
-Mi profesor de informática decía
-¿Sí?

00:00:34.410 --> 00:00:36.853
-cuando entregues tu trabajo final
-¿Sí?

00:00:37.100 --> 00:00:39.053
por favor,
nada de números mágicos.

00:00:39.122 --> 00:00:40.123
¿Qué es eso?

00:00:40.260 --> 00:00:41.892
El tres es una especie de número mágico.

00:00:42.060 --> 00:00:43.680
-Vale.
-Es un número mágico

00:00:43.930 --> 00:00:45.406
porque hacemos la suma en la cabeza

00:00:45.530 --> 00:00:47.880
pero al ordenador le decimos
la respuesta correcta.

00:00:48.110 --> 00:00:52.220
Vale, pero sería mejor
si el ordenador lo calculara él mismo.

00:00:52.500 --> 00:00:54.800
Espera. Cuando empiezas a hablar
de cálculos matemáticos

00:00:54.893 --> 00:00:56.786
-¿Sí?
-tengo que empezar a escribir.

00:00:56.980 --> 00:00:58.666
Vale.
Vamos a escribir un pseudocódigo.

00:00:59.453 --> 00:01:01.253
Vamos a escribir
un pseudocódigo para esto.

00:01:01.853 --> 00:01:04.780
Supón que ya hemos creado
una variable <i>quantity</i> con un valor dos.

00:01:05.560 --> 00:01:07.350
Cuando se pulsa la tecla "+" en la app

00:01:07.575 --> 00:01:10.087
vamos a coger el valor <i>quantity</i>, que es 2

00:01:10.450 --> 00:01:12.189
añadir uno más, para que sea 3

00:01:12.380 --> 00:01:15.826
y a almacenarlo como si fuera
un valor nuevo en la variable <i>quantity</i>.

00:01:16.550 --> 00:01:18.295
Si volvemos a pulsar el "+"

00:01:18.500 --> 00:01:21.631
cogemos
el valor de <i>quantity</i> actual que es 3

00:01:21.866 --> 00:01:24.026
y le añadimos uno, que lo convierte en 4.

00:01:24.180 --> 00:01:26.903
Luego lo guardamos
como el nuevo valor dentro de la variable.

00:01:27.637 --> 00:01:29.606
Este sería el código Java correspondiente.

00:01:30.200 --> 00:01:31.700
Primero inicializamos una variable.

00:01:32.246 --> 00:01:34.053
Si se vuelve a pulsar la tecla

00:01:34.240 --> 00:01:37.080
cogemos el valor de <i>quantity</i> existente,
le añadimos uno

00:01:37.293 --> 00:01:39.990
y lo guardamos como un valor nuevo
de la variable <i>quantity</i>.

00:01:41.670 --> 00:01:44.821
Cuando leas estas líneas de código,
te puedes imaginar las cajas en tu cabeza.

00:01:45.120 --> 00:01:47.410
Aunque estamos acostumbrados
a leer de izquierda a derecha

00:01:47.800 --> 00:01:50.820
yo siempre empiezo
por lo que está a la derecha del igual.

00:01:51.826 --> 00:01:55.031
En este caso, tenemos
un valor actual de <i>quantity</i>, que es 2

00:01:55.300 --> 00:01:57.593
y le sumamos 1, lo que da 3.

00:01:58.100 --> 00:02:01.605
Luego guardamos el tres
dentro de la variable, así.

00:02:02.090 --> 00:02:05.275
La parte derecha
es una expresión que ya aprendimos.

00:02:05.590 --> 00:02:08.705
Una expresión puede estar formada
por variables, operadores

00:02:08.833 --> 00:02:10.139
valores literales, etc.

00:02:10.630 --> 00:02:14.651
Si volvemos a pulsar la tecla,
podemos decir <i>quantity = quantity + 1</i>.

00:02:15.150 --> 00:02:17.333
En estos momentos,
el valor de <i>quantity</i> es 3.

00:02:17.660 --> 00:02:20.223
Si añadimos una, es 4.

00:02:20.680 --> 00:02:24.094
Luego guardamos el nuevo valor
en la variable <i>quantity</i> así.

00:02:25.320 --> 00:02:27.631
Básicamente
lo hemos reducido a un modelo común

00:02:27.690 --> 00:02:30.580
que el ordenador puede repetir
cada vez que se pulse la tecla.

00:02:31.290 --> 00:02:33.513
En lugar de volver a escribir
una línea de código

00:02:33.740 --> 00:02:37.586
que dice el número específico
de tazas de café

00:02:37.960 --> 00:02:40.280
podemos escribir <i>quantity = quantity + 1</i>,

00:02:40.460 --> 00:02:43.747
y seguir modificando
el valor de <i>quantity</i> existente.

00:02:44.200 --> 00:02:45.526
Es mucho más flexible.

00:02:45.993 --> 00:02:48.726
Digamos que quieres cambiar
<i>int quantity</i> a 3

00:02:48.920 --> 00:02:51.406
el resto de las líneas de código
no tendrían que cambiar

00:02:51.595 --> 00:02:54.958
porque siempre usamos
el último valor de <i>quantity</i>, sea cual sea.

00:02:55.675 --> 00:02:59.196
En el método antiguo, para actualizar
el valor de <i>quantity</i> a 3,

00:02:59.729 --> 00:03:01.598
después de pulsar el "+"

00:03:01.746 --> 00:03:04.410
tendrías que escribir
una línea de código nueva, <i>quantity = 4</i>.

00:03:04.666 --> 00:03:06.770
Luego tendrías que actualizar esta
a <i>quantity = 5</i>.

00:03:07.360 --> 00:03:10.674
Si actualizamos <i>quantity</i>
a un valor literal nuevo cada vez

00:03:10.960 --> 00:03:13.944
es muy difícil para el ordenador
saber cuál es el modelo entre ellos.

00:03:14.870 --> 00:03:18.266
Sin embargo, si actualizamos <i>quantity</i>
usando el valor actual de la variable

00:03:18.540 --> 00:03:20.493
lo aumentamos de un modo predecible.

00:03:20.626 --> 00:03:24.150
Así, el ordenador podrá hacerlo
cada vez que se pulsa la tecla "+".

00:03:25.090 --> 00:03:27.929
Este enfoque funcionará mucho mejor
con nuestra app para pedir cafés.

00:03:28.853 --> 00:03:30.300
Cada vez que pulsamos el "+"

00:03:30.440 --> 00:03:33.063
podemos aumentar
el valor <i>quantity</i> existente en 1.

00:03:33.920 --> 00:03:38.133
Practica escribiendo cada línea de código
en las cajas que te proporcionamos aquí.

00:03:38.860 --> 00:03:41.186
Presta atención
a cada carácter y a cada símbolo.

00:03:42.133 --> 00:03:44.020
Es la primera vez
que actualizas una variable

00:03:44.120 --> 00:03:45.433
usando la variable misma.

00:03:45.680 --> 00:03:48.144
Asegúrate de escribir
el nombre de la variable correctamente.

00:03:48.860 --> 00:03:52.693
Cuando acabes, rellena esta columna
que representa el valor actual de <i>quantity</i>

00:03:52.853 --> 00:03:54.806
después de ejecutar cada línea de código.

