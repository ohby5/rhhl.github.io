WEBVTT
Kind: captions
Language: zh-CN

00:00:00.750 --> 00:00:03.360
为了创建这个布局 我们首先想想需要哪些 View

00:00:03.360 --> 00:00:07.420
我假设所有的这一切都已经建好了

00:00:07.420 --> 00:00:10.910
只是讨论需要增加到布局里的新东西

00:00:10.910 --> 00:00:15.030
我们需要增加的这两个 View 是内容为 Toppings 的 TextView

00:00:15.030 --> 00:00:18.090
和内容为生奶的 CheckBox 视图

00:00:18.090 --> 00:00:21.470
你可能不知道 Android 里存在这个 View

00:00:21.470 --> 00:00:24.210
但是希望你用 Google 搜索帮助你找到答案

00:00:25.380 --> 00:00:28.300
继续第二步 我们需要定位 View

00:00:28.300 --> 00:00:30.820
假设这些 View 已经正确定位好

00:00:30.820 --> 00:00:35.470
我们只需要在同一排垂直增加 Toppings 和 Whipped cream

00:00:35.470 --> 00:00:37.000
因为根 View 是垂直的

00:00:37.000 --> 00:00:39.990
LinearLayout 我们只是在它的顶部增加两个 View

00:00:40.990 --> 00:00:43.580
第三步 我们需要设计 View

00:00:43.580 --> 00:00:46.260
在 Toppings 标题的样式和 Quantity 以及 Order Summary 标题的样式是一样的

00:00:46.260 --> 00:00:49.030
我们只是复制

00:00:49.030 --> 00:00:51.434
和粘贴早已存在的标题

00:00:51.434 --> 00:00:54.920
这个 CheckBox 视图是新的 所以我们相应地需要设计它的样式

00:00:54.920 --> 00:00:59.176
让框与文本之间的距离为 24 dp

00:00:59.176 --> 00:01:04.054
将 Whipped cream 字体大小改为 16 sp

00:01:04.054 --> 00:01:05.910
现在 在我们的应用上做出这些改变

00:01:07.180 --> 00:01:11.020
为了添加一个像 QUANTITY 的标题的Toppings 标题

00:01:11.020 --> 00:01:12.730
我只是复制粘贴这段代码

00:01:12.730 --> 00:01:16.775
复制它 然后添加它到这个垂直 LinearLayout 的顶部

00:01:18.080 --> 00:01:20.170
好 所以现在显示两个 QUANTITY

00:01:20.170 --> 00:01:22.960
我想要改变文本使它显示 Toppings

00:01:22.960 --> 00:01:25.380
复制底部空白部分

00:01:25.380 --> 00:01:28.790
这样标题和下面的内容之间有一些空间

00:01:30.260 --> 00:01:32.660
在我们没有添加 CheckBox 给应用之前

00:01:32.660 --> 00:01:33.990
我想用 Google 搜索怎样去做

00:01:33.990 --> 00:01:37.720
搜索 checkbox android

00:01:37.720 --> 00:01:40.840
记得加上 android 因为其他平台也有可能有 CheckBox

00:01:40.840 --> 00:01:44.850
例如网页 或其他移动平台

00:01:44.850 --> 00:01:48.090
这会让你得到和 Android 相关的结果

00:01:48.090 --> 00:01:49.760
我们试一下第一个链接

00:01:49.760 --> 00:01:52.900
这是 CheckBox 类的参考文档

00:01:52.900 --> 00:01:56.420
向下滚动 可以看到一个类的概述

00:01:56.420 --> 00:01:58.960
然后直接进入 XML 属性

00:01:58.960 --> 00:02:02.880
我真的喜欢这个 即使它是 CheckBox 在 XML 中使用的一些例子

00:02:02.880 --> 00:02:05.100
返回搜索结果

00:02:05.100 --> 00:02:07.070
单击第二个链接

00:02:07.070 --> 00:02:10.440
酷 现在它显示一些 CheckBox 的图片

00:02:10.440 --> 00:02:12.040
这是一些 XML

00:02:12.040 --> 00:02:13.180
这看起来非常好

00:02:13.180 --> 00:02:16.140
在 LinearLayout 里有两个 CheckBox

00:02:16.140 --> 00:02:19.070
我只是复制第一个 CheckBox 的代码

00:02:19.070 --> 00:02:20.330
然后粘贴它到我们的应用里

00:02:21.590 --> 00:02:25.912
返回我们的应用 我将它粘贴到 Toppings 文本之后

00:02:25.912 --> 00:02:28.753
不过在 QUANTITY 文本之前 所以这里正好

00:02:28.753 --> 00:02:33.040
我想要修改 XML 因为它不是非常适合我们的使用情况

00:02:33.040 --> 00:02:36.710
我将删除 id 和这里的 text

00:02:36.710 --> 00:02:39.750
替换肉 因为咖啡店里不卖肉

00:02:39.750 --> 00:02:41.660
我将设计 Whipped cream 的类型

00:02:43.030 --> 00:02:45.940
顺便说一句 你之前看到的 @string/meat

00:02:45.940 --> 00:02:50.410
是指在 strings.xml 文件里的一个资源字符串

00:02:50.410 --> 00:02:52.690
之后我们会再谈谈这一点 但是现在

00:02:52.690 --> 00:02:55.550
你可以在这里直接输入字符串

00:02:55.550 --> 00:02:59.350
看 预览更新了 所以现在有一个叫 Whipped cream 的 CheckBox

00:02:59.350 --> 00:03:03.380
CheckBox 给你一个框

00:03:03.380 --> 00:03:08.100
和一些文本 所以你在这里你不必增加另外的文本视图

00:03:08.100 --> 00:03:10.850
我们也不需要 onClick 这一行

00:03:12.089 --> 00:03:16.500
对于这个编码任务我们所关心的是使 CheckBox 出现在这里

00:03:16.500 --> 00:03:20.260
你能够到这个 XML 的其他方式是通过

00:03:20.260 --> 00:03:21.460
检查常见的 Android 视图备忘单

00:03:22.540 --> 00:03:25.410
这个备忘单列出了一些常见的 Android 视图

00:03:25.410 --> 00:03:27.460
它有一些 XML 的例子

00:03:28.480 --> 00:03:32.739
这是 CheckBox 视图 这是它是什么样的一个例子

00:03:32.739 --> 00:03:34.125
和对应的 XML

00:03:34.125 --> 00:03:37.270
你可以从这复制 XML 代码

00:03:38.340 --> 00:03:41.010
返回 Android Studio 然后运行应用来看它是什么样的

00:03:42.480 --> 00:03:43.320
它在这里

00:03:43.320 --> 00:03:44.050
看起来非常好

00:03:44.050 --> 00:03:46.695
我们有一个 Toppings 标题和一个 Whipped cream 复选框

00:03:47.750 --> 00:03:50.330
我们也得到了这个酷的动画 当我们勾选这个框的时候

00:03:51.360 --> 00:03:54.790
我看到的唯一的问题是没有间距

00:03:54.790 --> 00:03:57.840
例如 QUANTITY 标题和 Whipped cream 复选框太近了

00:03:57.840 --> 00:04:01.390
它们之间没有足够的空间

00:04:02.410 --> 00:04:04.480
返回我们标注红线的地方

00:04:04.480 --> 00:04:09.370
我们应该在这增加 24 dp 的空间 并改变字体大小为 16 sp

00:04:10.830 --> 00:04:12.960
首先 我将先改变字体的大小

00:04:12.960 --> 00:04:18.110
输入 android:textSize=“16sp”

00:04:18.110 --> 00:04:22.043
我将打开这里的预览来检查它是否增加字体大小

00:04:22.043 --> 00:04:23.690
确实变大了

00:04:23.690 --> 00:04:26.600
如果你不确定它是否刷新 你可以一直按这个按钮

00:04:26.600 --> 00:04:27.430
好

00:04:27.430 --> 00:04:29.950
现在为了弄清楚间隔

00:04:29.950 --> 00:04:32.240
我通过一些实验和错误工作得到了经验

00:04:32.240 --> 00:04:34.370
我试着设置外间距值

00:04:34.370 --> 00:04:38.340
和内间距值 事实证明 paddingLeft

00:04:38.340 --> 00:04:42.520
控制着框和文本之间的间距

00:04:42.520 --> 00:04:43.285
现在我们增加内间距

00:04:44.900 --> 00:04:46.960
文本移动到这了

00:04:46.960 --> 00:04:49.040
但还存在一个问题

00:04:49.040 --> 00:04:53.090
这里有足够的垂直空间 但是这里没有

00:04:53.090 --> 00:04:57.760
我要么添加底部内边距 要么添加底部外边距给这个 CheckBox

00:04:57.760 --> 00:05:01.720
或添加顶部内边距 又或者添加顶部外边距给 QUANTITY 标题

00:05:01.720 --> 00:05:02.620
无论是哪种工作方式都能奏效

00:05:02.620 --> 00:05:07.110
我选择给 QUANTITY 标题添加 marginTop（顶部外边距）属性

00:05:07.110 --> 00:05:08.880
看起来更好了

00:05:08.880 --> 00:05:10.990
现在各个部分之间的间距更匀称了

00:05:10.990 --> 00:05:12.790
我将在我的设备上运行这个应用

00:05:14.210 --> 00:05:15.170
这是应用运行效果

00:05:15.170 --> 00:05:16.320
看起来非常好

00:05:16.320 --> 00:05:17.460
干得漂亮

00:05:17.460 --> 00:05:21.250
当你需要将更多的 UI 变化添加到你的应用时 你可以按照

00:05:21.250 --> 00:05:25.360
Google 搜索网上信息的模式 然后将它应用到你的应用里

