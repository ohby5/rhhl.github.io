WEBVTT
Kind: captions
Language: ru

00:00:00.420 --> 00:00:03.820
Теперь м знаем что можем исползовать
булеан для показа статуса флажка

00:00:03.820 --> 00:00:07.290
и давайте изменим состав заказа так

00:00:07.290 --> 00:00:10.830
чтобы было понятно -
хотим мы взбитые сливки или нет.

00:00:10.830 --> 00:00:13.860
Если я отмечу что хочу взбитые
сливки и кликну на кнопку Оrder

00:00:13.860 --> 00:00:17.870
то должна добавиться строка
в составе заказа которая указывает

00:00:17.870 --> 00:00:19.800
хочу ли я эту добавку.

00:00:19.800 --> 00:00:24.080
Она указывает Тrue если
я отмечу флажок для добавки.

00:00:24.080 --> 00:00:29.120
А если я сниму отметку и кликну
Оrder то будет показано False.

00:00:29.120 --> 00:00:33.590
Android сам отмечает флажок
и у нас есть код в приложении

00:00:33.590 --> 00:00:37.650
обрабатывающий клик кнопки Оrder
чтобы создать начальный список.

00:00:37.650 --> 00:00:41.320
Что нам осталось внести -
это вот эту строку с текстом здесь

00:00:41.320 --> 00:00:42.940
в которой написано <i>whipped cream</i> и

00:00:42.940 --> 00:00:48.010
нам надо поставить справа значение
в зависимости от наличия ометки на флажке.

00:00:48.010 --> 00:00:52.210
Перед тем как работать с кодом,
обдумаем псевдокод

00:00:52.210 --> 00:00:56.280
чтобы закрепить идеи о том,
что должен делать код.

00:00:56.280 --> 00:00:59.520
Когда кнопка Оrder нажата,
мы должны пройти такие шаги.

00:00:59.520 --> 00:01:03.390
Первый - проверить состояние флажка и

00:01:03.390 --> 00:01:05.140
сохранить его в переменной.

00:01:05.140 --> 00:01:06.300
Вот это состояние.

00:01:07.300 --> 00:01:09.590
Как только устройство Android
понимает отмечено или нет,

00:01:09.590 --> 00:01:13.410
мы можем передать эту информацию
в алгоритм <i>order summary</i>,

00:01:13.410 --> 00:01:15.710
алгоритм, котрый создает этот текст.

00:01:15.710 --> 00:01:19.520
В третьем шаге мы можем изменить
текст чтобы добавить эту строку здесь

00:01:19.520 --> 00:01:22.960
- добавлять или нет взбитые сливки.

00:01:22.960 --> 00:01:25.120
Есть еще пару шагов.

00:01:25.120 --> 00:01:28.010
Чтобы убедиться что все делается
верно, вы можете записать

00:01:28.010 --> 00:01:32.220
значение переменной и проверить что
показано реальное состояние отметки.

00:01:33.220 --> 00:01:35.830
Мы рассказывали о ведении журнала
раньше, но вот еще один пример.

00:01:36.990 --> 00:01:42.510
Вы можете написать <i>log.v</i>, исполь-
зовать название класса - <i>MainActivity</i>

00:01:42.510 --> 00:01:46.160
а потом строчное сообщение, которое
хотите отобразить в журнале.

00:01:47.200 --> 00:01:50.890
Указывая здесь цену, мы проверяем
что после первого шага

00:01:50.890 --> 00:01:54.880
алгоритм <i>CalculatePrice</i>
выдает ожидаемое значение.

00:01:54.880 --> 00:01:56.150
При запуске приложения

00:01:56.150 --> 00:02:00.970
вы сможете проверить журналы с этой
вкладкой чтобы увидеть это сообщение.

00:02:00.970 --> 00:02:04.610
Я часто использую регистрацию
сообщений когда есть проблемы

00:02:04.610 --> 00:02:08.360
и я не уверена в какой
именно строке кода.

00:02:08.360 --> 00:02:11.830
После того как проблема устранена
и все работает как надо

00:02:11.830 --> 00:02:14.520
я просто удаляю сообщение журнала.

00:02:14.520 --> 00:02:15.260
Итак, временно,

00:02:15.260 --> 00:02:19.240
вы можете добавить сообщение журнала
чтобы показать состояние отметки.

00:02:19.240 --> 00:02:22.055
Я удаляю сообщения журнала после
того как они не нужны потому

00:02:22.055 --> 00:02:24.820
что журнал ограничен по длине.

00:02:24.820 --> 00:02:27.540
Если в нем будет пачка
ненужных сообщений,

00:02:27.540 --> 00:02:31.100
то могут пропадать важные
сообщения про ошибки.

00:02:32.118 --> 00:02:35.390
После того как вы проверили и
сообщение про отметку в составе

00:02:35.390 --> 00:02:39.410
заказа показывается, вам на
самом деле оно больше не нужно.

00:02:39.410 --> 00:02:41.240
Когда закончите - отметьте здесь.

