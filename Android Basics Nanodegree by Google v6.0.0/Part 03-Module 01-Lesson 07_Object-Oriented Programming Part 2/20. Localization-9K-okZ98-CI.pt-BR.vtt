WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:02.400
Quando colocamos um app
na Google Play Store,

00:00:02.434 --> 00:00:04.734
temos uma enorme gama
de usuários.

00:00:04.767 --> 00:00:08.534
É difícil prever o dispositivo
em que nosso app rodará.

00:00:08.567 --> 00:00:10.634
Talvez um celular ou tablet,

00:00:10.667 --> 00:00:13.000
talvez uma versão antiga
da plataforma Android,

00:00:13.033 --> 00:00:15.534
ou talvez uma língua diferente
da que usamos.

00:00:16.200 --> 00:00:19.400
Há recomendações a seguir,
quando for criar um app,

00:00:19.434 --> 00:00:22.334
para que ele funcione
com todo tipo de usuário.

00:00:23.033 --> 00:00:26.000
Uma delas é localizá-lo.

00:00:26.033 --> 00:00:29.200
Há uma check-list de localização
que você pode consultar.

00:00:29.234 --> 00:00:32.300
"Localizar" significa adaptar
para diferentes localidades,

00:00:32.334 --> 00:00:34.501
combinações
de idioma e país,

00:00:34.534 --> 00:00:38.334
possibilitando a todo usuário
uma experiência agradável.

00:00:38.367 --> 00:00:41.801
Isso pode significar
uma alteração no design

00:00:41.834 --> 00:00:44.801
e nas texturas
que aparecem no seu app.

00:00:45.334 --> 00:00:49.400
Agora, mostraremos como fazer
seu app suportar várias línguas.

00:00:49.434 --> 00:00:53.334
Primeiro, vejamos o dispositivo
do ponto de vista do usuário.

00:00:53.367 --> 00:00:55.167
Se eu prefiro usar
outra língua,

00:00:55.200 --> 00:00:59.400
posso ir às Configurações
e clicar em "Idioma e inserção".

00:01:00.200 --> 00:01:01.667
Clicando em "Idioma",

00:01:01.701 --> 00:01:05.634
posso ver todos os idiomas
suportados pelo Android.

00:01:05.667 --> 00:01:08.467
Há idiomas logográficos,
como o Chinês,

00:01:08.501 --> 00:01:10.634
e da direita para a esquerda,
como o Árabe.

00:01:11.234 --> 00:01:13.601
Vou mudar o idioma
para Espanhol.

00:01:13.634 --> 00:01:17.634
De repente, todo texto
agora está em Espanhol.

00:01:17.667 --> 00:01:20.367
Veja o aplicativo
de Configurações.

00:01:20.400 --> 00:01:23.501
Os demais aplicativos
também estarão em Espanhol,

00:01:23.534 --> 00:01:26.300
caso suportem essa língua.

00:01:26.334 --> 00:01:30.100
Contudo, abrir o Just Java
é decepcionante,

00:01:30.133 --> 00:01:33.067
pois tudo no app
está em Inglês,

00:01:33.100 --> 00:01:35.701
ao passo que, em outros,
está em Espanhol.

00:01:35.734 --> 00:01:38.801
Como fazer nosso app
suportar Espanhol?

00:01:38.834 --> 00:01:42.801
Sabemos que apps podem conter
arquivos Java e recursos.

00:01:42.834 --> 00:01:45.300
Podemos fornecer
recursos padrão,

00:01:45.334 --> 00:01:47.467
assim como recursos
alternativos,

00:01:47.501 --> 00:01:50.267
dependendo do tamanho
do dispositivo do usuário,

00:01:50.300 --> 00:01:52.501
do idioma escolhido,
da versão do Android,

00:01:52.534 --> 00:01:55.234
e do número de pixels da tela,
por exemplo.

00:01:55.267 --> 00:01:56.534
No Just Java,

00:01:56.567 --> 00:01:59.400
podemos fornecer strings
de texto padrão, em Inglês...

00:01:59.434 --> 00:02:02.601
e strings alternativas,
em outras línguas.

00:02:02.634 --> 00:02:06.033
Se alguém usa Francês
como língua padrão,

00:02:06.067 --> 00:02:09.167
o sistema carregará
as traduções em Francês,

00:02:09.200 --> 00:02:11.868
em vez do padrão, em Inglês.

00:02:11.901 --> 00:02:15.634
Este artigo explica a suportar
várias línguas num app.

00:02:16.434 --> 00:02:19.734
Mais para baixo, podemos ver
a estrutura do projeto.

00:02:20.467 --> 00:02:23.200
Podemos adicionar
um subdiretório em "res"

00:02:23.234 --> 00:02:26.100
que contém recursos
para determinada língua.

00:02:26.133 --> 00:02:27.834
Esta é a pasta
com valores padrão,

00:02:27.868 --> 00:02:30.934
onde escolhemos pôr
as strings de texto em Inglês.

00:02:30.968 --> 00:02:32.801
Na pasta com valores "es",

00:02:32.834 --> 00:02:35.400
temos todas as strings
de texto em Espanhol.

00:02:35.434 --> 00:02:37.267
Na pasta com valores "fr",

00:02:37.300 --> 00:02:39.901
temos todas as traduções
para Francês.

00:02:39.934 --> 00:02:42.968
Se um usuário escolhe
o Espanhol como idioma,

00:02:43.000 --> 00:02:45.033
o sistema carregará
estes recursos

00:02:45.067 --> 00:02:47.100
da pasta "values-es".

00:02:47.133 --> 00:02:48.734
Se esta pasta
não existisse,

00:02:48.767 --> 00:02:52.000
o sistema recorreria
aos recursos padrão.

00:02:52.033 --> 00:02:54.834
Se um usuário escolhe
o Francês como padrão,

00:02:54.868 --> 00:02:57.501
o sistema carregará
estes recursos.

00:02:57.534 --> 00:03:00.734
Aliás, "es" é o código
para Espanhol...

00:03:00.767 --> 00:03:03.501
e "fr" é o código
para Francês.

00:03:03.534 --> 00:03:06.267
O Android usa
os códigos de língua ISO.

00:03:06.300 --> 00:03:08.367
Aqui estão exemplos
de línguas

00:03:08.400 --> 00:03:11.801
e seus códigos de duas letras
correspondentes.

00:03:11.834 --> 00:03:14.434
Vamos aos detalhes
de implementação.

00:03:14.467 --> 00:03:16.934
Para o sistema aplicar
diferentes traduções

00:03:16.968 --> 00:03:20.200
aos textos do nosso app,
é preciso isolar todo o texto

00:03:20.234 --> 00:03:22.200
de toda a lógica
do aplicativo,

00:03:22.234 --> 00:03:26.334
criando um conjunto de strings
em XML na pasta "values".

00:03:26.367 --> 00:03:29.267
É um recurso em XML
que contém uma lista

00:03:29.300 --> 00:03:33.133
de todas as strings
visíveis ao usuário.

00:03:33.167 --> 00:03:35.701
É a primeira vez que vemos
um XML ser usado

00:03:35.734 --> 00:03:38.200
para algo diferente
de definir um layout.

00:03:38.234 --> 00:03:40.868
Isto define
uma lista de recursos.

00:03:40.901 --> 00:03:42.400
Este é o recurso
de uma string.

00:03:42.434 --> 00:03:45.667
O nome que escolhemos
para ele é "title"

00:03:45.701 --> 00:03:48.968
e o valor desta string
é "My Application".

00:03:49.501 --> 00:03:51.534
Este é o recurso
de outra string,

00:03:51.567 --> 00:03:54.834
ao qual nos referimos
por "hello_world"

00:03:54.868 --> 00:03:57.701
e o valor é "Hello World!".

00:03:57.734 --> 00:03:59.567
Na pasta "values-es",

00:03:59.601 --> 00:04:01.667
podemos criar
um arquivo strings.xml,

00:04:01.701 --> 00:04:05.601
mas com as traduções
daquelas strings em Espanhol.

00:04:05.634 --> 00:04:09.767
O recurso desta string
ainda se chama "title",

00:04:09.801 --> 00:04:14.467
mas agora o valor é a tradução
em Espanhol de "My Application".

00:04:14.501 --> 00:04:17.634
O mesmo vale para o recurso
da string "hello_world",

00:04:17.667 --> 00:04:20.334
agora com a tradução
em Espanhol aqui.

00:04:20.367 --> 00:04:22.701
Aqui há outro exemplo
da tradução em Francês

00:04:22.734 --> 00:04:25.400
do arquivo strings.xml.

00:04:25.434 --> 00:04:27.868
Quando declaramos
nossas strings como recursos,

00:04:27.901 --> 00:04:30.667
podemos nos referir a elas
no XML e no Java

00:04:30.701 --> 00:04:33.167
usando a sintaxe correta.

00:04:33.200 --> 00:04:36.234
No código Java,
nos referimos a strings assim.

00:04:36.267 --> 00:04:39.701
E assim que nos referimos
a recursos de string.

00:04:39.734 --> 00:04:41.801
Primeiro, chamamos
o método getResources()

00:04:41.834 --> 00:04:43.701
para obter os recursos
do aplicativo.

00:04:43.734 --> 00:04:45.400
Depois,
chamamos getString()

00:04:45.434 --> 00:04:50.000
e passamos como entrada
o ID do recurso da string.

00:04:50.033 --> 00:04:53.300
Neste caso,
é "R.string.hello_world".

00:04:53.334 --> 00:04:54.968
String é um tipo de recurso

00:04:55.000 --> 00:04:58.400
e "hello_world"
é o nome do recurso.

00:04:58.434 --> 00:05:00.167
Tudo isto, do lado direito,

00:05:00.200 --> 00:05:02.300
torna-se a string
"hello_world"

00:05:02.334 --> 00:05:05.234
e é armazenada
nesta variável string.

00:05:05.267 --> 00:05:07.934
Esta expressão toda
representa "hello_world"

00:05:07.968 --> 00:05:10.367
e é armazenada
nesta variável.

00:05:10.400 --> 00:05:13.601
Isto é similar à referência
a recursos de imagem

00:05:13.634 --> 00:05:17.567
no código Java,
usando "R.drawable.photo",

00:05:17.601 --> 00:05:20.200
ou seja lá qual for
o nome da imagem.

00:05:20.234 --> 00:05:22.267
No XML, podemos
nos referir às strings

00:05:22.300 --> 00:05:26.300
usando a notação "@string"
e o nome do recurso.

00:05:26.334 --> 00:05:29.300
Agora, o XML e o Java
podem continuar os mesmos,

00:05:29.334 --> 00:05:33.200
a despeito da escolha
de idioma do usuário.

00:05:33.234 --> 00:05:36.667
Não precisamos de um layout
com o atributo de texto

00:05:36.701 --> 00:05:39.167
traduzido em Espanhol.

00:05:39.200 --> 00:05:41.367
O Android baixará
as traduções corretas

00:05:41.400 --> 00:05:44.801
de acordo com o idioma
de preferência do usuário.

00:05:44.834 --> 00:05:46.334
Legal, não é?

00:05:46.868 --> 00:05:48.234
Acompanhe estas etapas

00:05:48.267 --> 00:05:51.701
para localizar
as strings no seu app.

00:05:51.734 --> 00:05:53.834
Primeiro, extraia
as strings incorporadas

00:05:53.868 --> 00:05:58.133
dos arquivos XML e Java
para um arquivo strings.xml.

00:05:58.167 --> 00:05:59.968
Depois,
atualize o XML e o Java

00:06:00.067 --> 00:06:02.634
para que se refiram
aos recursos de string.

00:06:03.400 --> 00:06:06.534
Então, forneça traduções
para outras línguas.

00:06:07.234 --> 00:06:09.367
Comecemos
pela primeira etapa.

00:06:09.400 --> 00:06:10.968
No layout activity_main,

00:06:11.000 --> 00:06:13.200
vejamos quais strings
estão incorporadas

00:06:13.234 --> 00:06:15.000
no nosso layout.

00:06:15.033 --> 00:06:17.534
Um TextView exibe
a palavra "toppings"

00:06:17.567 --> 00:06:19.767
como cabeçalho
da interface de usuário.

00:06:19.801 --> 00:06:22.667
A palavra em Inglês
está incorporada ao layout,

00:06:22.701 --> 00:06:26.100
conforme diz o aviso
do Android Studio,

00:06:26.133 --> 00:06:30.100
que recomenda usarmos
um recurso "@string".

00:06:30.133 --> 00:06:33.601
Vou deletar isto
e escrever "@string/toppings"

00:06:33.634 --> 00:06:35.501
como nome do recurso.

00:06:35.534 --> 00:06:37.534
Agora um erro diz
que o Android Studio

00:06:37.567 --> 00:06:39.667
não reconhece esse recurso.

00:06:39.701 --> 00:06:42.801
Preciso ir até strings.xml
e defini-lo.

00:06:42.834 --> 00:06:45.000
Explorando as pastas
do nosso app,

00:06:45.033 --> 00:06:49.901
posso ir até res/values
e procurar por strings.xml.

00:06:49.934 --> 00:06:52.000
Algumas strings
já estão preenchidas.

00:06:52.033 --> 00:06:53.734
Adicionarei mais uma.

00:06:54.434 --> 00:06:57.968
Declarei um novo recurso
de string chamado "toppings"

00:06:58.000 --> 00:07:00.667
cujo valor é o significado
de "toppings" em Inglês.

00:07:00.701 --> 00:07:03.133
O nome do recurso
não irá mudar,

00:07:03.167 --> 00:07:07.100
mas o valor traduzido, sim,
dependendo do idioma.

00:07:07.133 --> 00:07:08.968
Veja que deixei
um comentário

00:07:09.000 --> 00:07:12.000
dizendo onde a string
é usada no app.

00:07:12.033 --> 00:07:13.534
Isso ajudará o tradutor,

00:07:13.567 --> 00:07:15.901
ou a agência de tradução
que está ajudando,

00:07:15.934 --> 00:07:20.400
a entender o contexto
de uso da string no app.

00:07:20.434 --> 00:07:22.667
Também especificamos
um limite de caracteres.

00:07:22.701 --> 00:07:24.701
Isso também ajudará
o tradutor

00:07:24.734 --> 00:07:27.033
quando o espaço
na tela for limitado.

00:07:27.767 --> 00:07:31.033
O tradutor não escolherá
uma tradução longa

00:07:31.067 --> 00:07:34.501
tendo em mente
que o espaço é limitado.

00:07:34.534 --> 00:07:36.100
Voltando ao arquivo layout,

00:07:36.133 --> 00:07:39.601
agora o erro sumiu,
pois o recurso de string existe.

00:07:40.234 --> 00:07:43.834
E quanto a strings incorporadas
aos nossos arquivos Java?

00:07:44.534 --> 00:07:46.901
Vejamos nosso método
createOrderSummary(),

00:07:46.934 --> 00:07:50.400
que traz incorporadas em si
muitas strings em Inglês.

00:07:50.434 --> 00:07:52.467
Começaremos movendo
a frase "Thank you!"

00:07:52.501 --> 00:07:54.901
para strings.xml.

00:07:54.934 --> 00:07:59.067
Aqui criei o recurso de string
com o nome "thank_you".

00:07:59.100 --> 00:08:02.801
Agora, atualizamos a instrução
para que se refira ao nome

00:08:02.834 --> 00:08:04.200
do novo recurso de string.

00:08:04.234 --> 00:08:07.000
Estamos usando o getString(),
da classe activity,

00:08:07.033 --> 00:08:09.067
que toma recursos de string
como entrada

00:08:09.100 --> 00:08:11.000
e retorna strings.

00:08:11.033 --> 00:08:14.033
A string "thank_you", então,
é adicionada a esta mensagem.

00:08:14.834 --> 00:08:17.200
Há casos em que é melhor
não traduzir

00:08:17.234 --> 00:08:19.400
partes de uma string
de texto.

00:08:19.434 --> 00:08:21.934
Por exemplo, você pode
querer criar uma string

00:08:21.968 --> 00:08:25.300
e deixar espaços para serem
preenchidos com variáveis.

00:08:26.200 --> 00:08:29.701
Neste caso, marque as partes
que não devem ser traduzidas

00:08:29.734 --> 00:08:31.934
com uma tag xliff.

00:08:31.968 --> 00:08:34.701
Não faria sentido
traduzir o nome do usuário,

00:08:34.734 --> 00:08:37.434
mas faria sentido
traduzir "nome".

00:08:38.033 --> 00:08:40.801
Então, quando usado certo,
esse recurso de string

00:08:40.834 --> 00:08:43.133
apareceria como "Nome:"

00:08:43.167 --> 00:08:45.901
e o nome da pessoa,
como Amy.

00:08:45.934 --> 00:08:49.901
Com a tag xliff tag,
você dá um ID, "name",

00:08:49.934 --> 00:08:52.868
e especifica um exemplo,
como Amy.

00:08:53.701 --> 00:08:55.367
Dentro da tag xliff,

00:08:55.400 --> 00:08:58.734
você põe a string
que não deve ser traduzida.

00:08:58.767 --> 00:09:02.601
Neste caso,
usamos o símbolo "%s",

00:09:02.634 --> 00:09:07.100
que denota que uma string
será substituída aqui.

00:09:07.133 --> 00:09:09.167
Por que não adicionar
as strings

00:09:09.200 --> 00:09:11.634
usando o sinal de "+"
e o código Java?

00:09:11.667 --> 00:09:14.334
Porque declarar
como um recurso de string

00:09:14.367 --> 00:09:16.501
permite ao tradutor decidir

00:09:16.534 --> 00:09:19.267
se este é o formato certo
para o texto.

00:09:19.300 --> 00:09:22.634
O tradutor pode mudar
a ordem das palavras

00:09:22.667 --> 00:09:25.300
para que façam mais sentido
no contexto local.

00:09:25.934 --> 00:09:28.267
O tradutor só tem controle

00:09:28.300 --> 00:09:30.567
sobre as palavras
em strings.xml,

00:09:30.601 --> 00:09:33.234
não tem controle
sobre o código Java.

00:09:33.267 --> 00:09:35.300
Para a tag xliff
ser reconhecida,

00:09:35.334 --> 00:09:38.300
adicione isto
à tag "resources"

00:09:38.334 --> 00:09:40.400
no arquivo strings.xml.

00:09:40.934 --> 00:09:43.934
No Java, substituiremos
esta parte do resumo do pedido

00:09:43.968 --> 00:09:46.100
com nosso recurso de string.

00:09:46.133 --> 00:09:49.200
Usamos o recurso de string
"order_summary_name"

00:09:49.234 --> 00:09:53.434
e preenchemos o vazio
usando a variável name.

00:09:53.934 --> 00:09:56.534
Geralmente,
este método getString()

00:09:56.567 --> 00:09:58.801
tomaria um argumento
como dado de entrada,

00:09:58.834 --> 00:10:01.234
o recurso da string.

00:10:01.267 --> 00:10:02.901
Agora,
ele toma dois argumentos,

00:10:02.934 --> 00:10:05.334
pois nós queremos
passar a variável nome

00:10:05.367 --> 00:10:10.300
e tê-la inserida
no campo vazio da string.

00:10:10.334 --> 00:10:13.601
Se seu recurso de string
tivesse dois vãos,

00:10:13.634 --> 00:10:16.767
você passaria dois outros
dados de entrada,

00:10:16.801 --> 00:10:19.968
totalizando três entradas
ao método call(),

00:10:20.000 --> 00:10:21.934
e assim por diante.

00:10:21.968 --> 00:10:25.501
Se quiser mais esclarecimentos
sobre o uso das tags xliff,

00:10:25.534 --> 00:10:27.367
verifique a check-list
de localização

00:10:27.400 --> 00:10:30.300
disponibilizada
nas "Notas do tradutor".

00:10:30.334 --> 00:10:32.100
Até agora,
cobrimos duas etapas.

00:10:32.133 --> 00:10:34.601
Agora, saberemos mais
de traduções alternativas

00:10:34.634 --> 00:10:36.300
em outro idioma.

00:10:36.334 --> 00:10:39.000
O Android Studio traz
uma ferramenta bacana

00:10:39.033 --> 00:10:41.200
chamada
"Translations Editor".

00:10:41.234 --> 00:10:44.067
Você pode acessá-la
clicando em "Open editor"

00:10:44.100 --> 00:10:47.033
ou clicando com o botão direito
no arquivo strings.xml

00:10:47.067 --> 00:10:50.467
e clicando
em "Open Translations Editor".

00:10:50.501 --> 00:10:53.000
Há uma coluna com o nome
do recurso de string

00:10:53.033 --> 00:10:54.567
e o valor padrão,

00:10:54.601 --> 00:10:56.834
que, neste momento,
é a tradução em Inglês.

00:10:57.667 --> 00:10:59.901
Toda linha corresponde
a um recurso de string

00:10:59.934 --> 00:11:03.100
definido
no arquivo strings.xml.

00:11:03.133 --> 00:11:04.901
Clicando neste ícone
de globo,

00:11:04.934 --> 00:11:06.834
podemos adicionar
uma nova língua.

00:11:07.367 --> 00:11:11.133
Vou digitar "Spanish"
e adicionar a Espanha.

00:11:12.100 --> 00:11:15.200
Clique na célula para informar
a tradução em Espanhol

00:11:15.234 --> 00:11:17.901
do recurso de string
"Thank you!".

00:11:17.934 --> 00:11:20.501
Digitarei "Gracias!",
que significa obrigado

00:11:20.534 --> 00:11:23.067
na minha péssima pronúncia
de Espanhol.

00:11:23.100 --> 00:11:25.033
Farei igual no cabeçalho
de "Toppings".

00:11:25.067 --> 00:11:27.067
Aqui está a tradução
em Espanhol.

00:11:27.100 --> 00:11:29.267
Não vou nem tentar
pronunciar.

00:11:29.300 --> 00:11:30.701
Vamos reconstruir o app.

00:11:30.734 --> 00:11:33.334
Meu dispositivo ainda está
em Espanhol.

00:11:33.367 --> 00:11:35.334
Agora, quando abro o app,

00:11:35.367 --> 00:11:39.100
vejo que "Toppings"
foi traduzido.

00:11:39.133 --> 00:11:42.200
O resto continua em Inglês
porque ainda não terminei.

00:11:42.234 --> 00:11:45.534
Quando eu clico em "Order",
vejo "Gracias!".

00:11:47.033 --> 00:11:48.701
Que bom que funcionou!

00:11:48.734 --> 00:11:52.200
O Translator Editor já fez
algumas coisas para nós,

00:11:52.234 --> 00:11:56.000
como criar uma versão espanhola
do arquivo strings.xml.

00:11:56.534 --> 00:12:00.667
Veja como as traduções foram
adicionadas automaticamente.

00:12:01.234 --> 00:12:03.334
Se não fornecêssemos
tradução em Espanhol,

00:12:03.367 --> 00:12:04.901
não apareceria aqui.

00:12:04.934 --> 00:12:08.601
Como desenvolvedor, você pode
modificar o arquivo das strings

00:12:08.634 --> 00:12:10.767
ou usar
o Translations Editor.

00:12:11.367 --> 00:12:15.400
Querendo mais idiomas,
entre contato por aqui.

00:12:16.000 --> 00:12:17.567
Legal,
terminamos os 3 passos

00:12:17.601 --> 00:12:20.667
para localizar strings
em Espanhol.

00:12:20.701 --> 00:12:23.300
Há muitas strings incorporadas
que deixamos passar,

00:12:23.334 --> 00:12:26.934
mas agora você mesmo irá
liderar a localização delas.

00:12:26.968 --> 00:12:29.501
Você encontra traduções
em Espanhol para as strings

00:12:29.534 --> 00:12:30.901
nas "Notas do instrutor",

00:12:30.934 --> 00:12:33.901
mas fique à vontade
para escolher outro idioma.

00:12:33.934 --> 00:12:38.133
No fim, seu app ficará assim,
caso você escolher Espanhol.

00:12:38.167 --> 00:12:39.934
Quando você clicar
em "Order",

00:12:39.968 --> 00:12:42.000
tanto o assunto
quando o corpo do email

00:12:42.033 --> 00:12:43.634
estarão em Espanhol.

