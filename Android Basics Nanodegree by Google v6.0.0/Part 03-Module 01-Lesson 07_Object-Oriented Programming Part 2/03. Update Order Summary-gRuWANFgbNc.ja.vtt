WEBVTT
Kind: captions
Language: ja

00:00:00.450 --> 00:00:03.560
疑似コードは、ORDERボタンが押されたところから
始まるので、

00:00:03.560 --> 00:00:07.020
これは、submitOrderメソッドにコードを加えないｔ
いけないということです。

00:00:08.180 --> 00:00:11.280
そしてcheckBoxからチェック状況を得なければいけません。

00:00:11.280 --> 00:00:14.990
ビューでメソッドを呼ぶためには、
ビューヒエラルキーで、

00:00:14.990 --> 00:00:17.570
ビューをIDで特定しなければいけません。

00:00:17.570 --> 00:00:21.560
まずは、checkBoxビューにビューIDをつけます。

00:00:22.770 --> 00:00:25.920
Android Studioのactivity.mainレイアウトで、checkBoxレイアウトビューを

00:00:25.920 --> 00:00:27.420
探します。

00:00:27.420 --> 00:00:31.690
カーサーをここに持ってくると、プレビューで
このビューをハイライトします。

00:00:31.690 --> 00:00:34.600
ここに一行加えて、ビューIDをこのビューに
送ります。

00:00:35.750 --> 00:00:39.140
これでJavaコードで、このビューを使うことができます。

00:00:39.140 --> 00:00:42.140
その状況を得ることもできます。

00:00:42.140 --> 00:00:43.410
MainActivityに行きましょう。

00:00:43.410 --> 00:00:46.410
submitOrderメソッドにコードを入れてみます。

00:00:47.700 --> 00:00:51.250
ビューヒエラルキーでCheckBoxのJavaオブジェクトを
見つけなければいけません。

00:00:52.270 --> 00:00:55.650
whippedCreamCheckBoxから始めます。

00:00:55.650 --> 00:00:57.810
これはCheckBoxというタイプですね。

00:00:57.810 --> 00:01:01.380
このアクティビティのなかでfindViewByIdメソッドを
呼びます。

00:01:01.380 --> 00:01:03.950
これはIDを基にしてビューを見つけます。

00:01:03.950 --> 00:01:09.080
(R.id.whipped_cream_checkbox)というIDを
渡します。

00:01:09.080 --> 00:01:12.060
これはほかのレイアウトにいま名付けたものです。

00:01:12.060 --> 00:01:16.070
要求されるタイプはCheckBoxなので、
エラーが発生します。

00:01:16.070 --> 00:01:19.020
左側の変数のタイプと合っていません。

00:01:19.020 --> 00:01:22.230
このメソッドの戻り値はビューです。

00:01:22.230 --> 00:01:23.330
前に学んだように、

00:01:23.330 --> 00:01:25.710
この戻り値を変えなければいけません。

00:01:25.710 --> 00:01:29.380
これをCheckBoxに変えてみます。

00:01:29.380 --> 00:01:33.720
CheckBoxはViewのサブクラスなのでそうすることが
できます。

00:01:34.910 --> 00:01:37.480
これで、UIでcheckBoxを表す

00:01:37.480 --> 00:01:40.450
CheckBoxというJavaオブジェクトができました。

00:01:40.450 --> 00:01:42.570
ボックスがチェックされているかどうかを確認するために、

00:01:42.570 --> 00:01:45.760
このオブジェクトのメソッドを呼ばなければいけません。

00:01:45.760 --> 00:01:48.360
それはCheckBoxのどのメソッドを呼べばいいか
分からない人もいると思います。

00:01:48.360 --> 00:01:49.790
でも大丈夫です。

00:01:49.790 --> 00:01:52.000
Googleで検索してみてください。

00:01:52.000 --> 00:01:55.520
CheckBox　Androidと検索してみて、最初の
リンクをクリックしてください。

00:01:56.940 --> 00:02:01.560
先ほど言いましたが、CheckBoxはViewのサブクラスです。

00:02:01.560 --> 00:02:03.080
他にもビューがありますが、

00:02:03.080 --> 00:02:04.820
V結局はViewのサブクラスということなんです。

00:02:06.050 --> 00:02:09.120
このクラスは少し興味深く、

00:02:09.120 --> 00:02:10.780
Javaコードがあります。

00:02:10.780 --> 00:02:13.730
このコードはすでに私たちのアプリに入っていますね。

00:02:13.730 --> 00:02:19.530
ビューをIDで見つけて、それを使って
checkBoxアイテムを得ます。

00:02:19.530 --> 00:02:21.560
次の行はもっと面白いです。

00:02:21.560 --> 00:02:26.630
checkBox.isCheckedとあります。

00:02:26.630 --> 00:02:29.510
これはインプットがないメソッドのようです。

00:02:29.510 --> 00:02:33.450
これはボックスがチェックされているかいないかを、

00:02:33.450 --> 00:02:37.580
tureまたはfalseで知らせるものようでが、
CheckBoxガイドで確認してみましょう。

00:02:37.580 --> 00:02:42.740
スクロールダウンすると、CheckBoxのXMLコードがあり、

00:02:42.740 --> 00:02:44.770
Javaもあります。

00:02:45.910 --> 00:02:49.910
このメソッドは、チェックボックスがクリックされたときに
呼ばれるもののようです。

00:02:49.910 --> 00:02:53.840
このメソッドの名前はXMLにあるメソッドの名前と一致しています。

00:02:53.840 --> 00:02:58.530
ここで渡されるViewはCheckBoxビューだと思います。

00:02:58.530 --> 00:03:00.800
これをCheckBoxにして、

00:03:00.800 --> 00:03:05.360
isCheckedを呼び、戻り値はbooleanです。

00:03:05.360 --> 00:03:09.380
コメントにもビューがチェックされているかという
説明が入っています。

00:03:09.380 --> 00:03:11.880
これが探してたもののようです。

00:03:11.880 --> 00:03:13.520
isCheckedメソッドを使ってみましょう。

00:03:14.640 --> 00:03:18.010
まずCheckBoxオブジェクトの変数の名前を
記入します。

00:03:18.010 --> 00:03:20.210
ここではwhippedCreamCheckBoxですね。

00:03:20.210 --> 00:03:23.020
ドットを加えて、メソッドを呼べるようにします。

00:03:23.020 --> 00:03:26.290
isCheckedと書いていくと自動的に出てきます。

00:03:26.290 --> 00:03:29.400
Enterを押して記入します。

00:03:29.400 --> 00:03:33.150
右側には、このメソッドの戻り値のタイプが何かを
示しています。

00:03:33.150 --> 00:03:35.150
booleanを返すとなっています。

00:03:35.150 --> 00:03:39.330
これを書いた後に、左側にいって、

00:03:39.330 --> 00:03:44.110
この結果をboolean変数に記録します。

00:03:44.110 --> 00:03:48.260
このboolean変数をhasWhippedCream
とします。

00:03:48.260 --> 00:03:52.860
復習すると、whippedCreamCheckBoxというJavaオブジェクトの
メソッドを呼んでいます。

00:03:52.860 --> 00:03:54.690
メソッドはisCheckedというものです。

00:03:54.690 --> 00:03:56.750
戻り値はbooleanで、

00:03:56.750 --> 00:03:59.210
この左側に記録されます。

00:03:59.210 --> 00:04:01.970
変数の名前はhasWhippedCreamです。

00:04:01.970 --> 00:04:03.220
これで完了しました。

00:04:03.220 --> 00:04:06.530
この変数にログをつけて、

00:04:06.530 --> 00:04:09.130
確認することもできます。

00:04:09.130 --> 00:04:10.870
次の行で、ログメッセージを記入します。

00:04:12.050 --> 00:04:14.150
最初のargumentはタグの名前です。

00:04:14.150 --> 00:04:17.100
MainActivityというクラスの名前を使います。

00:04:17.100 --> 00:04:19.810
そして自分のメッセージを入れます。

00:04:19.810 --> 00:04:22.058
Has whipped creamと書いて、

00:04:22.058 --> 00:04:26.660
boolean変数を加えます。

00:04:26.660 --> 00:04:30.930
このstringをbolean変数と連結させることで、

00:04:30.930 --> 00:04:34.560
このbooleanの値も文字列で返します。

00:04:34.560 --> 00:04:38.319
てテキストでは「Has whipped cream：True」もしくは
「Has whipped cream：False」となります。

00:04:39.400 --> 00:04:41.330
端末で実行してみましょう。

00:04:41.330 --> 00:04:43.780
ちゃんとログメッセージを表示するかを見てみましょう。

00:04:44.810 --> 00:04:48.170
コントロールを使って、ログウィンドウのサイズを大きくしました。

00:04:48.170 --> 00:04:50.030
Whipped creamをチェックして、

00:04:50.030 --> 00:04:53.850
ORDERボタンを押すと、メッセージで、

00:04:53.850 --> 00:04:56.319
has whipped cream true か falseが出てくるはずです。

00:04:57.360 --> 00:04:59.770
これをスクロールしてメッセージを見てみます。

00:05:00.790 --> 00:05:03.540
ちゃんと機能するか見てみます。

00:05:03.540 --> 00:05:06.210
このボックスをチェックしてORDERを押してみます。

00:05:06.210 --> 00:05:10.101
新しいメッセージが表示されて、
MainActivityとなっています。

00:05:10.101 --> 00:05:12.335
Has whipped cream: trueとなっています。

00:05:12.335 --> 00:05:15.215
チェックボックスをクリックしたので、正しく
表示されています。

00:05:15.215 --> 00:05:20.645
これをチェックせずにORDERを押すと、
falseと出るはずです。

00:05:20.645 --> 00:05:24.825
右にスクロールして、has whipped cream: false
となっています。

00:05:24.825 --> 00:05:28.475
ちゃんと機能しているようですね。

00:05:28.475 --> 00:05:32.195
CheckBoxビューを見つけて、その
チェック状況を確認することができました。

00:05:32.195 --> 00:05:33.945
次に進みましょう。

00:05:35.410 --> 00:05:40.000
つぎに、このboolean変数をorderSummaryメソッドに
渡さなければいけません。

00:05:40.000 --> 00:05:43.580
createOrderSummaryにもう一つのargumentを
渡したい場合は、

00:05:43.580 --> 00:05:48.410
ここにコンマを記入して、hasWhippedCreamという
変数を渡します。

00:05:49.820 --> 00:05:53.680
このcreatOrderSummaryは一つのintパラメータしか
要求しないので、

00:05:53.680 --> 00:05:58.730
エラーが発生しました。

00:05:58.730 --> 00:06:02.050
createOrderSummaryが宣言されているところまで
スクロールダウンしてみましょう。

00:06:03.310 --> 00:06:05.590
createOrderSumaryの

00:06:05.590 --> 00:06:07.900
メソッドシグニチャを変更します。

00:06:07.900 --> 00:06:10.440
一つのパラメータではなく、二つのインプットを
受け取るようにします。

00:06:10.440 --> 00:06:15.430
コンマを記入して、２つ目のパラメータを
特定します。

00:06:15.430 --> 00:06:20.810
タイプはbooleanで、名前はaddWhippedCreamとします。

00:06:20.810 --> 00:06:23.850
このインプットパラメータはどんな名前でもいいですが、

00:06:23.850 --> 00:06:27.430
この名前は、ここの名前と一致しなくてもいいという
ことを示すためにそう名付けました。

00:06:28.490 --> 00:06:32.580
メソッドシグニチャを変更したので、
Java doc変更して、

00:06:32.580 --> 00:06:35.440
このインプットパラメータが何なのかを書いておきます。

00:06:36.510 --> 00:06:38.140
これで二つ目の課題を終えました。

00:06:39.600 --> 00:06:42.850
次は、orderSummaryを変更して、
ユーザがホイップクリームを

00:06:42.850 --> 00:06:44.450
加えたいかどうかを表示させることです。

00:06:45.800 --> 00:06:49.490
注文表を変えるためには、このインプットパラメータを

00:06:49.490 --> 00:06:52.410
使わなければいけません。

00:06:52.410 --> 00:06:56.260
スクリーンショットには、ホイップクリームのラインは、
名前の下にきています。

00:06:56.260 --> 00:06:58.030
新しい行を加えましょう。

00:06:58.030 --> 00:07:01.450
現在のメッセージを更新するために

00:07:01.450 --> 00:07:03.950
priceMessage +=と記入し、

00:07:03.950 --> 00:07:06.720
Add whipped cream?というラインを加えます。

00:07:06.720 --> 00:07:10.520
スペースを空けて、boolean変数を加えます。

00:07:10.520 --> 00:07:14.060
stringとbooleanを連結することは可能です。

00:07:14.060 --> 00:07:16.770
全てをstringで表します。

00:07:16.770 --> 00:07:18.100
端末で試してみましょう。

00:07:19.230 --> 00:07:20.770
CheckBoxをクリックして、

00:07:20.770 --> 00:07:24.720
ORDERボタンをクリックすると、
whipped cream topping trueとなるはずです。

00:07:24.720 --> 00:07:28.480
一応そうはなりますが、
改行するのを忘れていました。

00:07:28.480 --> 00:07:29.410
それを変更します。

00:07:29.410 --> 00:07:32.590
せっかくなので、他のケースも試してみます。

00:07:32.590 --> 00:07:34.680
ボックスをチェックしないでORDERボタンを押すと、

00:07:34.680 --> 00:07:36.640
falseとなっています。

00:07:36.640 --> 00:07:40.310
CheckBoxの状況をきちんと反映していることが
確認できました。

00:07:40.310 --> 00:07:43.800
改行してまた実行してみましょう。

00:07:43.800 --> 00:07:46.590
CheckBoxをクリックしてORDERを押すとtrueと出ました。

00:07:46.590 --> 00:07:49.480
チェックしないでORDERを押すと、falseとなりました。

00:07:50.610 --> 00:07:51.550
これで完了です。

00:07:51.550 --> 00:07:52.810
両方のケースを正しく表していますね。

00:07:54.550 --> 00:07:56.750
最後の課題は簡単でしたね。

00:07:56.750 --> 00:08:00.610
ログを使ってチェックしたので、正しい表現が
来ていたことが分かっていたからです。

00:08:00.610 --> 00:08:04.200
後は表示するだけでした。

00:08:04.200 --> 00:08:06.000
アプリがちゃんと機能しているので、

00:08:06.000 --> 00:08:08.660
ログメッセージはもう必要ありません。

00:08:08.660 --> 00:08:11.810
最後にアプリをもう一回実行してみます。

00:08:11.810 --> 00:08:12.830
ちゃんと機能していますね。

00:08:12.830 --> 00:08:14.260
次の課題に行きましょう。

