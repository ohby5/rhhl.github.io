WEBVTT
Kind: captions
Language: zh-CN

00:00:00.510 --> 00:00:03.240
下一步要在我们的应用上做的是改变咖啡的价格

00:00:03.240 --> 00:00:06.880
当有人添加了配料时 比如奶油和巧克力

00:00:06.880 --> 00:00:08.160
这是个好想法

00:00:08.160 --> 00:00:12.170
如果他们点奶油 我们只收$1

00:00:12.170 --> 00:00:15.000
如果他们点巧克力 改为收$2

00:00:15.000 --> 00:00:15.620
是的

00:00:15.620 --> 00:00:17.070
让我们思考怎么做

00:00:18.340 --> 00:00:20.970
这里有另外两个 Google 应用的例子

00:00:20.970 --> 00:00:24.390
在某些条件下改变行为

00:00:24.390 --> 00:00:28.630
在 Gmail 的 Inbox 应用 这里有邮件列表的截图

00:00:28.630 --> 00:00:31.590
对于一个简单的邮件 如果它设置了提醒

00:00:31.590 --> 00:00:36.260
这时应用知道在这里显示一个图标 这个标志和文本提示

00:00:36.260 --> 00:00:38.310
如果一个邮件有图片附件

00:00:38.310 --> 00:00:41.110
这个应用会显示这个图片的链接

00:00:41.110 --> 00:00:43.040
如果一个邮件提到旅行

00:00:43.040 --> 00:00:46.510
那么旅行插件显示航班信息

00:00:46.510 --> 00:00:49.910
在 Google Now Launcher 应用我们有更多的例子关于

00:00:49.910 --> 00:00:52.610
基于某些条件的行为改变

00:00:52.610 --> 00:00:56.130
例如 如果股票价格上涨 之后 delta 值或

00:00:56.130 --> 00:01:00.160
上涨的价格将以绿色字体显示

00:01:00.160 --> 00:01:02.120
如果股票价格下降

00:01:02.120 --> 00:01:05.250
差异就会使用红色字体显示

00:01:05.250 --> 00:01:08.140
对于天气插件 如果气温好

00:01:08.140 --> 00:01:11.260
是晴天 给我们显示太阳图案

00:01:11.260 --> 00:01:15.120
如果天气有风或有云 会显示不同图案

00:01:15.120 --> 00:01:16.850
我们立刻修改我们的应用

00:01:16.850 --> 00:01:20.180
价格根据配料而制定

00:01:20.180 --> 00:01:23.100
首先 我希望你熟悉这个控制流程

00:01:23.100 --> 00:01:26.620
正常的 代码的执行是从上到下

00:01:26.620 --> 00:01:29.820
一行接着一行 不过通过控制流

00:01:29.820 --> 00:01:33.030
你可以改变执行的顺序

00:01:33.030 --> 00:01:33.690
例如

00:01:33.690 --> 00:01:38.130
你可以在某些特定情况跳过某些指令

00:01:38.130 --> 00:01:40.444
我们通过学习 if/else 逻辑来这样做

00:01:41.580 --> 00:01:44.400
你之前没有看到过 if/else 语句不过

00:01:44.400 --> 00:01:46.470
我将向你展示你要做的

00:01:46.470 --> 00:01:51.080
在下面两个挑战中 你将自己阅读一些代码片段

00:01:51.080 --> 00:01:54.000
这在讲师注释有链接

00:01:54.000 --> 00:01:56.640
之后你将试着猜测代码功能

00:01:56.640 --> 00:01:58.550
决定输出

00:01:58.550 --> 00:02:00.200
你将有很多的选项

00:02:00.200 --> 00:02:03.120
这样你可以选择最匹配的代码

00:02:03.120 --> 00:02:04.390
当我说输出时

00:02:04.390 --> 00:02:08.008
我会转向 log cat 中的日志信息

00:02:08.008 --> 00:02:11.510
记住你能通过 Android 标签访问 log cat

00:02:11.510 --> 00:02:15.070
并且系统展示所有信息 从我们的应用中

00:02:15.070 --> 00:02:18.380
我们为你提供的代码片段包含了所有

00:02:18.380 --> 00:02:19.510
日志信息

00:02:19.510 --> 00:02:21.830
让我们一起回答一个简单问题

00:02:21.830 --> 00:02:24.310
你能在讲师注释找到这个链接

00:02:24.310 --> 00:02:28.270
假设这是来自 weather 应用的 WeatherActivity.java 文件的

00:02:28.270 --> 00:02:29.830
代码片段

00:02:29.830 --> 00:02:33.850
第一行代码创建了一个 boolean 类型变量叫 isRaining

00:02:33.850 --> 00:02:35.910
初始值为 true

00:02:35.910 --> 00:02:38.500
之后我们有一个 if/else 语句

00:02:38.500 --> 00:02:43.150
如果下雨是 true 我们将这写到日志

00:02:43.150 --> 00:02:46.330
它说 It's raining, better bring an umbrella.（下雨了 最好带伞）

00:02:46.330 --> 00:02:50.910
如果下雨是 false 之后我们执行 else 语句下面的代码

00:02:50.910 --> 00:02:53.230
就是It's unlikely to rain.（可能不会有雨）

00:02:53.230 --> 00:02:57.730
直到下雨是 true 之后我们进去这个条件

00:02:57.730 --> 00:03:00.210
我们写 It's raining, better bring an umbrella.

00:03:00.210 --> 00:03:04.780
因为我们进入这个条件 能跳过其他的块 这行代码

00:03:04.780 --> 00:03:08.620
在if else语句之外 因此会被执行

00:03:08.620 --> 00:03:11.670
它显示 Thank you for using the Whetherweather App.（感谢使用 Whetherweather 应用）

00:03:11.670 --> 00:03:14.520
让我们看看测试里的选项 It's raining

00:03:14.520 --> 00:03:17.690
better bring an umbrella. 后面跟着 Thank you for

00:03:17.690 --> 00:03:19.660
using the WhetherWeather App.

00:03:19.660 --> 00:03:21.550
这恰好是选项B

00:03:21.550 --> 00:03:23.870
这是你尝试的不同问题

00:03:23.870 --> 00:03:26.510
检查代码片段的笔记并做出选择

