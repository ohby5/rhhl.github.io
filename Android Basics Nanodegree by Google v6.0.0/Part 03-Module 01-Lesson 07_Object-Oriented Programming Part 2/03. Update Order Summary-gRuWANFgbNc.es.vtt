WEBVTT
Kind: captions
Language: es

00:00:00.450 --> 00:00:03.560
El pseudocódigo empieza cuando
se pulsa el botón de orden .

00:00:03.560 --> 00:00:07.020
Esto indica que debemos añadir
el código en el método de confirmación.

00:00:08.180 --> 00:00:11.280
Después, necesitamos obtener
el estado de la casilla.

00:00:11.280 --> 00:00:14.990
Para visualizar cualquier método
en la jerarquía de vista,

00:00:14.990 --> 00:00:17.570
hay que encontrar primero
"ver por identidad".

00:00:17.570 --> 00:00:21.560
Hay que asignar un identificador
a la vista de la casilla.

00:00:22.770 --> 00:00:25.500
En Android Studio, en el plano
de actividad principal,

00:00:25.500 --> 00:00:27.420
buscamos la vista del plano de casilla.

00:00:27.420 --> 00:00:31.690
Como mi cursor está aquí,
me destaca esta vista en la previsualización.

00:00:31.690 --> 00:00:34.600
Después voy a añadir una línea
para enviar un ID a esta vista.

00:00:35.750 --> 00:00:38.860
Ahora en Java, puedo dirigirme
a esta vista

00:00:38.860 --> 00:00:42.140
y tratar de extraer el estado.

00:00:42.140 --> 00:00:43.820
Vayamos a la actividad principal.

00:00:43.820 --> 00:00:46.630
Voy a poner mi código en el
método de confirmación de compra.

00:00:47.700 --> 00:00:51.250
Sé que necesito encontrar el objeto
de casilla en Java, en la jerarquía.

00:00:52.270 --> 00:00:55.650
Empiezo creando una variable,
la casilla "whippedCream",

00:00:55.650 --> 00:00:57.810
con tipo de datos casilla.

00:00:57.810 --> 00:01:01.380
Después puedo incluir en esa
actividad el método "findViewByld".

00:01:01.380 --> 00:01:03.950
Esto encontrará una vista
basándose en el ID especificado.

00:01:03.950 --> 00:01:09.080
Voy a pasar como parámetro
el ID (R.id.whipped_cream_checkbox),

00:01:09.080 --> 00:01:12.060
que acabo de asignarle
en el otro plano.

00:01:12.060 --> 00:01:16.070
Esto me da error inmediatamente
porque lo que pide es una Checkbox,

00:01:16.070 --> 00:01:19.020
ya que esa es la variable
del lado izquierdo.

00:01:19.020 --> 00:01:22.230
Sin embargo, el valor de
vuelta de este método de tipo View.

00:01:22.230 --> 00:01:23.330
Así que como aprendimos antes,

00:01:23.330 --> 00:01:25.710
tenemos que recuperar
el valor de retorno de este método.

00:01:25.710 --> 00:01:29.380
Voy a recuperarlo
como objeto CheckBox.

00:01:29.380 --> 00:01:34.110
La razón por la que puedo hacerlo
es porque CheckBox es una subclase de View.

00:01:34.910 --> 00:01:37.480
OK, ahora tengo el
objeto Java CheckBox

00:01:37.480 --> 00:01:40.450
que representa el CheckBox
en la UI.

00:01:40.450 --> 00:01:42.780
Para averiguar si 
la casilla está marcada o no,

00:01:42.780 --> 00:01:45.760
necesito incluir
un método en el objeto.

00:01:45.760 --> 00:01:48.360
Puede que no sepas de
qué método se trata.

00:01:48.360 --> 00:01:49.790
Y es perfectamente normal.

00:01:49.790 --> 00:01:52.000
Así que puedes buscarlo en Google.

00:01:52.000 --> 00:01:55.520
Busca "CheckBox Android"
y haz click en el primer enlace.

00:01:56.940 --> 00:02:01.560
Insisto, CheckBox es
una subclase de View.

00:02:01.560 --> 00:02:03.080
Hay otras vistas en medio, pero

00:02:03.080 --> 00:02:04.820
sigue siendo una subclase de View.

00:02:06.050 --> 00:02:09.120
Esta visión general es
interesante porque tiene

00:02:09.120 --> 00:02:10.780
algo de código Java.

00:02:10.780 --> 00:02:13.730
Tiene esta línea de código que
ya tenemos en nuestra app,

00:02:13.730 --> 00:02:19.530
usamos "encontrar vista por ID",
y después obtenemos una casilla.

00:02:19.530 --> 00:02:21.560
La siguiente línea es
incluso más interesante.

00:02:21.560 --> 00:02:26.630
Dice "CheckBox", que es el
nombre de esta variable, ".isChecked".

00:02:26.630 --> 00:02:29.510
Esto se parece a un método
sin argumentos de entrada.

00:02:29.510 --> 00:02:33.450
Parece indicarnos si la casilla
está marcada o no, y volver

00:02:33.450 --> 00:02:37.580
a un valor verdadero o falso,
pero veamos la guía para asegurarnos.

00:02:37.580 --> 00:02:42.740
Avancemos... vemos algo de código
checkbox xml,

00:02:42.740 --> 00:02:44.770
y más de Java.

00:02:45.910 --> 00:02:49.910
Parece que este método es llamado
cuando se marca la casilla.

00:02:49.910 --> 00:02:53.840
El nombre de este método
encaja con el especificado en xml.

00:02:53.840 --> 00:02:58.530
Doy por hecho que la vista que
acabamos de pasar es la de check box.

00:02:58.530 --> 00:03:00.800
Y lo convertimos a CheckBox

00:03:00.800 --> 00:03:05.360
activamos IsChecked y
el valor de retorno es booleano.

00:03:05.360 --> 00:03:09.380
El comentario lo describe,
dice si la vista está marcada.

00:03:09.380 --> 00:03:11.880
Exactamente lo que necesitamos.

00:03:11.880 --> 00:03:13.520
Usemos el método IsChecked.

00:03:14.640 --> 00:03:18.010
Primero tecleamos el nombre
de la variable del objeto CheckBox.

00:03:18.010 --> 00:03:20.210
Es whippedCreamCheckBox.

00:03:20.210 --> 00:03:23.160
Después añado un punto para 
llamar uno de sus métodos.

00:03:23.160 --> 00:03:26.290
Tecleando isChecked ya salta.

00:03:26.290 --> 00:03:29.400
Así que pulso Enter para
usar la sugerencia.

00:03:29.400 --> 00:03:33.150
En la parte derecha dice
qué valor de retorno tendremos,

00:03:33.150 --> 00:03:35.150
y es un booleano.

00:03:35.150 --> 00:03:39.330
Después de usar esta sugerencia
voy al lado izquierdo

00:03:39.330 --> 00:03:44.110
de esta llamada y después voy a
almacenar el resultado en una variable booleana.

00:03:44.110 --> 00:03:48.260
Voy a llamar a esta variable booleana
hasWhippedCream, despues pulso Enter.

00:03:48.260 --> 00:03:52.860
Recapitulando, hacemos una llamada al
objeto Java whippedCreamCheckbox

00:03:52.860 --> 00:03:54.690
y este método se llama isChecked.

00:03:54.690 --> 00:03:56.750
Tiene el valor de retorno de un booleano

00:03:56.750 --> 00:03:59.210
y se almacena aquí en el lado izquierdo.

00:03:59.210 --> 00:04:01.970
En esta variable llamada hasWhippedCream.

00:04:01.970 --> 00:04:03.220
Esto completa la primera tarea.

00:04:03.220 --> 00:04:06.530
También mencioné que puedes
registrar esta variable

00:04:06.530 --> 00:04:09.130
para verificar que vas en
la dirección correcta.

00:04:09.130 --> 00:04:10.870
En la línea siguiente voy a
añadir un mensaje de registro.

00:04:12.050 --> 00:04:14.150
El primer argumento es una categoría.

00:04:14.150 --> 00:04:17.100
Y voy a usar el nombre de la nuestra,
que es MainActivity.

00:04:17.100 --> 00:04:19.810
Después voy a poner mi
propio mensaje.

00:04:19.810 --> 00:04:22.058
Voy a poner <i>Has Whipped Cream</i>.

00:04:22.058 --> 00:04:26.660
Y luego añadir la variable
booleana.

00:04:26.660 --> 00:04:30.930
Conectando esta secuencia
con la variable booleana,

00:04:30.930 --> 00:04:34.560
convertirá el valor booleano
en una cadena también.

00:04:34.560 --> 00:04:38.319
Así el texto dirá "<i>Has Whipped Cream
verdadero</i>" o "<i>Has Whipped Cream falso</i>".

00:04:39.400 --> 00:04:41.330
Ahora ejecutemos la <i>app</i>
en nuestro dispositivo

00:04:41.330 --> 00:04:43.780
y comprobemos que muestra
el mensaje de registro correcto.

00:04:44.810 --> 00:04:48.170
He aumentado el tamaño de la
ventana de registro con este control.

00:04:48.170 --> 00:04:50.030
Ahora cuando hago clic en la
casilla de WhippedCream

00:04:50.030 --> 00:04:53.850
y presiono el botón de compra,
vendrá un mensaje que diga

00:04:53.850 --> 00:04:56.319
<i>Has Whipped Cream</i> verdadero o falso.

00:04:57.360 --> 00:04:59.770
Voy a ir avanzando para
poder verlo.

00:05:00.790 --> 00:05:03.540
Veamos si funciona.

00:05:03.540 --> 00:05:06.210
Voy a marcar esta casilla
y después doy la orden.

00:05:06.210 --> 00:05:10.101
Un nuevo mensaje aparece
y dice "main activity".

00:05:10.101 --> 00:05:12.335
Dice "WhippedCream: true".

00:05:12.335 --> 00:05:15.215
Es correcto porque
la casilla está marcada.

00:05:15.215 --> 00:05:20.645
Si desmarco la casilla y
doy la orden, dirá "falso".

00:05:20.645 --> 00:05:24.825
Avanzo a la derecha de nuevo
y dice "<i>has whipped Cream: falso</i>".

00:05:24.825 --> 00:05:28.475
Parece que nuestro código
es correcto hasta ahora,

00:05:28.475 --> 00:05:32.195
tras encontrar la vista y
extraer el check state.

00:05:32.195 --> 00:05:33.945
Continuemos ahora con la
segunda tarea.

00:05:35.410 --> 00:05:40.000
Necesitamos pasar esta variable booleana
en el método de resumen de pedido.

00:05:40.000 --> 00:05:43.580
Si quiero pasar otro argumento
al método de createOrderSummary,

00:05:43.580 --> 00:05:48.410
añado una coma y paso la variable
hasWhippedCream.

00:05:49.820 --> 00:05:53.680
Inmediatamente obtengo un error
que indica que no puede ser aplicado

00:05:53.680 --> 00:05:58.730
porque se espera un parámetro
de número entero.

00:05:58.730 --> 00:06:02.050
Avancemos hacia abajo donde
se expone createOrderSummary.

00:06:03.310 --> 00:06:05.590
Necesito modificar la firma
de método

00:06:05.590 --> 00:06:07.900
del método createOrderSummary.

00:06:07.900 --> 00:06:11.150
En lugar de introducir un
parámetro de entrada, necesita dos.

00:06:11.150 --> 00:06:15.430
Voy a añadir una coma y después
especificar el segundo parámetro.

00:06:15.430 --> 00:06:20.810
El tipo de dato debería ser booleano,
y voy a llamarlo addwhippedCream.

00:06:20.810 --> 00:06:23.850
Al parámetro de entrada puedes
llamarlo como quieras,

00:06:23.850 --> 00:06:27.430
pero quiero mostrarte que
no tiene por qué ser igual que este otro.

00:06:28.490 --> 00:06:32.580
Como hemos modificado la firma de
método, tenemos que actualizar Java

00:06:32.580 --> 00:06:35.840
también para especificar de qué
trata este parámetro de entrada.

00:06:36.510 --> 00:06:38.140
Esto completa la segunda tarea.

00:06:39.600 --> 00:06:42.570
La tercera es cambiar el texto
del resumen de pedido para incluir

00:06:42.570 --> 00:06:44.640
si el usuario quiere whip cream o no.

00:06:45.800 --> 00:06:49.490
En esencia quiere decir que usamos
este parámetro aquí

00:06:49.490 --> 00:06:52.410
para modificar nuestro
mensaje de orden de sumario.

00:06:52.410 --> 00:06:56.260
En la captura, la línea superior
de whip cream sale bajo el nombre.

00:06:56.260 --> 00:06:58.030
Así que hay que añadir una
nueva línea aquí.

00:06:58.030 --> 00:07:01.450
Voy a escribir "priceMessage +="

00:07:01.450 --> 00:07:03.950
para modificar el
mensaje de precio previo.

00:07:03.950 --> 00:07:06.720
Y después añadir la línea
addWhippedCream.

00:07:06.720 --> 00:07:10.520
Voy a añadir un espacio, y
después la variable booleana.

00:07:10.520 --> 00:07:14.060
De nuevo, puedo enlazar
una cadena con un valor booleano

00:07:14.060 --> 00:07:16.770
y esto transformará todo
en una cadena.

00:07:16.770 --> 00:07:18.100
Bien, ahora en nuestro dispositivo.

00:07:19.230 --> 00:07:20.770
Si marco la casilla

00:07:20.770 --> 00:07:24.720
y después hago clic en la orden,
debería añadir whipCreamTopping verdadero.

00:07:24.720 --> 00:07:28.090
Y lo hace, excepto porque
olvidé el carácter de la nueva línea

00:07:28.090 --> 00:07:29.410
así que necesito
modificar eso ahora.

00:07:29.410 --> 00:07:32.590
Ya que estoy aquí debería
comprobar el otro caso.

00:07:32.590 --> 00:07:34.680
Desmarco esta casilla y
presiono "ordenar".

00:07:34.680 --> 00:07:36.640
Y dice "falso".

00:07:36.640 --> 00:07:40.310
Así que refleja correctamente
el estado de la casilla marcada.

00:07:40.310 --> 00:07:43.800
Ahora añadamos el carácter de la
nueva línea y ejecutemos la <i>app</i>.

00:07:43.800 --> 00:07:46.590
Si marco la casilla y luego
presiono "ordenar", dice "verdadero".

00:07:46.590 --> 00:07:49.480
Si desmarco y presiono ordenar,
dice "falso".

00:07:50.610 --> 00:07:51.550
Genial.

00:07:51.550 --> 00:07:52.960
Controla ambos casos.

00:07:54.550 --> 00:07:56.750
La parte final de estas
tareas ha sido más fácil.

00:07:56.750 --> 00:08:00.610
Porque una vez verificado
en el registro que obtuvimos el

00:08:00.610 --> 00:08:04.200
estado correcto, es sólo
cuestión de reflejarlo en la pantalla.

00:08:04.200 --> 00:08:06.000
Ya que todo funciona
dentro de la <i>app</i>

00:08:06.000 --> 00:08:08.660
puedo quitar el mensaje
de registro porque ya no lo necesito.

00:08:08.660 --> 00:08:11.810
Y ejecutar una última vez la <i>app</i>.

00:08:11.810 --> 00:08:13.030
Estupendo, funciona.

00:08:13.030 --> 00:08:14.560
Pasemos a la siguiente tarea.

