WEBVTT
Kind: captions
Language: vi

00:00:00.452 --> 00:00:03.620
Được rồi, đây thực sự là
bài tập code khó đây.

00:00:03.620 --> 00:00:08.150
bài tập có nhiều phần liên quan
hiển thị chưa từng sử dụng

00:00:08.150 --> 00:00:10.650
Chúng ta cùng xem qua
giải pháp này.

00:00:10.650 --> 00:00:13.840
đầu tiên tôi muốn bạn hoạch định
các bước cần thực hiện.

00:00:13.840 --> 00:00:16.160
Bước đầu tiên cần làm
thêm trường dữ liệu này vào

00:00:16.160 --> 00:00:18.250
để người dùng nhập họ tên.

00:00:18.250 --> 00:00:20.880
Bước thứ hai là 
khi bấm nút Đặt hàng,

00:00:20.880 --> 00:00:24.630
làm sao trích được tên đã nhập
trong trường rồi lưu vào biến.

00:00:24.630 --> 00:00:27.270
Bước thứ ba là cập nhật
nhật ký đặt hàng

00:00:27.270 --> 00:00:27.880
để hiển thị tên đó ra.

00:00:29.240 --> 00:00:30.460
Hãy đi vào bước một.

00:00:31.500 --> 00:00:34.800
Chúng ta vẫn chưa thêm
trường văn bản trong ứng dụng

00:00:34.800 --> 00:00:36.250
do đó hãy Google tìm cách thực hiện.

00:00:37.270 --> 00:00:38.850
Vì chúng ta muốn trích
văn bản nhập liệu từ phía người dùng

00:00:38.850 --> 00:00:42.165
Tôi sẽ gõ cú pháp tìm kiếm là
user input android.

00:00:42.165 --> 00:00:45.275
ra trang developer.android.com
thế là tốt rồi.

00:00:46.295 --> 00:00:49.765
Trang này có các giải pháp tối ưu
về người dùng nhập liệu.

00:00:49.765 --> 00:00:55.455
Ngoài ra còn có thao tác chạm
nhập liệu và điều khiển game.

00:00:55.455 --> 00:00:59.455
Nhập liệu là thứ mình cần,
click vào đường dẫn đầu tiên

00:00:59.455 --> 00:01:02.045
Bắt đầu bằng cách xem lướt qua
trang thật nhanh.

00:01:02.045 --> 00:01:05.150
Tôi thấy ở đây có ví dụ XML
cái này sẽ hữu ích đây

00:01:05.150 --> 00:01:08.710
Tôi thấy ở đây có một
ngoặc nhọn mở, rồi tới tên hiển thị.

00:01:08.710 --> 00:01:11.550
Trường hợp này hiển thị
là EditText [hiệu chỉnh dữ liệu].

00:01:12.610 --> 00:01:17.260
Khi tôi lướt qua các ví dụ khác,
Tôi thấy có chế độ hiển thị EditText.

00:01:17.260 --> 00:01:22.330
Vậy có lẽ là chính cái chế độ này
giúp chúng ta nhập liệu, nó là EditText.

00:01:22.330 --> 00:01:25.269
Một cách khác là sử dụng hiển thị
phổ biển của Android cheat sheet.

00:01:26.330 --> 00:01:29.360
EditText cũng có trong
danh sách các chế độ hiển thị này

00:01:29.360 --> 00:01:32.670
xem phần album sẽ thấy
giống trường dữ liệu tên trong ứng dụng

00:01:33.730 --> 00:01:35.680
Hãy copy XML này
chèn nó vào ứng dụng của chúng ta.

00:01:36.850 --> 00:01:39.790
Cần có trường nhập tên
ở phía trên cùng của phiếu đặt hàng

00:01:39.790 --> 00:01:42.910
trên cả tiêu đề Các loại nhân phủ
vậy hãy chèn nó ở đây.

00:01:42.910 --> 00:01:45.440
Ngay lập tức có báo lỗi
là không thể xử lý được

00:01:45.440 --> 00:01:46.449
biểu tượng gợi ý này.

00:01:47.600 --> 00:01:51.430
Đây là nội dung album,
nhưng của cheat sheet.

00:01:51.430 --> 00:01:55.640
Hãy xóa nó đi và thay nó
bằng gợi ý của chúng ta, là Họ tên.

00:01:55.640 --> 00:01:58.640
Chúng ta muốn trường nhập tên
nằm phía trên cùng phiếu đặt hàng,

00:01:58.640 --> 00:02:01.910
trên cả tiêu đề Các loại nhân phủ,
hãy dán nó ở ngay đây.

00:02:01.910 --> 00:02:05.150
Nó là chuỗi code con đầu tiên
của linear layout [bài trí tuyến tính].

00:02:05.150 --> 00:02:08.109
Bây giờ hãy đảm bảo rằng
thuộc tính thiết lập đúng ý chúng ta muốn

00:02:09.120 --> 00:02:10.220
Đầu tiên, ta có ID của hiển thị.

00:02:10.220 --> 00:02:13.350
Được gọi là album_description_view.

00:02:13.350 --> 00:02:15.590
Cái này là của
ví dụ trong cheat sheet

00:02:15.590 --> 00:02:18.000
Hãy thay đổi nó thành
tên phù hợp hơn.

00:02:19.020 --> 00:02:20.470
Gọi nó là Trường dữ liệu nhập tên.

00:02:21.840 --> 00:02:24.419
Sau đó tính tới độ rộng
và chiều cao là thuộc tính quen thuộc.

00:02:26.000 --> 00:02:29.052
Hiện tại, độ rộng của trường dữ liệu
thiết lập giống độ rộng giao diện mẹ.

00:02:29.052 --> 00:02:33.620
Nghĩa là trường dữ liệu này 
rộng bằng linear layout mẹ.

00:02:33.620 --> 00:02:34.960
Sau đó chúng ta xem chiều cao.

00:02:34.960 --> 00:02:36.820
Chiều cao căn cứ nội dung bao bọc.

00:02:36.820 --> 00:02:39.380
nó sẽ cao bằng với
nội dung chứa bên trong.

00:02:39.380 --> 00:02:42.630
Hai giá trị này như vậy được rồi,
nên chúng ta cứ để yên cũng được.

00:02:42.630 --> 00:02:44.230
Tiếp theo chúng ta có phần gợi ý.

00:02:44.230 --> 00:02:46.450
Chúng ta chưa từng thao tác với
thuộc tính này.

00:02:46.450 --> 00:02:49.800
Có một lỗi hiển thị là
không xử lý chuỗi được.

00:02:49.800 --> 00:02:51.580
Hãy tra cứu sưu liệu

00:02:51.580 --> 00:02:55.020
của EditText android để tìm ý nghĩa
của thuộc tính này.

00:02:56.020 --> 00:03:00.220
Bằng cách tìm kiếm edittext android
có thể tìm ra sưu liệu vấn đề này.

00:03:00.220 --> 00:03:05.040
Ở đây cho xem tổng quan lớp nhanh
sau đó là danh sách thuộc tính XML.

00:03:05.040 --> 00:03:08.900
Thực ra lớp edit text
kế thừa từ hiển thị văn bản và hiển thị.

00:03:08.900 --> 00:03:12.250
Cho nên chúng ta
có các thuộc tính XML được kế thừa này.

00:03:12.250 --> 00:03:14.720
Khi mở rộng chúng ta có thể tìm kiếm
gợi ý android.

00:03:15.990 --> 00:03:18.230
Rồi, đây là thuộc tính
chúng ta đang tìm kiếm.

00:03:18.230 --> 00:03:21.270
Nếu rê trỏ chuột qua bên phải
nó sẽ thông báo

00:03:21.270 --> 00:03:24.860
Đây là nội dung gợi ý hiển thị
khi nội dung văn bản đang trống.

00:03:24.860 --> 00:03:27.850
Nó giúp cho người dùng biết
cần nhập gì vào trường văn bản.

00:03:27.850 --> 00:03:31.870
Trong ứng dụng tôi đã hướng dẫn,
nội dung gợi ý ghi là Họ tên.

00:03:31.870 --> 00:03:35.440
Cho nên trong code, chúng ta sẽ xóa
chuỗi này và nhập lại là Họ tên.

00:03:36.500 --> 00:03:37.750
Tiếp theo có inputType [Loại nhập liệu].

00:03:37.750 --> 00:03:41.690
Đây cũng là thuộc tính mới
hãy nhìn vào sưu liệu.

00:03:41.690 --> 00:03:44.790
Bây giờ hãy tìm kiếm
loại dữ liệu nhập trong Android.

00:03:44.790 --> 00:03:46.100
Nó được liệt kê ở đây

00:03:46.100 --> 00:03:50.830
phần ghi là
đây là loại dữ liệu nhập trường văn bản.

00:03:50.830 --> 00:03:54.980
Nó giúp phương thức nhập liệu
biết cách được phép dùng để nhập dữ liệu.

00:03:54.980 --> 00:03:58.240
Mô tả này mơ hồ,
vậy hãy click vào thuộc tính của nó

00:03:58.240 --> 00:03:59.610
để biết thêm thông tin

00:03:59.610 --> 00:04:02.760
Đây là hiển thị đầy đủ
của InputType.

00:04:02.760 --> 00:04:05.780
đây là những giá trị
chúng ta có thể thiết lập.

00:04:05.780 --> 00:04:09.750
Trong ví dụ cheat sheet
XML ghi textMultiLine [nhiều dòng].

00:04:09.750 --> 00:04:14.120
Tức là trường văn bản
cho phép nhập nhiều dòng văn bản vào.

00:04:14.120 --> 00:04:16.470
Chắc không ai
lại nhập tên thật là dài ở đây,

00:04:16.470 --> 00:04:19.550
cho nên chỉ cần một hàng văn bản
là cũng đủ rồi.

00:04:19.550 --> 00:04:21.959
Hãy dùng nội dung này làm loại nhập liệu

00:04:21.959 --> 00:04:25.010
Nếu tôi xóa textMultiline
rồi bắt đầu nhập nội dung vào,

00:04:25.010 --> 00:04:29.710
tôi có danh sách mọi tùy chọn
là các gợi ý điền văn bản tự động.

00:04:29.710 --> 00:04:31.910
Tôi sẽ chọn nội dung rồi bấm enter.

00:04:31.910 --> 00:04:34.660
Bây giờ chạy ứng dụng trên thiết bị
kiểm tra xem trường dữ liệu EditText

00:04:34.660 --> 00:04:36.180
có hiển thị không.

00:04:36.180 --> 00:04:38.490
Khi ứng dụng mở ra,
Tôi thấy trường dữ liệu nhập tên.

00:04:38.490 --> 00:04:39.410
Tuyệt.

00:04:39.410 --> 00:04:40.055
Và tôi có thể gõ dữ liệu vào.

00:04:40.055 --> 00:04:42.540
Nhưng thực ra
ở đây chữ cái đầu là chữ viết thường.

00:04:42.540 --> 00:04:47.260
Khi tôi nhập vào,
tôi lại muốn tên chữ cái đầu viết hoa.

00:04:47.260 --> 00:04:51.030
Để sửa lỗi này,
tôi sẽ điều chỉnh loại nhập liệu ở đây.

00:04:51.030 --> 00:04:52.350
Xem tùy chọn khác ở đây.

00:04:53.390 --> 00:04:57.713
textCapcharacters [hoa ký tự đầu]
textCapwords[hoa từ], textCapsentences[hoa câu]

00:04:57.713 --> 00:05:00.210
Có nhiều tùy chọn khác nữa

00:05:00.210 --> 00:05:02.350
Các tùy chọn về viết hoa
có vẻ hay ho đấy.

00:05:03.690 --> 00:05:05.530
Sau khi đọc qua
các mô tả

00:05:05.530 --> 00:05:08.500
Tôi nghĩ viết hoa cả từ
là tùy chọn tốt có thể thử.

00:05:08.500 --> 00:05:10.000
rồi, chúng ta hãy copy và sử dụng nó.

00:05:11.040 --> 00:05:13.699
thay vì dùng chữ thường
tôi sẽ dùng tùy chọn viết hoa cả từ.

00:05:14.930 --> 00:05:16.170
Chạy ứng dụng lần nữa.

00:05:16.170 --> 00:05:19.415
Bây giờ bàn phím gõ chữ
bắt đầu với các chữ cái đều viết hoa

00:05:19.415 --> 00:05:22.306
tôi bắt đầu nhập tên vào,
và nếu tôi thêm khoảng trắng,

00:05:22.306 --> 00:05:24.088
cả từ tiếp theo sẽ được viết hoa.

00:05:24.088 --> 00:05:25.380
Tuyệt.

00:05:25.380 --> 00:05:29.220
Điều cuối cùng tôi để ý
Cần một chút không gian trống ở đây

00:05:29.220 --> 00:05:31.645
giữa trường tên này
và tiêu đề Các loại nhân phủ.

00:05:31.645 --> 00:05:36.010
Chúng ta đã chèn 16 dp
không gian trống chiều dọc, ở đây tương tự.

00:05:36.010 --> 00:05:38.816
Tôi chèn nó làm lề dưới
trên trường EditText

00:05:38.816 --> 00:05:42.800
Tuy nhiên tôi sẽ chèn nó
làm lề trên tiêu đề Các loại nhân phủ.

00:05:42.800 --> 00:05:45.700
Bây giờ khoảng trống ổn
trường dữ liệu nhập tên đã đúng.

00:05:46.730 --> 00:05:49.650
Tất cả thao tác này
là thao tác sửa XML có trong bước một.

00:05:49.650 --> 00:05:51.970
Bây giờ cần điều chỉnh code Java.

00:05:51.970 --> 00:05:54.340
Đối với bước hai,
khi click vào nút Đặt hàng,

00:05:54.340 --> 00:05:57.650
cần trích tên từ
trường nhập tên lưu vào biến.

00:05:58.730 --> 00:06:03.140
Mắt thường dễ nhìn thấy
tên trong trường, nhưng ứng dụng Android

00:06:03.140 --> 00:06:06.980
nó lại không hiểu tôi muốn nhập tên này
vào nhật ký đặt hàng.

00:06:08.070 --> 00:06:10.840
Nó đang sử dụng tên Lyla đã code cứng.

00:06:10.840 --> 00:06:13.190
Chúng ta phải thay đổi để dùng tên này.

00:06:13.190 --> 00:06:16.540
Cái nà tương tự cách xác định
xem ô đánh dấu đã đánh dấu hay chưa

00:06:16.540 --> 00:06:19.560
để cập nhật
nhật ký đặt hàng

00:06:19.560 --> 00:06:22.560
Chúng ta chưa học đọc
nội dung từ trường dữ liệu EditText

00:06:22.560 --> 00:06:23.570
Lên Google tìm kiếm xem sao.

00:06:23.570 --> 00:06:29.190
Tôi sẽ tìm cách lấy chữ
từ trường EditText của Android.

00:06:29.190 --> 00:06:30.390
Kết quả đầu tiên ok đó.

00:06:30.390 --> 00:06:32.720
Đây là một câu hỏi trên stackoverflow.

00:06:32.720 --> 00:06:35.880
Tôi có thể đọc câu hỏi
Nhưng ở đây tôi chỉ cần tìm câu trả lời.

00:06:35.880 --> 00:06:40.050
Tôi lướt nhanh qua trang
xem thử trang này có giúp ích hay không.

00:06:40.050 --> 00:06:43.510
Câu trả lời này đánh dấu màu xanh
và có rất nhiều người bình chọn tốt

00:06:43.510 --> 00:06:45.610
cho nên tôi đọc kỹ hơn.

00:06:45.610 --> 00:06:47.810
Tôi bắt đầu với đoạn code này.

00:06:47.810 --> 00:06:51.820
Có lẽ đoạn code này đi sâu vào trong
lớp hoạt động vì chúng ta đang tìm kiếm

00:06:51.820 --> 00:06:53.030
FindViewById [tìm hiển thị bằng ID].

00:06:53.030 --> 00:06:57.970
Chúng ta tìm hệ phân cấp chế độ hiển thị
để tìm ra hiển thị có ID này.

00:06:57.970 --> 00:07:01.910
Khi đã tìm ra chế độ hiển thị này rồi,
Chúng ta đưa nó vào hiển thị EditText

00:07:01.910 --> 00:07:05.250
rồi lưu nó trong một biến
gọi là text [văn bản].

00:07:05.250 --> 00:07:09.100
Hàng thứ hai chúng ta sẽ
trình báo biến chuỗi value [giá trị]

00:07:09.100 --> 00:07:10.330
Rồi lưu bên trong đây.

00:07:10.330 --> 00:07:14.751
Ở đây có nhiều dấu ngoặc
dấu chấm, từ, nhưng bạn có thể đoán được

00:07:14.751 --> 00:07:18.780
chúng ta đang tìm cách
trích nội dung từ trường EditText này.

00:07:18.780 --> 00:07:23.260
rồi tìm cách lưu nó vào
một biến chuỗi là giá trị.

00:07:23.260 --> 00:07:27.120
Copy dán hàng code này
vào ứng dụng xem thế nào.

00:07:27.120 --> 00:07:31.480
Trong lớp MainActivity
chèn nó vào phương thức submitOrder.

00:07:31.480 --> 00:07:34.400
Tôi chọn phương thức này
vì có thể click nút Đặt hàng

00:07:34.400 --> 00:07:37.170
ở đây chúng ta muốn
đọc nội dung từ trường nhập tên.

00:07:38.230 --> 00:07:41.260
Tôi sẽ dán đoạn code này
từ bài viết stack overflow

00:07:41.260 --> 00:07:41.820
vào đầu phương thức.

00:07:43.110 --> 00:07:46.610
Ngay lập tức có báo lỗi
hệ thống không xử lý biểu tượng này.

00:07:46.610 --> 00:07:50.340
Chúng ta cần thay thế
bằng ViewId cho trường dữ liệu nhập tên.

00:07:50.340 --> 00:07:52.440
Trở lại layout.xml,

00:07:52.440 --> 00:07:56.588
Chúng ta đã gán cho trường EditText
một mã số chế độ hiển thị của name_field,

00:07:56.588 --> 00:08:01.410
nên trong tập tin Java,
tôi sẽ thay đổi thành R.id.name_field.

00:08:01.410 --> 00:08:04.530
Bây giờ hết báo lỗi rồi,
vì thế tôi chạy thử ứng dụng

00:08:04.530 --> 00:08:07.400
nhưng làm sao biết được là đoạn code này
sẽ thực sự hiệu quả?

00:08:07.400 --> 00:08:10.520
Tôi thêm một tin log ở đây để xác minh

00:08:10.520 --> 00:08:14.300
là giá trị thực sự
chứa tên trong trường dữ liệu.

00:08:14.300 --> 00:08:16.760
Ở đây là đoạn code cho tin log.

00:08:16.760 --> 00:08:20.110
Tôi sẽ ghi tên, bỏ vô ngoặc kép sau đó
là chuỗi "giá trị".

00:08:21.110 --> 00:08:23.150
Giá trị là tên mơ hồ
cho biến số này vì vậy

00:08:23.150 --> 00:08:25.260
tôi sẽ đổi nó thành
tên.

00:08:25.260 --> 00:08:28.460
phải làm vài thao tác
để chọn tên có tính rõ ràng cho nó.

00:08:28.460 --> 00:08:31.005
nghĩa là tôi sẽ
thay đổi tên biến cho

00:08:31.005 --> 00:08:33.760
EditText và cả trường dữ liệu đặt tên.

00:08:33.760 --> 00:08:37.070
Chỗ này có thể nhầm lẫn
với những cấu phần khác trong đoạn code.

00:08:37.070 --> 00:08:40.299
Thử chạy ứng dụng
rồi kiểm tra tin log.

00:08:40.299 --> 00:08:40.840
Được rồi.

00:08:40.840 --> 00:08:42.190
Nếu tôi điền thông tin vào phiếu đặt hàng

00:08:42.190 --> 00:08:45.790
sau đó nhấn nút Đặt hàng
tôi có thể kiểm tra các tin log ở đây.

00:08:46.810 --> 00:08:51.210
Tôi thấy một tin MainActivity
ghi tên là: Antigravity Anthony.

00:08:51.210 --> 00:08:52.680
Vậy là được rồi đó.

00:08:52.680 --> 00:08:56.360
Đoạn code đã trích thành công
tên từ trường dữ liệu nhập tên.

00:08:56.360 --> 00:08:59.620
Tốt rồi.
Bây giờ đã có tên người dùng trong biến

00:08:59.620 --> 00:09:04.060
và cũng đã xác minh được tên bằng log
thực sự là tên đã đúng,

00:09:04.060 --> 00:09:06.330
bây giờ thay đổi nhật ký đặt hàng
để hiển thị tên này ra.

00:09:07.380 --> 00:09:10.280
Để nhật ký đặt hàng
hiển thị đúng tên,

00:09:10.280 --> 00:09:13.860
cần chuyển nó vào như
thông số nhập liệu cho phương thức.

00:09:13.860 --> 00:09:16.610
Tức là khi gọi lệnh
createOrdersummary [tạo nhật ký đặt hàng]

00:09:16.610 --> 00:09:20.450
Phải chuyển biến tên này
vào trong một đối số nhập liệu.

00:09:20.450 --> 00:09:22.410
Hãy thay đổi bước này trước.

00:09:22.410 --> 00:09:24.840
Nếu thêm tên vào như thông số nhập liệu,

00:09:24.840 --> 00:09:29.660
sẽ có báo lỗi vì lệnh của phương thức
không khớp với chữ ký của phương thức.

00:09:29.660 --> 00:09:31.950
Kéo xuống xem định nghĩa phương thức,

00:09:31.950 --> 00:09:35.670
Tôi có thể chèn tên Chuỗi
như thông số nhập liệu.

00:09:35.670 --> 00:09:38.410
Tôi cũng sẽ cập nhật tập tin java.doc.

00:09:38.410 --> 00:09:41.600
Trong phương thức createOrderSummary
tôi có thể sử dụng biến số này.

00:09:41.600 --> 00:09:46.630
Tôi sẽ xóa phần tên code cứng
rồi ghép biến số tên này vào.

00:09:47.930 --> 00:09:51.360
Hãy ôn lại, đầu tiên cần lấy
tên từ name_field sau đó

00:09:51.360 --> 00:09:55.590
chuyển nó như nội dung nhập liệu
vào phương thức createOrderSummary.

00:09:55.590 --> 00:09:59.620
Trong phương thức này, có thể
ghép tên vào trong nhật ký đặt hàng.

00:09:59.620 --> 00:10:01.720
Hãy chạy ứng dụng để kiểm tra code.

00:10:01.720 --> 00:10:05.200
Ứng dụng mở, tôi sẽ nhập
một cái tên, chọn một loại nhân phủ

00:10:05.200 --> 00:10:06.790
rồi thay đổi số lượng.

00:10:06.790 --> 00:10:08.600
Sau đó tôi có thể nhấn nút đặt hàng.

00:10:08.600 --> 00:10:11.190
Tôi thấy nhật ký đặt hàng
chứa tên tôi đã nhập

00:10:11.190 --> 00:10:12.160
trước đó

00:10:12.160 --> 00:10:13.458
Woohoo!

00:10:13.458 --> 00:10:17.140
Nếu tôi thay đổi tên
rồi bấm nút Đặt hàng, nó sẽ cập nhật.

00:10:17.140 --> 00:10:17.800
Hay quá.

00:10:17.800 --> 00:10:22.440
mọi thứ trong ứng dụng đã vận hành
tôi có thể xóa tin log đi.

00:10:22.440 --> 00:10:24.900
Tôi sẽ chạy ứng dụng lại
để đảm bảo chạy ổn hết.

00:10:26.000 --> 00:10:28.640
Bây giờ hãy trở lại
trả lời câu hỏi trắc nghiệm.

00:10:28.640 --> 00:10:31.700
Chế độ hiển thị chúng ta
chèn vào hiển thị văn bản là EditText.

00:10:31.700 --> 00:10:35.260
Câu thứ hai hỏi
chúng ta gọi phương thức Java nào

00:10:35.260 --> 00:10:37.010
để trích nội dung từ chế độ hiển thị này.

00:10:38.120 --> 00:10:40.910
Có thể trả lời câu này
bằng cách trở lại bản code.

00:10:40.910 --> 00:10:42.885
tra hệ phân cấp chế độ hiển thị để tìm

00:10:42.885 --> 00:10:46.710
đối tượng theEditText java 
đại diện cho trường dữ liệu nhập tên.

00:10:46.710 --> 00:10:49.570
Chúng ta lưu nó vào trong
biến số gọi là nameField.

00:10:49.570 --> 00:10:52.310
trong vật thể đó sử dụng phương thức.

00:10:52.310 --> 00:10:56.310
Chúng ta gọi phương thức getText,
phương thức không nhận đối số nhập liệu

00:10:56.310 --> 00:10:58.500
nó trả về một giá trị cho đối tượng khác.

00:10:59.510 --> 00:11:01.460
Bây giờ tới câu ba.

00:11:01.460 --> 00:11:04.790
Loại dữ liệu trả về là gì
trong phương thức getText?

00:11:04.790 --> 00:11:06.330
Trả lời: loại dữ liệu có thể hiệu đính

00:11:06.330 --> 00:11:09.540
Tôi biết câu trả lời bằng cách nhìn vào
sưu liệu Android.

00:11:09.540 --> 00:11:14.320
Với lớp Edit Text, nếu bạn kéo trang
bạn sẽ thấy các phương thức phổ biến.

00:11:14.320 --> 00:11:17.970
GetText được liệt kê là phương thức
trả về nội dung

00:11:17.970 --> 00:11:19.350
chế độ hiển thị văn bản đang hiển thị.

00:11:19.350 --> 00:11:21.960
Dạng dữ liệu trả về này có thể hiệu đính.

00:11:21.960 --> 00:11:27.280
Nó trả về một đối tượng có thể hiệu đính
hãy gọi phương thức khác trong đối tượng

00:11:27.280 --> 00:11:30.750
bằng cách thêm dấu chấm
sau đó là tên phương thức.

00:11:30.750 --> 00:11:35.730
Trong trường hợp này chúng ta đang gọi
phương thức toString

00:11:35.730 --> 00:11:38.790
trên đối tượng có thể sửa,
phương thức toString trả về một chuỗi

00:11:38.790 --> 00:11:41.050
có thể lưu trong biến số tên.

00:11:42.080 --> 00:11:45.880
Khái niệm này cao cấp
nó là gọi phương thức theo chuỗi.

00:11:45.880 --> 00:11:49.560
Vì chúng ta gọi một phương thức,
lấy giá trị trả ngược

00:11:49.560 --> 00:11:52.800
sau đó gọi một phương thức khác
rồi nếu nó trả về đối tượng,

00:11:52.800 --> 00:11:53.980
gọi phương thức khác.

00:11:53.980 --> 00:11:57.690
Bạn có thể tiếp tục gọi nhiều phương thức
cái này rồi tới cái kia.

00:11:57.690 --> 00:12:01.230
Lý do chúng ta gọi phương thức theo chuỗi
là vì phương thức getText trả ngược

00:12:01.230 --> 00:12:02.650
vật thể có thể hiệu đính

00:12:02.650 --> 00:12:05.920
Đối tượng có thể hiệu đính không thể
được lưu trữ trong một biến chuỗi,

00:12:05.920 --> 00:12:09.980
báo lỗi của Android Studio
ghi lỗi là do dữ liệu không tương thích.

00:12:09.980 --> 00:12:14.410
Nếu thêm phương thức toString
thì giá trị trả ngược toàn tập hợp này

00:12:14.410 --> 00:12:17.790
sẽ là một chuỗi
có thể lưu nó trong biến chuỗi.

00:12:17.790 --> 00:12:20.550
Ta có thể xác minh
bằng cách kiểm tra sưu liệu

00:12:20.550 --> 00:12:23.160
Phương thức getText
trả về một đối tượng có thể hiệu đính.

00:12:23.160 --> 00:12:25.660
Nếu tôi click trên nó,
trong lớp có thể hiệu đính,

00:12:25.660 --> 00:12:27.880
Có thể tìm thấy phương thức toString.

00:12:27.880 --> 00:12:28.600
Kéo xuống dưới trang,

00:12:28.600 --> 00:12:32.830
trong phương thức phổ biến,
tôi không thấy toString được liệt kê

00:12:32.830 --> 00:12:34.670
Nhưng có một số phương thức kế thừa.

00:12:34.670 --> 00:12:38.520
nếu tôi click mũi tên này
tôi thấy toString là phương thức liệt kê.

00:12:38.520 --> 00:12:40.930
và nó giá trị trả về là chuỗi.

00:12:40.930 --> 00:12:44.850
Vậy tôi nhắc lại:
phương thức này gọi đối tượng có thể sửa

00:12:44.850 --> 00:12:48.000
sau đó có thể gọi
phương thức toString trên nó.

00:12:48.000 --> 00:12:50.670
Phương thức toString trả về một chuỗi

00:12:50.670 --> 00:12:53.680
cả tập hợp bên tay phải
sẽ trả về một chuỗi.

00:12:53.680 --> 00:12:57.150
nó có thể được lưu trữ
trong biến chuỗi gọi là tên.

00:12:58.270 --> 00:13:00.180
Woa, bài tập dài quá.

00:13:01.330 --> 00:13:04.070
Bạn có thể nghỉ giải lao
sau đó trở lại vì chúng ta

00:13:04.070 --> 00:13:07.620
sẽ tìm cách thay đổi giá
tùy theo món mà người dùng đã đặt.

00:13:07.620 --> 00:13:09.740
Tiếp tục thao tác
bằng cách tìm hiểu về luồng điều khiển.

