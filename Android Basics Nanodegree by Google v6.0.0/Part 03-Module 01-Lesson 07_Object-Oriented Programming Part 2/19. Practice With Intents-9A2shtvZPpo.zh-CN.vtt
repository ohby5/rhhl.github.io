WEBVTT
Kind: captions
Language: zh-CN

00:00:00.530 --> 00:00:03.719
但愿你可以用不同的 intent 来实验一下

00:00:03.719 --> 00:00:06.110
从 Common Intents guide 文件

00:00:06.110 --> 00:00:10.090
例如 之前我讲过的更改 submitOrder 方法

00:00:10.090 --> 00:00:15.000
我注释掉了所有已经完成的代码 加入地图的 intent 代码

00:00:15.000 --> 00:00:19.000
当我在设备上运行应用时 点击 ORDER 按钮

00:00:19.000 --> 00:00:23.510
没有更新 ORDER SUMMARY 实际上它给地图应用发送了一个 intent

00:00:23.510 --> 00:00:28.250
Google Maps 应用接受了这个 intent 并在地图上更新

00:00:28.250 --> 00:00:31.270
我们请求的位置

00:00:31.270 --> 00:00:34.700
尽管使用这些 intent 对我们咖啡订购的应用没有什么意义

00:00:34.700 --> 00:00:38.795
但是这是练习创建 intent 的好地方

00:00:38.795 --> 00:00:41.765
让我们撤销这个修改 返回我们的实际任务中

00:00:42.765 --> 00:00:44.645
为了把这个特性加入到我们的应用中

00:00:44.645 --> 00:00:48.495
我们需要使用一个 intent 将 ORDER SUMMARY 发送到一个 email 应用中

00:00:48.495 --> 00:00:52.445
如果你不知道如何完成这个 你可以上网搜索

00:00:52.445 --> 00:00:55.345
我就做了一个 email intent android 的搜索

00:00:55.345 --> 00:00:59.500
一堆有用的链接弹出 像 Stack Overflow 的帖子和一个教程

00:00:59.500 --> 00:01:02.550
但 Common intents 教程弹出 这是来自官方的

00:01:02.550 --> 00:01:05.349
Android Documentation 我计划点击这个

00:01:05.349 --> 00:01:08.870
在里面的这个位置有一个如何创建 email intent 的链接

00:01:08.870 --> 00:01:11.560
所以我计划点击这个 这将展示

00:01:11.560 --> 00:01:14.900
如何发送 intent 来构成一个可选附件的 email

00:01:14.900 --> 00:01:18.140
浏览文件 这有两段代码例子

00:01:18.140 --> 00:01:22.230
读完这个注释 选第二个例子

00:01:22.230 --> 00:01:25.750
这是因为我们希望我们的 intent只能通过 email 应用

00:01:25.750 --> 00:01:28.760
不是通过文本信息或社交媒体软件

00:01:28.760 --> 00:01:30.550
让我们选择这段代码并复制

00:01:30.550 --> 00:01:32.390
粘贴到我们的应用上

00:01:33.570 --> 00:01:34.520
看一下这段代码

00:01:34.520 --> 00:01:38.505
我们的 JustJava 应用 应该把代码粘贴到哪呢?

00:01:38.505 --> 00:01:42.005
我们希望给 email 应用发送一个 ORDER SUMMARY 在

00:01:42.005 --> 00:01:44.695
在一完成 ORDER SUMMARY 的时候

00:01:44.695 --> 00:01:48.175
完成 ORDER SUMMARY 的地方就是这行代码之后

00:01:48.175 --> 00:01:49.965
这行代码就是创建 ORDER SUMMARY 的

00:01:49.965 --> 00:01:53.060
把它存储到一个叫 priceMessage 的字符串变量中

00:01:53.060 --> 00:01:56.880
所以我打算在这加一行 插到我们代码中

00:01:57.890 --> 00:02:00.420
注意我们如何创建一个新的对象

00:02:00.420 --> 00:02:03.680
在Java语言中用一个带有 new 关键词的构造函数

00:02:03.680 --> 00:02:07.090
我们给构造函数传入一个参数

00:02:07.090 --> 00:02:09.470
来初始化这个 intent 对象

00:02:09.470 --> 00:02:14.710
这个变量是个常量 叫做 Intent.ACTION_SENDTO

00:02:14.710 --> 00:02:18.510
记住有个惯例 在 Java 里看见的全是大写字母的变量

00:02:18.510 --> 00:02:20.140
就意味着它是常量

00:02:20.140 --> 00:02:24.750
常量是一个一旦内容设定就不能更改的变量

00:02:24.750 --> 00:02:27.220
此时 当我们创建我们的 Intent 时

00:02:27.220 --> 00:02:29.370
我们使用的是官方的 Intent 动作

00:02:29.370 --> 00:02:34.460
ACTION_SENDTO 被定义为一个 Intent 类的常量

00:02:34.460 --> 00:02:38.080
然后我们对这个新创建的 Intent 对象调用一些方法

00:02:38.080 --> 00:02:40.650
将数据设置为这种格式的 URI

00:02:40.650 --> 00:02:46.010
"mailto:" 这样所有 email 应用都可以处理这个 intent了

00:02:46.010 --> 00:02:49.120
然后向 intent 中添加其它的数据

00:02:49.120 --> 00:02:52.700
我们不需要在 e-mail 里指明这两个字段

00:02:52.700 --> 00:02:55.000
所以 只需删除这一行

00:02:55.000 --> 00:02:58.800
然而 我们确实希望指明 e-mail 的信息主题

00:02:58.800 --> 00:03:01.680
所以我打算用实际的主题替换这行

00:03:03.240 --> 00:03:08.440
Just Java order for 后面接人名

00:03:09.440 --> 00:03:12.950
紧接着这两行是检查设备上是否有 activity

00:03:12.950 --> 00:03:15.140
来处理这个 intent

00:03:16.210 --> 00:03:18.980
如果有 那么发送 intent 是安全的

00:03:18.980 --> 00:03:22.400
并调用这个 intent 召唤开启 activity

00:03:22.400 --> 00:03:25.330
如果这里没有 activity 在设备上来处理 intent

00:03:25.330 --> 00:03:28.970
那么我们跳过这部分代码并跳过发送 intent 的过程

00:03:30.660 --> 00:03:31.900
现在让我们在设备上运行一下应用

00:03:33.310 --> 00:03:34.890
现在点击 ORDER 按钮

00:03:34.890 --> 00:03:38.190
它把 intent 发送给一个 email 应用

00:03:38.190 --> 00:03:42.060
默认的 这个 Gmail应用将会处理这个 intent

00:03:42.060 --> 00:03:46.620
因为我制定了一个自定义的主题行代码 在这里显示为Just

00:03:46.620 --> 00:03:51.900
Java order for Kaptain Kanal 这是我输入应用的名称

00:03:51.900 --> 00:03:55.850
现在原始问题是要求我们填入 email 的主题行

00:03:55.850 --> 00:03:58.490
还有信息主体里的ORDER SUMMARY

00:03:58.490 --> 00:04:00.350
所以现在我们就开始吧

00:04:00.350 --> 00:04:02.090
回顾一下有关

00:04:02.090 --> 00:04:06.330
email intent 的文档 我打算向上滚动看一下 Intent Extra

00:04:07.570 --> 00:04:09.520
我们需要添加一个 Intent Extra 给

00:04:09.520 --> 00:04:12.930
每一条我们希望提供给 email 的额外信息

00:04:12.930 --> 00:04:17.709
例如 我们可以使用一个 intent extra 记录收件人邮箱

00:04:17.709 --> 00:04:20.820
而且我们也有一个 Intent.EXTRA 记录邮箱的标题

00:04:21.820 --> 00:04:23.350
但这是我们真正需要的

00:04:23.350 --> 00:04:28.200
我们需要添加一个 Intent.EXTRA 来明确 email 的正文

00:04:28.200 --> 00:04:34.320
再次说明 Intent.EXTRA_TEXT 是 intent里的 java 类的常量

00:04:34.320 --> 00:04:36.050
如果我点击它 你会看到更多信息

00:04:37.170 --> 00:04:40.730
它在 intent 类里定义为一个字符串

00:04:40.730 --> 00:04:43.480
值即为里面的字符串

00:04:44.600 --> 00:04:48.670
在 Just Java 应用里当我创建一个 intent 并且填入

00:04:48.670 --> 00:04:52.540
Extra 里面包含 email 信息的正文

00:04:52.540 --> 00:04:55.740
当 email 应用接收了 intent 他们会检查

00:04:55.740 --> 00:05:00.410
这个 intent extra 来寻找 email 的正文 然后填入正文

00:05:00.410 --> 00:05:02.440
进入用户界面

00:05:02.440 --> 00:05:03.650
让我们修改一下代码

00:05:03.650 --> 00:05:06.540
选中这行代码

00:05:06.540 --> 00:05:11.440
根据email 的主题 把一个 extra 放进 intent 里

00:05:11.440 --> 00:05:13.870
下一行 我打算粘贴这些代码

00:05:13.870 --> 00:05:16.870
现在我向 intent 里存放第二个 extra

00:05:18.160 --> 00:05:25.530
extra 与 Intent.EXTRA_TEXT 是相统一的

00:05:25.530 --> 00:05:28.810
我们了解到这是 email 的正文

00:05:28.810 --> 00:05:32.360
第二个函数参数是用来存放

00:05:32.360 --> 00:05:33.490
实际的 email 正文的

00:05:35.120 --> 00:05:37.780
email 正文应该包含 ORDER SUMMARY

00:05:37.780 --> 00:05:42.190
这是在 priceMessage 中分过类的 所以可以把这个变量复制到这

00:05:44.930 --> 00:05:45.980
总的来说

00:05:45.980 --> 00:05:50.890
对于 intent 对象 我们调用 putExtra 方法来明确 email 的主题

00:05:52.380 --> 00:05:55.890
对于相同的 intent 对象 我们再次调用函数 putExtra方法

00:05:55.890 --> 00:05:57.720
来明确 email 的正文

00:05:57.720 --> 00:06:01.490
email 的正文就是 OEDER SUMMARY

00:06:01.490 --> 00:06:02.670
在设备上运行一下应用

00:06:04.080 --> 00:06:07.610
一旦订单完成 我点击这个按钮提交订单

00:06:07.610 --> 00:06:11.190
我们给带有主题的 email 应用发送一个 intent

00:06:11.190 --> 00:06:12.270
订单详情出现了

00:06:12.270 --> 00:06:13.380
哇！

00:06:14.760 --> 00:06:18.110
这个任务的第三步 我们计划移除这个代码

00:06:18.110 --> 00:06:20.760
在 Just Java 中显示订单汇总

00:06:20.760 --> 00:06:23.070
因为现在它将在 email 应用中显示

00:06:23.070 --> 00:06:26.604
我将通过修改 activity_main 布局文件开始移除

00:06:26.604 --> 00:06:28.510
ORDER SUMMARY 的TextView

00:06:28.510 --> 00:06:31.360
在布局文件的底部 我计划删除这个声明头

00:06:31.360 --> 00:06:33.970
同时还有显示实际 ORDER SUMMARY 的 TextView

00:06:33.970 --> 00:06:36.760
保存并转到 Java 文件

00:06:37.820 --> 00:06:42.276
在 main_activity Java 文件里 我不再需要 displayMessage 方法

00:06:42.276 --> 00:06:46.463
它是用来更新 ORDER SUMMARY 的 TextView 的 因为以这个 ID 名称的 View

00:06:46.463 --> 00:06:48.101
不存在了

00:06:52.323 --> 00:06:55.970
因为我删除了这个 displayMessage 方法 Android studio 现在给我

00:06:55.970 --> 00:06:59.870
错误提示 说这个方法不存在了 所以我打算删除它

00:07:01.130 --> 00:07:04.100
回顾我们的代码 这很合理 因为当我们点击这个 ORDER

00:07:04.100 --> 00:07:06.680
按钮时 它会调用 SubmitOrder 方法

00:07:06.680 --> 00:07:11.610
我打算完成所有的代码 这也将发送给 email一个intent

00:07:11.610 --> 00:07:16.030
我们的应用里不需要显示 ORDER SUMMARY 了

00:07:16.030 --> 00:07:18.400
让我们确认一下应用仍然工作

00:07:18.400 --> 00:07:20.090
当你删除大量代码后

00:07:20.090 --> 00:07:22.710
这更容易即刻检查它是否工作正常

00:07:22.710 --> 00:07:26.480
如果有错误就撤销修改 而不是过后再寻找错误

00:07:29.120 --> 00:07:30.890
应用仍然运作正常

00:07:30.890 --> 00:07:31.810
干的漂亮

00:07:31.810 --> 00:07:34.880
你刚刚给 Just Java 应用添加了一个 intent

00:07:34.880 --> 00:07:38.560
intent 是 Android 的重要核心组件之一 但也有更多

00:07:38.560 --> 00:07:41.250
Android 组件可以帮你构建更好的应用

00:07:41.250 --> 00:07:44.570
我推荐在完成这个课程后 你自己学习一下

