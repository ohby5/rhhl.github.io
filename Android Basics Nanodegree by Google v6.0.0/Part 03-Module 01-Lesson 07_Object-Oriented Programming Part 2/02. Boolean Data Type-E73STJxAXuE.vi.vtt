WEBVTT
Kind: captions
Language: vi

00:00:00.240 --> 00:00:03.040
Nếu đánh dấu tích ô này trong ứng dụng
nó sẽ thêm lớp nhân phủ vào

00:00:03.040 --> 00:00:03.850
món cà phê.

00:00:03.850 --> 00:00:06.445
Cái này sẽ làm cho
cà phê thêm thơm ngon.

00:00:06.445 --> 00:00:09.250
Đúng đó.
và chắc là cũng sẽ mắc hơn.

00:00:09.250 --> 00:00:10.360
Đúng.

00:00:10.360 --> 00:00:13.396
Cuối cùng chúng ta học cách
tạo nhật ký đặt hàng

00:00:13.396 --> 00:00:14.400
sau đó gửi đi.

00:00:14.400 --> 00:00:17.238
Ồ, nghĩa là khi gửi nhật ký đặt hàng
sẽ nhận được cà phê.

00:00:17.238 --> 00:00:17.868
Đúng không?
Đúng.

00:00:17.868 --> 00:00:18.450
Hay quá.

00:00:18.450 --> 00:00:21.320
Vấn đề là không biết chính xác
ô này đã đánh dấu tích chưa.

00:00:21.320 --> 00:00:23.250
Chưa
Chờ chút nào, chị vừa đánh dấu.

00:00:23.250 --> 00:00:24.280
Tôi biết chị đã đánh dấu.

00:00:24.280 --> 00:00:28.180
Mắt người nhìn vô thì dễ thấy,
bắt điện thoại nhìn thì khó cho nó lắm.

00:00:28.180 --> 00:00:30.205
Bây giờ chị gọi ai là con người nào?

00:00:30.205 --> 00:00:33.700
Trở lại vấn đề,
khi bạn chèn ô đánh dấu vào ứng dụng

00:00:33.700 --> 00:00:36.688
nó sẽ tạo ra một đối tượng Java.

00:00:36.688 --> 00:00:38.168
[ÂM THANH] Giống vầy.

00:00:38.168 --> 00:00:40.258
Có cả thảy bao nhiêu
ô đánh dấu như thế này?

00:00:40.258 --> 00:00:45.300
Nhiều lắm, vì bên trong đối tượng
ô đánh dấu có một biến.

00:00:45.300 --> 00:00:46.150
OK.

00:00:46.150 --> 00:00:48.020
Một biến Boolean.

00:00:48.020 --> 00:00:48.520
Boolean?

00:00:48.520 --> 00:00:50.030
Tôi chưa nghe nói từ này bao giờ.

00:00:50.030 --> 00:00:52.410
Boolean nghĩa là
giống như có hai "states"

00:00:52.410 --> 00:00:55.080
như New York và California phải không?

00:00:55.080 --> 00:00:56.635
Không.
Cái này giống như là công tắc đèn.

00:00:56.635 --> 00:00:58.585
[ÂM THANH]
Quái lạ.

00:00:58.585 --> 00:01:00.550
Làm sao chị làm được điều đó?

00:01:00.550 --> 00:01:01.180
Trở lại vấn đề.

00:01:01.180 --> 00:01:04.890
Ý chị là khi tạo ra ô đánh dấu
sẽ tạo ra một đối tượng Java.

00:01:04.890 --> 00:01:07.830
Bên trong đối tượng đó
có một biến thuộc loại Boolean.

00:01:07.830 --> 00:01:08.460
Đúng.

00:01:08.460 --> 00:01:11.450
Và loại biến đó
có thể bật hoặc tắt.

00:01:11.450 --> 00:01:13.300
Đúng, giá trị nó có thể bật hoặc tắt.

00:01:13.300 --> 00:01:17.230
OK, nghĩa là
Có thể chuyển giá trị từ bật sang tắt.

00:01:17.230 --> 00:01:18.470
Tôi không thấy đường gì cả.

00:01:18.470 --> 00:01:19.610
Anh mở nó lên lại xem?

00:01:19.610 --> 00:01:20.650
Vẫn chưa xong đâu mà.

00:01:20.650 --> 00:01:23.720
Ồ, ok.
OK thế là.

00:01:23.720 --> 00:01:26.870
Boolean có thể có hai tình trạng,
đúng hay sai.

00:01:26.870 --> 00:01:29.340
Tùy theo tình trạng đánh dấu hay chưa
của ô đánh dấu.

00:01:29.340 --> 00:01:32.390
Whoa, một câu mà bao nhiêu "đánh dấu".

00:01:32.390 --> 00:01:33.370
Trở lại vấn đề nè.

00:01:33.370 --> 00:01:34.340
Tôi sẽ tóm tắt.

00:01:34.340 --> 00:01:35.670
Xem tôi có hiểu không.

00:01:35.670 --> 00:01:38.890
Khi tạo ô đánh dấu
chúng ta tạo ra một đối tượng Java.

00:01:38.890 --> 00:01:41.070
Bên trong đối tượng Java
có một biến.

00:01:41.070 --> 00:01:46.580
Loại của nó là Boolean
và loại biến này có hai giá trị

00:01:46.580 --> 00:01:49.840
hoặc tắt hoặc mở, hoặc một hoặc zero
hoặc đúng hoặc sai.

00:01:49.840 --> 00:01:50.600
Chính xác.

00:01:50.600 --> 00:01:52.775
OK.
Thử Boolean xem nào.

00:01:52.775 --> 00:01:56.255
[ÂM THANH]
OK.

00:01:56.255 --> 00:01:57.410
Chắc phải lấy cái này ra khỏi tay anh quá.

00:01:57.410 --> 00:02:01.010
[CƯỜI THÀNH TIẾNG]
Nhìn vào sưu liệu

00:02:01.010 --> 00:02:01.870
về Boolean.

00:02:01.870 --> 00:02:04.880
Tôi sẽ Google tìm kiếm
loại dữ liệu Java này.

00:02:04.880 --> 00:02:10.090
Vì Boolean là một trong những
dữ liệu nguyên thủy trong Java.

00:02:10.090 --> 00:02:12.400
Nguyên thủy, nghĩa là dữ liệu cơ bản.

00:02:12.400 --> 00:02:15.110
Tôi sẽ kéo trang xuống dưới
để xem một dọc danh sách

00:02:15.110 --> 00:02:17.440
dữ liệu nguyên thủy để thấy Boolean.

00:02:17.440 --> 00:02:18.570
Đây rồi.

00:02:18.570 --> 00:02:23.220
Ở đây nói loại dữ liệu Boolean chỉ có
hai giá trị khả dĩ, đúng và sai.

00:02:23.220 --> 00:02:26.360
Được dùng làm cờ hiệu đơn giản
để xác định tình trạng đúng hoặc sai.

00:02:26.360 --> 00:02:29.590
Cũng nói thêm là Boolean
chiếm dung lượng một bít thông tin.

00:02:29.590 --> 00:02:32.980
Đây là dung lượng tổng cộng
nó chiếm chỗ trên một máy tính.

00:02:32.980 --> 00:02:36.920
Vấn đề quan trọng là
Boolean chỉ có thể có hai giá trị.

00:02:36.920 --> 00:02:38.120
Có thể bạn nghĩ Đúng và Sai

00:02:38.120 --> 00:02:41.610
là hai giá trị chuỗi
vì chúng là dạng văn bản nội dung

00:02:41.610 --> 00:02:45.800
nhưng chúng nằm trong dấu ngoặc kép đôi
nên chúng không phải là chuỗi.

00:02:45.800 --> 00:02:48.220
Chúng là những giá trị nguyên cố định.

00:02:48.220 --> 00:02:51.870
Bạn có nhớ giá trị này có thể là 0
hoặc có thể là một trong

00:02:51.870 --> 00:02:54.400
chuỗi như "xin chào" hay "hôm nay"?

00:02:54.400 --> 00:02:57.380
Nghĩa là khi bạn tạo ra
biến Boolean bạn có thể cấu hình nó

00:02:57.380 --> 00:02:58.380
về một trong hai giá trị.

00:02:59.350 --> 00:03:03.498
Trở về loại suy hình hộp,
nếu có biến là isChecked [đã kiểm tra]

00:03:03.498 --> 00:03:07.102
Và nó chứa thông tin
xác định xem ô đã đánh dấu tích hay chưa,

00:03:07.102 --> 00:03:10.710
bên trong biến Boolean này
có thể lưu giá trị "đúng".

00:03:10.710 --> 00:03:14.800
Có thể diễn giải là
lúc đó ô đang được tích.

00:03:14.800 --> 00:03:18.060
Hoặc có thể lưu giá trị
bên trong biến số là "sai".

00:03:18.060 --> 00:03:22.260
Thì có thể hiểu là lúc đó
Ô đánh dấu không được tích.

00:03:22.260 --> 00:03:26.590
Boolean là giải pháp rất tốt
khi có hai tình trạng khả dĩ.

00:03:26.590 --> 00:03:30.850
Vì bạn là lập trình viên
bạn sẽ định đúng và sai là cái gì.

00:03:31.850 --> 00:03:35.790
Nếu cần nhiều hơn hai tình trạng khả dĩ
bạn không thể dùng Boolean.

00:03:35.790 --> 00:03:38.960
Bạn cần phải dùng một thứ khác
ví dụ như chuỗi hay hằng nguyên.

00:03:38.960 --> 00:03:42.840
Trình báo biến Boolean
giống với trình báo kiểu số nguyên int.

00:03:42.840 --> 00:03:45.950
Không phức tạp như khi
tạo biến đối tượng.

00:03:45.950 --> 00:03:49.850
Nó tuân thủ định dạng cú pháp
Boolean hasWhippedCream = true.

00:03:49.850 --> 00:03:53.880
Loại dữ liệu là Boolean,
theo sau đó là tên biến

00:03:53.880 --> 00:03:58.225
nó có thể là bất kỳ thứ gì bạn muốn
rồi tới giá trị ban đầu "đúng" hay "sai".

00:03:58.225 --> 00:04:00.020
Sau đây là một số ví dụ khác.

00:04:00.020 --> 00:04:02.339
Với cú pháp này tôi đặt giá trị sai
cho cái Boolean.

00:04:03.540 --> 00:04:05.850
Đây là một Boolean khác
tên là isRegistered [đã đăng ký],

00:04:05.850 --> 00:04:08.360
tôi đặt giá trị là sai.

00:04:08.360 --> 00:04:12.400
Ví dụ, biến này có thể dùng
để hiển thị tình trạng người dùng ứng dụng

00:04:12.400 --> 00:04:15.050
xem họ đã đăng ký
tài khoản hay chưa.

00:04:15.050 --> 00:04:16.329
Đây là một ví dụ khác.

00:04:16.329 --> 00:04:19.470
Boolean isOrderForPickup = true.

00:04:19.470 --> 00:04:22.740
Biến số này có thể có nghĩa là
một khách hàng gọi món cà phê

00:04:22.740 --> 00:04:26.080
họ muốn nhận ngay tại cửa hàng
hoặc muốn cửa hàng giao về nhà họ.

00:04:26.080 --> 00:04:29.780
Dù app không hỗ trợ tiện ích này
có thể hình dung là khi sử dụng Boolean

00:04:29.780 --> 00:04:33.960
sẽ hữu ích đến mức nào
khi có hai tình trạng cần chọn.

00:04:35.020 --> 00:04:38.170
Hãy để ý cách
tôi đặt tên các biến này.

00:04:38.170 --> 00:04:41.070
Một tên biến Boolean phải
tuân thủ các quy chuẩn như nhau.

00:04:41.070 --> 00:04:42.520
Các dạng tên biến khác.

00:04:42.520 --> 00:04:46.780
Thường người ta bắt đầu tên biến này
bằng cụm từ như "có một thứ gì đó"

00:04:46.780 --> 00:04:48.620
hay "là một thứ gì đó".

00:04:48.620 --> 00:04:53.450
Khi bạn thấy tên có chữ "có" hay "là", rất
có thể là Boolean dù không phải luôn vậy.

00:04:53.450 --> 00:04:56.470
Điều tôi sắp cho bạn xem là
tính năng hơi nâng cao hơn, và tùy chọn.

00:04:56.470 --> 00:04:58.180
Nếu bạn thấy hay
bạn có thể làm theo.

00:04:59.230 --> 00:05:01.950
Đây là các trang sưu liệu của
lớp ô đánh dấu.

00:05:01.950 --> 00:05:05.320
Tôi click vào chức năng xem mã nguồn
để xem mã nguồn của

00:05:05.320 --> 00:05:06.960
lớp ô đánh dấu.

00:05:06.960 --> 00:05:09.820
Code này được lưu trong
tập tin the CheckBox.java.

00:05:09.820 --> 00:05:12.865
Tôi muốn cho bạn xem
có một biến Boolean trong đối tượng này

00:05:12.865 --> 00:05:14.220
một lớp ô đánh dấu.

00:05:14.220 --> 00:05:18.450
Nhưng tôi vẫn không thấy nó ở đây
cho nên tôi đánh dấu lớp con.

00:05:18.450 --> 00:05:21.200
Nếu giá trị là đúng thì có nghĩa là
ô đánh dấu đã tích.

00:05:21.200 --> 00:05:24.320
Nếu là sai Ô không tích.

00:05:24.320 --> 00:05:27.800
Bạn sẽ nhận ra tên này không chứa
chữ "có" hoặc "là"

00:05:27.800 --> 00:05:30.850
nhưng nhìn xuống dưới bạn sẽ thấy
các biến Boolean

00:05:30.850 --> 00:05:32.900
có chữ "có" trong tên gọi.

00:05:32.900 --> 00:05:34.740
Cái này chỉ là vấn đề
tiện lợi cho lập trình viên.

00:05:34.740 --> 00:05:37.770
Trong trường hợp này
rõ ràng là Boolean được dùng xác định

00:05:37.770 --> 00:05:38.770
tình trạng đánh dấu.

00:05:39.610 --> 00:05:43.750
Dù không thấy Boolean này trực tiếp
trong tập tin Checkbox. Java,

00:05:43.750 --> 00:05:46.640
vì đang kiểm tra lớp kế thừa
từ CompoundButton,

00:05:46.640 --> 00:05:49.270
vẫn có được Boolean đã đánh dấu này.

00:05:49.270 --> 00:05:51.110
Nói chung,
nhìn vào mã nguồn để tìm

00:05:51.110 --> 00:05:54.220
các lớp Android
là không cần thiết.

00:05:54.220 --> 00:05:55.480
Để lập trình app Android

00:05:55.480 --> 00:05:59.250
những gì bạn cần làm là học cách tra cứu
các trang sưu liệu.

00:05:59.250 --> 00:06:02.470
OK, trong video đã học
các Boolean có thể lưu trữ

00:06:02.470 --> 00:06:03.860
giá trị đúng hoặc sai.

00:06:04.960 --> 00:06:08.000
Trong phần câu đố sau,
thực hành tạo ra một biến Boolean

00:06:08.000 --> 00:06:12.420
rồi cập nhật bằng cách nhập các dòng code
trong các ô đánh dấu được cung cấp.

00:06:12.420 --> 00:06:15.720
Gõ dòng này chính xác ở đây
làm tương tự cho các ô đánh dấu khác.

00:06:16.990 --> 00:06:19.700
Sau đó tôi muốn bạn nghĩ về
các trường hợp tiêu biểu khác

00:06:19.700 --> 00:06:21.720
để lưu thông tin trong Boolean.

00:06:21.720 --> 00:06:24.080
Nghĩ về các trường hợp
có hai tình trạng lựa chọn khác nhau.

00:06:25.110 --> 00:06:28.200
Bạn đã bao giờ dùng đồng hồ báo thức
trên điện thoại để đánh thức chưa?

00:06:28.200 --> 00:06:30.380
Nhiều khả năng là khi
bạn bật hoặc tắt báo thức

00:06:30.380 --> 00:06:33.530
chức năng đó đã được
lưu trữ dưới dạng biến Boolean.

00:06:34.680 --> 00:06:37.310
Một biến Boolean khả dĩ khác là
khi bạn có hai lựa chọn

00:06:37.310 --> 00:06:38.750
báo thức lặp lại hoặc không lặp lại.

00:06:39.600 --> 00:06:43.490
Trong ứng dụng Gmail, nếu tôi muốn
đánh sao cho email đặc biệt tôi đã nhận

00:06:43.490 --> 00:06:48.960
từ đội ngũ Gmail từ năm 2011,
tôi có thể đánh sao, hoặc có thể bỏ sao.

00:06:48.960 --> 00:06:52.140
Vì có hai tình trạng khả dĩ,
có thể lưu dưới dạng biến Boolean.

00:06:52.140 --> 00:06:55.890
Một tên biến Boolean khả dĩ khác
có thể là isStarred [đã đánh dấu sao].

00:06:55.890 --> 00:06:59.880
Bạn có thể sử dụng biến Boolean
để theo dõi xem một email

00:06:59.880 --> 00:07:01.210
đã được đọc hay chưa.

00:07:01.210 --> 00:07:04.230
Email này chưa đọc đây,
còn mail này thì đã đọc rồi.

00:07:05.300 --> 00:07:07.260
Bây giờ bàn chút về Youtube,
vào ứng dụng YouTube.

00:07:08.560 --> 00:07:11.140
Trong ứng dụng YouTube,
khi nó hiển thị danh sách video,

00:07:11.140 --> 00:07:14.090
nếu tôi đã xem video này rồi,
nó sẽ hiển thị hộp thoại nhỏ ở đây.

00:07:14.090 --> 00:07:17.770
Hộp thoại ghi: đã xem ở góc trên bên trái
của hình thumbnail đại diện.

00:07:17.770 --> 00:07:19.359
Việc tôi đã xem video

00:07:19.359 --> 00:07:22.870
hay chưa xem video này
cũng có thể lưu làm biến Boolean.

00:07:22.870 --> 00:07:25.140
Tôi vừa cho bạn xem một số ví dụ
về chức năng hay của Boolean.

00:07:25.140 --> 00:07:27.180
Thử tự làm cái của bạn ở đây xem sao.

00:07:27.180 --> 00:07:29.790
Có thể tìm ứng dụng Android hiện có
để thu thập ý tưởng.

