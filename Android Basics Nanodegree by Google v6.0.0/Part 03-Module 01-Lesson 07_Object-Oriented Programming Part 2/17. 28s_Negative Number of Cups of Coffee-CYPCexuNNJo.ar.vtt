WEBVTT
Kind: captions
Language: ar

00:00:00.150 --> 00:00:02.388
سنبدأ بالنظر إلى الحد الأدنى أولاً

00:00:03.070 --> 00:00:06.672
الطريقة الوحيدة لجعل التطبيق
ينزل لأقل من كوب قهوة واحد

00:00:06.806 --> 00:00:10.100
هو عن طريق الضغط على زر النقص
حين يكون هناك كوب واحد من القهوة

00:00:10.415 --> 00:00:14.400
تذكر أن زر النقص ينفذ الوظيفة decrement
في ملف الجافا

00:00:14.684 --> 00:00:17.136
لذلك نحن بحاجة إلى تعديل الوظيفة decrement

00:00:17.285 --> 00:00:20.094
ونمنع التطبيق من تحديث الكمية على الشاشة

00:00:20.370 --> 00:00:23.600
أفتح الكود في ملف الجافا لوظيفة decrement

00:00:23.790 --> 00:00:25.455
بمجرد دخولنا هذه الوظيفة

00:00:25.670 --> 00:00:29.620
لا نريد تنفيذ هذا السطر
إذا كانت الكمية بالفعل 1

00:00:30.355 --> 00:00:34.181
وإلا، فإن سطر الكود هذا
سيتسبب في تغيير الكمية إلى 0

00:00:34.516 --> 00:00:36.607
سأدرج بعض الكود أعلى الوظيفة

00:00:37.123 --> 00:00:42.580
سأنشيء جملة if، لأنني أريد تنفيذ
هذا المنطق فقط إذا كانت الكمية تساوي 1

00:00:42.832 --> 00:00:46.499
تذكر أنه في جافا إذا أردت التحقق
مما إذا كانت قيمتين متساويتين

00:00:46.800 --> 00:00:48.624
فستحتاج إلى استخدام علامة ==

00:00:49.497 --> 00:00:51.306
علامة = تعني شيئاً آخر

00:00:51.494 --> 00:00:52.836
على أي حال، بالعودة إلى الكود

00:00:52.964 --> 00:00:57.170
إذا كانت الكمية ليست 1،
فسنتخطى هذا المقطع من الكود كله

00:00:57.350 --> 00:00:59.374
وسنستمر في تحديث الكمية

00:01:00.054 --> 00:01:03.802
داخل جملة if هذه سأكتب جملة العودة

00:01:04.550 --> 00:01:07.054
كان هذا هو التلميح الذي أعطيتكم إياه
سابقاً في الاختبار

00:01:07.727 --> 00:01:11.655
إذا كانت القيمة المرتجعة للوظيفة هي void
فيمكنك فقط أن تكتب ;return

00:01:11.851 --> 00:01:12.939
مع عدم وجود قيمة مرتجعة

00:01:13.800 --> 00:01:15.942
وهذا يعني أننا يجب أن نغادر الوظيفة فوراً

00:01:16.170 --> 00:01:18.242
دون تنفيذ سطور الكود أسفلها

00:01:18.630 --> 00:01:21.841
لذلك سنتخطى تحديث متغير الكمية
وعرضه على الشاشة

00:01:22.728 --> 00:01:26.323
إذا كانت الكمية ليست 1، 
فلنقل مثلاً إنها 10

00:01:26.600 --> 00:01:30.253
فإن ظرف الاختبار أصبح خطأ
وسنتخطى هذا المقطع

00:01:30.580 --> 00:01:32.584
ونواصل مع هذه السطور من الكود

00:01:33.177 --> 00:01:35.074
الآن، لننظر في الحالة حيث الحد العلوي

00:01:35.574 --> 00:01:38.505
الطريقة الوحيدة لتخطي العدد 100
هو بضغط زر الزيادة

00:01:38.680 --> 00:01:40.505
حين يكون هناك بالفعل 100 كوب من القهوة

00:01:41.053 --> 00:01:43.275
زر الزيادة يشغل الوظيفة increment

00:01:43.550 --> 00:01:45.106
لذا نحن بحاجة إلى تعديل هذه الوظيفة

00:01:45.199 --> 00:01:49.224
لمنع التطبيق من تحديث الكمية
إلى 101 كوب قهوة

00:01:49.750 --> 00:01:51.025
بداخل الوظيفة increment

00:01:51.225 --> 00:01:54.152
نضيف منطق إضافي
كما فعلنا مع الوظيفة decrement

00:01:54.608 --> 00:01:57.015
إذا كان متغير الكمية حالياً 100

00:01:57.251 --> 00:01:58.866
إذن ينبغي أن نغادر الوظيفة مبكراً

00:01:59.324 --> 00:02:00.623
بخلاف ذلك ينبغي أن نواصل

00:02:00.648 --> 00:02:03.730
عن طريق زيادة الكمية بكوب إضافي من القهوة

00:02:03.936 --> 00:02:05.280
ثم عرضه على الشاشة

00:02:05.548 --> 00:02:07.738
فلنشغل هذا على الجهاز ونرى ما سيحدث

00:02:08.133 --> 00:02:10.331
حسناً، لو ضغطت على زر النقص عدة مرات

00:02:10.630 --> 00:02:13.400
فسيتوقف عند 1 كوب من القهوة
هذا جيد

00:02:13.976 --> 00:02:15.817
من أجل اختبار أن الحد الأعلى يعمل

00:02:15.958 --> 00:02:18.690
سأعدل متغير الكمية المبدئية في ملف الجافا

00:02:18.871 --> 00:02:20.494
ليصبح 99 كوب من القهوة

00:02:21.698 --> 00:02:23.952
وسأجري تغيير مماثل في المخطط كذلك

00:02:24.205 --> 00:02:26.973
سعر 99 كوب من القهوة هو 495 دولار

00:02:27.495 --> 00:02:28.828
الآن سأشغله على الجهاز

00:02:29.439 --> 00:02:31.167
لو ضغطت على زر الزيادة عدة مرات

00:02:31.290 --> 00:02:33.380
يمكنك أن ترى أنه يبقى
عند 100 كوب من القهوة

00:02:34.362 --> 00:02:36.249
لطيف!
الكود يعمل بنجاح

00:02:36.675 --> 00:02:39.795
إذا اخترت أن تحل مسألة التحدي،
ها هو كود الحل

00:02:40.094 --> 00:02:44.134
داخل الوظيفة increment،
إذا كانت الكمية بالفعل عند 100 كوب قهوة

00:02:44.475 --> 00:02:48.307
فإننا سنعرض هذه الرسالة المنبثقة
قبل أن نغادر الوظيفة مبكراً

00:02:48.990 --> 00:02:52.113
لإنشاء رسالة منبثقة،
يمكنك استدعاء Toast.makeText

00:02:52.502 --> 00:02:55.176
وتستطيع تمرير ثلاث وسائط إدخال مختلفة

00:02:55.666 --> 00:02:58.556
تمرر سياق، وهو هذا النشاط

00:02:59.213 --> 00:03:00.233
ونمرر رسالة

00:03:00.258 --> 00:03:04.032
والتي هي، لا يمكنك الحصول على
أكثر من 100 كوب قهوة، في هذه الحالة

00:03:04.466 --> 00:03:07.109
ونحدد أيضاً مدة ظهورها على الشاشة

00:03:07.410 --> 00:03:11.178
نحن نقول فقط أن الرسالة المنبثقة
ينبغي أن تظهر لفترة قصيرة

00:03:11.660 --> 00:03:14.168
كل هذا الكود ينشيء كائن منبثق واحد

00:03:14.420 --> 00:03:17.325
ثم نستدعي الوظيفة show على هذا الكائن

00:03:17.743 --> 00:03:22.218
وبالمثل في وظيفة decrement،
إذا كانت الكمية عند 1 كوب قهوة بالفعل

00:03:22.448 --> 00:03:25.867
إذن سنعرض رسالة خطأ
قبل أن نغادر الوظيفة مبكراً

00:03:26.381 --> 00:03:30.151
مرة أخرى، هذه الجملة تنشيء
كائن منبثق بهذه الرسالة

00:03:30.357 --> 00:03:32.285
ثم نستدعي الوظيفة show عليه

00:03:33.362 --> 00:03:35.655
بالمناسبة، نحن نستخدم هذا الموقع لمساعدتنا

00:03:35.680 --> 00:03:37.843
في معرفة كيفية عرض رسالة منبثقة في تطبيقنا

00:03:39.310 --> 00:03:41.357
إليكم بعض نماذج الكود
التي كان يمكنكم استخدامها

00:03:41.988 --> 00:03:45.147
بشكل عام، فإن من الجيد أن تجعل المستخدم
على معرفة بما يحدث

00:03:45.470 --> 00:03:49.026
برسالة خطأ أو بعض المؤشرات الأخرى
في واجهة المستخدم

00:03:49.134 --> 00:03:53.111
وإلا فسيظن أن التطبيق لا يعمل
ولا يستجيب لنقراته على الزر

