WEBVTT
Kind: captions
Language: ja

00:00:00.510 --> 00:00:02.570
早速、やり方をGoogleで調べてみましょう。

00:00:02.570 --> 00:00:05.280
Androidのアプリの
スクロール方法で検索します。

00:00:06.450 --> 00:00:08.240
一番上の検索結果を見て見ましょう。

00:00:08.240 --> 00:00:11.220
質問はレイアウトを
どうやってスクロールダウンさせるるかです。

00:00:11.220 --> 00:00:13.570
このサイトが探していた内容に合ってますね。

00:00:13.570 --> 00:00:16.420
回答欄へ飛ぶと、
グリーンのチェックマークがあり、

00:00:16.420 --> 00:00:17.820
たくさんの得票数があります。

00:00:17.820 --> 00:00:20.280
ですので、役立つ回答に違いありません。

00:00:20.280 --> 00:00:22.900
ScrollViewの中身を挟む、とあります。

00:00:22.900 --> 00:00:26.040
そしてここにサンプルがあり、ScrollView

00:00:26.040 --> 00:00:28.690
名前空間が書かれていて、

00:00:28.690 --> 00:00:33.720
縦幅と横幅は、"fill_parent"とあり、
そして終わりのタグがあります。

00:00:33.720 --> 00:00:38.570
このコメントに、残っている現在のViewを
中にいれると書かれています。

00:00:39.300 --> 00:00:42.640
予備知識ですが、fill_parentは
match_parentと同じです。

00:00:42.710 --> 00:00:45.860
古い書き方というだけで、意味は同じです。

00:00:45.860 --> 00:00:50.590
次の行に、ScrollViewには
1行のみ表示とあります。

00:00:50.590 --> 00:00:53.150
これは誰かが作ったオリジナルのレイアウトで、

00:00:53.150 --> 00:00:55.740
ScrollViewの内容をここに入れ、

00:00:55.740 --> 00:01:00.060
こちらを親、linear layoutを
子のViewにしているようです。

00:01:00.060 --> 00:01:02.520
これは役に立つ情報でした。

00:01:02.520 --> 00:01:04.250
戻って他のやり方がないか見てみましょう。

00:01:07.020 --> 00:01:09.160
こちらも同じことを説明しています。

00:01:09.160 --> 00:01:14.450
ここにはXMLのレイアウトがあり、
スクロールが目的のようです。

00:01:14.450 --> 00:01:16.860
いつも私は書かれていること
全てを詳しく読みません。

00:01:16.860 --> 00:01:18.660
回答部分だけを確認します。

00:01:18.660 --> 00:01:19.930
こう書かれています。

00:01:19.930 --> 00:01:23.340
親のScrollViewに
全てのXMLを含めていますか？

00:01:23.340 --> 00:01:25.880
そしてここにサンプルの
ScrollViewがあって、

00:01:25.880 --> 00:01:28.370
子はRelativeLayout

00:01:28.370 --> 00:01:31.430
そして終わりのタグとして
ScrollViewがあります。

00:01:31.430 --> 00:01:34.030
このスレッドにあるのはこれだけです。

00:01:34.030 --> 00:01:37.850
今見た2つの検索結果は
ScrollViewの使い方について

00:01:37.850 --> 00:01:39.190
同じことを言っているようです。

00:01:39.190 --> 00:01:44.110
検索ワードを「ScrollView」、
「android」に変えてみましょう。

00:01:44.110 --> 00:01:47.500
バッチリ。AndroidのViewで、

00:01:47.500 --> 00:01:50.480
ここに説明があります。

00:01:50.480 --> 00:01:53.180
ここに色々書いてありますが、
スキップします。

00:01:53.180 --> 00:01:54.400
目を通したければ、どうぞ。

00:01:54.400 --> 00:01:56.570
検索結果画面に戻ります。

00:01:56.570 --> 00:01:58.860
サンプルのコードが書いてある方が便利です。

00:01:58.860 --> 00:02:01.590
先ほど見たページみたいに
サンプルがあればいいのですが。

00:02:01.590 --> 00:02:03.950
これは良さそうですね。

00:02:03.950 --> 00:02:05.900
Android Studioに
戻りましょう。

00:02:06.270 --> 00:02:09.880
これら全てのXMLサンプルに
ScrollVIewが冒頭にあります。

00:02:09.880 --> 00:02:12.740
すぐにエラーが出て、
Viewに十分な横幅と縦幅がない

00:02:12.740 --> 00:02:13.990
と言っています。

00:02:13.990 --> 00:02:17.700
ここに、match_parentと定義します。

00:02:18.780 --> 00:02:22.390
括弧を閉じると、すぐに終わりのタグが表示されます。

00:02:22.390 --> 00:02:23.970
これをコピーして

00:02:23.970 --> 00:02:29.860
このファイルの下部にペーストします。

00:02:31.370 --> 00:02:36.240
これで、今あるLinearLayoutが、
このScrollViewの子であること表します。

00:02:36.240 --> 00:02:41.250
これを全て選択して、
スペース4文字分のインデントを行います。

00:02:41.250 --> 00:02:44.020
このScrollViewの
子Viewとして見やすくなります。

00:02:44.790 --> 00:02:48.850
Android StudioのEditメニューの
Indent Selectionで

00:02:48.850 --> 00:02:51.740
スペース4文字分インデントされます。

00:02:51.830 --> 00:02:53.270
すると、見栄えが良くなりました。

00:02:54.280 --> 00:02:55.350
まだエラーがあります。

00:02:55.350 --> 00:02:59.090
名前空間 'android'が結びついていない
と書かれています。

00:02:59.090 --> 00:03:00.280
詳細をクリックします。

00:03:00.280 --> 00:03:06.150
XML上で結びついていない名前空間の
プレフィックスを点検しているとのこと。

00:03:06.150 --> 00:03:08.310
レッスン1を振り返ってください。

00:03:08.310 --> 00:03:11.860
「android:」は、この名前空間から来ています。

00:03:11.860 --> 00:03:16.040
従ってこれをカットして上にペーストします。

00:03:16.040 --> 00:03:20.940
ツールの名前空間もここに移動させましょう。

00:03:20.940 --> 00:03:24.570
ツールの名前空間は
XMLに加えることができる属性で

00:03:24.570 --> 00:03:28.110
アプリをデバッグしたり
ビルドするのに役立ちます。

00:03:28.110 --> 00:03:30.530
これからアプリを端末で起動します。

00:03:30.530 --> 00:03:34.750
特に見た目は変わっていません。

00:03:34.750 --> 00:03:37.950
まだ十分なコンテンツがないため
スクロールできないからです。

00:03:37.950 --> 00:03:41.320
実際にテストするには、
他にもViewを付け足す必要があります。

00:03:41.320 --> 00:03:43.740
前にやったように、裏技を使ってみましょう。

00:03:43.740 --> 00:03:47.390
これを全てコピーして、
レイアウトにペーストします。

00:03:47.390 --> 00:03:49.020
これで長い注文画面を作ります。

00:03:50.040 --> 00:03:54.050
さぁ、これで注文画面が長くなり、
スクロールできるようになりました。

00:03:54.050 --> 00:03:55.810
ワクワクしますね。

00:03:55.810 --> 00:03:59.280
向きを変えても、スクロールできます。

00:04:00.650 --> 00:04:04.270
元に戻して、
前の注文画面に戻すこともできます。

00:04:04.860 --> 00:04:06.910
ScrollViewはそのままにしておきます。

00:04:06.910 --> 00:04:09.480
このアプリは色々な端末に対応するので、

00:04:10.540 --> 00:04:13.230
もし、ユーザーがこの端末よりも
小さい端末を利用している場合

00:04:13.230 --> 00:04:15.840
画面全体を見るためには、
スクロールする必要があるからです。

