WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.520
You actually already modified the theme of

00:00:02.520 --> 00:00:05.745
an app in the CourtCounter app in practice set two.

00:00:05.745 --> 00:00:10.230
You modify the styles.xml file to have this AppTheme.

00:00:10.230 --> 00:00:12.495
However, we didn't get into any specifics,

00:00:12.495 --> 00:00:13.860
so let's do that now.

00:00:13.860 --> 00:00:16.530
So, what is this style versus a theme?

00:00:16.530 --> 00:00:20.070
Well, they're both defined as resources in the app in the same way.

00:00:20.070 --> 00:00:22.605
You can add them to the styles.xml file.

00:00:22.605 --> 00:00:26.820
However, the difference is that a style is applied to a single view,

00:00:26.820 --> 00:00:30.450
whereas a theme is applied to an activity or application.

00:00:30.450 --> 00:00:35.310
Meaning that it's applied to all the views in that activity or application.

00:00:35.310 --> 00:00:39.210
If you want a TextView to show up in italics with a blue font color,

00:00:39.210 --> 00:00:40.740
you could define a style for that.

00:00:40.740 --> 00:00:42.800
But if you want all of that text using

00:00:42.800 --> 00:00:46.155
your activity to use that blue font color with italics,

00:00:46.155 --> 00:00:48.060
then you could define a theme.

00:00:48.060 --> 00:00:52.365
Themes are also used to apply style properties to the window of the app,

00:00:52.365 --> 00:00:56.100
so you can change the color for things like the app bar or the status bar,

00:00:56.100 --> 00:00:59.610
which is exactly how you use the theme in the CourtCounter app.

00:00:59.610 --> 00:01:03.180
The following are three examples of themes in action.

00:01:03.180 --> 00:01:06.380
Notice how the colors used the app bar in the status bar are

00:01:06.380 --> 00:01:09.875
also reflected in things like the headers and also the button text.

00:01:09.875 --> 00:01:15.770
This is an effective use of color to convey the brand of the Google Play Music app.

00:01:15.770 --> 00:01:19.880
Similarly, the Google Movies app uses read as a branding color.

00:01:19.880 --> 00:01:21.115
It's used in the app bar,

00:01:21.115 --> 00:01:24.370
status bar in this large image here and the buttons.

00:01:24.370 --> 00:01:26.290
In the Google Play Games app,

00:01:26.290 --> 00:01:30.335
you can see how specifying different shades of green for the theme of the app,

00:01:30.335 --> 00:01:32.885
these too are cohesive experience.

00:01:32.885 --> 00:01:35.090
To make development of an app easier,

00:01:35.090 --> 00:01:38.045
there are few standard system themes that come with Android.

00:01:38.045 --> 00:01:42.200
Each of these system themes follows the material design principles.

00:01:42.200 --> 00:01:46.590
There's Material Dark which has a dark content area and a dark action bar.

00:01:46.590 --> 00:01:51.135
There's Material Light which has a light content area and a light action bar.

00:01:51.135 --> 00:01:54.795
Then, there's the Material Light with dark action bar theme,

00:01:54.795 --> 00:01:59.385
which has a light content area or the dark action bar as the name entails.

00:01:59.385 --> 00:02:00.750
When picking a theme,

00:02:00.750 --> 00:02:05.295
you should pick a system theme that is closest to what you want in your final design.

00:02:05.295 --> 00:02:11.010
You will make this the parent of the custom theme you define in the styles.xml file.

00:02:11.010 --> 00:02:14.120
That way, you'll inherit all the styling from the parent theme,

00:02:14.120 --> 00:02:17.860
and then you can add additional styling of your own on top of it.

00:02:17.860 --> 00:02:21.355
This is a helpful article on how to use the Material Theme.

00:02:21.355 --> 00:02:24.985
It tells you all the things you get for free by using this theme.

00:02:24.985 --> 00:02:27.880
It also talks about the Material Theme, the Material Light,

00:02:27.880 --> 00:02:30.610
and the Material Light with dark action bar themes.

00:02:30.610 --> 00:02:33.850
Here's some example of XML that you can put into your styles file.

00:02:33.850 --> 00:02:37.795
This style is inheriting from the parent Theme.Material.

00:02:37.795 --> 00:02:40.695
So, it has a dark content area with a dark action bar.

00:02:40.695 --> 00:02:43.650
We want everything that the Material Theme provides for us,

00:02:43.650 --> 00:02:46.170
but we do want to change three of the theme colors.

00:02:46.170 --> 00:02:49.670
So we've listed them here in the properties of this style.

00:02:49.670 --> 00:02:52.300
If you're not sure which properties you want to change,

00:02:52.300 --> 00:02:54.315
you can look at this helpful diagram here.

00:02:54.315 --> 00:02:56.150
If you change color primary dark,

00:02:56.150 --> 00:02:59.060
that's going to change the status bar and so on.

00:02:59.060 --> 00:03:03.905
These Material Themes were introduced in Android Lollipop platform version,

00:03:03.905 --> 00:03:09.500
but most developers want their apps to work on versions of Android older than Lollipop.

00:03:09.500 --> 00:03:12.560
In order for your app to run on older versions of Android,

00:03:12.560 --> 00:03:14.710
you should use the Support Library.

00:03:14.710 --> 00:03:17.025
By using the Support Library,

00:03:17.025 --> 00:03:19.480
you can apply one of these themes.

00:03:19.480 --> 00:03:23.840
Themes.AppCompat.Light is the same as the Material Light theme,

00:03:23.840 --> 00:03:27.415
it's just that this one works on older versions of Android.

00:03:27.415 --> 00:03:31.240
And by the way, AppCompat stands for app compatibility.

00:03:31.240 --> 00:03:35.350
Defining a theme using the AppCompat version is slightly different.

00:03:35.350 --> 00:03:37.240
So, pay attention to this syntax here.

00:03:37.240 --> 00:03:39.830
This example is a good one to follow.

00:03:39.830 --> 00:03:42.520
Let's go and change the theme for our app.

00:03:42.520 --> 00:03:46.765
We'll start by picking sensible colors for the app and the status bar.

00:03:46.765 --> 00:03:49.700
I opened the material design spec on color.

00:03:49.700 --> 00:03:52.555
You may remember this from lesson one of our course.

00:03:52.555 --> 00:03:56.620
The spec recommends that we use a 500 color for the primary color of

00:03:56.620 --> 00:04:01.570
the app and a 700 color for the status bar within the same color group.

00:04:01.570 --> 00:04:03.799
Scrolling through this list,

00:04:03.799 --> 00:04:06.490
I'm randomly going to choose the teal color.

00:04:06.490 --> 00:04:11.510
So, I'm going to use the 500 color for the primary color of the app and then the

00:04:11.510 --> 00:04:16.445
700 color for the primary color dark of the app.

00:04:16.445 --> 00:04:18.920
By the way, another helpful tool for picking colors

00:04:18.920 --> 00:04:21.755
for your app is this material palette tool.

00:04:21.755 --> 00:04:24.680
If I click on this color and this color,

00:04:24.680 --> 00:04:27.280
then it shows a preview of what the app would look like.

00:04:27.280 --> 00:04:30.380
And down here is a list of all the colors in the color palette.

00:04:30.380 --> 00:04:32.780
Here's the hex color for the primary color,

00:04:32.780 --> 00:04:34.430
for the dark primary color,

00:04:34.430 --> 00:04:36.305
the accent color, and so on.

00:04:36.305 --> 00:04:37.850
Once you've picked your colors,

00:04:37.850 --> 00:04:43.140
you can go ahead and define a theme as a style resource in the styles.xml file.

00:04:43.140 --> 00:04:45.365
We ask that you include these three properties.

00:04:45.365 --> 00:04:48.405
Within Android Studio, open the styles.xml file.

00:04:48.405 --> 00:04:50.595
We will define our theme here.

00:04:50.595 --> 00:04:55.105
This is same file that we modified in the last quiz where we added the header text style.

00:04:55.105 --> 00:04:59.265
By default, you should see that the AppTheme is already defined.

00:04:59.265 --> 00:05:03.720
The parent is Theme.AppCompat.Light.DarkActionBar.

00:05:03.720 --> 00:05:06.850
So this has a light content area with a dark action bar.

00:05:06.850 --> 00:05:08.580
And we're using AppCompat,

00:05:08.580 --> 00:05:11.925
meaning that this will work on older versions of Android.

00:05:11.925 --> 00:05:15.210
Any customization we do to our theme here is going

00:05:15.210 --> 00:05:18.810
to override the default that were provided by the system theme.

00:05:18.810 --> 00:05:23.140
This is what the XML looks like for a theme after you specify the primary color,

00:05:23.140 --> 00:05:24.285
the primary dark color,

00:05:24.285 --> 00:05:25.645
and the accent color.

00:05:25.645 --> 00:05:29.295
The value for each of these is the hex color here.

00:05:29.295 --> 00:05:31.650
This color will show up in app bar.

00:05:31.650 --> 00:05:35.310
This color will show up in the status bar and contextual app bars.

00:05:35.310 --> 00:05:40.830
And the accent color will show up in UI controls like checkboxes and text fields.

00:05:40.830 --> 00:05:43.140
Once we've made this style resource,

00:05:43.140 --> 00:05:44.985
we want to apply it as a theme.

00:05:44.985 --> 00:05:48.920
Lucky for you, AppTheme is already applied as a theme by default.

00:05:48.920 --> 00:05:51.060
So you don't need to change anything in your code.

00:05:51.060 --> 00:05:53.110
Let's look at where the theme is applied

00:05:53.110 --> 00:05:55.630
in case you want to make more themes in the future.

00:05:55.630 --> 00:05:58.800
You'll need to open up the AndroidManifest.xml file.

00:05:58.800 --> 00:06:02.555
It's located within the manifest folder of your app.

00:06:02.555 --> 00:06:07.210
This XML file provides important information about your app to the system.

00:06:07.210 --> 00:06:11.215
For example, it specifies the package name and the app name,

00:06:11.215 --> 00:06:13.760
and it also lists all the components in your app,

00:06:13.760 --> 00:06:15.635
such as all the activities.

00:06:15.635 --> 00:06:18.340
The line that we're interested in now is this line

00:06:18.340 --> 00:06:21.340
that specifies the theme of the application.

00:06:21.340 --> 00:06:25.030
The value of the theme is @style/AppTheme.

00:06:25.030 --> 00:06:30.065
So it's referring to the style resource in the styles.xml file called AppTheme.

00:06:30.065 --> 00:06:32.705
By specifying this theme for the application,

00:06:32.705 --> 00:06:35.810
all the activities are going to use this theme.

00:06:35.810 --> 00:06:39.275
If we only want to apply this theme to the main activity,

00:06:39.275 --> 00:06:44.180
then we can copy this line and paste it here for this activity XML tag.

00:06:44.180 --> 00:06:46.970
Since our app only contains one activity now,

00:06:46.970 --> 00:06:49.490
there isn't a whole lot of difference between setting

00:06:49.490 --> 00:06:52.975
the theme on application or setting the theme on the activity.

00:06:52.975 --> 00:06:57.049
But for other more complicated apps that contain multiple activities,

00:06:57.049 --> 00:06:59.565
then that distinction is important.

00:06:59.565 --> 00:07:03.150
Complete these tasks in your version of the Just Java app.

00:07:03.150 --> 00:07:05.775
Feel free to choose your own colors for the theme.

00:07:05.775 --> 00:07:08.985
These are just the colors that we picked for our version of the app.

00:07:08.985 --> 00:07:12.200
When you're done, check these boxes and continue.

