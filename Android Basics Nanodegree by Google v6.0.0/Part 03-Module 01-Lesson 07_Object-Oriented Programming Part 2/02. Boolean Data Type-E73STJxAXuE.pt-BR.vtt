WEBVTT
Kind: captions
Language: pt-BR

00:00:00.240 --> 00:00:03.680
Se eu marcar essa caixa no aplicativo
vou adicionar chantilly no café.

00:00:05.030 --> 00:00:06.445
O café ficará mais gostoso.

00:00:06.445 --> 00:00:09.250
E, talvez, mais caro.

00:00:09.250 --> 00:00:10.360
Verdade.

00:00:10.360 --> 00:00:13.396
Vamos ter que aprender como criar
um sumário de pedido

00:00:13.396 --> 00:00:14.400
e depois, enviá-lo.

00:00:14.400 --> 00:00:17.718
Então, quando enviamos o sumário
do pedido, e aí que temos o café.

00:00:17.910 --> 00:00:21.320
O problema é que não sabemos exatamente
se a caixa está marcada ou não.

00:00:21.320 --> 00:00:23.250
Espere aí, você marcou a caixa.

00:00:23.250 --> 00:00:24.280
Eu sei que você marcou.

00:00:24.280 --> 00:00:27.640
É fácil para um humano ver isso,
mas é difícil para o celular ver.

00:00:28.180 --> 00:00:30.205
Você está chamando quem de humano?

00:00:30.205 --> 00:00:33.700
Quando você adiciona o 
<i>CheckBox</i> ao seu aplicativo,

00:00:33.700 --> 00:00:36.688
então está criando um objeto Java.

00:00:36.688 --> 00:00:38.168
Assim.

00:00:38.168 --> 00:00:40.258
Quantas dessas caixas existem?

00:00:40.258 --> 00:00:45.220
Várias, porque dentro de cada objeto
<i>CheckBox</i>, temos uma variável.

00:00:46.150 --> 00:00:48.020
Uma variável Boolean.

00:00:48.020 --> 00:00:49.790
Boolean? Nunca ouvi essa palavra.

00:00:50.030 --> 00:00:52.410
Boolean significa que há 
dois estados aqui.

00:00:52.410 --> 00:00:54.620
Como Nova York e Califórnia?

00:00:54.970 --> 00:00:56.635
Não, é mais como um interruptor.

00:00:56.635 --> 00:00:58.585
Droga!

00:00:58.585 --> 00:01:00.550
Como você faz isso?

00:01:01.180 --> 00:01:04.890
Então, você diz que quando criamos
um <i>CheckBox</i>, temos um objeto Java.

00:01:04.890 --> 00:01:07.830
Dentro disso temos uma variável
do tipo Boolean.

00:01:08.460 --> 00:01:11.450
E o tipo dessa variável é 
ligado ou desligado.

00:01:11.450 --> 00:01:13.300
O valor dela, ligado ou desligado.

00:01:13.300 --> 00:01:16.490
Então posso mudar o valor
de ligado para desligado.

00:01:17.230 --> 00:01:18.470
Não vejo nada.

00:01:18.470 --> 00:01:19.610
Pode ligar de novo?

00:01:19.610 --> 00:01:20.810
Não terminamos ainda.

00:01:23.340 --> 00:01:26.490
A Boolean pode ter dois estados,
verdadeiro e falso.

00:01:26.870 --> 00:01:29.340
E isso representa o estado "marcado"
dessa <i>CheckBox</i>.

00:01:29.340 --> 00:01:32.390
Uau, você falou muitos <i>Checks</i>.

00:01:32.390 --> 00:01:33.370
Vamos voltar um pouco.

00:01:33.370 --> 00:01:34.340
Vou resumir.

00:01:34.340 --> 00:01:35.670
Diga se estou certo.

00:01:35.670 --> 00:01:38.890
Quando criamos o <i>CheckBox</i>, 
criamos esse objeto Java.

00:01:38.890 --> 00:01:41.070
Dentro desse objeto Java, 
temos uma variável.

00:01:41.070 --> 00:01:46.580
Esse tipo é o Boolean, e essa variável
pode ter dois valores,

00:01:46.580 --> 00:01:49.840
ligado ou desligado, um ou zero,
verdadeiro ou falso.

00:01:49.840 --> 00:01:50.600
Exatamente.

00:01:50.600 --> 00:01:52.775
Então vamos bricar com a Boolean.

00:01:55.260 --> 00:01:57.410
Certo. Hora de afastar você disso.

00:01:58.890 --> 00:02:01.800
Vamos ver o que a documentação
fala sobre Boolean.

00:02:02.470 --> 00:02:04.880
Vou procurar no Google por <i>Java Data Type</i>.

00:02:06.320 --> 00:02:09.760
O Boolean é um dos tipos de dados
primitivos em Java.

00:02:10.090 --> 00:02:12.400
Primitivo, no sentido de tipo básico.

00:02:12.400 --> 00:02:16.780
Vou descer essa lista de tipo de dados
primitivo até achar o Boolean.

00:02:17.440 --> 00:02:18.570
Aqui está.

00:02:18.570 --> 00:02:23.220
Aqui diz que o tipo de dado Boolean tem
dois valores possíveis, verdadeiro e falso.

00:02:23.220 --> 00:02:26.360
É usado para marcar as condições
verdadeira ou falsa.

00:02:26.360 --> 00:02:29.590
E diz que o Boolean pega 
um pedaço de informação.

00:02:29.590 --> 00:02:32.600
Esse é o tanto de espaço
que toma em um computador.

00:02:32.980 --> 00:02:36.920
O que importa é que o Boolean
tem dois valores possíveis.

00:02:36.920 --> 00:02:38.120
Você pode achar que verdadeiro e

00:02:38.120 --> 00:02:41.610
e falso são valores de <i>string</i>
porque tem texto,

00:02:41.610 --> 00:02:45.130
mas na verdade, não estão entre aspas,
então não são <i>strings</i>.

00:02:45.800 --> 00:02:48.220
Eles são valores literais fixos.

00:02:48.220 --> 00:02:51.870
Você se lembra que valores 
literais fixos são 0 e 1 ou

00:02:51.870 --> 00:02:54.400
<i>strings</i> específicos como olá ou hoje?

00:02:54.400 --> 00:02:57.620
Isso significa que quando você cria
uma variável Boolean você define

00:02:57.620 --> 00:02:58.830
um desses dois valores.

00:02:59.350 --> 00:03:03.498
Voltando à nossa caixa, se temos
uma variável chamada <i>isChecked</i>

00:03:03.498 --> 00:03:07.102
e armazena informações se a caixa
<i>CheckBox</i> está marcada ou não,

00:03:07.102 --> 00:03:10.710
então dentro dessa variável podemos
armazenar esse valor <i>true</i>.

00:03:10.710 --> 00:03:14.110
Podemos interpretar como 
a <i>CheckBox</i> sendo marcada

00:03:14.800 --> 00:03:18.060
Ou armazenamos o valor <i>false</i>
dentro dessa variável.

00:03:18.060 --> 00:03:21.730
E interpretamos que a <i>CheckBox</i>
não está sendo marcada.

00:03:22.260 --> 00:03:26.590
A Boolean é ótima 
para se ter dois estados possíveis.

00:03:26.590 --> 00:03:30.850
Depende de você como desenvolvedor
interpretar o que é <i>true</i> e <i>false</i>.

00:03:31.850 --> 00:03:35.790
Se você precisa mais de dois estados
possíveis, você não pode usar a Boolean.

00:03:35.790 --> 00:03:38.720
Você tem que usar outra coisa
como um <i>string</i> ou uma integral.

00:03:38.960 --> 00:03:42.250
Declarar uma variável Boolean é similar
a declarar uma <i>int</i>.

00:03:42.840 --> 00:03:45.950
Não é tão complicado quanto
criar uma variável de objeto.

00:03:45.950 --> 00:03:49.850
Segue o formato de Boolean
<i>hasWhippedCream = true</i>.

00:03:49.850 --> 00:03:53.880
Temos o tipo de dado, Boolean, 
seguido pelo nome da variável,

00:03:53.880 --> 00:03:57.505
que pode ser qualquer coisa,
e o valor inicial, <i>true</i> ou <i>false</i>.

00:03:58.225 --> 00:04:00.020
Outros exemplos.

00:04:00.020 --> 00:04:02.339
Aqui eu defini a mesma 
Boolean para ser <i>false</i>.

00:04:03.510 --> 00:04:05.850
E aqui uma Boolean diferente
chamada <i>isRegistered</i>,

00:04:05.850 --> 00:04:08.360
e inicio isso com <i>false</i>.

00:04:08.360 --> 00:04:12.400
Por exemplo, essa variável poderia
representar se o usuário do seu aplicativo

00:04:12.400 --> 00:04:15.050
tem uma conta registrada.

00:04:15.050 --> 00:04:16.329
Outro exemplo.

00:04:16.329 --> 00:04:19.060
<i>Boolean isOrderForPickup = true</i>.

00:04:19.470 --> 00:04:22.740
Essa variável representa se alguém
registrando um pedido

00:04:22.740 --> 00:04:26.080
de café quer pegá-lo no local ou delivery.

00:04:26.080 --> 00:04:29.780
Enquanto o aplicativo não suportar esses
recursos, você pode imaginar como usar

00:04:29.780 --> 00:04:33.960
Booleans pode ser útil, 
porque ela tem dois estados possíveis.

00:04:35.020 --> 00:04:37.580
Perceba como essas variáveis 
foram nomeadas.

00:04:38.170 --> 00:04:41.850
O nome de uma variável Boolean deve seguir
as mesmas convenções que as outras.

00:04:42.300 --> 00:04:46.610
No entanto, é comum começar
com <i>has</i> alguma coisa

00:04:46.610 --> 00:04:48.620
ou <i>is</i> alguma coisa.

00:04:48.620 --> 00:04:53.290
Quando você vê nomes com <i>has</i> ou <i>is</i>,
pode ser uma boolean, mas nem sempre.

00:04:53.450 --> 00:04:56.470
O que vou mostrar a você é um pouco
mais avançado e opcional.

00:04:56.470 --> 00:04:58.520
Então, se estiver interessado,
me acompanhe.

00:04:59.230 --> 00:05:01.950
Essa é a página para a classe <i>CheckBox</i>.

00:05:01.950 --> 00:05:05.320
Vou clicar em <i>view source</i> para ver
o código fonte para

00:05:05.320 --> 00:05:06.960
a classe <i>CheckBox</i>.

00:05:06.960 --> 00:05:09.820
Esse código está salvo
no arquivo <i>CheckBox.java</i>.

00:05:09.820 --> 00:05:13.715
Quero mostrar que existe uma variável
Boolean dentro dessa classe <i>CheckBox</i>.

00:05:14.220 --> 00:05:18.010
Mas não vejo aqui,
então vamos ver na super classe.

00:05:18.450 --> 00:05:21.200
Se esse valor for <i>true</i> então 
a caixa está marcada.

00:05:21.200 --> 00:05:23.800
Se for <i>false</i> então a caixa
não está marcada.

00:05:24.320 --> 00:05:27.560
Note que esse nome não contém
as palavras <i>has</i> ou <i>is</i>,

00:05:27.560 --> 00:05:30.850
mas se você descer aqui, 
verá que outras variáveis Boolean

00:05:30.850 --> 00:05:32.490
têm a palavra <i>has</i>.

00:05:32.760 --> 00:05:34.740
Depende da preferência
do desenvolvedor.

00:05:34.740 --> 00:05:38.720
Nesse caso, está claro que isso é uma
Boolean para o estado "marcado".

00:05:39.610 --> 00:05:43.490
E enquanto essa Boolean não é encontrada
diretamente no arquivo <i>CheckBox.java</i>,

00:05:43.750 --> 00:05:46.640
já que herdamos da classe
<i>CompoundButton</i>,

00:05:46.640 --> 00:05:49.270
temos esse Boolean de graça.

00:05:49.270 --> 00:05:51.110
Em geral, olhar o código fonte

00:05:51.110 --> 00:05:53.790
para as classes de Android 
não é obrigatório.

00:05:54.220 --> 00:05:55.720
Para desenvolver aplicativos Android,

00:05:55.720 --> 00:05:58.550
tudo que precisa saber é como olhar
a página de documentação.

00:05:59.250 --> 00:06:02.470
Nesse vídeo aprendemos como 
as Booleans podem armazenar

00:06:02.470 --> 00:06:04.220
os valores <i>true</i> e <i>false</i>.

00:06:04.960 --> 00:06:08.000
Neste quiz, pratique criando
uma variável Boolean

00:06:08.000 --> 00:06:11.650
e atualize-a digitando linhas 
de código nessas caixas.

00:06:12.280 --> 00:06:15.580
Digite essa linha exatamente aqui
e da mesma forma nas outras.

00:06:16.990 --> 00:06:19.700
Depois, quero que você pense
em outros casos de uso

00:06:19.700 --> 00:06:21.720
de armazenar informação em uma Boolean.

00:06:21.720 --> 00:06:23.890
Pense no que tem dois estados possíveis.

00:06:24.920 --> 00:06:27.740
Você usa alarme no celular para acordar?

00:06:28.200 --> 00:06:30.380
É provável que quando você liga o alarme

00:06:30.380 --> 00:06:33.530
ou desliga, está sendo armazenado
como uma variável Boolean.

00:06:34.500 --> 00:06:38.780
Outra possível variável Boolean
é se você quer repetir o alarme ou não.

00:06:39.460 --> 00:06:43.490
No aplicativo da Gmail se eu quiser 
marcar uma mensagem especial que recebi

00:06:43.490 --> 00:06:48.960
da equipe do Gmail em 2011, 
eu posso marcar ou desmarcar.

00:06:48.960 --> 00:06:52.140
Já que isso tem dois estados, pode ser
armazenada como uma variável Boolean.

00:06:52.140 --> 00:06:55.890
Um nome possível para essa variável
Boolean poderia ser <i>isStarred</i>.

00:06:55.890 --> 00:06:59.660
Você também poderia usar uma variável
Boolean para registrar

00:06:59.660 --> 00:07:01.210
se um e-mail foi lido ou não.

00:07:01.210 --> 00:07:04.230
Esse e-mail não foi lido,
já esse, foi lido.

00:07:05.060 --> 00:07:07.530
Falando em YouTube, vamos ao aplicativo.

00:07:08.320 --> 00:07:11.080
No aplicativo do YouTube, 
quando ele mostra uma lista de vídeos,

00:07:11.140 --> 00:07:14.090
se eu já os assisti, ele mostra
essa caixa de texto aqui

00:07:14.090 --> 00:07:17.150
que diz <i>watched</i> acima no canto
esquerdo da imagem <i>thumbnail</i>.

00:07:17.560 --> 00:07:19.149
O fato de eu ter assistido ou não

00:07:19.359 --> 00:07:22.280
também pode ser armazenado
como uma variável Boolean.

00:07:22.650 --> 00:07:24.910
Mostrei alguns casos
em que a Boolean é usada,

00:07:24.910 --> 00:07:26.800
então mostre alguns, você também.

00:07:27.010 --> 00:07:30.020
Você pode navegar por aplicativos Android
existentes para ter ideias.

