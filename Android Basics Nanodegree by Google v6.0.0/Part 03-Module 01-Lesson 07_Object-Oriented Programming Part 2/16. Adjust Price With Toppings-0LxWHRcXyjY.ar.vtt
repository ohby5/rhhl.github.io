WEBVTT
Kind: captions
Language: ar

00:00:00.234 --> 00:00:03.135
‫لحساب السعر الصحيح لملخص الطلب

00:00:03.467 --> 00:00:07.201
‫ينبغي أن نمرر المعلومات
‫بشأن أي إضافة اختارها المستخدم

00:00:07.434 --> 00:00:09.035
‫إلى الوظيفة calculatePrice

00:00:09.467 --> 00:00:12.567
‫لقد اخترت القيام بكل العمليات الحسابية

00:00:12.834 --> 00:00:14.435
‫بداخل الوظيفة calculatePrice

00:00:14.667 --> 00:00:17.767
‫حتى أضمن مركزية كل هذا المنطق المتصل

00:00:18.334 --> 00:00:20.568
‫عن طريق ضم كل شيء في هذه الوظيفة

00:00:20.801 --> 00:00:25.602
‫لو كان هناك مشكلة في طريقة حساب السعر
‫يمكننا التحقق من الكود في مكان واحد

00:00:26.567 --> 00:00:27.801
‫هذا أكثر قابلية للإدارة

00:00:28.267 --> 00:00:29.567
‫ثم، ضمن هذه الطريقة

00:00:29.868 --> 00:00:32.535
‫سنعرف السعر الأساسي لكوب واحد من القهوة

00:00:33.434 --> 00:00:34.935
‫هذا بالضبط كما أريتكم من قبل

00:00:35.434 --> 00:00:37.734
‫إذا كان ينبغي إضافة كريمة مخفوقة للقهوة
‫سنضيف 1 دولار

00:00:38.067 --> 00:00:40.634
‫إذا كان ينبغي إضافة شوكولاتة للقهوة
‫سنضيف 2 دولار

00:00:41.000 --> 00:00:43.234
‫ثم نأخذ السعر الأساسي لكوب القهوة

00:00:43.501 --> 00:00:47.435
‫ونضربه في الكمية المطلوبة
‫لتحديد إجمالي سعر الطلب

00:00:47.868 --> 00:00:51.736
‫أولاً لنمرر المعلومات حول مربعات اختيار
‫الكريمة المخفوقة والشوكولاتة

00:00:51.968 --> 00:00:53.535
‫إلى الوظيفة calculatePrice

00:00:54.200 --> 00:00:57.467
‫سأمرر المتغيرين المنطقيين
‫hasWhippedCream و hasChocolate

00:00:58.367 --> 00:01:01.834
‫ليس هناك فائدة لتمرير
‫كائنات CheckBox نفسها

00:01:02.133 --> 00:01:06.067
‫لأن كل ما يهمنا هو هذه القيم المنطقية
‫من أجل حساب السعر

00:01:06.367 --> 00:01:10.235
‫أندرويد ستوديو يقول إن هناك خطأ
‫بسبب عدم تطابق توقيع الوظيفة

00:01:10.467 --> 00:01:14.901
‫أنا أحاول استدعاء وظيفة تم تعريفها
‫لتكون بلا معاملات إدخال

00:01:15.334 --> 00:01:18.467
‫فلنذهب إلى مكان تعريف
‫الوظيفة calculatePrice

00:01:18.834 --> 00:01:20.401
‫سأغير توقيع الوظيفة

00:01:20.601 --> 00:01:22.935
‫حتى يأخذ معاملي إدخال

00:01:23.267 --> 00:01:27.235
‫منطقي يسمى addWhippedCream
‫ومنطقي يسمى addChocolate

00:01:27.701 --> 00:01:30.468
‫تستطيع أن تسمي معاملات الإدخال تلك
‫بالاسم الذي تريده

00:01:30.767 --> 00:01:32.601
‫لقد اخترت فقط استخدام اسم مختلف

00:01:33.067 --> 00:01:36.401
‫عما تم تمريره فقط لأريكم أن هذه الأسماء
‫ليس مطلوباً أن يتطابقوا

00:01:36.868 --> 00:01:40.435
‫كما قمت بتحديث Javadoc
‫لوصف معاملي الإدخال الجديدان

00:01:40.567 --> 00:01:43.168
‫بهذه الطريقة فإن من يستدعي الوظيفة
‫سيعرف ما ينبغي تمريره

00:01:43.534 --> 00:01:45.667
‫بعد ذلك، داخل وظيفة calculatePrice

00:01:45.834 --> 00:01:49.668
‫أحتاج لتهيئة كل منطق تغيير السعر
‫بناءً على هذه الإضافات

00:01:49.901 --> 00:01:51.735
‫أولاً، سأحسب السعر الأساسي

00:01:51.968 --> 00:01:54.802
‫سأنشيء متغير عددي اسمه basePrice

00:01:55.067 --> 00:01:58.901
‫سأبدأ بالقيمة 5
‫لأن كوب القهوة يكلف 5 دولارات

00:01:59.200 --> 00:02:00.667
‫ثم سأنشيء جملة if

00:02:00.868 --> 00:02:05.335
‫إذا كان المتغير المنطقي addWhippedCream
‫قيمته صواب، فالمستخدم يريد كريمة مخفوقة

00:02:05.601 --> 00:02:09.335
‫وهذا يعني أننا يجب أن نضيف 1 دولار
‫على السعر الأساسي لكوب القهوة

00:02:09.667 --> 00:02:11.601
‫حسناً، هذا سيتولى حالة الكريمة المخفوقة

00:02:11.868 --> 00:02:13.602
‫الآن، فلننتقل إلى حالة الشوكولاتة

00:02:13.734 --> 00:02:15.401
‫سأنشيء جملة if أخرى

00:02:16.000 --> 00:02:18.567
‫لست بحاجة إلى مقطع كود else

00:02:18.901 --> 00:02:22.201
‫لأن المستخدم لو لم يرد كريمة مخفوقة،
‫فلن أفعل أي شيء على الإطلاق

00:02:22.934 --> 00:02:26.535
‫في الواقع، إذا أردت كتابة حالة else
‫فهذا ما ستبدو عليه

00:02:27.100 --> 00:02:29.100
‫سيكون لدي فقط تعليق يقول، لا تفعل شيئاً

00:02:29.901 --> 00:02:31.635
‫لكن أندرويد استوديو أكثر ذكاء من ذلك

00:02:31.667 --> 00:02:34.601
‫وقد لاحظ أن جملة else فارغة

00:02:35.000 --> 00:02:37.501
‫ونصيحتهم هي أن هذا النوع من الكود مربك

00:02:37.834 --> 00:02:39.501
‫ويمكن أن يكون نتيجة خطأ مطبعي

00:02:39.901 --> 00:02:43.034
‫كما أنها سطور كود زائدة لا نحتاجها
‫لذا فلنحذف مقطع الكود الخاص بـ else

00:02:43.601 --> 00:02:45.368
‫الآن يمكننا الانتقال
إلى حالة الشوكولاتة

00:02:45.934 --> 00:02:49.168
‫إضافة الشوكولاتة مستقلة تماماً
‫عن إضافة الكريمة المخفوقة

00:02:49.734 --> 00:02:52.101
‫لا يهم إذا اختار المستخدم
واحدة أو الأخرى

00:02:52.300 --> 00:02:53.667
‫فهما لا يعتمدان على بعضها البعض

00:02:54.467 --> 00:02:56.500
‫لذا سأنشيء حالة if منفصلة

00:02:57.000 --> 00:02:59.133
‫إذا كان المستخدم يريد الشوكولاتة

00:02:59.467 --> 00:03:04.001
‫فسنحتاج لتعديل السعر الأساسي
‫ليصبح السعر الأساسي زائد 2

00:03:04.405 --> 00:03:08.103
‫مرة أخرى، كان يمكن أن يكون لدينا
‫مقطع كود else، لكنه لن يفعل شيئاً

00:03:08.776 --> 00:03:12.133
‫إذا كان المستخدم لا يريد الشوكولاتة،
‫فلسنا بحاجة لتعديل السعر على الإطلاق

00:03:12.690 --> 00:03:15.147
‫لذلك فلنحذف هذا الكود لأنه غير ضروري

00:03:15.478 --> 00:03:19.932
‫بقراءة الكود، لدينا سعر أساسي
‫5 دولارات لكوب القهوة

00:03:20.369 --> 00:03:25.597
‫لو أراد المستخدم كريمة مخفوقة فنحن بحاجة
‫لزيادة السعر الأساسي 1 دولار

00:03:26.153 --> 00:03:30.003
‫ثم إذا كان المستخدم يريد الشوكولاتة،
‫فنحن بحاجة لزيادة السعر الأساسي 2 دولار

00:03:30.249 --> 00:03:32.039
‫ثم لحساب إجمالي سعر الطلب

00:03:32.261 --> 00:03:35.936
‫نحن بحاجة إلى ضرب الكمية
‫في سعر كوب القهوة الواحد

00:03:36.534 --> 00:03:38.368
‫حسناً، هذا الكود يبدو أنه سيعمل
بشكل سليم

00:03:38.678 --> 00:03:41.582
‫أضفت أيضاً تعليقات مضمنة
‫فوق كل مقطع من الكود

00:03:41.762 --> 00:03:45.040
‫حتى نتذكر ما فعلناه
‫حين نعود إلى هذا الكود لاحقاً

00:03:45.657 --> 00:03:47.443
‫الآن، فلنشغل التطبيق للتحقق من أنه يعمل

00:03:47.907 --> 00:03:50.727
‫حسناً، فلنختبر الحالات
‫التي راجعناها معاً آنفاً

00:03:51.915 --> 00:03:54.717
‫إذا اخترنا إضافة الكريمة المخفوقة
‫والكمية 3

00:03:55.080 --> 00:03:57.699
‫فإن سعر كل كوب سيكون 6 دولارات

00:03:58.413 --> 00:04:00.091
‫6 دولارات مضروبة في 3 هي 18

00:04:01.144 --> 00:04:03.213
‫وقد قام بحساب 18، هذا جيد

00:04:03.512 --> 00:04:07.241
‫لو كان لدي إضافة شوكولاتة،
‫فإن كل كوب من القهوة سيكلف 8 دولارات

00:04:07.948 --> 00:04:11.567
‫إذا كانت الكمية لدي هي 2،
‫فإن السعر الإجمالي سيكون 16 دولار

00:04:11.993 --> 00:04:15.335
‫لقد حاولنا استخدام إضافة كريمة مخفوقة
‫وقد حصلنا على الإجابة الصحيحة

00:04:15.700 --> 00:04:20.586
‫وجربنا الحالة مع إضافة الكريمة المخفوقة
‫والشوكولاتة معاً وحصلنا على إجابة صحيحة

00:04:21.298 --> 00:04:23.878
‫الآن فلنجرب اختيار إضافة الشوكولاتة فقط

00:04:24.441 --> 00:04:26.931
‫أغير الكمية إلى 1، ثم أضغط على زر الطلب

00:04:27.290 --> 00:04:30.554
‫هذا يبدو صحيحاً،
‫لأن لدينا 5 دولارات لكوب القهوة الواحد

00:04:30.949 --> 00:04:34.203
‫بالإضافة إلى 2 دولار للشوكولاتة
‫وهذا يعطينا 7 دولارات

00:04:34.767 --> 00:04:40.468
‫لو غيرت هذا إلى 4، فالمجموع يتم تحديثه
‫على أساس 7 دولارات لكل كوب قهوة

00:04:41.100 --> 00:04:42.100
‫رائع

00:04:42.834 --> 00:04:43.967
‫يبدو أنه يعمل

00:04:44.926 --> 00:04:46.990
‫مررت على حالات الاختبار تلك بسرعة كبيرة

00:04:47.650 --> 00:04:48.933
‫ما كنت أحاول القيام به

00:04:49.133 --> 00:04:52.667
‫هو التأكد من أن كل مسارات الكود
المحتملة ‫قد تم اختبارها

00:04:53.167 --> 00:04:56.834
‫على سبيل المثال، إذا شغلنا التطبيق،
‫ولم نظلل مربع اختيار الكريمة المخفوقة

00:04:57.031 --> 00:04:59.990
‫فلن نختبر أبداً ما إذا كان هذا الكود
هنا ‫يعمل أم لا

00:05:00.423 --> 00:05:05.394
‫إذن نحن بحاجة لاختيار الظروف
‫التي ستسبب تنفيذ كل أجزاء الكود

00:05:05.678 --> 00:05:09.702
‫لذلك اخترنا إضافة الكريمة المخفوقة
‫كما اخترنا إضافة الشوكولاتة

00:05:09.845 --> 00:05:11.970
‫لتتأكد من تنفيذ هذا الكود أيضاً

00:05:12.523 --> 00:05:16.838
‫ولنكون أكثر دقة ينبغي أن نختبر
‫كل تركيبات هذين المتغيرين المنطقيين

00:05:17.367 --> 00:05:21.134
‫كل هذه التركيبات
‫ستتسبب في سلوك مختلف لهذه الوظيفة

00:05:21.436 --> 00:05:24.428
‫لذا نريد التأكد أن الكود يعمل
‫في جميع تلك الحالات

00:05:24.834 --> 00:05:28.335
‫حيث أن السعر الأساسي يتم
حسابه بينما نتقدم

00:05:28.449 --> 00:05:33.284
‫يمكننا أيضاً استخدام رسائل السجل
‫للتأكد من حسابه كما هو متوقع

00:05:33.934 --> 00:05:38.568
‫على أي حال، هذه فقط أشياء لنأخذها
‫بالاعتبار عند كتابة كود يتطور في تعقيده

00:05:38.936 --> 00:05:40.760
‫مع جمل تدفق التحكم هذه

