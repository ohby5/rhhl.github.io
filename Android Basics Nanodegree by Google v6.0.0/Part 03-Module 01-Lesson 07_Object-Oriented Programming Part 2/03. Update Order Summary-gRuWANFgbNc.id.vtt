WEBVTT
Kind: captions
Language: id

00:00:00.450 --> 00:00:03.560
Kodepalsu dimulai ketika
tombol order diklik.

00:00:03.560 --> 00:00:07.020
Ini mengindikasikan jika kita harus tambah
kode kita ke dalam metode submit order.

00:00:08.180 --> 00:00:11.280
Lalu, kita harus dapat status cek
dari CheckBox.

00:00:11.280 --> 00:00:14.990
Untuk memanggil metode apapun
di dalam view, di dalam view hierarki,

00:00:14.990 --> 00:00:17.570
pertama kita harus findViewById

00:00:17.570 --> 00:00:21.560
Yang harus dilakukan adalah menetapkan
view id untuk CheckBox view ini.

00:00:22.770 --> 00:00:25.920
Di dalam android studio, dalam tata letak
activity_main. Saya akan cari

00:00:25.920 --> 00:00:27.420
CheckBox view.

00:00:27.420 --> 00:00:31.690
Karena kursor saya ada di sini, view
yang ada pada pratinjau jadi tersorot.

00:00:31.690 --> 00:00:34.600
Lalu saya akan menambah baris untuk
mengirim view ID ke view ini.

00:00:35.750 --> 00:00:39.140
Di dalam kode Java,
saya bisa arahkan view ini, dan

00:00:39.140 --> 00:00:42.140
kemudian mencoba mengekstrak
status dari sini.

00:00:42.140 --> 00:00:43.410
Mari ke MainActivity.

00:00:43.410 --> 00:00:46.410
Saya akan taruh kode saya dalam
metode submit order.

00:00:47.700 --> 00:00:51.250
Saya perlu mencari CheckBox
objek Java di dalam view hierarki.

00:00:52.270 --> 00:00:55.650
Saya mulai dengan membuat sebuah variabel,
whippedCreamCheckBox,

00:00:55.650 --> 00:00:57.810
dengan tipe data CheckBox.

00:00:57.810 --> 00:01:01.380
Lali saya penggil metode findViewById
di dalam activity itu.

00:01:01.380 --> 00:01:03.950
Ini akan menemukan view berdasarkan
ID yang diberikan.

00:01:03.950 --> 00:01:09.080
Saya akan masukan ID
(R.id.whipped_cream_CheckBox),

00:01:09.080 --> 00:01:12.060
yang baru saya tugaskan dalam
berkas tata letak lain.

00:01:12.060 --> 00:01:16.070
Langsung muncul kesalahan karena
tipe yang dibutuhkan adalah CheckBox,

00:01:16.070 --> 00:01:19.020
karena ini adalah variabel pada sisi kiri.

00:01:19.020 --> 00:01:23.330
Namun, nilai kembalian metode ini adalah
tipe view. Seperti yang dipelajari dulu.

00:01:23.330 --> 00:01:25.710
kita perlu melempar nilai kembalian
metode ini.

00:01:25.710 --> 00:01:29.380
Saya akan lempar menjadi objek CheckBox.

00:01:29.380 --> 00:01:31.433
Alasan mengapa saya tak
bisa menyerahkannya

00:01:31.458 --> 00:01:33.744
karena CheckBox merupakan
kelas turunan dari View.

00:01:34.910 --> 00:01:37.480
Oke, sekarang saya punya
objek Java CheckBox

00:01:37.480 --> 00:01:40.450
yang mewakili CheckBox di dalam UI.

00:01:40.450 --> 00:01:42.570
Untuk mencari tahu apakah kotak dicentang

00:01:42.570 --> 00:01:45.760
atau tidak, saya harus memanggil
metode di dalam objek.

00:01:45.760 --> 00:01:48.360
Anda mungkin tak tahu metode
untuk memanggil objek CheckBox.

00:01:48.360 --> 00:01:49.790
Dan itu tidak apa-apa.

00:01:49.790 --> 00:01:52.000
Anda bisa mencarinya di Google.

00:01:52.000 --> 00:01:55.520
Cari CheckBox Android, dan
kemudian klik tautan pertama.

00:01:56.940 --> 00:01:59.397
Dan untuk memperkuat yang
saya katakan sebelumnya

00:01:59.422 --> 00:02:01.560
CheckBox merupakan kelas
turunan dari view.

00:02:01.560 --> 00:02:03.080
Terdapat view lain diantaranya, tapi

00:02:03.080 --> 00:02:04.820
akhirnya masih termasuk
kelas turunan view.

00:02:06.050 --> 00:02:09.120
Gambaran umum kelas ini cukup menarik
karena terdapat

00:02:09.120 --> 00:02:10.780
beberapa kode Java di sini.

00:02:10.780 --> 00:02:13.730
Ini memiliki baris kode yang sudah
ada di dalam aplikasi,

00:02:13.730 --> 00:02:19.530
kita lakukan findViewById, memberikan id
kemudian mendapatkan item CheckBox kembali

00:02:19.530 --> 00:02:21.560
Baris selanjutnya ini bahkan
lebih menarik lagi.

00:02:21.560 --> 00:02:26.630
Dikatakan CheckBox, yang mana adalah nama
variabel ini, dot is checked.

00:02:26.630 --> 00:02:29.510
Ini mirip dengan panggilan metode
tanpa argumen input.

00:02:29.510 --> 00:02:33.450
Ini tampaknya memberitahu kita apakah
kotak dicentang atau tidak, dan

00:02:33.450 --> 00:02:37.580
mengembalikan nilai benar atau salah,
tapi mari periksa panduan checkbox dulu.

00:02:37.580 --> 00:02:42.740
Gulir ke sini, bisa dilihat ada
beberapa kode CheckBox xml,

00:02:42.740 --> 00:02:44.770
dan kode Java lagi.

00:02:45.910 --> 00:02:49.910
Metode ini terlihat seperti akan
terpanggil saat mengeklik CheckBox.

00:02:49.910 --> 00:02:53.840
Nama metode ini sesuai dengan
nama metode yang dispesifikasi dalam xml.

00:02:53.840 --> 00:02:58.530
Saya menduga jika view yang
diberikan merupakan check box view.

00:02:58.530 --> 00:03:00.800
Kita serahkan ke CheckBox, dan

00:03:00.800 --> 00:03:05.360
kita juga memanggil IsChecked, dan
nilai kembaliannya adalah boolean.

00:03:05.360 --> 00:03:09.380
Komentar juga menjelaskannya, dikatakan,
apakah sekarang view sudah di centang?

00:03:09.380 --> 00:03:11.880
Jadi, saya rasa inilah yang kita butuhkan.

00:03:11.880 --> 00:03:13.520
Ayo kita coba gunakan metode IsChecked.

00:03:14.640 --> 00:03:18.010
Pertama, kita ketik nama variabel
dari objek CheckBox.

00:03:18.010 --> 00:03:20.210
Yaitu whippedCreamCheckBox.

00:03:20.210 --> 00:03:23.020
Lalu saya tambahkan sebuah titik agar
dapat memanggil metode padanya.

00:03:23.020 --> 00:03:26.290
Saya ketik isChecked,
dan muncul di sini.

00:03:26.290 --> 00:03:29.400
Saya tekan Enter untuk
menggunakan saran ini.

00:03:29.400 --> 00:03:33.150
Di sebelah kanan, dikatakan apa
nilai kembalian dari metode ini,

00:03:33.150 --> 00:03:35.150
dan dikatakan dia mengambalikan boolean.

00:03:35.150 --> 00:03:39.330
Setelah saya gunakan saran ini
saya akan menuju sebelah kiri

00:03:39.330 --> 00:03:44.110
dari metode ini untuk memanggil dan saya
simpan hasilnya dalam variabel boolean.

00:03:44.110 --> 00:03:48.260
Saya akan menyebutnya variabel boolean
hasWhippedCream, lalu tekan Enter.

00:03:48.260 --> 00:03:52.860
Untuk rekapnya, kita memanggil metode
pada objek Java whippedCreamCheckBox dan

00:03:52.860 --> 00:03:54.690
metodenya disebut isChecked.

00:03:54.690 --> 00:03:56.750
Yang memiliki nilai kembalian boolean dan

00:03:56.750 --> 00:03:59.210
disimpan di sebelah kiri.

00:03:59.210 --> 00:04:01.970
Di dalam variabel yang disebut
hasWhippedCream.

00:04:01.970 --> 00:04:03.220
Ini menyelesaikan
tugas pertama.

00:04:03.220 --> 00:04:06.530
Saya juga menyebutkan kalau Anda
bisa log variabel ini, sehingga

00:04:06.530 --> 00:04:09.130
Anda bisa memverifikasi jika Anda
berada pada jalur yang tepat.

00:04:09.130 --> 00:04:10.870
Di baris selanjutnya saya tambah pesan log

00:04:12.050 --> 00:04:14.150
Argumen pertamanya adalah label nama.

00:04:14.150 --> 00:04:17.100
Saya akan pakai nama dari
kelas kita, yaitu MainActivity.

00:04:17.100 --> 00:04:19.810
Lalu saya letakkan pesan saya sendiri.

00:04:19.810 --> 00:04:22.058
Saya akan tulis Has whipped cream.

00:04:22.058 --> 00:04:26.660
Lalu tambahkan di variabel boolean.

00:04:26.660 --> 00:04:30.930
Dengan menggabungkan string
dengan variabel boolean ini,

00:04:30.930 --> 00:04:34.560
ini juga akan mengubah
nilai boolean ke dalam string.

00:04:34.560 --> 00:04:38.319
Jadi, teksnya akan mengatakan has whipped
cream true, atau has whipped cream false.

00:04:39.400 --> 00:04:41.330
Sekarang, mari jalankan
aplikasinya di perangkat

00:04:41.330 --> 00:04:43.780
periksa kalau ini benar-benar
mencetak pesan log yang tepat.

00:04:44.810 --> 00:04:48.170
Saya meningkatkan ukuran jendela log
menggunakan kontrol ini.

00:04:48.170 --> 00:04:50.030
Sekarang, saat klik di
whipped cream check box

00:04:50.030 --> 00:04:53.850
lalu tekan tombol order, diharapkan
kalau teks yang muncul berkata,

00:04:53.850 --> 00:04:56.319
has whipped cream true or false.

00:04:57.360 --> 00:04:59.770
Saya gulir lagi agar bisa
lihat pesan yang sesungguhnya.

00:05:00.790 --> 00:05:03.540
Oke, kita lihat apakah ini bekerja.

00:05:03.540 --> 00:05:06.210
Saya akan centang kotak ini
dan tekan order.

00:05:06.210 --> 00:05:10.101
Oke, saya kira pesan baru sudah
dicetak dan mengatakan Main Activity.

00:05:10.101 --> 00:05:12.335
Has whipped cream: true.

00:05:12.335 --> 00:05:15.215
Itu benar karena CheckBox sudah dicentang.

00:05:15.215 --> 00:05:17.992
Jika saya hapus centang
dari kotak ini, lalu

00:05:18.017 --> 00:05:20.545
tekan order, saya harap muncul kata false

00:05:20.645 --> 00:05:24.825
Gulir ke kanan lagi,
dikatakan has whipped cream: false.

00:05:24.825 --> 00:05:28.475
Oke, sepertinya sejauh ini
kode kita sudah benar untuk

00:05:28.475 --> 00:05:32.195
menemukan CheckBox view, dan
mendapat tanda centang.

00:05:32.195 --> 00:05:33.945
Sekarang, lanjut ke tugas kedua.

00:05:35.410 --> 00:05:40.000
Sekarang kita perlu memasukkan variabel
boolean ke dalam metode order summary.

00:05:40.000 --> 00:05:43.580
Jika saya ingin memberi argumen lain
ke dalam metode createOrderSummary,

00:05:43.580 --> 00:05:48.410
Saya akan tambah koma di sini,
lalu memberikan variabel, hasWhippedCream.

00:05:49.820 --> 00:05:53.680
Segera muncul kesalahan yang mengatakan,
ini tidak bisa diterapkan ke

00:05:53.680 --> 00:05:58.730
metode createOrderSummary, karena hanya
mengharapkan parameter integer.

00:05:58.730 --> 00:06:02.050
Mari gulir kebawah ke tempat dimana
createOrderSummary dinyatakan.

00:06:03.310 --> 00:06:05.590
Sekarang, saya perlu memodifikasi
method signature

00:06:05.590 --> 00:06:07.900
dari metode createOrderSummary.

00:06:07.900 --> 00:06:10.440
Alih-alih mengambil satu parameter input,
perlu mengambil dua.

00:06:10.440 --> 00:06:15.430
Saya akan menambah koma dan
menentukan parameter kedua.

00:06:15.430 --> 00:06:20.810
Tipe data haruslah boolean, dan saya
akan menyebutnya addwhippedCream.

00:06:20.810 --> 00:06:23.850
Anda bisa menyebut parameter input
dengan nama apapun, tapi

00:06:23.850 --> 00:06:27.430
Saya ingin tunjukkan kalau nama ini
tidak harus sesuai dengan nama di sini.

00:06:28.490 --> 00:06:32.580
Karena kita modifikasi method's signature
ini, kita harus memperbarui Java juga

00:06:32.580 --> 00:06:35.440
untuk menentukan tentang
apa parameter input ini.

00:06:36.510 --> 00:06:38.140
Oke, itu melengkapi tugas kedua.

00:06:39.600 --> 00:06:42.850
Tugas ketiga ialah mengubah teks order
summary untuk memasukkan atau tidak

00:06:42.850 --> 00:06:44.450
pengguna yang ingin whip cream.

00:06:45.800 --> 00:06:49.490
Pada dasarnya, kita perlu menggunakan
parameter input di sini

00:06:49.490 --> 00:06:52.410
untuk memodifikasi pesan order summary.

00:06:52.410 --> 00:06:56.260
Dalam cuplikan layar, baris whip cream
topping muncul di bawah nama.

00:06:56.260 --> 00:06:58.030
Mari tambah baris baru di sini.

00:06:58.030 --> 00:07:01.450
Saya akan ketik
priceMessage tambah sama dengan

00:07:01.450 --> 00:07:03.950
untuk memodifikasi pesan harga yang ada.

00:07:03.950 --> 00:07:06.720
Lalu tambah baris Add whipped cream?

00:07:06.720 --> 00:07:10.520
Saya tambah jarak,
kemudian variabel boolean.

00:07:10.520 --> 00:07:14.060
Sekali lagi, saya menggabung
string literal dengan nilai boolean,

00:07:14.060 --> 00:07:16.770
dan akan mengubah
segalanya ini menjadi string.

00:07:16.770 --> 00:07:18.100
Keren, mari dicoba di perangkat.

00:07:19.230 --> 00:07:20.770
Jika saya klik check box ini lalu

00:07:20.770 --> 00:07:24.720
klik tombol order, semoga dikatakan
add whip cream topping true.

00:07:24.720 --> 00:07:29.410
Dan memang, tapi, saya lupa karakter
baris baru jadi harus modifikasi sekarang.

00:07:29.410 --> 00:07:32.590
Nah, mumpung saya di sini saya
juga harus cek kasus lain.

00:07:32.590 --> 00:07:34.680
Saya hapus tanda centangnya
dan tekan tombol order.

00:07:34.680 --> 00:07:36.640
Dan dikatakan false.

00:07:36.640 --> 00:07:40.310
Dia benar dalam mencerminkan
status dari checked box.

00:07:40.310 --> 00:07:43.800
Sekarang, mari tambah karakter baris baru
dan jalankan aplikasi lagi.

00:07:43.800 --> 00:07:46.590
Jika saya centang kotak lalu tekan
tombol order maka dikatakan true.

00:07:46.590 --> 00:07:49.480
Jika saya hapus tanda centang,
dikatakan false.

00:07:50.610 --> 00:07:52.810
Hebat.
Itu menangani dua kasus.

00:07:54.550 --> 00:07:56.750
Bagian akhir tugas ini lelebih mudah

00:07:56.750 --> 00:08:00.610
Karena setelah kita verifikasi log bahwa
telah diperiksa dengan benar

00:08:00.610 --> 00:08:04.200
yang tersisa hanya soal
menampilkannya di layar.

00:08:04.200 --> 00:08:06.000
Karena sekarang berkerja
di dalam aplikasi,

00:08:06.000 --> 00:08:08.660
Saya bisa hapus pesan log karena
sudah tidak dibutuhkan lagi.

00:08:08.660 --> 00:08:11.810
Kemudian jalankan aplikasi untuk
yang terakhir kalinya.

00:08:11.810 --> 00:08:12.830
Oke, kerja bagus.

00:08:12.830 --> 00:08:14.260
Ayo lanjut ke tugas selanjutnya.

