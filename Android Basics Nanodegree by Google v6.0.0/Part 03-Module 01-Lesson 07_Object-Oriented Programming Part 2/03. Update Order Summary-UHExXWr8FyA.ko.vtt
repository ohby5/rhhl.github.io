WEBVTT
Kind: captions
Language: ko

00:00:00.420 --> 00:00:03.820
논리형 변수로 이 박스의 스테이트를
지정할 수 있다는 걸 알았으니

00:00:03.820 --> 00:00:07.290
이제 주문 요약 부분을 수정하여

00:00:07.290 --> 00:00:10.830
휘핑크림 토핑을 원하는 지를
표시할 수 있게 만들어 봅시다.

00:00:10.830 --> 00:00:13.860
휘핑크림을 원하는 경우엔
주문 버튼을 클릭하면

00:00:13.860 --> 00:00:17.870
주문 요약에 한 줄이 더해져서 
휘핑크림 추가 여부를

00:00:17.870 --> 00:00:19.800
표시하게 됩니다.

00:00:19.800 --> 00:00:24.080
박스에 체크해서 토핑을 추가하면
true라고 표시되며

00:00:24.080 --> 00:00:29.120
체크를 취소하고 주문을 클릭하면
이렇게 false로 표시됩니다.

00:00:29.120 --> 00:00:33.590
이 박스 체크는 안드로이드에서 처리되며 
주문 버튼을 누르면 초기 주문 요약 내용을

00:00:33.590 --> 00:00:37.650
표시하게 만드는 코드는 
이미 저희 앱 내에 있습니다.

00:00:37.650 --> 00:00:41.320
이제 남은 건 휘핑 크림 추가라고 되어 있는

00:00:41.320 --> 00:00:42.940
여기 이 줄 텍스트를 더해서

00:00:42.940 --> 00:00:48.010
박스가 체크 되었는지 여부를 가지고 
올바른 변수값을 입력하는 것이죠.

00:00:48.010 --> 00:00:52.210
코드 분석으로 들어가기 전에
수도코드(pseudo code)를 먼저 생각해 보죠.

00:00:52.210 --> 00:00:56.280
코드에 입력할 주된 내용을 
보다 분명하게 만들어 보기 위해서요.

00:00:56.280 --> 00:00:59.520
주문 버튼을 클릭하는 경우
다음과 같은 과정을 거쳐야 합니다.

00:00:59.520 --> 00:01:03.390
첫 단계는 박스가 체크된 상태라는
스테이트를 얻어

00:01:03.390 --> 00:01:05.140
이를 변수로 저장하는 겁니다.

00:01:05.140 --> 00:01:06.300
이게 지금 체크된 상태죠.

00:01:07.300 --> 00:01:09.590
안드로이드 기기가 박스의 
체크 여부를 확인하면,

00:01:09.590 --> 00:01:13.410
이 정보를 주문 요약 메소드로 
전달할 수 있습니다.

00:01:13.410 --> 00:01:15.710
여기 이 텍스트를 만드는 메소드 말이죠.

00:01:15.710 --> 00:01:19.520
세번째 단계에선, 이 텍스트에 
여기 나온 휘핑크림 토핑 추가 여부를

00:01:19.520 --> 00:01:22.960
포함하도록 바꿀 수 있습니다.

00:01:22.960 --> 00:01:25.120
이렇게 몇 단계를 거치게 되는데요.

00:01:25.120 --> 00:01:28.010
작업이 제대로 수행 중인지 알려면
여기 이 변수값을 로그로 확인하여

00:01:28.010 --> 00:01:32.220
실제 체크 상태를 반영하는 지 보면 됩니다.

00:01:33.220 --> 00:01:35.830
로그에 대해선 앞서 이미 설명한 바 있지만,
다시 한 번 예를 들어 보죠.

00:01:36.990 --> 00:01:42.510
log.v를 입력한 다음 클라스명 (여기서는 
MainActivity), 그 뒤에 이어서

00:01:42.510 --> 00:01:46.160
로그에 출력할 문자 메세지를 
입력하면 됩니다.

00:01:47.200 --> 00:01:50.890
가격을 여기서 출력시키면,
첫 단계에서 calculatePrice 메소드가

00:01:50.890 --> 00:01:54.880
예상 가격을 리턴값으로 내놓는 걸
확인할 수 있습니다.

00:01:54.880 --> 00:01:56.150
여러분의 기기에서 앱을 작동할 경우

00:01:56.150 --> 00:02:00.970
이 탭에서 로그를 확인하면 
이 메세지를 보실 수 있을 겁니다.

00:02:00.970 --> 00:02:04.610
메세지 로그의 경우 저는,
문제가 있는 건 분명한데 어느 줄이

00:02:04.610 --> 00:02:08.360
정확히 문제인지 확실하지 않을 때
자주 사용합니다.

00:02:08.360 --> 00:02:11.830
문제를 발견하고 
이를 정상적으로 해결한 후

00:02:11.830 --> 00:02:14.520
로그 메세지를 삭제하면 되죠.

00:02:14.520 --> 00:02:15.260
그러므로 임시로 로그 메세지를 삽입하여

00:02:15.260 --> 00:02:19.240
체크된 상태를 출력하고자 하면 
그렇게 하시면 됩니다.

00:02:19.240 --> 00:02:22.055
필요 없어진 로그 메세지를 
삭제하는 이유는

00:02:22.055 --> 00:02:24.820
로그 길이에 한계가 있기 때문이예요.

00:02:24.820 --> 00:02:27.540
불필요한 메세지로 
그 부분을 채워 버리면

00:02:27.540 --> 00:02:31.100
중요한 메세지 혹은 오류가 먼저
사라져 버리는 결과를 초래하죠.

00:02:32.118 --> 00:02:35.390
체크 상태에 관한 정보가 
주문 요약에 나타나는 걸

00:02:35.390 --> 00:02:39.410
기기에서 확인한 후에는, 
로그 메세지는 이제 불필요합니다.

00:02:39.410 --> 00:02:41.240
다 끝났으면
이 박스를 체크하시면 계속됩니다.

