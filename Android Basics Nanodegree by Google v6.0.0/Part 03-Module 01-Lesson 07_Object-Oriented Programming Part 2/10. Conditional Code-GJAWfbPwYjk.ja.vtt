WEBVTT
Kind: captions
Language: ja

00:00:00.510 --> 00:00:03.240
次にアプリでやることは
コーヒーの値段を変えることです

00:00:03.240 --> 00:00:06.880
ホイップクリームとかチョコレート
をトッピングでオーダーする人がいた場合

00:00:06.880 --> 00:00:08.160
いい考えですね

00:00:08.160 --> 00:00:12.170
ホイップクリームなら１ドル追加

00:00:12.170 --> 00:00:14.780
チョコレートなら２ドル追加

00:00:14.840 --> 00:00:15.840
はい

00:00:15.920 --> 00:00:17.070
じゃあ　実際やってみましょう

00:00:18.340 --> 00:00:20.970
これは　他のグーグルアプリで

00:00:20.970 --> 00:00:24.390
ある条件によって動作が変わる例です

00:00:24.390 --> 00:00:28.630
これは　Gメール受信箱のメールリスト
のスクリーンショットです

00:00:28.630 --> 00:00:31.590
メールにリマインダーが添付されている場合

00:00:31.590 --> 00:00:36.260
このアイコンとラベルと
リマインダーを表示します

00:00:36.260 --> 00:00:38.310
メールに画像が添付されている場合

00:00:38.310 --> 00:00:41.110
画像が並んで表示されます

00:00:41.110 --> 00:00:43.040
旅についてのメールなら

00:00:43.040 --> 00:00:46.510
フライト情報付きの
トラベルカードが表示されます

00:00:46.510 --> 00:00:49.910
グーグルナウの条件に応じた動作の例が

00:00:49.910 --> 00:00:52.610
さらに他にもあります

00:00:52.610 --> 00:00:56.130
例えば株価が上昇している場合
デルタや価格は

00:00:56.130 --> 00:01:00.160
ここに　緑のフォントで表示されます

00:01:00.160 --> 00:01:02.120
株価が下降している場合は

00:01:02.120 --> 00:01:05.250
差額が　ここに赤のフォントで表示されます

00:01:05.250 --> 00:01:08.140
天気情報では　適温で

00:01:08.140 --> 00:01:11.260
晴れの場合は　太陽のアイコンが表示されます

00:01:11.260 --> 00:01:15.120
風が強かったり　曇っている場合は
違うアイコンが表示されます

00:01:15.120 --> 00:01:16.850
トッピングの追加で値段が変えられるように

00:01:16.850 --> 00:01:20.180
アプリを修正しますが

00:01:20.180 --> 00:01:23.100
まずは　制御フローに慣れて頂きたいです

00:01:23.100 --> 00:01:26.620
通常　メソッドのコードは上から下

00:01:26.620 --> 00:01:29.820
ラインからラインで実行されますが
制御フロー文では

00:01:29.820 --> 00:01:32.720
実行される命令を変更することができます

00:01:32.780 --> 00:01:33.780
例えば

00:01:33.820 --> 00:01:38.130
条件が合えば　
命令をスキップすることができます

00:01:38.130 --> 00:01:40.444
条件分岐を学ぶことで　これをやってみます

00:01:41.580 --> 00:01:44.400
あなたは条件分岐ステートメントの
コードをみたことがないですが

00:01:44.400 --> 00:01:46.470
いきなり難しい状況にもって行きますので
やってみてください

00:01:46.470 --> 00:01:51.080
次のいくつかの問題では　
各自でコードスニペットを解読します

00:01:51.080 --> 00:01:54.000
そして　これらは
インストラクターノートにリンクしています

00:01:54.000 --> 00:01:56.640
そして　このコードが
どのように作用するのかを予想して

00:01:56.640 --> 00:01:58.550
出力を確定してみてください

00:01:58.550 --> 00:02:00.200
いくつかのオプションがありますので

00:02:00.200 --> 00:02:03.120
このコードに　一番適したものを選べます

00:02:03.120 --> 00:02:04.390
出力とは

00:02:04.390 --> 00:02:08.008
ログキャットにプリントされる
ログステートメントのことを言っています

00:02:08.008 --> 00:02:11.510
このアンドロイドタブからログキャットに
アクセスできることを覚えておきましょう

00:02:11.510 --> 00:02:15.070
そして　システムとアプリからの
すべてのメッセージも表示します

00:02:15.070 --> 00:02:18.380
あなたに提供しているコードスニペットは

00:02:18.380 --> 00:02:19.510
ここのログへの書き込みメッセージとなります

00:02:19.510 --> 00:02:21.830
では　一緒に例題をやってみましょう

00:02:21.830 --> 00:02:24.310
インストラクターノートで
このリンクを見つけます

00:02:24.310 --> 00:02:28.270
天気情報アプリの中のWeatherActivity.java fileからの

00:02:28.270 --> 00:02:29.830
コードスニペットだと仮定します

00:02:29.830 --> 00:02:33.850
コードの最初のラインは isRaining というプール変数を作成し

00:02:33.850 --> 00:02:35.910
初期値は真です

00:02:35.910 --> 00:02:38.500
そして　
この条件分岐ステートメントがあります

00:02:38.500 --> 00:02:43.150
is raining が真であれば　これをログに書き込みます

00:02:43.150 --> 00:02:46.330
雨　傘を持ったほうが良さそうです
とあります

00:02:46.330 --> 00:02:50.910
is raining が偽であれば この else case で

00:02:50.910 --> 00:02:53.230
雨の確率は低いです
というメッセージを書き込みます

00:02:53.230 --> 00:02:57.730
is raining が真である以上は
このcase に分類し

00:02:57.730 --> 00:03:00.210
雨　傘を持ったほうが良さそうです
と書き込みます

00:03:00.210 --> 00:03:04.780
このcaseに分類したので　
elseブロックをスキップすることができ

00:03:04.780 --> 00:03:08.620
コードのこのラインは　条件分岐ステートメント
外にあるのでいつでも実行されます

00:03:08.620 --> 00:03:11.670
天気情報アプリのご利用ありがとうございます
とあります

00:03:11.670 --> 00:03:14.520
クイズのオプションの中の　
雨　傘を持ったほうが良さそうです

00:03:14.520 --> 00:03:17.690
のすぐ後に
天気情報アプリのご利用ありがとうございます

00:03:17.690 --> 00:03:19.660
と来るものを探しましょう

00:03:19.660 --> 00:03:21.550
完全にBですね

00:03:21.550 --> 00:03:23.870
違う問題をやってみましょう

00:03:23.870 --> 00:03:26.510
コードスニペットに対する
ノートを確認して選択してください

