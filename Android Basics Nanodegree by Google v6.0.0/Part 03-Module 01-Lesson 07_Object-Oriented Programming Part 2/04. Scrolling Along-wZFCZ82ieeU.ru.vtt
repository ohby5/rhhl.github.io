WEBVTT
Kind: captions
Language: ru

00:00:00.510 --> 00:00:02.570
Давайте поищем в Google, как это делать.

00:00:02.570 --> 00:00:05.580
В поисковой строке я набираю: «как
прокручивать экран в android-приложении».

00:00:06.250 --> 00:00:07.740
Посмотрим на первый результат поиска.

00:00:08.240 --> 00:00:11.220
Вопрос вот какой: как сделать так, чтобы
мой экран мог прокручиваться вниз?

00:00:11.220 --> 00:00:13.570
Очень похоже не то, что нам надо.

00:00:13.570 --> 00:00:16.425
Переходим вниз к части с ответом,
напротив которой

00:00:16.425 --> 00:00:17.825
зеленая галочка и много отзывов.

00:00:17.825 --> 00:00:20.285
Вероятно, это хорошее решение.

00:00:20.285 --> 00:00:22.901
В нем говорится: «Просто поместите
все это внутри ScrollView».

00:00:22.901 --> 00:00:26.045
Далее приводится пример, ScrollView,

00:00:26.045 --> 00:00:28.695
обозначается пространство имен, а также

00:00:28.695 --> 00:00:33.720
Fill_parent для ширины и высоты,
за которым следует закрывающий тег,

00:00:33.720 --> 00:00:38.570
а комментарий вот тут советует
добавить остаток текущего view вот сюда.

00:00:39.580 --> 00:00:42.710
Для справки, fill_parent
означает то же самое, что и match_parent.

00:00:42.710 --> 00:00:45.860
Это просто более старая версия,
но они означают одно и то же.

00:00:45.860 --> 00:00:50.590
На следующей строке мы видим, что
ScrollView может содержать один объект.

00:00:50.590 --> 00:00:53.150
Скорее всего, то была
чья-то изначальная разметка,

00:00:53.150 --> 00:00:55.740
а затем, чтобы добавить ее
к scroll view, они сделали

00:00:55.740 --> 00:01:00.060
scroll view родительским view,
а линейную разметку — дочерним.

00:01:00.060 --> 00:01:02.520
ОК, это был полезный источник, а теперь
давайте вернемся

00:01:02.520 --> 00:01:04.250
и поищем, есть ли другие решения.

00:01:07.020 --> 00:01:09.160
Этот пользователь описывает то же самое.

00:01:09.160 --> 00:01:14.450
У них есть XML-разметка, и,
видимо, они хотят сделать прокрутку.

00:01:14.450 --> 00:01:16.865
Обычно я не прочитываю
всю информацию детально.

00:01:16.865 --> 00:01:18.660
Я сразу перехожу к ответу на вопрос.

00:01:18.660 --> 00:01:19.930
Этот пользователь спрашивает,

00:01:19.930 --> 00:01:23.340
пробовали ли вы включить весь
XML в родительский ScrollView?

00:01:23.340 --> 00:01:25.880
Затем приводится пример
ScrollView, а после этого

00:01:25.880 --> 00:01:28.370
дочерний элемент — RelativeLayout.

00:01:28.370 --> 00:01:31.430
После этого следует закрывающий тег
ScrollView.

00:01:31.430 --> 00:01:34.030
Это все, что дается в этом источнике.

00:01:34.030 --> 00:01:37.850
Но, похоже, оба поисковых результата
дают одинаковый совет

00:01:37.850 --> 00:01:39.190
по использованию ScrollView.

00:01:39.190 --> 00:01:44.110
Давайте попробуем изменить поисковый
запрос на вариант ScrollView android.

00:01:44.110 --> 00:01:46.500
Отлично. Итак, вот view в Android.

00:01:47.500 --> 00:01:50.480
А здесь приводится описание.

00:01:50.480 --> 00:01:53.180
Оно включает много текста,
поэтому я его пролистаю,

00:01:53.180 --> 00:01:54.505
но вы при желании можете изучить.

00:01:54.505 --> 00:01:55.870
Теперь я нажму «Назад».

00:01:56.570 --> 00:01:58.860
Я предпочитаю рассматривать пример кода.

00:01:58.860 --> 00:02:01.590
Итак, примеры кода до этого
были неплохими образцами,

00:02:01.590 --> 00:02:03.950
этот тоже довольно полезный.

00:02:03.950 --> 00:02:05.640
Давайте перейдем обратно в Android Studio.

00:02:06.270 --> 00:02:09.880
Все приведенные примеры XML
начинались с ScrollView.

00:02:09.880 --> 00:02:12.740
Сразу же я получаю ошибку, что
у меня недостаточное значение ширины

00:02:12.740 --> 00:02:13.990
и высоты для этого view.

00:02:13.990 --> 00:02:17.705
Итак, я просто добавила эти значения
и сделала их match_parent.

00:02:18.780 --> 00:02:22.390
Если я добавлю закрывающую скобку, то
сразу же получу здесь закрывающий тег.

00:02:22.390 --> 00:02:28.860
Я скопирую эту часть
и вставлю в конец вот этого файла.

00:02:31.372 --> 00:02:33.540
Это значит, что теперь
существующая линейная разметка

00:02:33.540 --> 00:02:36.240
стала дочерним элементом
данного ScrollView.

00:02:36.740 --> 00:02:41.250
Я выберу всю эту часть
и попробую разделить четырьмя пробелами,

00:02:41.250 --> 00:02:43.924
чтобы ее было легче прочесть как
дочерний элемент ScrollView.

00:02:44.790 --> 00:02:48.850
В Android Studio, если кликнуть на
меню «Редактировать»,

00:02:48.850 --> 00:02:52.030
можно перейти к пункту «Выбор разметки»
и выполнить разделение на четыре части.

00:02:52.030 --> 00:02:53.470
Вот так. Выглядит гораздо лучше.

00:02:54.280 --> 00:02:55.450
О, но ошибка здесь осталась.

00:02:55.450 --> 00:02:59.090
Она говорит,
ключевое слово android не связано.

00:02:59.090 --> 00:03:00.580
Можно кликнуть для получения деталей.

00:03:00.580 --> 00:03:06.150
Здесь сказано, что эта проверка ищет
несвязанные префиксы в XML.

00:03:06.150 --> 00:03:08.315
Если вы помните, в первом уроке

00:03:08.315 --> 00:03:11.866
я говорила, что двоеточие Android берется
отсюда, из ключевого слова.

00:03:11.866 --> 00:03:16.040
Я думаю, нам нужно скопировать эту часть
и вставить вот сюда.

00:03:16.040 --> 00:03:20.940
Также нужно переместить
область имен инструментов сюда.

00:03:20.940 --> 00:03:24.570
Область имен инструментов обеспечивает
дополнительные атрибуты, которые можно

00:03:24.570 --> 00:03:28.110
добавить в XML для отладки и
построения приложения.

00:03:28.110 --> 00:03:30.530
OК, теперь я запущу
это на своем устройстве.

00:03:30.530 --> 00:03:34.755
В приложении визуально ничего
не изменилось, так как в нем недостаточно

00:03:34.755 --> 00:03:37.950
контента для того, чтобы форму
можно было сделать прокручиваемой.

00:03:37.950 --> 00:03:39.821
Для нормального тестирования
мне нужно добавить

00:03:39.921 --> 00:03:41.321
больше информации на этот экран.

00:03:41.321 --> 00:03:43.740
Я прибегну к хитрости, как и до этого.

00:03:43.740 --> 00:03:47.390
Я скопирую все эти views, а затем
вставлю их в разметку так, чтобы

00:03:47.390 --> 00:03:49.020
получить очень длинную форму.

00:03:50.040 --> 00:03:54.050
Хорошо, теперь форма заказа
длинная и она прокручивается.

00:03:54.050 --> 00:03:55.810
Получилось здорово.

00:03:55.810 --> 00:03:59.280
Если перевернуть устройство,
прокрутка продолжает работать.

00:04:00.650 --> 00:04:04.270
Теперь я могу отменить изменения и
вернуться к исходной форме заказа.

00:04:05.280 --> 00:04:07.510
Однако я по-прежнему хочу
оставить ScrollView, поскольку

00:04:07.510 --> 00:04:10.080
это позволит приложению лучше
работать на всех устройствах.

00:04:10.540 --> 00:04:13.230
На более коротких устройствах
пользователи также смогут

00:04:13.230 --> 00:04:15.730
выполнять прокрутку и видеть все поля.

