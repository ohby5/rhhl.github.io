WEBVTT
Kind: captions
Language: ru

00:00:00.240 --> 00:00:03.040
Если я поставл галочку в этом 
приложении, я добавлю взбитые сливки

00:00:03.040 --> 00:00:03.850
к нашему кофе.

00:00:03.850 --> 00:00:06.445
&gt;&gt; Так кофе станет еще вкуснее.

00:00:06.445 --> 00:00:09.250
&gt;&gt; Да.
&gt;&gt; И, возможно, еще дороже..

00:00:09.250 --> 00:00:10.360
&gt;&gt; И то правда.

00:00:10.360 --> 00:00:13.396
Со временем мы научимсянам 
как создавать <i>order_summary</i> и

00:00:13.396 --> 00:00:14.400
затем отсылать его.

00:00:14.400 --> 00:00:17.238
&gt;&gt; Ага, так когда мы отсылаем 
<i>order_summary</i> [заказ], мы получаем кофе.

00:00:17.238 --> 00:00:17.868
Правильно?
&gt;&gt; Да.

00:00:17.868 --> 00:00:18.450
&gt;&gt; Хорошо.

00:00:18.450 --> 00:00:21.320
&gt;&gt; Проблема в том, что мы точно не 
знаем, есть галочка в окне или нет.

00:00:21.320 --> 00:00:23.250
&gt;&gt; Подожди, ты же поставила галочку.

00:00:23.250 --> 00:00:24.280
Я же точно знаю!

00:00:24.280 --> 00:00:28.180
&gt;&gt; Легко увидеть своими глазами, 
когда ты человек, а телефону не видно.

00:00:28.180 --> 00:00:30.205
&gt;&gt;Это ты кого назвала человеком?

00:00:30.205 --> 00:00:33.700
&gt;&gt; Неважно, когда вы добавляете 
<i>CheckBox</i> на ваше приложение,

00:00:33.700 --> 00:00:36.688
он создает объект Java.

00:00:36.688 --> 00:00:38.168
Вот так.

00:00:38.168 --> 00:00:40.258
&gt;&gt; И сколько там таких коробок?

00:00:40.258 --> 00:00:45.300
&gt;&gt; Много, потому что, на самом деле, 
внутри объекта<i>CheckBox</i> у нас переменная.

00:00:45.300 --> 00:00:46.150
&gt;&gt; Ладно.

00:00:46.150 --> 00:00:48.020
&gt;&gt; Булевая переменная.

00:00:48.020 --> 00:00:48.520
&gt;&gt; Булевая?

00:00:48.520 --> 00:00:50.030
Никогда этого слова раньше не слышал.

00:00:50.030 --> 00:00:52.410
&gt;&gt; Булевое число означает, что 
в них два состояния.

00:00:52.410 --> 00:00:55.080
&gt;&gt;Как Нью-Йорк и Калифорния? 
[игра слов теряется]

00:00:55.080 --> 00:00:56.635
&gt;&gt; Нет.
Скорее как выключатель.

00:00:56.635 --> 00:00:58.585
&gt;&gt; Черт!

00:00:58.585 --> 00:01:00.550
Как ты это делаешь?

00:01:00.550 --> 00:01:01.180
Неважно.

00:01:01.180 --> 00:01:04.890
Так ты говоришь, когда мы создали 
<i>CheckBox</i>, у нас появился объектJava.

00:01:04.890 --> 00:01:07.830
Внутри него у нас есть 
переменная булевого типа.

00:01:07.830 --> 00:01:08.460
&gt;&gt; Все верно.

00:01:08.460 --> 00:01:11.450
&gt;&gt; И тип этой переменной 
подразумевает либо "вкл.", либо "выкл."

00:01:11.450 --> 00:01:13.300
&gt;&gt; Да, ее значение это включить 
или выключить.

00:01:13.300 --> 00:01:17.230
&gt;&gt; Ладно, значит я могу переключить
с положения "вкл." на "выкл."?

00:01:17.230 --> 00:01:18.470
&gt;&gt; Ой, ничего не вижу.

00:01:18.470 --> 00:01:19.610
Можешь снова включить?

00:01:19.610 --> 00:01:20.650
Мы еще не закончили.

00:01:20.650 --> 00:01:23.720
&gt;&gt; Ну ладно.
&gt;&gt; Итак, булевое значение

00:01:23.720 --> 00:01:26.870
может иметь длва состояния: 
"истина" или "ложь".

00:01:26.870 --> 00:01:29.340
Это отображает состояние окна 
<i>CheckBox</i> - есть метка или нет.

00:01:29.340 --> 00:01:32.390
&gt;&gt; Ух ты, слишком много галочек 
в этом описании.

00:01:32.390 --> 00:01:33.370
Давай чуть вернемся.

00:01:33.370 --> 00:01:34.340
Я подведу краткий итог.

00:01:34.340 --> 00:01:35.670
Скажи мне, если я где-то ошибусь.

00:01:35.670 --> 00:01:38.890
Когда мы создаем <i>CheckBox</i>,
мы создаем этот объектJava.

00:01:38.890 --> 00:01:41.070
Внутри объекта у нас переменная.

00:01:41.070 --> 00:01:46.580
Ее тип, так уж вышло, булевый и этот тип п
еременных может иметь два значения:

00:01:46.580 --> 00:01:49.840
включено или выключено, один или ноль, 
истина или ложь.

00:01:49.840 --> 00:01:50.600
&gt;&gt; Точно!

00:01:50.600 --> 00:01:52.775
&gt;&gt; Хорошо. Давай поиграемся 
с булевым значеним.

00:01:52.775 --> 00:01:56.255
&gt;&gt; Ладно,

00:01:56.255 --> 00:01:57.410
пора его у тебя отобрать.

00:01:57.410 --> 00:02:01.010
Посмотрим, что говорит документация

00:02:01.010 --> 00:02:01.870
о булевых значениях.

00:02:01.870 --> 00:02:04.880
Поищу в Google типы данных для Java.

00:02:04.880 --> 00:02:10.090
Потому что булевое значение - один из 
простейших типов данных в Java.

00:02:10.090 --> 00:02:12.400
Простейший означает основной тип данных.

00:02:12.400 --> 00:02:15.110
Я пролистаю этот список простейших

00:02:15.110 --> 00:02:17.440
типов данных, чтобы найти 
булевый тип.

00:02:17.440 --> 00:02:18.570
А вот и он. Тут говорится,

00:02:18.570 --> 00:02:23.220
что у булевого типа данных есть две 
возможных величины: истина и ложь.

00:02:23.220 --> 00:02:26.360
Он используется для простых меток, 
отслеживающих истинные или ложные условия.

00:02:26.360 --> 00:02:29.590
А еще говорится, что булевый тип 
занимает один бит информации.

00:02:29.590 --> 00:02:32.980
К вопросу о том, сколько места 
он занимает на компьюетере.

00:02:32.980 --> 00:02:36.920
В любом случае, важно тут то, что у 
булевого типа есть две возможных величины.

00:02:36.920 --> 00:02:38.120
Вы можете подумать, что истина

00:02:38.120 --> 00:02:41.610
и ложь являются строковыми величинами, 
потому что это текст, но

00:02:41.610 --> 00:02:45.800
на самом деле они не в двойных кавычках, 
поэтому они не являются строкой.

00:02:45.800 --> 00:02:48.220
На самом деле они фиксированные
литеральные значения.

00:02:48.220 --> 00:02:51.870
Вы помните, что ноль и один тоже 
фиксированные литеральные значения

00:02:51.870 --> 00:02:54.400
или конкретные строки вроде 
<i>hello</i> или <i>today</i>?

00:02:54.400 --> 00:02:57.380
Это значит, что когда вы создаете 
булевую переменную, вы устанавливаете ее

00:02:57.380 --> 00:02:58.300
на одну из двух

00:02:59.350 --> 00:03:03.498
величин. Возвращаясь к аналогии с 
коробками, если есть переменная <i>isChecked</i>

00:03:03.498 --> 00:03:07.102
и она хранит информацию о том, стоит ли 
метка в окошке или нет,

00:03:07.102 --> 00:03:10.710
тогда внутри булевой переменной можно 
хранить истинное значение.

00:03:10.710 --> 00:03:14.800
Можно интерпретировать это как 
<i>CheckBox</i> отмечают галочкой.

00:03:14.800 --> 00:03:18.060
Или мы можем хранить ложное значение 
внутри этой переменной

00:03:18.060 --> 00:03:22.260
Тогда можно понимать это как 
<i>CheckBox</i> не отмечают галочкой.

00:03:22.260 --> 00:03:26.590
Булевое значение чудесно подходит 
для двух возможных состояний.

00:03:26.590 --> 00:03:30.850
От вас, как девелопера, зависит как 
толковать, как распределяется истина

00:03:31.850 --> 00:03:35.790
и ложь. Если вам нужно более двух 
состояний, вы не можете использовать

00:03:35.790 --> 00:03:38.960
булевые переменные. Нужно использовать 
что-то другое вроде строки или целого

00:03:38.960 --> 00:03:42.840
числа. Заявление булевой переменной 
очень похоже на заявление <i>int</i>.

00:03:42.840 --> 00:03:45.950
Это не так сложно, как создание 
переменной объекта.

00:03:45.950 --> 00:03:49.850
Оно следует формату булевое значение, 
<i>hasWhippedCream = true</i>.

00:03:49.850 --> 00:03:53.880
У нас есть тип данных - булевое значение, 
за ним следует название переменной,

00:03:53.880 --> 00:03:58.225
любое, какое нам нравится, и затем 
начальное значение - истина или ложь.

00:03:58.225 --> 00:04:00.020
Вот пара других примеров.

00:04:00.020 --> 00:04:02.339
Тут я установила то же булевое 
значение на "ложь".

00:04:03.540 --> 00:04:05.850
А тут другое булевое значение 
под названием <i>isRegistered</i>,

00:04:05.850 --> 00:04:08.360
и я присваиваю ему значение "ложь".

00:04:08.360 --> 00:04:12.400
Например, эта переменная может 
представлять, использует ли пользователь

00:04:12.400 --> 00:04:15.050
наше приложение, есть ли у него 
зарегистрированный аккаунт у нас.

00:04:15.050 --> 00:04:16.329
Или вот другой пример.

00:04:16.329 --> 00:04:19.470
булевое значение, <i>isOrderForPickup = true</i>.

00:04:19.470 --> 00:04:22.740
Эта переменная может представлять, 
собирается ли заказавший кофе человек

00:04:22.740 --> 00:04:26.080
забрать его из магазина или 
оформить доставку.

00:04:26.080 --> 00:04:29.780
Так как наше приложение не поддерживает 
эти атрибуты, можете представить, как

00:04:29.780 --> 00:04:33.960
использование булевых переменных полезно, 
потому что тут возможно два состояния.

00:04:35.020 --> 00:04:38.170
Также прошу отметить, как я 
назвала эти переменные.

00:04:38.170 --> 00:04:41.070
Название булевой переменной должно 
соблюдать те же условные обозначения,

00:04:41.070 --> 00:04:42.520
что и другие названия переменных.

00:04:42.520 --> 00:04:46.780
Однако принято начинать с чего-то 
вроде <i>has</i> плюс что-то или

00:04:46.780 --> 00:04:48.620
<i>is</i> плюс что-то.

00:04:48.620 --> 00:04:53.450
Когда вы видите названия с <i>has</i> или <i>is</i>,
скорее всего это булевая переменная, но

00:04:53.450 --> 00:04:56.470
не всегда. То, что я сейчас покажу, 
уровнем чуть повыше и необязаельно.

00:04:56.470 --> 00:04:58.180
Если заинтересуетесь, оставайтесь со мной.

00:04:59.230 --> 00:05:01.950
Это страница документации для 
класса <i>CheckBox</i>.

00:05:01.950 --> 00:05:05.320
Я нажму на просмотр источника, чтобы 
найти исходный код для

00:05:05.320 --> 00:05:06.960
класса <i>CheckBox</i>.

00:05:06.960 --> 00:05:09.820
Этот код сохранен в файле <i>CheckBox.java</i>.

00:05:09.820 --> 00:05:12.865
Я хочу показать вам, что внутри этого 
<i>CheckBox</i> класса есть

00:05:12.865 --> 00:05:14.220
булевая переменная

00:05:14.220 --> 00:05:18.450
Но я ее тут не вижу, давайте 
проверим суперкласс.

00:05:18.450 --> 00:05:21.200
Если эта перменная истинна, значит в 
<i>CheckBox</i> стоит галочка.

00:05:21.200 --> 00:05:24.320
Если эта перменная ложная, значит в 
<i>CheckBox</i> нет галочки.

00:05:24.320 --> 00:05:27.800
Вы заметили, что в этом названии нет 
слова <i>has</i> или <i>is</i>, но

00:05:27.800 --> 00:05:30.850
если спуститься сюда, вы увидите, 
что в других булевых переменных

00:05:30.850 --> 00:05:32.900
есть слово <i>has</i>t.

00:05:32.900 --> 00:05:34.740
Это дело предпочтений девелопера.

00:05:34.740 --> 00:05:37.770
В этом случае, возможно, просто предельно 
ясно, что это булевая переменная

00:05:37.770 --> 00:05:38.494
из-за отмеченного

00:05:39.610 --> 00:05:43.750
состояния. И хотя эти булевые переменные 
не нашлись непосредственно в файле

00:05:43.750 --> 00:05:46.640
<i>CheckBox.java</i>, т.к. мы наследуем 
из класса <i>CompoundButton</i>,

00:05:46.640 --> 00:05:49.270
мы получили эту отмеченную 
булевую перменную бесплатно.

00:05:49.270 --> 00:05:51.110
В общем и целом, смотреть на 
исходный код для

00:05:51.110 --> 00:05:54.220
классов Android совершенно необязательно.

00:05:54.220 --> 00:05:55.480
Чтобы разрабатывать приложения

00:05:55.480 --> 00:05:59.250
для Android, все, что нуно знать, это 
как читать страницы с документацией.

00:05:59.250 --> 00:06:02.470
Итак, в этом видео мы научились как 
булевые переменные могут хранить

00:06:02.470 --> 00:06:03.860
значения "истина" или "ложь".

00:06:04.960 --> 00:06:08.000
В этом тесте попрактикуйтесь в 
создании булевой перменной и

00:06:08.000 --> 00:06:12.420
ее обновлении с помощью введения строк 
кода в предоставленных окнах.

00:06:12.420 --> 00:06:15.720
Введите эту строку точно здесь, 
это касается и остальных окошек.

00:06:16.990 --> 00:06:19.700
Затем подумайте о других хороших 
случаях использования для

00:06:19.700 --> 00:06:21.720
хранения информации в булевых переменных.

00:06:21.720 --> 00:06:23.550
ПОдумайте о том, что еще 
имеет два состояния.

00:06:25.110 --> 00:06:28.200
Пользуетесь ли вы будильником на 
своем телефоне?

00:06:28.200 --> 00:06:30.380
Когда вы включаете сигнал будильника
или выключаете

00:06:30.380 --> 00:06:33.530
его, есть возможность, что это вообще-то 
хранится в булевой переменной.

00:06:34.680 --> 00:06:37.310
Еще один из возможных вариантов 
булевой переменной - хотите ли вы

00:06:37.310 --> 00:06:38.380
повторить сигнал или нет.

00:06:39.600 --> 00:06:43.490
В приложении <i>Gmail</i>, если я очень хочу 
отметить звездочкой сообщение, что я

00:06:43.490 --> 00:06:48.960
получила от команды Gmail в 2011, я помечу
его зведочкой или сниму метку.

00:06:48.960 --> 00:06:52.140
Так как тут есть два состояния, данные 
могут храниться как булевая еременная.

00:06:52.140 --> 00:06:55.890
Возможное название для булевой 
переменной для этого может быть <i>isStarred</i>.

00:06:55.890 --> 00:06:59.880
Можно также использовать булевую 
переменную, чтобы отследить прочитано

00:06:59.880 --> 00:07:01.210
ли письмо или нет.

00:07:01.210 --> 00:07:04.230
Это письмо непрочитанное, а вот 
это уже прочитано.

00:07:05.300 --> 00:07:07.130
Давайте перейдем к приложению YouTube.

00:07:08.560 --> 00:07:11.140
В YouTube, когда он отображает 
список видео,

00:07:11.140 --> 00:07:14.090
если я их уже видела, там высвечивается 
небольшое окошко, где пишется

00:07:14.090 --> 00:07:17.770
<i>watched</i> [просмотрено] в верхнем 
левом углу изображения миниатюры.

00:07:17.770 --> 00:07:19.359
Факт, что я просмотрела видео или нет,

00:07:19.359 --> 00:07:22.870
может так же храниться как 
булевая переменная.

00:07:22.870 --> 00:07:25.140
Я просто показала вам некоторые случаи 
использования

00:07:25.140 --> 00:07:27.180
булевых переменных, а вы здесь 
придумайте свои.

00:07:27.180 --> 00:07:29.790
Можее просмотреть имеющиеся приложения 
на Android в поисках идей.

