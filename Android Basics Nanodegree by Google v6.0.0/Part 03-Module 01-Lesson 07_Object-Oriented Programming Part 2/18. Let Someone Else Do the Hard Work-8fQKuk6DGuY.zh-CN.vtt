WEBVTT
Kind: captions
Language: zh-CN

00:00:00.210 --> 00:00:03.010
现在我们有了订单汇总 我们需要通过 email 把它发送出去

00:00:03.010 --> 00:00:05.270
然后得到真正的咖啡

00:00:05.270 --> 00:00:07.650
这是我们点击 ORDER 按钮之后的行为

00:00:07.650 --> 00:00:11.020
它会打开设备上的 email 应用并填充好信息

00:00:11.020 --> 00:00:14.270
咖啡订单还有一些自定义内容

00:00:14.270 --> 00:00:15.690
为了完成这些

00:00:15.690 --> 00:00:18.519
我们需要掌握 Android 中的 intent 知识

00:00:19.650 --> 00:00:23.580
intent 是一个要求其他应用组件完成某动作

00:00:23.580 --> 00:00:27.120
的信息 比如其他应用里的 activity

00:00:27.120 --> 00:00:29.570
这是 Android 框架中的重点

00:00:29.570 --> 00:00:33.340
因为 我们的应用可以通过它来调用其他应用

00:00:33.340 --> 00:00:36.500
比如发送邮件 打开相机 查看地图

00:00:37.850 --> 00:00:40.260
它让我们称为高效明智的开发者

00:00:40.260 --> 00:00:43.740
因为我们不用再重复其他应用已经完成的功能了

00:00:43.740 --> 00:00:46.750
想象一下 发送 intent 就像传球给某人

00:00:46.750 --> 00:00:50.248
一个人可以把球传给另一个人

00:00:50.248 --> 00:00:53.767
同样地 一个应用组件可以把 intent 传给其他应用组件

00:00:53.767 --> 00:00:56.840
这有一些你可能知道的例子

00:00:56.840 --> 00:00:58.700
在 Google Keep 这款应用中

00:00:58.700 --> 00:01:01.610
用户可以点击相机图标来照相

00:01:01.610 --> 00:01:05.910
Google Keep 团队没有自己开发照相功能

00:01:05.910 --> 00:01:07.000
而是选择

00:01:07.000 --> 00:01:11.050
通过发送 intent 打开设备上的 camera 应用

00:01:11.050 --> 00:01:12.940
同样 在 Yelp 应用

00:01:12.940 --> 00:01:17.860
点击 location of a business 会发送 intent 来打开

00:01:17.860 --> 00:01:21.730
设备上的地图应用 为用户提供导航功能

00:01:22.820 --> 00:01:26.300
最后 对于 Google Maps 应用中的 restaurant 页面

00:01:26.300 --> 00:01:30.340
点击 Call 按钮 会发送 intent 给拨号应用

00:01:30.340 --> 00:01:32.940
用户就可以给饭店打电话了

00:01:32.940 --> 00:01:36.710
发送 intent 最有意思的是 你不用精确地知道

00:01:36.710 --> 00:01:39.610
哪个应用可以解决问题

00:01:39.610 --> 00:01:43.140
在设备上可能有很多应用可以接收 intent

00:01:43.140 --> 00:01:45.610
但最后只需一个就够了

00:01:45.610 --> 00:01:48.940
当你投出一个球 你不必知道

00:01:48.940 --> 00:01:51.920
把球投给了谁 只要有人接到就可以

00:01:51.920 --> 00:01:53.520
我给你展示一下

00:01:53.520 --> 00:01:56.070
在 Google Maps 应用中 对于 restaurant 列表

00:01:56.070 --> 00:02:00.160
点击 WEBSITE 发送 intent 来显示饭点的网站

00:02:00.160 --> 00:02:04.309
这个 Maps 应用不需要关心哪个浏览器处理这个请求

00:02:05.460 --> 00:02:08.979
如果用户设备上只有一个浏览器

00:02:08.979 --> 00:02:11.920
应用就会自动处理这个请求

00:02:11.920 --> 00:02:15.700
但如果装了四个浏览器

00:02:15.700 --> 00:02:20.770
Android 框架会弹窗让用户进行选择

00:02:20.770 --> 00:02:22.632
就像这样

00:02:22.632 --> 00:02:26.200
这个弹窗被称为解疑对话框

00:02:26.200 --> 00:02:27.932
用户进行选择后

00:02:27.932 --> 00:02:32.245
系统就会把 intent 发给选择的应用

00:02:32.245 --> 00:02:35.300
在这里饭点网站就显示出来

00:02:35.300 --> 00:02:38.900
现在我们来讨论一下这个代表 intent

00:02:38.900 --> 00:02:40.440
的球里都有什么

00:02:40.440 --> 00:02:44.520
你可以想出 一个来标识指定操作

00:02:44.520 --> 00:02:45.540
的 intent 消息

00:02:45.540 --> 00:02:49.440
它包含两个主要内容 常规动作

00:02:49.440 --> 00:02:51.010
以及一些动作所需的数据

00:02:51.010 --> 00:02:55.340
你还可以指定额外的信息 比如 种类 成分

00:02:55.340 --> 00:02:58.560
还有 Extras 用来表示额外信息

00:02:58.560 --> 00:03:01.460
所有这些信息被 Android 用来决定

00:03:01.460 --> 00:03:04.040
哪个组件可以处理这个 intent

00:03:04.040 --> 00:03:09.030
比如 一个地图 intent 会包含 ACTION_VIEW 动作

00:03:09.030 --> 00:03:10.640
数据是地点的经纬度坐标

00:03:10.640 --> 00:03:13.800
这是我们希望见到的

00:03:13.800 --> 00:03:15.610
其他字段可以是空的

00:03:15.610 --> 00:03:18.720
然后 任何显示经纬度的应用

00:03:18.720 --> 00:03:21.990
都可以处理这个请求

00:03:21.990 --> 00:03:24.120
它可以是任何地图应用

00:03:24.120 --> 00:03:27.240
另一个例子是 使用 intent 打电话

00:03:27.240 --> 00:03:32.130
在这里 你需要动作为 ACTION_DIAL 的 intent

00:03:32.130 --> 00:03:34.840
相应的数据是需要呼叫的号码

00:03:34.840 --> 00:03:39.460
注意 格式是 tel 加冒号加呼叫的号码

00:03:39.460 --> 00:03:45.080
这种格式的字符串被称为 URI 是 uniform resource identifier 缩写

00:03:45.080 --> 00:03:47.580
这是构建数据的标准方法

00:03:47.580 --> 00:03:50.480
接受完 它可以被正确处理

00:03:50.480 --> 00:03:53.780
把它想象成邮箱地址 遵循正确格式

00:03:53.780 --> 00:03:55.370
才能被正确发送

00:03:55.370 --> 00:03:58.470
发送 intent 时 需要 URI

00:03:58.470 --> 00:04:02.140
这样数据才能被传递到正确的应用组件

00:04:02.140 --> 00:04:06.159
根据 intent 中不同的数据编码 方法可能会变化

00:04:06.159 --> 00:04:09.338
比如这里还有之前看到的 geo

