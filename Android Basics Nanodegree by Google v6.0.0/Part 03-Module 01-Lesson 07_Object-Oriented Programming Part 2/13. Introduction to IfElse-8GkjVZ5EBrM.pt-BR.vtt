WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:01.901
Nas perguntas
do quiz anterior,

00:00:01.934 --> 00:00:05.634
você usou sua intuição
com alguns If/Else Statements.

00:00:05.667 --> 00:00:08.801
Você descobriu quais mensagens
seriam exibidas nos logs

00:00:08.834 --> 00:00:10.601
dependendo das condições.

00:00:10.634 --> 00:00:13.200
Agora, façamos uma análise
mais formal.

00:00:13.234 --> 00:00:16.167
If/Else Statements são
instruções de controle de fluxo.

00:00:16.200 --> 00:00:19.801
Chamam-se assim porque,
em vez de um código linear,

00:00:19.834 --> 00:00:22.767
no qual um código
é executado após o outro,

00:00:22.801 --> 00:00:25.601
instruções de controle de fluxo
permitem que pulemos

00:00:25.634 --> 00:00:29.200
para partes diferentes do código
de acordo com certas condições.

00:00:29.234 --> 00:00:31.267
Se esta condição
for verdadeira,

00:00:31.300 --> 00:00:35.367
ou seja, se a variável booleana
daqui de cima for verdadeira,

00:00:35.400 --> 00:00:37.968
estas instruções
serão executadas

00:00:38.000 --> 00:00:39.934
e este bloco de código
será ignorado.

00:00:39.968 --> 00:00:41.300
Se for falsa,

00:00:41.334 --> 00:00:43.534
estas linhas de código
são executadas

00:00:43.567 --> 00:00:47.534
e o fluxo linear do código
é retomado.

00:00:47.567 --> 00:00:49.300
No nosso glossário
Vocab Word,

00:00:49.334 --> 00:00:51.400
podemos procurar
"If/Else Statement".

00:00:51.434 --> 00:00:54.701
Para entender,
pense numa ferrovia.

00:00:54.734 --> 00:00:56.701
Trilhos de trem
têm uma chave.

00:00:56.734 --> 00:00:58.167
Dependendo da condição,

00:00:58.200 --> 00:00:59.901
o trem vai para um lado
ou outro.

00:00:59.934 --> 00:01:02.133
Nos If/Else Statements,
da mesma forma,

00:01:02.167 --> 00:01:04.234
se esta condição
for verdadeira,

00:01:04.267 --> 00:01:06.501
um caminho de código
é executado.

00:01:06.534 --> 00:01:10.000
Se for falsa,
outro caminho é executado.

00:01:10.033 --> 00:01:13.934
Depois, o fluxo normal
do código é retomado.

00:01:13.968 --> 00:01:17.167
O If Statement é a mais simples
instrução de controle de fluxo.

00:01:17.200 --> 00:01:18.901
Observe esta sintaxe.

00:01:18.934 --> 00:01:20.567
Começamos
com a palavra "if"

00:01:20.601 --> 00:01:23.901
e colocamos parênteses
ao redor da condição.

00:01:23.934 --> 00:01:25.801
Depois, adicionamos
uma chave de abertura

00:01:25.834 --> 00:01:30.400
e uma chave de encerramento
ao bloco de código.

00:01:30.434 --> 00:01:32.534
Num app hipotético
de pedir pizza,

00:01:32.567 --> 00:01:35.400
se o usuário quiser
que a pizza seja entregue,

00:01:35.434 --> 00:01:37.968
aumentaremos o preço
em 5 dólares,

00:01:38.000 --> 00:01:39.334
da taxa de entrega.

00:01:39.367 --> 00:01:41.701
Senão,
caso não seja para entrega,

00:01:41.734 --> 00:01:43.868
nós ignoramos
esta linha de código

00:01:43.901 --> 00:01:46.200
e não cobramos
a taxa de entrega.

00:01:46.234 --> 00:01:47.901
Então,
a partir desta linha,

00:01:47.934 --> 00:01:52.000
usamos a variável totalPrice
com o valor correto.

00:01:52.033 --> 00:01:54.467
Já o If/Else Statement
é mais avançado.

00:01:54.501 --> 00:01:57.000
Se a condição entre parênteses
for verdadeira,

00:01:57.033 --> 00:01:59.968
nós executamos estas linhas,
ignoramos estas,

00:02:00.067 --> 00:02:01.901
e continuamos
com o resto do código.

00:02:01.934 --> 00:02:05.267
Neste app de jogo,
se o usuário tiver 0 ponto,

00:02:05.300 --> 00:02:08.601
o textView é atualizado
para exibir "Perdedor"

00:02:08.634 --> 00:02:11.234
e o imageView é atualizado
para uma carinha triste.

00:02:11.267 --> 00:02:13.734
Contudo,
se a condição for falsa

00:02:13.767 --> 00:02:16.100
e a pessoa tiver,
digamos, 100 pontos,

00:02:16.133 --> 00:02:18.067
esta linha de código
é pulada

00:02:18.100 --> 00:02:20.434
e nós descemos
para o caso "else".

00:02:20.467 --> 00:02:22.901
O textView é atualizado
para "Vencedor"

00:02:22.934 --> 00:02:25.434
e o imageView mostra
uma carinha feliz.

00:02:25.467 --> 00:02:27.601
Então,
esta linha é retomada.

00:02:27.634 --> 00:02:28.667
Como podemos ver,

00:02:28.701 --> 00:02:32.501
o código em If Statement
pode ter infinitas linhas.

00:02:32.534 --> 00:02:34.501
Em Else Statement, também.

00:02:34.534 --> 00:02:36.834
Se quisermos mais
do que duas opções,

00:02:36.868 --> 00:02:38.667
podemos usar
um Else If Statement.

00:02:38.701 --> 00:02:41.000
Você usa quantos blocos
de Else/If desejar

00:02:41.033 --> 00:02:43.734
e termina com um Else.

00:02:43.767 --> 00:02:47.100
Mas, repito,
estes Else/Ifs são opcionais.

00:02:47.133 --> 00:02:50.567
Este código pode retornar
3 opções,

00:02:50.601 --> 00:02:53.901
a depender do valor
da variável inteira itemCount,

00:02:53.934 --> 00:02:58.234
que representa o número de itens
no carrinho de compras do app.

00:02:58.267 --> 00:02:59.767
Comecemos
com a primeira opção.

00:02:59.801 --> 00:03:01.634
Se itemCount for 12,

00:03:01.667 --> 00:03:04.801
12 é maior que 10,
então isto é verdade

00:03:04.834 --> 00:03:09.067
e estas linhas deste bloco
de código serão executadas.

00:03:09.100 --> 00:03:12.534
Uma mensagem Toast dizendo
"você ganhou 20% de desconto"

00:03:12.567 --> 00:03:14.334
aparecerá na tela.

00:03:14.367 --> 00:03:16.067
Como caiu neste caso,

00:03:16.100 --> 00:03:21.300
estes dois blocos são pulados
e o resto do código continua.

00:03:21.334 --> 00:03:25.234
E se só houvesse 2 itens
no carrinho?

00:03:25.267 --> 00:03:28.501
O itemCount
seria menor que 10,

00:03:28.534 --> 00:03:32.100
isto seria falso,
este código seria ignorado,

00:03:32.133 --> 00:03:34.300
e o Else/If Statement
seria lido.

00:03:34.334 --> 00:03:40.000
Caso 2 fosse maior do que 0,
e é, cairíamos neste caso.

00:03:40.033 --> 00:03:42.701
Uma mensagem Toast
diria "obrigado".

00:03:42.734 --> 00:03:44.334
Como caímos neste caso,

00:03:44.367 --> 00:03:47.734
vamos pular este e continuar
com o resto do código.

00:03:47.767 --> 00:03:50.167
Por fim, caso o carrinho
estivesse vazio,

00:03:50.200 --> 00:03:52.133
esta condição seria falsa,

00:03:52.167 --> 00:03:54.300
pois 0 não é maior que 10,

00:03:54.334 --> 00:03:58.400
esta seria falsa,
pois 0 não é maior que 0,

00:03:58.434 --> 00:04:01.033
e nós cairíamos
neste caso Else.

00:04:01.067 --> 00:04:03.934
Uma mensagem mostraria:
"Seu carrinho está vazio."

00:04:03.968 --> 00:04:07.400
Se você quiser um lembrete
sobre a sintaxe das instruções,

00:04:07.434 --> 00:04:10.767
verifique a documentação oficial
do Java...

00:04:10.801 --> 00:04:14.567
que fala de If Statements -
com um exemplo aqui -

00:04:15.467 --> 00:04:18.000
e também fala
de If/Else Statements -

00:04:18.033 --> 00:04:19.334
com um exemplo aqui.

00:04:19.367 --> 00:04:23.334
Por último, há um exemplo
sobre Else/If Statements.

00:04:23.367 --> 00:04:25.667
Com base em tudo
que mostrei até agora,

00:04:25.701 --> 00:04:27.701
você deve ter notado
que o Java

00:04:27.734 --> 00:04:30.968
tem uma utilidade especial
para as palavras If e Else.

00:04:31.000 --> 00:04:32.434
São palavras-chave Java

00:04:32.467 --> 00:04:35.133
usadas para controlar
a execução de códigos,

00:04:35.167 --> 00:04:37.968
então suas variáveis
devem ter nomes diferentes.

00:04:38.000 --> 00:04:40.901
Com os exemplos mostrados,
você deve ter notado, também,

00:04:40.934 --> 00:04:43.968
que usamos diferentes expressões
nesta condição de teste aqui.

00:04:44.000 --> 00:04:45.400
Qualquer expressão
é válida,

00:04:45.434 --> 00:04:47.767
contanto que retorne
"verdadeiro" ou "falso".

00:04:47.801 --> 00:04:50.534
Uma variável booleana
pode ser condição de teste,

00:04:50.567 --> 00:04:53.200
assim como podemos
comparar dois valores.

00:04:53.234 --> 00:04:54.834
Podemos compará-los

00:04:54.868 --> 00:04:57.767
usando estes operadores
de igualdade e relacionais.

00:04:57.801 --> 00:05:02.000
Podemos testar se dois inteiros
são ou não iguais um ao outro,

00:05:02.033 --> 00:05:04.167
se são maiores/menores
ou iguais ao outro.

00:05:04.200 --> 00:05:06.868
Eis alguns exemplos
de condições de teste.

