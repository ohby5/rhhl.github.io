WEBVTT
Kind: captions
Language: vi

00:00:00.450 --> 00:00:03.560
Phần code giả bắt đầu,
khi bấm nút Order.

00:00:03.560 --> 00:00:07.020
Ở đây cho thấy chúng ta phải
thêm code trong phương thức gửi đơn hàng.

00:00:08.180 --> 00:00:11.280
Sau đó, chúng ta phải thu thập trạng thái
chọn từ hộp chọn.

00:00:11.280 --> 00:00:14.990
Để có thể gọi tất cả phương thức
trên view, trong hệ thứ bậc view,

00:00:14.990 --> 00:00:17.570
đầu tiên ta phải tìm view bằng id.

00:00:17.570 --> 00:00:21.560
Việc đầu tiên tôi cần làm là gán
một id view vào hộp chọn này.

00:00:22.770 --> 00:00:25.920
Trong Android studio, ở phần layout
hoạt động chính, tôi sẽ tìm

00:00:25.920 --> 00:00:27.420
phần view của layout hộp chọn.

00:00:27.420 --> 00:00:31.690
Vì con trỏ chuột ở đây đánh dấu
phần view này khi xem trước.

00:00:31.690 --> 00:00:34.600
Sau đó tôi sẽ thêm một dòng
để gửi một view ID cho view này.

00:00:35.750 --> 00:00:39.140
Giờ trong Java code,
tôi có thể liên kết với view này,

00:00:39.140 --> 00:00:42.140
và cố gắng thu thập
thông tin trạng thái từ nó.

00:00:42.140 --> 00:00:43.410
Hãy vào phần hoạt động chính.

00:00:43.410 --> 00:00:46.410
Tôi sẽ đặt code của mình
vào phương thức gửi đơn hàng.

00:00:47.700 --> 00:00:51.250
Tôi biết tôi cần phải tìm đối tượng
CheckBox Java trong sơ đồ cấp bậc view.

00:00:52.270 --> 00:00:55.650
Tôi sẽ bắt đầu bằng việc tạo một biến
whippedCreamCheckBox,

00:00:55.650 --> 00:00:57.810
kiểu dữ liệu CheckBox.

00:00:57.810 --> 00:01:01.380
Sau đó tôi có thể gọi phương thức
findViewByID trong thực thi đó.

00:01:01.380 --> 00:01:03.950
Phương thức này sẽ tìm view
dựa trên ID cho sẵn.

00:01:03.950 --> 00:01:09.080
Tôi sẽ nhập vào ID
(R.id.whipped_cream_checkbox),

00:01:09.080 --> 00:01:12.060
mà tôi vừa gán vào
tệp layout kia.

00:01:12.060 --> 00:01:16.070
Nó trả lại lỗi ngay tức thì,
vì loại dữ liệu yêu cầu là CheckBox,

00:01:16.070 --> 00:01:19.020
vì đây chính là biến
ở bên tay trái.

00:01:19.020 --> 00:01:22.230
Tuy nhiên, giá trị trả lại của
phương thức này thuộc dạng view.

00:01:22.230 --> 00:01:23.330
Vì vậy, như đã học,

00:01:23.330 --> 00:01:25.710
chúng ta cần phải gán
giá trị trả lại của phương thức này.

00:01:25.710 --> 00:01:29.380
Tôi sẽ gán nó là
một đối tượng CheckBox.

00:01:29.380 --> 00:01:33.720
Lý do tôi có thể gán nó như vậy là vì
CheckBox là một nhánh nhỏ của View.

00:01:34.910 --> 00:01:37.480
Ok, giờ tôi đã có một
đối tượng CheckBox Java

00:01:37.480 --> 00:01:40.450
thể hiện phần hộp chọn trong UI.

00:01:40.450 --> 00:01:42.570
Để xem liệu hộp chọn
có được lựa chọn hay không,

00:01:42.570 --> 00:01:45.760
tôi cần phải gọi phương thức
trên đối tượng này.

00:01:45.760 --> 00:01:49.000
Có thể bạn sẽ không biết phải gọi
phương thức nào trên đối tượng CheckBox.

00:01:49.000 --> 00:01:50.000
Nhưng không sao hết.

00:01:50.000 --> 00:01:52.000
Bạn chỉ cần tìm kiếm trên Google là xong.

00:01:52.000 --> 00:01:55.520
Tìm từ khóa CheckBox Android,
và bấm vào đường dẫn đầu tiên.

00:01:56.940 --> 00:02:01.560
Và để củng cố cho điều tôi vừa nói,
checkbox là một nhánh của View.

00:02:01.560 --> 00:02:03.080
Có một số view khác ở giữa, nhưng

00:02:03.080 --> 00:02:04.820
hiển nhiên nó vẫn là
một nhánh của view.

00:02:06.050 --> 00:02:09.120
Phần tổng quan của nhóm này khá
thú vị vì nó có một vài

00:02:09.120 --> 00:02:10.780
Java code ở đây.

00:02:10.780 --> 00:02:13.730
Có dòng code này mà
chúng ta đã có sẵn trong ứng dụng.

00:02:13.730 --> 00:02:19.530
Chúng ta đang tìm view bằng id, đưa vào
một id, và nhận về một hộp chọn.

00:02:19.530 --> 00:02:21.560
Dòng kế tiếp còn thú vị hơn.

00:02:21.560 --> 00:02:26.630
Nó viết check box, chính là tên
của biến này, và có một dấu chấm.

00:02:26.630 --> 00:02:29.510
Trông giống như triệu gọi phương thức
nhưng không có đối số.

00:02:29.510 --> 00:02:33.450
Dường như nó đang cho ta biết liệu
hộp thoại đã được chọn chưa, và trả lại

00:02:33.450 --> 00:02:37.580
giá trị true hoặc false, nhưng hãy
kiểm tra phần hướng dẫn cho chắc chắn.

00:02:37.580 --> 00:02:42.740
Kéo qua phần này, chúng ta
sẽ thấy một đoạn code checkbox xml,

00:02:42.740 --> 00:02:44.770
và một ít Java code.

00:02:45.910 --> 00:02:49.910
Phương thức này giống như được gọi
khi hộp chọn được bấm chọn.

00:02:49.910 --> 00:02:53.840
Tên của phương thức này khớp với tên
phương thức trong xml.

00:02:53.840 --> 00:02:58.530
Tôi mặc định rằng phần view được đưa vào
là ở trong phần view check box.

00:02:58.530 --> 00:03:00.800
Và, chúng ta gán nó cho CheckBox, và

00:03:00.800 --> 00:03:05.360
chúng ta gọi cả IsChecked, và
giá trị trả về là kiểu Boolean.

00:03:05.360 --> 00:03:09.380
Phần bình luận ở đây cũng mô tả rõ hơn,
nó nói view này đã đựợc bấm chọn chưa?

00:03:09.380 --> 00:03:11.880
Vì vậy tôi nghĩ đây chính là thứ ta cần.

00:03:11.880 --> 00:03:13.520
Hãy cố sử dụng IsCheck xem sao.

00:03:14.640 --> 00:03:18.010
Đầu tiên chúng ta gõ vào tên biến
của đối tượng CheckBox.

00:03:18.010 --> 00:03:20.210
Đó là whippedCreamCheckBox.

00:03:20.210 --> 00:03:23.020
Sau đó tôi thêm một dấu chấm
để gọi phương thức trên nó.

00:03:23.020 --> 00:03:26.290
Tôi có thể gõ isChecked,
và nó sẽ nhảy ra ở đây.

00:03:26.290 --> 00:03:29.400
Tôi có thể bấm Enter để
sử dụng gợi ý này.

00:03:29.400 --> 00:03:33.150
Ở phía tay phải đây, nó cho ta biết
giá trị trả về của phương thức này là gì,

00:03:33.150 --> 00:03:35.150
ở đây, nó trả về một giá trị boolean.

00:03:35.150 --> 00:03:39.330
Vậy là sau khi sử dụng gợi ý này,
tôi sẽ quay lại phía bên trái của

00:03:39.330 --> 00:03:44.110
phương thức này và lưu trữ
kết quả trong một biến boolean.

00:03:44.110 --> 00:03:48.260
Tôi sẽ gọi biến boolean này là
hasWhippedCream, rồi bấm Enter.

00:03:48.260 --> 00:03:52.860
Tóm lại, ta đang gọi một phương thức trên
đối tượng Java whippedCreamCheckbox, và

00:03:52.860 --> 00:03:54.690
phương thức này có tên isChecked.

00:03:54.690 --> 00:03:56.750
Nó trả về một giá trị dạng boolean và

00:03:56.750 --> 00:03:59.210
được lưa trữ ở phía
tay trái đây,

00:03:59.210 --> 00:04:01.970
bên trong biến có tên gọi
hasWhippedCream.

00:04:01.970 --> 00:04:03.220
Bước một đã hoàn thành.

00:04:03.220 --> 00:04:06.530
Tôi cũng đề cập đến việc
bạn có thể log biến này

00:04:06.530 --> 00:04:09.130
để kiểm tra xem
mình đã đi đúng hướng hay chưa.

00:04:09.130 --> 00:04:11.870
Vì thế ở dòng tiếp theo,
tôi sẽ thêm vào một thông báo log.

00:04:12.050 --> 00:04:14.150
Đối số đầu tiên là một tên nhãn.

00:04:14.150 --> 00:04:17.100
Tôi sẽ chỉ sử dụng tên của nhóm,
ở đây là MainActivity.

00:04:17.100 --> 00:04:19.810
Sau đó tôi sẽ thêm
thông báo riêng của mình.

00:04:19.810 --> 00:04:22.058
Tôi sẽ nói Có Kem Phủ Đánh Sẵn.

00:04:22.058 --> 00:04:26.660
Và thêm nó vào biến boolean.

00:04:26.660 --> 00:04:30.930
Bằng cách kết nối chuỗi này
với biến boolean,

00:04:30.930 --> 00:04:34.560
nó sẽ biến giá trị boolean này
thành một chuỗi.

00:04:34.560 --> 00:04:38.319
Và dòng chữ sẽ nói có kem phủ đánh sẵn
true hoặc có kem phủ đánh sẵn false.

00:04:39.400 --> 00:04:41.330
Giờ hãy chạy ứng dụng
trên thiết bị và

00:04:41.330 --> 00:04:43.780
kiểm tra xem liệu nó có thực sự
in ra thông báo log chính xác.

00:04:44.810 --> 00:04:48.170
Tôi đã tăng kích thước của cửa sổ log
bằng cách sử dụng bảng điều khiển ở đây.

00:04:48.170 --> 00:04:50.030
Nếu tôi bấm vào
hộp chọn kem phủ và

00:04:50.030 --> 00:04:53.850
bấm nút Order, tôi kỳ vọng sẽ nhìn thấy
một thông báo ở đây với nội dung

00:04:53.850 --> 00:04:56.319
có kem phủ đánh sẵn true hoặc false.

00:04:57.360 --> 00:04:59.770
Tôi sẽ kéo qua bên này để
có thể nhìn thấy thông báo.

00:05:00.790 --> 00:05:03.540
Ok, hãy xem nó có hoạt động không.

00:05:03.540 --> 00:05:06.210
Tôi sẽ bấm chọn ô vuông này
và bấm Order.

00:05:06.210 --> 00:05:10.101
Được rồi, tôi nghĩ đã có một tin nhắn
được in ra với nội dung Main Activity.

00:05:10.101 --> 00:05:12.335
Có kem phủ đánh sẵn: true.

00:05:12.335 --> 00:05:15.215
Rất chính xác vì ô vuông đã được chọn.

00:05:15.215 --> 00:05:20.645
Nếu tôi bỏ chọn hộp này và bấm
nút Order, tôi hy vọng nó sẽ nói false.

00:05:20.645 --> 00:05:24.825
Tôi sẽ kéo qua bên phải lần nữa
và nó cho thấy có xem phủ đánh sẵn: false.

00:05:24.825 --> 00:05:28.475
Vậy nghĩa là code của chúng ta
vẫn đúng cho đến lúc này,

00:05:28.475 --> 00:05:32.195
tìm ra được view của checkbox
và kiểm tra trạng thái chọn của nó.

00:05:32.195 --> 00:05:33.945
Giờ hãy chuyển qua bước thứ hai.

00:05:35.410 --> 00:05:40.000
Ok, giờ chúng ta cần phải nhập biến
boolean vào phương thức tóm tắt đơn hàng.

00:05:40.000 --> 00:05:43.580
Nếu tôi muốn thêm một đối số nữa
vào phương thức createOrderSummary,

00:05:43.580 --> 00:05:48.410
tôi chỉ cần thêm một dấu phẩy ở đây,
rồi thêm biến, hasWhippedCream.

00:05:49.820 --> 00:05:53.680
Ngay lập tức tôi nhận được báo lỗi
rằng biến này không thể áp dụng

00:05:53.680 --> 00:05:58.730
cho phương thức createOrderSummary, bởi vì
nó yêu cầu một tham số là số nguyên.

00:05:58.730 --> 00:06:02.050
Vì thế hãy kéo xuống để xem
createOrderSummary được gọi ở đâu.

00:06:03.310 --> 00:06:05.590
Bây giờ tôi sẽ phải thay đổi
đặc điểm của phương thức

00:06:05.590 --> 00:06:07.900
createOrderSummary.

00:06:07.900 --> 00:06:10.440
Thay vì nhận vào một tham số đầu vào,
nó cần phải nhận hai.

00:06:10.440 --> 00:06:15.430
Vì thế tôi sẽ thêm một dấu phẩy,
và nhận dạng tham số thứ hai.

00:06:15.430 --> 00:06:20.810
Dạng dữ liệu phải là boolean,
và tôi sẽ gọi nó là addwhippedCream.

00:06:20.810 --> 00:06:23.850
Bạn có thể gọi tham số đầu vào
bằng bất cứ cái tên nào bạn muốn,

00:06:23.850 --> 00:06:27.430
tôi chỉ muốn cho bạn thấy là cái tên này
không nhất thiết phải giống cái tên này.

00:06:28.490 --> 00:06:32.580
Vì đã thay đổi đặc tính của phương thức,
ở đây chúng ta cần phải cập nhật Java dock

00:06:32.580 --> 00:06:35.440
và nêu rõ tham số đầu vào này
dùng để làm gì.

00:06:36.510 --> 00:06:38.140
Vậy là đã xong bước thứ hai.

00:06:39.600 --> 00:06:42.850
Bước thứ ba là thay đổi phần chữ
trong tóm tắt đơn hàng để thể hiện

00:06:42.850 --> 00:06:45.100
liệu người dùng có muốn mua
kem phủ đánh sẵn hay không.

00:06:45.800 --> 00:06:49.490
Điều đó có nghĩa là chúng ta phải
sử dụng tham số đầu vào ở đây

00:06:49.490 --> 00:06:52.410
để chỉnh sửa tin nhắn
cho phần tóm tắt đơn hàng.

00:06:52.410 --> 00:06:56.260
Trên ảnh chụp màn hình, dòng chữ
kem phủ đánh sẵn xuất hiện dưới dòng tên.

00:06:56.260 --> 00:06:58.030
Vậy hãy thêm một dòng mới ở đây.

00:06:58.030 --> 00:07:01.450
Tôi sẽ gõ
priceMessage +=

00:07:01.450 --> 00:07:03.950
để thay đổi thông báo sẵn có.

00:07:03.950 --> 00:07:06.720
Sau đó thêm vào dòng Thêm kem phủ?

00:07:06.720 --> 00:07:10.520
Tôi sẽ thêm một khoảng trống,
và thêm biến boolean.

00:07:10.520 --> 00:07:14.060
Cuối cùng tôi sẽ liên kết một chuỗi
với một biến boolean,

00:07:14.060 --> 00:07:16.770
và nó sẽ biến tất cả
thành một chuỗi.

00:07:16.770 --> 00:07:18.350
Tuyệt, giờ hãy thử nó trên thiết bị nào.

00:07:19.230 --> 00:07:20.770
Nếu tôi bấm chọn vào ô vuông này

00:07:20.770 --> 00:07:24.720
rồi bấm nút Order,
nó sẽ trả lại Thêm kem phủ đánh sẵn true.

00:07:24.720 --> 00:07:28.480
Và nó đã hoạt động đúng như thế
trừ việc tôi quên đưa nó xuống dòng mới,

00:07:28.480 --> 00:07:29.480
nên tôi sẽ sửa ngay.

00:07:29.480 --> 00:07:32.590
Mà dù sao cũng đã ở đây rồi
tôi sẽ kiểm tra luôn trường hợp còn lại.

00:07:32.590 --> 00:07:34.680
Tôi sẽ bỏ chọn ô này, và bấm nút Order.

00:07:34.680 --> 00:07:36.640
Và nó hiện false.

00:07:36.640 --> 00:07:40.310
Vậy là nó đã thể hiện đúng
trạng thái của hộp chọn.

00:07:40.310 --> 00:07:43.800
Giờ hãy thêm ký tự dòng mới và
chạy ứng dụng lần nữa.

00:07:43.800 --> 00:07:46.590
Nếu tôi chọn hộp chọn và bấm
nút Order, nó sẽ hiện True.

00:07:46.590 --> 00:07:49.480
Nếu tôi bỏ chọn và bấm Order,
nó hiện false.

00:07:50.550 --> 00:07:51.550
Quá tuyệt.

00:07:51.550 --> 00:07:53.100
Cả hai trường hợp
đã được giải quyết.

00:07:54.550 --> 00:07:56.750
Phần còn lại dễ dàng
hơn rất nhiều.

00:07:56.750 --> 00:08:00.610
Bởi một khi chúng ta đã xác minh được
bằng log rằng chúng ta đang làm đúng

00:08:00.610 --> 00:08:04.200
thì chỉ còn là vấn đề
thể hiện trên màn hình.

00:08:04.200 --> 00:08:06.000
Vì mọi thứ đã chạy ổn
trong ứng dụng,

00:08:06.000 --> 00:08:08.660
tôi có thể xóa đi thông báo log
vì tôi không cần đến nó nữa.

00:08:08.660 --> 00:08:11.810
Và rồi chạy ứng dụng
thêm một lần cuối.

00:08:11.810 --> 00:08:12.830
Ok, tốt lắm.

00:08:12.830 --> 00:08:14.260
Hãy chuyển qua bước tiếp theo.

