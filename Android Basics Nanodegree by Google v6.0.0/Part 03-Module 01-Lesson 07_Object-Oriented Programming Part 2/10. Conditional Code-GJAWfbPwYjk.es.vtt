WEBVTT
Kind: captions
Language: es

00:00:00.000 --> 00:00:03.240
Ahora cambiaremos el precio 
de nuestro café en nuestra <i>app</i>,

00:00:03.240 --> 00:00:06.880
en caso de que alquien lo quiera
con crema batida o chocolate.

00:00:06.880 --> 00:00:08.160
¡Buena idea!

00:00:08.160 --> 00:00:11.980
Si ordenan crema batida,
cobraremos un dólar.

00:00:11.980 --> 00:00:14.740
Si ordenan chocolate,
costará dos dólares.

00:00:14.740 --> 00:00:17.470
Bien, veamos cómo hacerlo en la <i>app</i>.

00:00:18.060 --> 00:00:20.970
Aquí tenemos un par de ejemplos 
en otras <i>apps</i> de Google,

00:00:20.970 --> 00:00:24.150
donde el funcionamiento cambia
en base a ciertas condiciones.

00:00:24.150 --> 00:00:26.890
En la <i>app</i> Inbox de Gmail,
hay una captura de pantalla

00:00:26.890 --> 00:00:28.300
de la lista de correos.

00:00:28.300 --> 00:00:31.310
Para un solo correo, 
si hay una notificación adjunta,

00:00:31.310 --> 00:00:34.380
entonces la <i>app</i> sabe mostrar
el ícono, la etiqueta.

00:00:34.380 --> 00:00:36.000
y el texto de notificación.

00:00:36.000 --> 00:00:38.200
Si un correo contiene imágenes adjuntas,

00:00:38.200 --> 00:00:41.230
la <i>app</i> sabrá mostrar 
las imágenes en la línea de aquí.

00:00:41.230 --> 00:00:43.270
Si un correo menciona un viaje,

00:00:43.270 --> 00:00:46.640
mostrará la tarjeta de viaje, 
así como con la información del vuelo.

00:00:46.640 --> 00:00:49.410
En la <i>app</i> Google Now Launcher
hay más ejemplos del cambio

00:00:49.410 --> 00:00:52.140
del funcionamiento de la <i>app</i>
bajo ciertas condiciones.

00:00:52.140 --> 00:00:54.640
Por ejemplo, si el precio 
de la acción aumenta,

00:00:54.640 --> 00:00:59.620
entonces <i>delta</i> o el aumento del precio
mostrará el color de la fuente en verde.

00:00:59.620 --> 00:01:01.940
Si el precio de la acción disminuye,

00:01:01.940 --> 00:01:05.040
la diferencia del precio 
se mostrará en color rojo.

00:01:05.040 --> 00:01:07.990
Para la tarjeta del tiempo,
si la temperatura es agradable

00:01:07.990 --> 00:01:10.960
y el clima es soleado,
entonces mostramos un sol como ícono.

00:01:10.960 --> 00:01:14.280
Si el tiempo es ventoso o nublado,
mostraremos diferentes íconos.

00:01:14.870 --> 00:01:17.690
Antes de modificar la <i>app</i>
para cambiar los precios

00:01:17.690 --> 00:01:20.540
con base en la las cubiertas ordenadas,

00:01:20.540 --> 00:01:22.870
vamos a familiarizarnos 
con el control de flujo.

00:01:22.870 --> 00:01:25.000
Generalmente, el código 
de nuestros métodos

00:01:25.000 --> 00:01:27.610
se ejecute de arriba abajo 
y línea tras línea.

00:01:27.610 --> 00:01:29.730
Pero con las sentencias 
de control de flujo,

00:01:29.730 --> 00:01:33.020
puedes cambiar 
las instrucciones que se ejecutan.

00:01:33.020 --> 00:01:35.840
Por ejemplo, puedes saltar
ciertas instrucciones

00:01:35.840 --> 00:01:37.800
si se cumplen ciertas condiciones.

00:01:37.800 --> 00:01:40.900
Lo hacemos aprendiendo 
la lógica de <i>if/else</i>.

00:01:40.900 --> 00:01:44.040
No has visto antes el código 
para este tipo de sentencias,

00:01:44.040 --> 00:01:47.160
pero los echaré al ruedo
a ver cómo les va.

00:01:47.160 --> 00:01:50.250
En los siguientes desafíos,
leerán segmentos de código

00:01:50.250 --> 00:01:51.620
por su propia cuenta.

00:01:51.620 --> 00:01:54.110
Estos están vinculados 
en las notas del instructor.

00:01:54.110 --> 00:01:56.510
Luego intentarán descifrar 
lo que hace este código

00:01:56.510 --> 00:01:58.438
e intentarán determinar la salida.

00:01:58.438 --> 00:02:01.810
Tendrán diferentes opciones de elección
para que puedan escoger

00:02:01.810 --> 00:02:03.390
la mejor para este código.

00:02:03.390 --> 00:02:07.620
Con "salida" me refiero a las sentencias 
<i>log</i> que se imprimen al <i>logccat</i>.

00:02:07.620 --> 00:02:11.820
Recuerda que puedes acceder al <i>logcat</i>
desde esta pestaña de Android

00:02:11.820 --> 00:02:14.990
y que muestra todos los mensajes 
del sistema y de nuestras <i>apps</i>.

00:02:14.990 --> 00:02:19.160
Los segmentos de código que les damos 
serán mensajes escritos a <i>log</i> aquí.

00:02:19.160 --> 00:02:21.380
Hagamos un ejemplo juntos.

00:02:21.380 --> 00:02:23.910
Puedes encontrarlo 
en las notas del instructor.

00:02:23.910 --> 00:02:27.540
Asume que este es un segmento de código
de un archivo <i>WeatherActivity.java</i>

00:02:27.540 --> 00:02:29.580
dentro de la <i>app</i> del tiempo.

00:02:29.580 --> 00:02:32.390
La primera línea del código 
crea una variable booleana

00:02:32.390 --> 00:02:35.460
llamada <i>isRaining</i>
y su valor inicial es verdadero.

00:02:35.460 --> 00:02:38.300
Luego tenemos una sentencia
"si...si no" (<i>if/else</i>).

00:02:38.300 --> 00:02:42.370
Si "está lloviendo" es verdadero,
entonces escribimos esto en los <i>logs</i>.

00:02:42.370 --> 00:02:46.150
Dice, "Está lloviendo,
es mejor traer un paraguas".

00:02:46.150 --> 00:02:49.930
Si "está lloviendo" es falso,
entonces vamos al caso <i>else</i>

00:02:49.930 --> 00:02:53.050
y escribimos este mensaje:
"Es difícil que llueva".

00:02:53.050 --> 00:02:57.890
Dado que "está lloviendo" es verdadero,
entonces caemos en este caso y escribimos:

00:02:57.890 --> 00:03:00.090
"está lloviendo, 
es mejor traer un paraguas".

00:03:00.090 --> 00:03:03.540
Al caer en ese caso, 
podemos saltar el bloque <i>else</i>

00:03:03.540 --> 00:03:06.500
cuya línea de código está fuera
de la sentencia <i>if/else</i>

00:03:06.500 --> 00:03:08.390
por lo tanto, siempre logra ejecutarse.

00:03:08.390 --> 00:03:11.560
Dice, "Gracias por usar 
la <i>app</i> Wheatherweather"

00:03:11.560 --> 00:03:13.880
Buscamos una opción que diga,

00:03:13.880 --> 00:03:16.030
"Está lloviendo, 
es mejor traer un paraguas",

00:03:16.030 --> 00:03:19.320
seguido de "Gracias por usar
la <i>app</i> WheatherWeather"

00:03:19.320 --> 00:03:21.080
Y esa es la opción B.

00:03:21.080 --> 00:03:23.380
Aqui está otro problema 
para que lo resuelvas.

00:03:23.380 --> 00:03:25.590
Revisa las notas 
para el segmento de código

00:03:25.590 --> 00:03:26.770
y escoge tu opción.

