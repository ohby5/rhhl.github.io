WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:01.490
In this coding task,

00:00:01.490 --> 00:00:04.980
I want you to use an intent to send
an order summary to an email app.

00:00:04.980 --> 00:00:07.960
But first, take some time to
experiment with writing code for

00:00:07.960 --> 00:00:11.450
different intents listed in
the Common Intents guide.

00:00:11.450 --> 00:00:13.180
See the Instructor Notes for the link.

00:00:13.180 --> 00:00:15.830
You can also do a web search for
common intents, and

00:00:15.830 --> 00:00:17.250
it's the first link that pops up.

00:00:17.250 --> 00:00:20.050
There's a really useful article
that you can use to find out

00:00:20.050 --> 00:00:21.800
what's possible on Android.

00:00:21.800 --> 00:00:24.900
For practice purposes,
let's try creating a maps intent.

00:00:24.900 --> 00:00:28.100
The documentation had some useful
information on the action and

00:00:28.100 --> 00:00:31.740
the data URI scheme that you
should use for a maps intent.

00:00:31.740 --> 00:00:35.440
Again, it shows geo:Latitude,Longitude.

00:00:35.440 --> 00:00:37.530
If you scroll down,
you see some example code.

00:00:38.650 --> 00:00:40.680
I'm going to select this and copy it.

00:00:40.680 --> 00:00:44.250
Now to run this code, let's just
paste it inside the Just Java app.

00:00:44.250 --> 00:00:47.336
We could create a brand new application
to paste the codes so we can run it

00:00:47.336 --> 00:00:50.750
there, but since Just Java's already
up and running, let's just use that.

00:00:50.750 --> 00:00:53.508
I'm going to highlight all this
code within this method and

00:00:53.508 --> 00:00:55.530
just comment it out temporarily.

00:00:55.530 --> 00:01:02.050
I did that by hitting Cmd+/ on a Mac,
and on a windows it would be Ctrl+/.

00:01:02.050 --> 00:01:04.379
Now none of this code is
going to be executed.

00:01:04.379 --> 00:01:07.980
When the order button is clicked
I want to send a maps intent.

00:01:07.980 --> 00:01:09.100
In this line of code,

00:01:09.100 --> 00:01:12.850
we're creating a new Intent object
using the new keyword in Java.

00:01:12.850 --> 00:01:16.543
We're calling the Intent constructor,
and passing it a ACTION_VIEW.

00:01:16.543 --> 00:01:21.140
Note that when you see something in all
caps in Java, it means it's a constant.

00:01:21.140 --> 00:01:25.680
A constant is a variable whose contents,
once set, never changes.

00:01:25.680 --> 00:01:30.115
In this case, when composing our Intent,
we use official intent actions,

00:01:30.115 --> 00:01:32.538
such ACTION_VIEW or

00:01:32.538 --> 00:01:36.950
ACTION_SEND, which are defined as
constants within the Intent class.

00:01:37.950 --> 00:01:42.043
So to recap, this line of code creates
a new object instance called Intent.

00:01:42.043 --> 00:01:47.043
And then on the Intent object we can
call different methods like setData.

00:01:47.043 --> 00:01:50.191
We want to set the data URI to
be a certain set of latitude and

00:01:50.191 --> 00:01:51.940
longitude coordinates.

00:01:51.940 --> 00:01:55.570
Currently this variable is unrecognized
in our app, so I'm going to replace it.

00:01:55.570 --> 00:01:59.720
This part of the code creates
a URI from this string here.

00:01:59.720 --> 00:02:05.140
And then this URI is set as the data
field within this Intent object.

00:02:05.140 --> 00:02:07.430
Now we have our maps intent created.

00:02:07.430 --> 00:02:10.620
Down here, we have some code that
looks a little bit confusing.

00:02:10.620 --> 00:02:13.490
There's a lot going on, but essentially
we're just preventing the app from

00:02:13.490 --> 00:02:17.140
crashing by checking to see
if the Intent can be handled.

00:02:17.140 --> 00:02:20.817
In terms of our ball analogy, it means
that if no one is available to catch

00:02:20.817 --> 00:02:24.213
the ball, then the ball drops and
there's an explosion, [SOUND].

00:02:24.213 --> 00:02:26.553
Because the system doesn't
know what to do next, and

00:02:26.553 --> 00:02:29.340
that's why we need
this line of code here.

00:02:29.340 --> 00:02:32.300
We're checking to see if there's at
least one component on the device that

00:02:32.300 --> 00:02:33.840
can handle this Intent.

00:02:33.840 --> 00:02:36.650
If so, then this condition for
the if statement is true,

00:02:36.650 --> 00:02:39.960
and then we execute the line of
code here within these braces.

00:02:41.380 --> 00:02:44.860
We go ahead and
start the activity with this Intent.

00:02:44.860 --> 00:02:47.925
If there's no app component on
the device that can handle this Intent,

00:02:47.925 --> 00:02:50.310
then this test condition is false.

00:02:50.310 --> 00:02:53.840
And we skip this block of code and
we do not send the Intent.

00:02:53.840 --> 00:02:57.000
After you've finished experimenting
with i ntents go ahead and

00:02:57.000 --> 00:02:59.590
extend your app to have
this functionality.

00:02:59.590 --> 00:03:03.043
We're going to use an intent to send
the order summary to an email app.

00:03:03.043 --> 00:03:06.388
And then we're going to populate
the email message with this text and

00:03:06.388 --> 00:03:07.880
this subject line.

00:03:07.880 --> 00:03:11.050
Be sure to also remove code that
displays the order summary within

00:03:11.050 --> 00:03:12.260
the Just Java app.

00:03:12.260 --> 00:03:15.810
Once it shows up in the email app,
we don't need to anymore in our app.

00:03:15.810 --> 00:03:18.150
As a reminder,
this is what the app should look like.

00:03:18.150 --> 00:03:20.520
There's no more order
summary field anymore.

00:03:20.520 --> 00:03:23.830
And when I hit the Order button we
go straight into the email app.

00:03:23.830 --> 00:03:26.520
Now all the user needs to do
is populate the To field and

00:03:26.520 --> 00:03:27.660
then they can send the message.

