WEBVTT
Kind: captions
Language: zh-CN

00:00:00.510 --> 00:00:02.570
我们用 Google 搜索怎样做这个

00:00:02.570 --> 00:00:05.280
输入 how to scroll in an android app (如何在 android 应用内滚动)

00:00:06.450 --> 00:00:08.240
我们查看第一个结果

00:00:08.240 --> 00:00:11.220
问题是如何让我们的布局能够向下滚动？

00:00:11.220 --> 00:00:13.570
这和我们想要的非常相似

00:00:13.570 --> 00:00:16.425
我跳到答案部分 这有一个绿色的对勾

00:00:16.425 --> 00:00:17.825
和大量的支持

00:00:17.825 --> 00:00:20.285
这可能是一个好的答案

00:00:20.285 --> 00:00:22.901
它说只是在一个 ScrollView 里滚动所有的东西

00:00:22.901 --> 00:00:26.045
那么它有一个例子 ScrollView

00:00:26.045 --> 00:00:28.695
它指定命名空间

00:00:28.695 --> 00:00:33.720
宽和高是 fill_parent 然后在这有一个结束标签

00:00:33.720 --> 00:00:38.570
在注释里它说 把你当前视图的其他部分放到这里面

00:00:39.580 --> 00:00:42.710
对于背景知识 fill_parent 实际上和 match_parent 是一样的

00:00:42.710 --> 00:00:45.860
它只是它的旧版 但是意思是一样的

00:00:45.860 --> 00:00:50.590
在这一行它说 ScrollView 可以只包含这一项

00:00:50.590 --> 00:00:53.150
它看起来就像这是某个人的原始布局

00:00:53.150 --> 00:00:55.740
然后把 ScrollView 放在里面

00:00:55.740 --> 00:01:00.060
他们只是将 ScrollView 作为父 View 并且将 LinearLayout 作为子 View

00:01:00.060 --> 00:01:02.520
好了 这个一个很好的回应 我们回去

00:01:02.520 --> 00:01:04.250
看是否有其他的解决方案

00:01:07.020 --> 00:01:09.160
这个人描述了同样的事情

00:01:09.160 --> 00:01:14.450
他们有 XML 布局 我认为他们想要它滚动

00:01:14.450 --> 00:01:16.865
通常情况下 我不详细阅读整个的问题

00:01:16.865 --> 00:01:18.660
只是看答案的部分

00:01:18.660 --> 00:01:19.930
这个人说

00:01:19.930 --> 00:01:23.340
你有没有试过包含所有的 XML 到一个父 ScrollView里？

00:01:23.340 --> 00:01:25.880
然后他们给出了一个 ScrollView 的例子

00:01:25.880 --> 00:01:28.370
子 View 是 RelativeLayout

00:01:28.370 --> 00:01:31.430
然后是 ScrollView 的结束标签

00:01:31.430 --> 00:01:34.030
这是他们关于问题的所有回答

00:01:34.030 --> 00:01:37.850
但是它看起来像这里的两个搜索结果给出的

00:01:37.850 --> 00:01:39.190
使用 ScrollView 的建议

00:01:39.190 --> 00:01:44.110
我们改变搜索查询为 ScrollView android

00:01:44.110 --> 00:01:47.500
真棒 在 Android 里它是一个 View

00:01:47.500 --> 00:01:50.480
在这有一个描述

00:01:50.480 --> 00:01:53.180
这有大量的文本 所以我打算跳过阅读

00:01:53.180 --> 00:01:54.405
但是如果你想要浏览 也可以

00:01:54.405 --> 00:01:56.570
我将点击返回键

00:01:56.570 --> 00:01:58.860
我更喜欢看一个代码的例子

00:01:58.860 --> 00:02:01.590
之前我们有的代码的例子是好的

00:02:01.590 --> 00:02:03.950
这个也一样

00:02:03.950 --> 00:02:05.240
我们返回 Android Studio

00:02:06.270 --> 00:02:09.880
所有的 XML 例子都是以 ScrollView 开始

00:02:09.880 --> 00:02:12.740
立刻有一个错误 显示我不需要视图的宽

00:02:12.740 --> 00:02:13.990
和高

00:02:13.990 --> 00:02:17.705
所以 我只是在这里添加它们 指定它们的值为 match_parent

00:02:18.780 --> 00:02:22.390
如果我添加一个右括号 那么这里立刻会有一个结束标签

00:02:22.390 --> 00:02:23.974
我要复制这个

00:02:23.974 --> 00:02:29.860
然后粘贴它到这个文件的底部

00:02:31.372 --> 00:02:36.240
这意味着存在 LinearLayout 是 ScrollView 的一个子 View

00:02:36.240 --> 00:02:41.250
我将选择这个内容 然后缩进四个空格

00:02:41.250 --> 00:02:43.624
这样作为这个 ScrollView 的子 View 更容易阅读

00:02:44.790 --> 00:02:48.850
在 Android Studio 里 如果我点击 Edit 菜单 我可以选择 Indent Selection

00:02:48.850 --> 00:02:51.830
它将缩减4个空格

00:02:51.830 --> 00:02:53.270
那里 看起来好多了

00:02:54.280 --> 00:02:55.350
但是仍然有一个错

00:02:55.350 --> 00:02:59.090
它说 命名空间 android 没有被绑定

00:02:59.090 --> 00:03:00.280
我可以点击获得更多的信息

00:03:00.280 --> 00:03:06.150
它说 这个检查显示 XML 未绑定命名空间的前缀

00:03:06.150 --> 00:03:08.315
如果你还记得第一节课的内容

00:03:08.315 --> 00:03:11.866
我说 Android：来自于这里的在命名空间

00:03:11.866 --> 00:03:16.040
所以我认为我们需要复制这里然后把它放在这

00:03:16.040 --> 00:03:20.940
你也应该移动 tools 的命名空间到这里

00:03:20.940 --> 00:03:24.570
tools 的命名空间提供了附加属性

00:03:24.570 --> 00:03:28.110
你可以添加到 XML 来帮助你调试和构建你的应用

00:03:28.110 --> 00:03:30.530
现在我将在我的设备上运行这个

00:03:30.530 --> 00:03:34.755
好了 到应用里没有明显的区别 因为在订单里没有足够的

00:03:34.755 --> 00:03:37.950
内容来使其需要滚动

00:03:37.950 --> 00:03:41.321
要真正测试这一点 我需要添加更多的 View 到这个布局里

00:03:41.321 --> 00:03:43.740
在此之前我将做同样的操作

00:03:43.740 --> 00:03:47.390
我将复制所有的 View 然后粘贴它到我们的布局里

00:03:47.390 --> 00:03:49.020
这样我们有一个很长的订单

00:03:50.040 --> 00:03:54.050
好了 现在这个订单真的很长 并且它可以滚动

00:03:54.050 --> 00:03:55.810
这是令人兴奋的

00:03:55.810 --> 00:03:59.280
如果我旋转设备 它也可以滚动

00:04:00.650 --> 00:04:04.270
现在我可以撤销订单 回到我们原始的订单

00:04:05.280 --> 00:04:06.910
虽然我仍留下 ScrollView 在我们的设备上

00:04:06.910 --> 00:04:09.480
那是因为我们的应用将会通过设备更好地运行

00:04:10.540 --> 00:04:13.230
对于那些设备比这更短的用户来说

00:04:13.230 --> 00:04:15.730
他们将仍然能够滚动并看到所有的字段

