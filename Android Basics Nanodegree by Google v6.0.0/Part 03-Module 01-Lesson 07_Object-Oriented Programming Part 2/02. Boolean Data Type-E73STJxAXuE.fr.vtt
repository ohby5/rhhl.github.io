WEBVTT
Kind: captions
Language: fr

00:00:00.240 --> 00:00:03.040
Si je coche cette case dans l'app
alors ça ajoutera la garniture de

00:00:03.040 --> 00:00:03.850
crème fouettée à notre café.

00:00:03.850 --> 00:00:06.445
&gt;&gt; Cela rendra 
le café plus délicieux.

00:00:06.445 --> 00:00:09.250
&gt;&gt; Ouai.
&gt;&gt; Et peut-être plus cher.

00:00:09.250 --> 00:00:10.360
&gt;&gt; Vrai.

00:00:10.360 --> 00:00:13.396
Eventuellement on va avoir à apprendre
comment créer un récapitulatif de commande

00:00:13.396 --> 00:00:14.400
et puis de l'envoyer.

00:00:14.400 --> 00:00:17.238
&gt;&gt; Oh, donc quand nous envoyons le récapitulatif
de commande, c'est quand on obtient le café.

00:00:17.238 --> 00:00:17.868
Pas vrai?
&gt;&gt; Ouai.

00:00:17.868 --> 00:00:18.450
&gt;&gt; C'est bien.

00:00:18.450 --> 00:00:21.320
&gt;&gt; Le problème est qu'on ne sait pas
exactement si la case est cochée ou

00:00:21.320 --> 00:00:23.250
non &gt;&gt; Attendez, vous
venez de cocher la case.

00:00:23.250 --> 00:00:24.280
Je sais que vous avez 
coché la case.

00:00:24.280 --> 00:00:28.180
&gt;&gt; Bien c'est facile pour un humain de voir,
mais c'est difficile pour le téléphone.

00:00:28.180 --> 00:00:30.205
&gt;&gt; Qui appelez-vous un humain?

00:00:30.205 --> 00:00:33.700
&gt;&gt; Quoi qu'il en soit, quand vous
ajoutez la case à cocher à votre app,

00:00:33.700 --> 00:00:36.688
alors il crée
en fait un objet Java.

00:00:36.688 --> 00:00:38.168
[SON] Comme ceci.

00:00:38.168 --> 00:00:40.258
&gt;&gt; Combien de ces cases
sont là?

00:00:40.258 --> 00:00:45.300
&gt;&gt; Beaucoup, car en fait, dans l'objet
case à cocher, on a une variable.

00:00:45.300 --> 00:00:46.150
&gt;&gt; Ok.

00:00:46.150 --> 00:00:48.020
&gt;&gt; Une variable booléenne.

00:00:48.020 --> 00:00:48.520
&gt;&gt; Booléenne?

00:00:48.520 --> 00:00:50.030
Jamais entendu ce mot.

00:00:50.030 --> 00:00:52.410
&gt;&gt; Bien, un booléen signifie simplement
qu'il y a deux états ici.

00:00:52.410 --> 00:00:55.080
&gt;&gt; Comme New York et Californie?

00:00:55.080 --> 00:00:56.635
&gt;&gt; Non.
C'est plus comme un interrupteur.

00:00:56.635 --> 00:00:58.585
[SON]
&gt;&gt; Bon sang.

00:00:58.585 --> 00:01:00.550
Comment on fait ça?

00:01:00.550 --> 00:01:01.180
De toute façon.

00:01:01.180 --> 00:01:04.890
Donc vous dîtes que quand on crée
une case à cocher, on a un objet Java.

00:01:04.890 --> 00:01:07.830
À l'intérieur on a
une variable de type Booléen.

00:01:07.830 --> 00:01:08.460
&gt;&gt; Vrai.

00:01:08.460 --> 00:01:11.450
&gt;&gt; Et le type de cette
variable est soit on ou off.

00:01:11.450 --> 00:01:13.300
&gt;&gt; Sa valeur est soit on soit off.

00:01:13.300 --> 00:01:17.230
&gt;&gt; Ok, donc
Je peux tourner la valeur de on à off.

00:01:17.230 --> 00:01:18.470
&gt;&gt; Je ne peux rien voir.

00:01:18.470 --> 00:01:19.610
Je peux le tourner inversement?

00:01:19.610 --> 00:01:20.650
On n'a pas encore fini.

00:01:20.650 --> 00:01:23.720
&gt;&gt; Oh, ok.
&gt;&gt; Ok, donc

00:01:23.720 --> 00:01:26.870
Le booléen peut avoir deux états,
vrai ou faux.

00:01:26.870 --> 00:01:29.340
Et cela représente l'état
coché de cette case à cocher.

00:01:29.340 --> 00:01:32.390
&gt;&gt; Whoa, il y a beaucoup de
coches dans cette déclaration.

00:01:32.390 --> 00:01:33.370
Sauvegardons juste.

00:01:33.370 --> 00:01:34.340
Je vais résumer.

00:01:34.340 --> 00:01:35.670
Dites-moi si je me trompe.

00:01:35.670 --> 00:01:38.890
Alors quand on crée la case à cocher,
on a créé cet objet Java.

00:01:38.890 --> 00:01:41.070
Dans cet objet Java,
on a une variable.

00:01:41.070 --> 00:01:46.580
Son type peut devenir booléen, et ce
type de variable peut contenir deux valeurs,

00:01:46.580 --> 00:01:49.840
soit on soit off, un ou
zero, vrai ou faux.

00:01:49.840 --> 00:01:50.600
&gt;&gt; Exactement.

00:01:50.600 --> 00:01:52.775
&gt;&gt; Ok.
Donc, jouons avec les booléens.

00:01:52.775 --> 00:01:56.255
[SON]
&gt;&gt; Ok.

00:01:56.255 --> 00:01:57.410
Il est temps de le reprendre.

00:01:57.410 --> 00:02:01.010
[RIRE]
Voyons ce que la documentation

00:02:01.010 --> 00:02:01.870
dit sur les Booléens.

00:02:01.870 --> 00:02:04.880
Je vais chercher sur google pour
type de données Java.

00:02:04.880 --> 00:02:10.090
Voilà pourquoi le booléen est un des
types de données primitifs en Java.

00:02:10.090 --> 00:02:12.400
Primitif, signifiant types de données
basiques.

00:02:12.400 --> 00:02:15.110
Je vais défiler cette
liste des types

00:02:15.110 --> 00:02:17.440
de données primitifs jusqu'à ce que je
trouve le booléen.

00:02:17.440 --> 00:02:18.570
Et le voilà.

00:02:18.570 --> 00:02:23.220
Ça dit le type de données booléen a juste
deux valeurs possibles, vrai et faux.

00:02:23.220 --> 00:02:26.360
Il est utilisé pour les drapeaux simples
qui suive les conditions vrai et faux.

00:02:26.360 --> 00:02:29.590
Alors ça dit qu'un Booléen prend
un morceau d'information.

00:02:29.590 --> 00:02:32.980
Il est question de combien d'espace
il prend sur un ordinateur.

00:02:32.980 --> 00:02:36.920
De toute façon, la partie importante est
qu'un booléen a deux valeurs possibles.

00:02:36.920 --> 00:02:38.120
Vous pourriez penser que vrai et

00:02:38.120 --> 00:02:41.610
faux sont en fait une chaîne de valeur
car ils sont un texte, mais

00:02:41.610 --> 00:02:45.800
en fait, ils ne sont pas dans des double
citations, donc, ils ne sont pas des chaînes.

00:02:45.800 --> 00:02:48.220
Ils sont en fait des valeurs litérales 
fixées.

00:02:48.220 --> 00:02:51.870
Vous rappelez-vous comment les valeurs
litérales fixées sont zéro et un ou

00:02:51.870 --> 00:02:54.400
des chaîne spécifiques comme salut ou 
aujourd'hui?

00:02:54.400 --> 00:02:57.380
Ça signifie que quand vous créer 
une variable booléenne, vous pouvez le fixer

00:02:57.380 --> 00:02:58.300
avec un de ces deux valeurs.

00:02:59.350 --> 00:03:03.498
Retour à notre analogie de case, si on
a une variable appelé <i>isChecked</i> et

00:03:03.498 --> 00:03:07.102
il stocke des informations indiquant si
une case est cochée ou non,

00:03:07.102 --> 00:03:10.710
puis dans cette variable booléenne,
on peut stocker la valeur <i>true</i>.

00:03:10.710 --> 00:03:14.800
Alors on peut interpréter cela comme
une case étant cochée.

00:03:14.800 --> 00:03:18.060
Ou on peut stocker la valeur
<i>false</i> dans cette variable.

00:03:18.060 --> 00:03:22.260
Alors, on pourrait interpréter cela 
comme une case n'étant pas cochée.

00:03:22.260 --> 00:03:26.590
Un booléen est idéal pour
avoir deux états possibles.

00:03:26.590 --> 00:03:30.850
Alors, c'est à vous, développeur,
d'interpréter ce qui est vrai ou faux.

00:03:31.850 --> 00:03:35.790
Si vous avez besoin de plus de deux états,
alors vous ne pouvez utiliser un booléen.

00:03:35.790 --> 00:03:38.960
Vous devez utiliser quelque chose
comme une chaîne ou un entier.

00:03:38.960 --> 00:03:42.840
Déclarer une variable booléen est très
similaire à la déclaration d'un <i>int</i>.

00:03:42.840 --> 00:03:45.950
Ce n'est pas aussi compliqué que
créer une variable objet.

00:03:45.950 --> 00:03:49.850
Il suit le format de Booléen
<i>hasWhippedCream = true</i>.

00:03:49.850 --> 00:03:53.880
On a le type de donnèes, qui est Booléen,
suivi du nom de la variable, qui

00:03:53.880 --> 00:03:58.225
peut être tout ce qu'on veut et ensuite
la valeur initiale qui est vrai ou faux.

00:03:58.225 --> 00:04:00.020
Voici deux autres exemples.

00:04:00.020 --> 00:04:02.339
Voilà où je metsle même
Booléen pour être faux.

00:04:03.540 --> 00:04:05.850
Et voici un booléen
différent appelé <i>isRegistered</i>,

00:04:05.850 --> 00:04:08.360
et je l'initialise juste à faux.

00:04:08.360 --> 00:04:12.400
Par exemple, cette variable pourrait
représenter que celui utilisant notre app

00:04:12.400 --> 00:04:15.050
a en fait ouvert un compte
chez nous.

00:04:15.050 --> 00:04:16.329
Voici un autre exemple.

00:04:16.329 --> 00:04:19.470
Booléen <i>isOrderForPickup 
= true</i>.

00:04:19.470 --> 00:04:22.740
Cette variable pourrait représenter que
quelqu'un passant une commande pour

00:04:22.740 --> 00:04:26.080
des cafés veut les prendre au
magasin ou se faire livrer.

00:04:26.080 --> 00:04:29.780
Bien que notre app ne supporte pas ces
caractéristiques, vous pouvez imaginer

00:04:29.780 --> 00:04:33.960
comment les Booléens pourrait être utile 
car ces choses ont deux états possibles.

00:04:35.020 --> 00:04:38.170
Notez également la façon dont j'ai
nommé ces variables.

00:04:38.170 --> 00:04:41.070
Le nom de la variable booléenne doit
suivre les même conventions que les

00:04:41.070 --> 00:04:42.520
autres noms de variable.

00:04:42.520 --> 00:04:46.780
Toutefois, c'est courant de commencer
avec genre <i>has something</i> ou

00:04:46.780 --> 00:04:48.620
<i>is something</i>.

00:04:48.620 --> 00:04:53.450
Quand vous voyez des noms avec <i>has</i> ou <i>is</i>, 
c'est probablement un booléen mais pas toujours.

00:04:53.450 --> 00:04:56.470
Ce que je vais vous montrer est
un peu avancé et optionnel.

00:04:56.470 --> 00:04:58.180
Alors, si vous êtes interessé
vous pouvez suivre.

00:04:59.230 --> 00:05:01.950
C'est la page de documentation pour
la classe <i>CheckBox</i>.

00:05:01.950 --> 00:05:05.320
Je vais cliquer sur Voir la source
pour voir le code source pour

00:05:05.320 --> 00:05:06.960
la classe <i>CheckBox</i>.

00:05:06.960 --> 00:05:09.820
Ce code est sauvegardé dans
le fichier <i>CheckBox.java</i>.

00:05:09.820 --> 00:05:12.865
Je veux vous montrer qu'il y a une
variable booléenne dans cette

00:05:12.865 --> 00:05:14.220
classe <i>CheckBox</i>.

00:05:14.220 --> 00:05:18.450
Mais je ne le vois pas ici, donc
vérifions la super classe.

00:05:18.450 --> 00:05:21.200
Si cette valeur est <i>true</i> alors
la case est cochée.

00:05:21.200 --> 00:05:24.320
Si elle est <i>false</i> alors
la case n'est pas cochée.

00:05:24.320 --> 00:05:27.800
Vous remarquerez que ce nom ne 
contient ni le mot <i>has</i> ou <i>is</i>, mais

00:05:27.800 --> 00:05:30.850
si vous descendez, vous verrez
que les autres variables booléennes

00:05:30.850 --> 00:05:32.900
a le mot <i>has</i> à l'intérieur.

00:05:32.900 --> 00:05:34.740
Toute est une question de préférence
pour le développeur.

00:05:34.740 --> 00:05:37.770
Dans ce cas, c'est probablement assez
clair que ceci est un Booléen pour

00:05:37.770 --> 00:05:38.494
l'état coché.

00:05:39.610 --> 00:05:43.750
Et tandis que ce Booléen n'est pas trouvé
directement dans le fichier <i>CheckBox.java</i>,

00:05:43.750 --> 00:05:46.640
puisqu'on hérite de la
classe <i>CompoundButton</i>,

00:05:46.640 --> 00:05:49.270
on obtient ce booléen coché gratuitement.

00:05:49.270 --> 00:05:51.110
En général,
voir le code source pour les

00:05:51.110 --> 00:05:54.220
classes Android n'est 
pas du tout requis.

00:05:54.220 --> 00:05:55.480
Pour développer des apps Android,

00:05:55.480 --> 00:05:59.250
tout ce que vous devez savoir est comment
voir les pages de documentation.

00:05:59.250 --> 00:06:02.470
Ok, donc dans cette vidéo on a appris
comment les Booléens peuvent stocker

00:06:02.470 --> 00:06:03.860
la valeur <i>true</i> ou <i>false</i>.

00:06:04.960 --> 00:06:08.000
Dans ce quiz, pratiquez 
la création d'une variable booléenne

00:06:08.000 --> 00:06:12.420
et actualisez-la en tapant les lignes
de code dans case fournie.

00:06:12.420 --> 00:06:15.720
Tapez cette ligne exactement ici,
pareil pour les autres cases.

00:06:16.990 --> 00:06:19.700
Puis je veux que vous pensiez à d'
autres bons cas d'utilisation pour

00:06:19.700 --> 00:06:21.720
stocker des informations dans un booléen.

00:06:21.720 --> 00:06:23.550
Pensez à ce qui a
deux états possibles

00:06:25.110 --> 00:06:28.200
N'avez-vous jamais utiliser l'alarme
de votre téléphone pour se réveiller ?
142

00:06:30.380 --> 00:06:33.530
alarme, ce qui est en fait stocké
comme une variable booléenne.

00:06:34.680 --> 00:06:37.310
Une autre variable booléenne
possible est si vous voulez

00:06:37.310 --> 00:06:38.380
répeter une alarme ou pas.

00:06:39.600 --> 00:06:43.490
Dans l'app Gmail, si je veux vraiment
étoiler ce message spécial que j'ai eu

00:06:43.490 --> 00:06:48.960
du team Gmail en 2011, alors
je peux l'étoiler, ou enlever l'étoile.

00:06:48.960 --> 00:06:52.140
Puisque ceci a deux états, il pourrait
être stocké comme une variable Booléenne.

00:06:52.140 --> 00:06:55.890
Le possible nom de la variable booléenne
pour ça pourrait être <i>isStarred</i>.

00:06:55.890 --> 00:06:59.880
Vous pourriez aussi utiliser une variable
booléenne de pister si un email

00:06:59.880 --> 00:07:01.210
est lu ou pas.

00:07:01.210 --> 00:07:04.230
Cet email est non-lu,
alors que cet e-mail est déjà lu.

00:07:05.300 --> 00:07:07.130
En parlant de YouTube, allons
à l'app YouTube.

00:07:08.560 --> 00:07:11.140
Dans l'app YouTube,
quand il affiche une liste de vidéos,

00:07:11.140 --> 00:07:14.090
si je l'ai déjà regardé, alors
il montre cette petite case de texte

00:07:14.090 --> 00:07:17.770
qui dit <i>vu</i> en haut à gauche
de la vignette.

00:07:17.770 --> 00:07:19.359
Le fait que j'ai regardé ou

00:07:19.359 --> 00:07:22.870
non la vidéo pourrait aussi être
stocké comme une variable booléenne.

00:07:22.870 --> 00:07:25.140
Je vous ai juste montré quelque cas d'
utilisation des booléens, donc

00:07:25.140 --> 00:07:27.180
essayez de créer le votre ici.

00:07:27.180 --> 00:07:29.790
Vous pouvez parcourir les apps android 
existants pour avoir quelques idées.

