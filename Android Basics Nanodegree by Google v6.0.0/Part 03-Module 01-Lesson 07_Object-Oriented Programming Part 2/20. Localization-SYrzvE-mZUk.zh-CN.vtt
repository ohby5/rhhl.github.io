WEBVTT
Kind: captions
Language: zh-CN

00:00:00.320 --> 00:00:03.570
真棒 此时你已经完成了本地化文本

00:00:03.570 --> 00:00:05.170
在 Just Java 应用里

00:00:05.170 --> 00:00:08.100
希望你可以看到 只需要少量的修改

00:00:08.100 --> 00:00:10.870
你就可以把应用开放给很多新用户了

00:00:10.870 --> 00:00:11.918
让我们回顾一下解决方案

00:00:11.918 --> 00:00:14.410
这是 strings.xml 文件

00:00:14.410 --> 00:00:17.390
从中我们可以拿出应用中所有可能的字符串

00:00:17.390 --> 00:00:19.860
每个字符串资源我们都提供注释

00:00:19.860 --> 00:00:23.300
字符限制 以帮助译者明白正确的翻译

00:00:25.900 --> 00:00:27.670
现在我们的布局引用的是字符串资源

00:00:28.710 --> 00:00:31.420
Android Studio 中有关我们布局的

00:00:31.420 --> 00:00:32.280
硬编码字符串警告消失了

00:00:33.290 --> 00:00:36.250
这是西班牙语版本的 strings.xml 文件

00:00:36.250 --> 00:00:38.800
包含了所有西班牙语翻译

00:00:38.800 --> 00:00:42.590
如果你打开翻译编译器 可以看到字符串资源的名字

00:00:42.600 --> 00:00:46.345
英语翻译以及西班牙语翻译

00:00:46.345 --> 00:00:50.360
在布局文件中 我们可以引用这些字符串资源

00:00:50.360 --> 00:00:53.350
现在 Android Studio 也不再有关于我们布局中

00:00:53.350 --> 00:00:54.660
硬编码字符串的警告了

00:00:54.660 --> 00:00:58.319
在 Java 代码中 我们也引用了这些字符串资源

00:00:58.320 --> 00:01:02.150
注意 我们还使用这行代码获取了本地货币

00:01:02.150 --> 00:01:07.200
这是一个实用功能 可以把输入价格转换成

00:01:07.200 --> 00:01:08.190
当前局部的价格 C

00:01:08.190 --> 00:01:11.410
所有代码在下面的讲师注释中都有链接

00:01:11.410 --> 00:01:13.610
干的好

00:01:13.610 --> 00:01:16.220
现在我们来进一步探讨在 Android中

00:01:16.220 --> 00:01:17.539
用这些资源还可以做些什么

