WEBVTT
Kind: captions
Language: ja

00:00:00.240 --> 00:00:03.040
このアプリでこのボックスをクリックすると
ホイップクリームが追加されます

00:00:03.040 --> 00:00:04.180
コーヒーのトッピングとしてね

00:00:04.260 --> 00:00:06.440
&gt;&gt; そうしたら
コーヒーがよりおいしくなりますね

00:00:06.445 --> 00:00:09.250
&gt;&gt; そうですね
&gt;&gt; そしてたぶん値段も高くなりますね

00:00:09.250 --> 00:00:10.360
&gt;&gt; そうですね

00:00:10.360 --> 00:00:13.396
最終的に 注文の集計を作成する方法と

00:00:13.396 --> 00:00:14.400
それを送信する方法を学んでいきましょう

00:00:14.400 --> 00:00:17.238
&gt;&gt;では注文の集計を送ったら
コーヒーが飲めるというわけですね

00:00:17.230 --> 00:00:18.520
ですよね？&gt;&gt; まあそういうことです
&gt;&gt; いいですね

00:00:18.540 --> 00:00:21.520
問題なのは ボックスがチェックされているか
どうか 正確には分からないということです

00:00:21.720 --> 00:00:23.250
ちょっと待って
今ボックスをチェックしたじゃないですか

00:00:23.250 --> 00:00:24.280
ボックスをチェックしたって分かっていますよ

00:00:24.280 --> 00:00:28.180
&gt;&gt; ええ 人を見るのは簡単ですが
電話を見るのは難しいですよね

00:00:28.180 --> 00:00:30.205
&gt;&gt; 人って誰のこと?

00:00:30.205 --> 00:00:33.700
&gt;&gt; とにかくですね
アプリにチェックボックスを追加すると

00:00:33.700 --> 00:00:36.688
実は Java オブジェクトが作成されます

00:00:36.688 --> 00:00:38.168
[音]　このようにですね

00:00:38.168 --> 00:00:40.258
&gt;&gt; ボックスはいくつあるんですか？

00:00:40.258 --> 00:00:45.300
たくさんです というかチェックボックス
オブジェクトの中に変数があるのです

00:00:45.300 --> 00:00:47.280
&gt;&gt; なるほど
&gt;&gt; ブール変数というものです

00:00:48.020 --> 00:00:49.700
&gt;&gt; ブール?
そんな言葉いままで聞いたことがありません

00:00:50.030 --> 00:00:52.410
&gt;&gt; ここでブールというのは
２つの状態があるということです

00:00:52.410 --> 00:00:55.080
&gt;&gt; ニューヨーク州と
カリフォルニア州のような？

00:00:55.080 --> 00:00:56.635
&gt;&gt; 違います
電気のスイッチのようなものです

00:00:56.635 --> 00:00:58.585
[音]
違うのか

00:00:58.585 --> 00:01:00.550
まいったなあ

00:01:00.600 --> 00:01:04.890
チェックボックスを作成したら Java
オブジェクトができるといっていましたよね

00:01:04.890 --> 00:01:08.420
その中にあるのがブール変数です
&gt;&gt; そうです

00:01:08.460 --> 00:01:11.450
&gt;&gt; そして その変数の型は
オンまたはオフのいずれかです

00:01:11.450 --> 00:01:13.300
&gt;&gt; 値がオンまたはオフです

00:01:13.300 --> 00:01:17.230
&gt;&gt; なるほど それでは
値をオンからオフに切り替えられるわけですね

00:01:17.230 --> 00:01:18.470
&gt;&gt; 何も見えなくなってしまいました

00:01:18.470 --> 00:01:19.610
オンに戻すことができますか?

00:01:19.610 --> 00:01:20.650
まだ話が終わっていませんよ

00:01:20.650 --> 00:01:23.720
&gt;&gt; ああ　わかりました
&gt;&gt;はい　それでは

00:01:23.720 --> 00:01:26.870
ブールには２つの状態があります
true か false です

00:01:26.870 --> 00:01:29.340
それはこのチェックボックスの
チェックの状態を表します

00:01:29.340 --> 00:01:32.390
&gt;&gt; わあ　そのステートメントには
たくさんのチェックがありますね

00:01:32.390 --> 00:01:34.280
バックアップをしておきましょう
では要約してみます

00:01:34.340 --> 00:01:35.670
間違っていたら教えてください

00:01:35.670 --> 00:01:38.890
チェックボックスを作成すると
この Java オブジェクトが作成されます

00:01:38.890 --> 00:01:41.070
Java オブジェクトの内には
変数があります

00:01:41.070 --> 00:01:46.580
それはブール変数で
変数の型は２つの値を保持しています

00:01:46.580 --> 00:01:49.840
オンまたはオフ １または０
true または false

00:01:49.900 --> 00:01:52.770
その通りです &gt;&gt;分かりました﻿
ではブール変数を使ってみましょう

00:01:52.775 --> 00:01:56.255
[スイッチ音]
分かりました﻿

00:01:56.255 --> 00:01:57.410
もうあなたからそれを取り上げた方がいいですね

00:01:57.410 --> 00:02:01.010
[笑い声]
ではブール変数についての

00:02:01.010 --> 00:02:02.100
文書を見てみましょう

00:02:02.380 --> 00:02:04.880
Java データ型について
Google 検索してみます

00:02:04.880 --> 00:02:10.090
なぜならブールは Java の
プリミティブのデータ型だからです

00:02:10.090 --> 00:02:12.400
プリミティブ
つまり基本のデータ型ということです

00:02:12.400 --> 00:02:15.110
このプリミティブのデータ型のリストを
スクロールしていきます

00:02:15.110 --> 00:02:17.440
ブールが見つかるまで

00:02:17.440 --> 00:02:18.570
さあここにありました

00:02:18.570 --> 00:02:23.220
ブールのデータ型には２つの可能な値が
あります true と false です

00:02:23.220 --> 00:02:26.360
true と false の状態を追跡する
シンプルなフラグに使われます

00:02:26.360 --> 00:02:29.590
そしてブール値は
1 ビットの情報を持っています

00:02:29.590 --> 00:02:32.980
これはコンピューター上で　どのくらいの
スペースを占有するかということです

00:02:32.980 --> 00:02:36.920
とにかく 重要なのは
ブールは２つの可能な値があるということです

00:02:36.920 --> 00:02:38.120
true と false は

00:02:38.120 --> 00:02:41.610
テキストなので
文字列ではないかと思うかもしれませんが

00:02:41.610 --> 00:02:45.800
実は ダブルクォーテーションで囲まれて
いないので文字列ではありません

00:02:45.800 --> 00:02:48.220
それらは実は固定リテラル値なのです

00:02:48.220 --> 00:02:51.870
固定リテラル値というのを覚えていますか？
０か１もしくは

00:02:51.870 --> 00:02:54.400
hello とか todayというような
特定の文字列のような？

00:02:54.400 --> 00:02:57.380
つまりバルーン変数を作成するとき
それをこれら２つの値のひとつに

00:02:57.380 --> 00:02:58.380
設定することができます

00:02:59.350 --> 00:03:03.498
ボックスのアナロジーに戻りましょう
isChecked という変数があると

00:03:03.498 --> 00:03:07.102
チェックボックスがチェックされているか
についての情報を格納します

00:03:07.102 --> 00:03:10.710
このブール変数の中に
値 true を格納できます

00:03:10.710 --> 00:03:14.800
これでチェックボックスがチェックされている
と解釈することができます

00:03:14.800 --> 00:03:18.060
また値 false をこの変数に
格納することもできます

00:03:18.060 --> 00:03:22.260
これで チェックボックスはチェック
されていないと解釈することができます

00:03:22.260 --> 00:03:26.590
ブール値は２つの可能な状態がある場合に
最適です

00:03:26.590 --> 00:03:30.850
true と falseマップをどのように
解釈するかは製作者次第です

00:03:31.850 --> 00:03:35.790
２つ以上の可能な状態が必要な場合
ブール値を使用することはできません

00:03:35.790 --> 00:03:38.960
文字列や整数など
他のものを使用する必要があります

00:03:38.960 --> 00:03:42.840
ブール変数を宣言することは
intの宣言にとてもよく似ています

00:03:42.840 --> 00:03:45.950
オブジェクト変数作成ほど複雑ではありません

00:03:45.950 --> 00:03:49.850
次にブールのフォーマットですが
hasWhippedCream= true

00:03:49.850 --> 00:03:53.880
データ型 ブール があって
その後に変数名が続きます

00:03:53.880 --> 00:03:58.225
ここには何でも好きなものを入れられます
初期値は trueまたはfalse です

00:03:58.225 --> 00:04:00.020
ここで２つの他の例をあげてみます

00:04:00.020 --> 00:04:02.339
ここでは同じブール変数名を
false に設定しています

00:04:03.540 --> 00:04:05.850
これは異なったブール値で
isRegistered です

00:04:05.850 --> 00:04:08.360
初期値は false にします

00:04:08.360 --> 00:04:12.400
例えば この変数は
私たちのアプリのユーザーが

00:04:12.400 --> 00:04:15.050
実際にアカウントを登録済みなのかどうかを
表示できます

00:04:15.050 --> 00:04:16.329
では別の例を見てみましょう

00:04:16.329 --> 00:04:19.470
ブール値は isOrderForPickup = true.

00:04:19.470 --> 00:04:22.740
この変数は 誰かが注文したコーヒーを

00:04:22.740 --> 00:04:26.080
店舗ピックアップが希望なのか
もしくは配達希望なのかを表示できます

00:04:26.080 --> 00:04:29.780
このアプリはこの機能をサポートしませんが
ブール値の有用性が分かったと思います

00:04:29.780 --> 00:04:33.960
これらの事項は２つの可能な状態があるから
使用できるわけです

00:04:35.020 --> 00:04:38.170
これらの変数名も注意してみて下さい

00:04:38.170 --> 00:04:41.070
ブール変数名は 他の変数名と同じ規則に

00:04:41.070 --> 00:04:42.520
従う必要があります

00:04:42.520 --> 00:04:46.780
一般的には「has ～」 や 「is ～」

00:04:46.780 --> 00:04:48.620
を使います

00:04:48.620 --> 00:04:53.450
hasか isが名前に入っているとブールの
可能性が高いですが そうとも限りません

00:04:53.450 --> 00:04:56.470
これからご紹介するのは
もう少し高度なオプション機能となります

00:04:56.470 --> 00:04:58.180
興味がある方は 引き続きご覧下さい

00:04:59.230 --> 00:05:01.950
これは CheckBox クラスの
マニュアルページです

00:05:01.950 --> 00:05:05.320
view source をクリックして

00:05:05.320 --> 00:05:06.960
CheckBox クラスの
ソースコードを確認します

00:05:06.960 --> 00:05:09.820
このコードは CheckBox.java
ファイルに保存されています

00:05:09.820 --> 00:05:12.865
この CheckBox クラスの中に
ブール変数があることを

00:05:12.865 --> 00:05:14.220
お見せしたいのですが

00:05:14.220 --> 00:05:18.450
ここでは見ることができません
ではスーパークラスをチェックしてみましょう

00:05:18.450 --> 00:05:21.200
この値が true の場合
CheckBox はチェックされています

00:05:21.200 --> 00:05:24.320
これが false である場合
ボックスはチェックされていません

00:05:24.320 --> 00:05:27.800
この名前には has か is が
含まれていないことに気がつくでしょう

00:05:27.800 --> 00:05:30.850
ここを下がって見てみると
その他のブール変数が見られます

00:05:30.850 --> 00:05:32.900
has が含まれていますね

00:05:32.900 --> 00:05:34.740
これは製作者の好みの問題です

00:05:34.740 --> 00:05:38.580
この場合 これがチェックされた状態を
表すブール値であることが明らかです

00:05:39.610 --> 00:05:43.750
このブール値が CheckBox.java
ファイルで直接見つからないのは

00:05:43.750 --> 00:05:46.640
CompoundButton クラスからひき続いているものなので

00:05:46.640 --> 00:05:49.270
無料でこれをチェックできます

00:05:49.270 --> 00:05:51.110
一般的に Android クラスの
ソースコードを見る必要は

00:05:51.110 --> 00:05:54.220
全くありません

00:05:54.220 --> 00:05:55.480
Android アプリを開発するには

00:05:55.480 --> 00:05:59.250
マニュアルページを見れば十分です

00:05:59.250 --> 00:06:02.470
さて このビデオではブール値がどのように

00:06:02.470 --> 00:06:03.860
true または false の値を
格納するかを学びました

00:06:04.960 --> 00:06:08.000
この練習問題で ブール変数の作成と

00:06:08.000 --> 00:06:12.420
提供されたボックスの中にコード行を
入力して更新する方法を練習しましょう

00:06:12.420 --> 00:06:15.720
ここのこの行を入力します
他のボックスも同様にします

00:06:16.990 --> 00:06:19.700
次にブール値の情報の格納する

00:06:19.700 --> 00:06:21.720
他の良い使用例を考えてみて下さい

00:06:21.720 --> 00:06:23.550
何か２つの可能な状態があるものを考えてみて下さい

00:06:25.110 --> 00:06:28.200
携帯電話の目覚まし時計機能を
使ったことがありますか？

00:06:28.200 --> 00:06:30.380
アラームをオンまたはオフにした時

00:06:30.380 --> 00:06:33.530
ブール変数として格納されていることが
多いです

00:06:34.680 --> 00:06:37.310
もう一つの可能なブール変数として

00:06:37.310 --> 00:06:38.380
アラームを繰り返すかどうか
というのもあります

00:06:39.600 --> 00:06:43.490
Gmailアプリで 2011年のGmail
チームからのこの特別メッセージに

00:06:43.490 --> 00:06:48.960
スターをつけたい場合などに
スターをつけたり取り外したりできます

00:06:48.960 --> 00:06:52.140
これは２つの状態があるので
ブール変数として格納できるのです

00:06:52.140 --> 00:06:55.890
可能なブール変数名は
isStarred になります

00:06:55.890 --> 00:06:59.880
メールが読まれたかどうかを把握するために

00:06:59.880 --> 00:07:01.210
ブール変数を使用することもできます

00:07:01.210 --> 00:07:04.230
このメールは未読
このメールは既読です

00:07:05.300 --> 00:07:07.130
では次に YouTube アプリを
使ってみましょう

00:07:08.560 --> 00:07:11.140
YouTube アプリで
動画の一覧が表示された時

00:07:11.140 --> 00:07:14.090
すでに見たものである場合
ここに小さなテキストボックスが出てきます

00:07:14.090 --> 00:07:17.770
これはサムネイル画像の左上端に
見られたという表示をしているわけです

00:07:17.770 --> 00:07:19.359
自分がその画像を見たことがあるか

00:07:19.359 --> 00:07:22.870
見たことがないかという事実を
ブール変数として格納します

00:07:22.870 --> 00:07:25.140
さてブール値を使った
いくつかのケースをご紹介しましたが

00:07:25.140 --> 00:07:27.180
自分自身のアイデアで試してみてください

00:07:27.180 --> 00:07:29.790
アイデアの参考として既存の
Android アプリを参照できます

