WEBVTT
Kind: captions
Language: ja

00:00:00.750 --> 00:00:03.480
このレイアウトにするのに必要なViewを
考えてみましょう。

00:00:03.480 --> 00:00:07.420
これらはビルド済みとして

00:00:07.420 --> 00:00:10.910
レイアウトに必要なものだけ説明します。

00:00:10.910 --> 00:00:15.030
新しく追加しなければならないViewは
ToppingsのTextViewと

00:00:15.030 --> 00:00:18.090
Whipped creamの
チェックボックスです。

00:00:18.090 --> 00:00:21.470
AndroidにこのViewがあることを
知らない方もいるでしょう。

00:00:21.470 --> 00:00:24.210
その場合は、Googleで調べてみてください。

00:00:25.380 --> 00:00:28.300
ステップ2に進みます。
Viewを位置付けなければいけません。

00:00:28.300 --> 00:00:30.820
これらのViewが正確な位置にあるとすると、

00:00:30.820 --> 00:00:35.470
必要なのは「Topping」と「Whipped
Cream」を同じ列に縦に並べることです。

00:00:35.470 --> 00:00:37.000
基本的に画面が縦なので

00:00:37.000 --> 00:00:39.990
やるべきことは
この2つのViewを上に追加するだけ。

00:00:40.990 --> 00:00:43.580
ステップ3では、Viewのスタイルを整えます。

00:00:43.580 --> 00:00:46.260
Toppingsのヘッダーのスタイルは、

00:00:46.260 --> 00:00:49.030
QuantityとOrder Summaryと
同じなので

00:00:49.030 --> 00:00:51.430
コピー&amp;ペーストします。

00:00:51.430 --> 00:00:54.280
チェックボックスは新しいので、
スタイリングしなければなりません。

00:00:54.840 --> 00:00:59.170
ボックスとテキストの間のスペースは24 dp、

00:00:59.170 --> 00:01:04.050
Whipped Creamのフォントサイズは
16 spにします。

00:01:04.050 --> 00:01:05.910
それではアプリを変更しましょう。

00:01:07.180 --> 00:01:11.020
Toppingsのヘッダーは、
Quantityと同じなので、

00:01:11.020 --> 00:01:12.730
このコードをコピー＆ペースト。

00:01:12.730 --> 00:01:16.770
コピーしたら、このLinearLayout上に
追加します。

00:01:18.080 --> 00:01:20.170
すると、Quantityが2つ表示されます。

00:01:20.170 --> 00:01:22.960
ここをToppingsに変えます。

00:01:22.960 --> 00:01:25.380
marginBottomもコピーして、

00:01:25.380 --> 00:01:28.790
このヘッダーの間にスペースを作ります。

00:01:30.260 --> 00:01:32.660
チェックボックスを作るのは初めてなので

00:01:32.660 --> 00:01:34.080
やり方をGoogleで調べます。

00:01:34.360 --> 00:01:37.720
「checkbox android」で検索します。

00:01:37.720 --> 00:01:40.840
必ず「android」を含めてください。

00:01:40.840 --> 00:01:44.850
Webや携帯のプラットフォームの
チェックボックスと混同させないためです。

00:01:44.850 --> 00:01:48.090
これでAndroidの検索結果が得られます。

00:01:48.090 --> 00:01:49.760
最初のサイトを試しましょう。

00:01:49.760 --> 00:01:52.900
CheckBoxのクラスに関する情報です。

00:01:52.900 --> 00:01:56.420
スクロールしてみると、クラスの概観や

00:01:56.420 --> 00:01:58.960
XMLの属性が書かれています。

00:01:58.960 --> 00:02:02.880
ここで確認したいのは
CheckBoxのXMLのサンプルです。

00:02:02.880 --> 00:02:05.100
もう一度、検索結果画面に戻りましょう。

00:02:05.100 --> 00:02:07.070
2つ目をクリックします。

00:02:07.070 --> 00:02:10.440
素晴らしい、ここにチェックボックスの画像や

00:02:10.440 --> 00:02:12.040
XMLもあります。

00:02:12.040 --> 00:02:13.180
良さそうですね。

00:02:13.180 --> 00:02:16.140
LinearLayoutに
CheckBoxが2つあります。

00:02:16.140 --> 00:02:19.070
最初のCheckBoxをコピーして

00:02:19.070 --> 00:02:20.330
アプリにペーストしましょう。

00:02:21.590 --> 00:02:25.910
ToppingsとQuantityの間、

00:02:25.910 --> 00:02:28.750
ここにペーストします。

00:02:28.750 --> 00:02:33.040
このXMLは、私たちのアプリに
合っていないので修正します。

00:02:33.040 --> 00:02:36.710
IDとこのテキストも消します。

00:02:36.710 --> 00:02:39.750
カフェで肉は売らないので、meatの代わりに

00:02:39.750 --> 00:02:41.660
Whipped Creamを入力します。

00:02:43.030 --> 00:02:45.940
ところで@string/meatは

00:02:45.940 --> 00:02:50.410
strings.xmlファイルの
文字列を参照していました。

00:02:50.410 --> 00:02:52.690
これついては後ほど説明します。

00:02:52.690 --> 00:02:55.550
ここに直接文字列を入力します。

00:02:55.550 --> 00:02:59.350
Whipped Creamの
チェックボックスができました。

00:02:59.350 --> 00:03:03.380
このCheckBox Viewの良い点は、
ボックスとテキストを同時に作れ、

00:03:03.380 --> 00:03:08.100
他にテキストを入力する必要がないことです。

00:03:08.100 --> 00:03:10.850
onClickの部分は必要ありません。

00:03:12.080 --> 00:03:16.500
ここで一番重要なのは、チェックボックスが
ここに表示されることです。

00:03:16.500 --> 00:03:20.260
このXMLを作成する他の方法としては、

00:03:20.260 --> 00:03:22.180
Android Viewのチートシートです。

00:03:22.540 --> 00:03:25.410
ここには、よく使うAndroidViewが
記載されています。

00:03:25.410 --> 00:03:27.460
XMLのサンプルもあります。

00:03:28.480 --> 00:03:32.730
CheckBox Viewもあり、
そのXMLに応じた

00:03:32.730 --> 00:03:34.120
サンプル画像もあります。

00:03:34.120 --> 00:03:37.270
このXMLをコピーして、
自分のアプリにペーストします。

00:03:38.340 --> 00:03:41.010
Android Studioに戻って、
見栄えを確認しましょう。

00:03:42.480 --> 00:03:43.320
どうでしょう。

00:03:43.320 --> 00:03:44.050
良さそうですね。

00:03:44.050 --> 00:03:46.690
Toppings、
Whipped Creamのボックス

00:03:47.750 --> 00:03:50.330
チェックすると、
アニメーションもあります。

00:03:51.360 --> 00:03:54.790
問題は、スペース設定が
なくなっていることです。

00:03:54.790 --> 00:03:57.840
Quantityとチェックボックスの間が狭く、

00:03:57.840 --> 00:04:01.390
十分にスペースがありません。

00:04:02.410 --> 00:04:04.480
もう一度、設定を振り返りましょう。

00:04:04.480 --> 00:04:09.370
ここのスペースは24 dp、
フォントサイズは16 sp

00:04:10.830 --> 00:04:12.960
まずフォントサイズを変更しましょう。

00:04:12.960 --> 00:04:18.110
android:textSize、
そして"16 sp"を入力します。

00:04:18.110 --> 00:04:22.040
フォントサイズが反映されたかどうか
プレビューで確認します。

00:04:22.040 --> 00:04:23.690
できています。

00:04:23.690 --> 00:04:26.600
更新されたかどうか不安な場合は、
このボタンをクリックしましょう。

00:04:26.600 --> 00:04:27.430
それでは

00:04:27.430 --> 00:04:29.950
スペースについて
さらに詳しく見てみましょう。

00:04:29.950 --> 00:04:32.240
そのために練習と失敗が必要です。

00:04:32.240 --> 00:04:34.370
正しい余白の値を設定し、

00:04:34.370 --> 00:04:38.340
パディング値も設定しましたが、

00:04:38.340 --> 00:04:42.520
左側のパディングがボックスとテキストの
間隔に影響することが判明しました。

00:04:42.520 --> 00:04:43.960
パディングを追加しましょう。

00:04:44.900 --> 00:04:46.960
これでテキストが移動しました。

00:04:46.960 --> 00:04:49.040
ただし、問題がもう一つあります。

00:04:49.040 --> 00:04:53.090
ここには十分スペースがありますが、
こっちにはありません。

00:04:53.090 --> 00:04:57.760
これを調整するためには、
Quantityヘッダーの下のパディングか
ボックスのマージンを追加するか

00:04:57.760 --> 00:05:01.720
上のパディングか
マージンを追加する必要があります。

00:05:01.720 --> 00:05:02.620
どちらでもOKです。

00:05:02.620 --> 00:05:07.110
今回は、Quantityヘッダーの
上のマージンを追加します。

00:05:07.110 --> 00:05:08.880
これで改善されました！

00:05:08.880 --> 00:05:10.990
スペースが均等になりました。

00:05:10.990 --> 00:05:12.790
これから端末でアプリを起動してみます。

00:05:14.140 --> 00:05:15.160
こちらがアプリです。

00:05:15.170 --> 00:05:16.320
バッチリですね。

00:05:16.320 --> 00:05:17.460
とてもよくできました。

00:05:17.460 --> 00:05:21.250
さらにアプリのUIを変更したい場合は、

00:05:21.250 --> 00:05:25.360
Googleで調べて
自分のアプリに適用しましょう。

