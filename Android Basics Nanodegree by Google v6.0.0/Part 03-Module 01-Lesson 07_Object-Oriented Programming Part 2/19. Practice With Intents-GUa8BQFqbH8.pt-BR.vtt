WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:02.501
Nesta tarefa,
usaremos um intent

00:00:02.534 --> 00:00:04.701
para enviar um pedido
a um app de email.

00:00:04.734 --> 00:00:06.534
Antes, explore um pouco

00:00:06.567 --> 00:00:08.834
escrevendo códigos
para diferentes intents

00:00:08.868 --> 00:00:11.200
listados no guia
de intents comuns.

00:00:11.234 --> 00:00:13.000
Está nas "Notas do instrutor".

00:00:13.033 --> 00:00:17.000
Ou busque "Common Intents"
e entre no primeiro link.

00:00:17.033 --> 00:00:18.734
É um artigo muito útil

00:00:18.767 --> 00:00:21.601
para descobrir
o que o Android permite.

00:00:21.634 --> 00:00:24.634
Para fins de treinamento,
vamos criar um intent de mapa.

00:00:24.667 --> 00:00:27.100
A documentação
traz informações úteis

00:00:27.133 --> 00:00:30.100
sobre o esquema URI
de ação e dados a ser usado

00:00:30.133 --> 00:00:31.501
para um intent de mapa.

00:00:31.534 --> 00:00:35.200
Aqui diz:
"geo:Latitude,Longitude".

00:00:35.234 --> 00:00:37.834
Mais para baixo,
há exemplos de códigos.

00:00:38.534 --> 00:00:40.400
Vou selecionar
e copiar isto.

00:00:40.434 --> 00:00:44.000
Para executar este código,
vamos colá-lo no Just Java.

00:00:44.033 --> 00:00:46.000
Poderíamos criar
um app novo

00:00:46.033 --> 00:00:48.133
para colar este código
e rodá-lo,

00:00:48.167 --> 00:00:50.934
mas vamos usar o Just Java,
que já está funcionando.

00:00:50.968 --> 00:00:52.901
Vou selecionar
todo este código

00:00:52.934 --> 00:00:55.267
e torná-lo um comentário
temporariamente.

00:00:55.300 --> 00:00:58.501
Eu fiz isso usando
"Cmd+/" no Mac.

00:00:58.534 --> 00:01:01.801
No Windows, é "Ctrl+/".

00:01:01.834 --> 00:01:04.100
Nada deste código
será executado.

00:01:04.133 --> 00:01:06.000
Quando "Order"
for pressionado,

00:01:06.033 --> 00:01:07.701
quero enviar
um intent de mapa.

00:01:07.734 --> 00:01:08.834
Nesta linha de código,

00:01:08.868 --> 00:01:10.901
criaremos um novo
objeto intent

00:01:10.934 --> 00:01:12.601
usando
a nova palavra-chave.

00:01:12.634 --> 00:01:14.400
Chamaremos
o construtor de intents

00:01:14.434 --> 00:01:16.567
e passaremos
um ACTION_VIEW.

00:01:16.601 --> 00:01:20.901
Palavras maiúsculas em Java
sempre são constantes.

00:01:20.934 --> 00:01:23.267
Constante é uma variável
cujo conteúdo,

00:01:23.300 --> 00:01:25.400
uma vez definido,
jamais muda.

00:01:25.434 --> 00:01:27.968
Neste caso,
ao compormos nosso intent,

00:01:28.000 --> 00:01:30.133
usamos ações oficiais
de intent,

00:01:30.167 --> 00:01:33.968
como ACTION_VIEW
ou ACTION_SEND,

00:01:34.000 --> 00:01:37.200
definidos como constantes
da classe intent.

00:01:37.767 --> 00:01:38.901
Recapitulando,

00:01:38.934 --> 00:01:43.000
esta linha de código
cria um novo objeto intent.

00:01:43.033 --> 00:01:45.834
Neste objeto intent,
chamamos métodos diferentes,

00:01:45.868 --> 00:01:47.067
como setData().

00:01:47.100 --> 00:01:48.901
Temos que definir
o URI dos dados

00:01:48.934 --> 00:01:51.701
como um conjunto
de coordenadas.

00:01:51.734 --> 00:01:53.968
O app ainda não reconhece
esta variável,

00:01:54.000 --> 00:01:55.300
então vou substituí-la.

00:01:55.334 --> 00:01:59.934
Esta parte do código
cria um URI desta string.

00:01:59.968 --> 00:02:02.934
E este URI é definido
como campo de dados

00:02:02.968 --> 00:02:04.868
dentro deste objeto intent.

00:02:04.901 --> 00:02:07.234
Terminamos de criar
nosso intent de mapa.

00:02:07.267 --> 00:02:10.367
Aqui temos um código
meio confuso.

00:02:10.400 --> 00:02:13.968
É complicado, mas, em suma,
isto evita que o app trave

00:02:14.000 --> 00:02:16.868
verificando se o intent
é suportado.

00:02:16.901 --> 00:02:18.934
Na analogia da bola,
é como se,

00:02:18.968 --> 00:02:21.200
por não ter ninguém
para pegar a bola,

00:02:21.234 --> 00:02:23.534
ela caísse e explodisse...

00:02:24.400 --> 00:02:26.434
porque o sistema
não sabe como proceder.

00:02:26.467 --> 00:02:29.167
Por isso precisamos
desta linha de código.

00:02:29.200 --> 00:02:31.968
Ela verifica se há algum app
no dispositivo

00:02:32.000 --> 00:02:33.567
que suporta este intent.

00:02:33.601 --> 00:02:36.868
Se houver, esta condição
do If Statement é verdadeira

00:02:36.901 --> 00:02:40.234
e esta linha de código
entre chaves é executada.

00:02:41.234 --> 00:02:44.601
Nós criamos a atividade
com este intent.

00:02:44.634 --> 00:02:48.033
Se nenhum app no dispositivo
suporta o intent,

00:02:48.067 --> 00:02:50.033
a condição do teste é falsa,

00:02:50.067 --> 00:02:53.601
nós pulamos este bloco de código
e não enviamos o intent.

00:02:53.634 --> 00:02:56.067
Quando terminar
de explorar os intents,

00:02:56.100 --> 00:02:59.334
vá em frente e adicione
essa funcionalidade ao seu app.

00:02:59.367 --> 00:03:03.400
Usaremos um intent para enviar
o pedido ao app de email...

00:03:03.434 --> 00:03:05.400
e preencheremos o email

00:03:05.434 --> 00:03:07.601
com este texto
e este assunto.

00:03:07.634 --> 00:03:12.100
Remova o código que exibe
o resumo do pedido no Just Java.

00:03:12.133 --> 00:03:15.501
Estando no email,
não precisamos dele no app.

00:03:15.534 --> 00:03:17.901
Aqui está um lembrete
de como o app deve ficar.

00:03:17.934 --> 00:03:20.267
Não há mais o campo
de resumo do pedido,

00:03:20.300 --> 00:03:23.567
e, quando clico em "Order",
vou parar no app de email.

00:03:23.601 --> 00:03:26.234
Agora basta preencher
o destinatário

00:03:26.267 --> 00:03:28.067
e enviar a mensagem.

