WEBVTT
Kind: captions
Language: ko

00:00:00.330 --> 00:00:03.230
지난 퀴즈에서 뷰를 위치시키는
방법에 대해 얘기했을 때

00:00:03.230 --> 00:00:05.160
RelativeLayout을 사용하는 것을
언급했을 겁니다.

00:00:05.160 --> 00:00:06.850
우리가 그랬단 걸 알아요.

00:00:06.850 --> 00:00:09.670
하지만 우리 앱에서 그 레이아웃을
만드는 데 사용할, 더 이상적인

00:00:09.670 --> 00:00:13.890
재귀적[nested] 뷰 그룹을 사용하는
방법을 소개하고 싶습니다.

00:00:13.890 --> 00:00:18.120
재귀적 뷰 그룹은 뷰 그룹을
다른 뷰 그룹 안에 넣는 걸 뜻해요.

00:00:18.120 --> 00:00:22.150
그 방법으로 당신은 이처럼 더 
흥미롭고 복잡한 레이아웃을 만들 수 있죠.

00:00:22.150 --> 00:00:24.050
이 레이아웃 중 하나를
어떻게 만들지 봅시다.

00:00:25.240 --> 00:00:28.620
예를 들어, 당신이 세 뷰,
이미지 뷰 하나, 텍스트 뷰 둘을 가진

00:00:28.620 --> 00:00:30.840
수직 LinearLayout이 있다고 하죠.

00:00:30.840 --> 00:00:34.000
이미지의 위에 어떤 텍스트를
겹치고 싶다면 어떨까요?

00:00:34.000 --> 00:00:36.470
LinearLayout으로
뷰를 겹칠 수 없어요.

00:00:36.470 --> 00:00:38.390
RelativeLayout으로는 할 수 있죠.

00:00:38.390 --> 00:00:42.470
대신 이 child를
RelativeLayout으로 교체할 수 있죠.

00:00:42.470 --> 00:00:45.750
그리고 RelativeLayout 안에
이미지 뷰를 넣습니다.

00:00:45.750 --> 00:00:49.950
이 이미지 뷰는 이제 parent
RelativeLayout의 각 변으로 정렬되었죠.

00:00:49.950 --> 00:00:52.660
여기 더 큰 LinearLayout 
안에 담겨져 있는

00:00:52.660 --> 00:00:54.899
RelativeLayout의 예가 보이죠.

00:00:55.970 --> 00:00:59.850
다른 뷰 그룹 안에서 많은
조합의 뷰 그룹을 가질 수 있어요.

00:00:59.850 --> 00:01:03.600
예를 들어, RelativeLayout을
앱의 근원 뷰로 가진다고 합시다.

00:01:03.900 --> 00:01:07.270
그것은 이미지 뷰나 두 텍스트 뷰
같은 몇 뷰를 담고 있죠.

00:01:08.350 --> 00:01:12.890
이 넓은 RelativeLayout의 child로 
LinearLayout을 추가할 수 있어요.

00:01:14.100 --> 00:01:17.460
LinearLayout이 자체는
다른 두 이미지 뷰 같은

00:01:17.460 --> 00:01:18.680
다른 children도 갖고 있죠.

00:01:19.860 --> 00:01:23.340
당신은 원하는 만큼 다른 뷰 그룹 
안에 둥지를 만들 수 있어요.

00:01:23.340 --> 00:01:26.540
하지만, 더 많이 만들수록
앱이 화면에 레이아웃을

00:01:26.540 --> 00:01:29.810
표현하는 데 비용이 더 많이 
든다는 걸 주의하세요.

00:01:31.040 --> 00:01:34.040
RelativeLayout은 특히
매우 유연한 레이아웃이지만

00:01:34.040 --> 00:01:39.130
다른 것과 관련한 각 뷰의 위치를
계산하는 것은 매우 복잡해요.

00:01:39.490 --> 00:01:43.500
RelativeLayout에 너무 많은 층을 
가지고 있지 않는 걸 추천합니다.

00:01:45.040 --> 00:01:48.730
실제 Google 앱에서
재귀적 뷰 그룹을 사용하기에

00:01:48.730 --> 00:01:51.420
유용한 경우에서
예를 몇 가지 가져왔습니다.

00:01:51.840 --> 00:01:55.060
Google Now 앱은
당신의 현재 위치에 기반해

00:01:55.060 --> 00:01:58.820
관련 정보의 카드를 보여줍니다.
현재 시간과 현재 위치 등을요.

00:01:59.250 --> 00:02:01.310
Red Sox 같은 팀을 좋아한다면

00:02:01.310 --> 00:02:04.040
좋은 선택인데요, 이것은 최근의
경기 점수를 보여줍니다.

00:02:05.040 --> 00:02:08.570
이 카드를 위한 레이아웃을 만들기 위해
수직 LinearLayout 사용을

00:02:08.570 --> 00:02:11.810
생각할 수 있겠죠. 
정보가 줄로 표현되니까요.

00:02:12.160 --> 00:02:14.990
하지만 수직 LinearLayout의
첫 번째 아이템은

00:02:14.990 --> 00:02:18.380
하나의 텍스트 뷰가 아니라
여러 개로 이루어져 있어요.

00:02:19.410 --> 00:02:22.442
사실, 수평 LinearLayout으로
한 이미지 뷰와

00:02:22.442 --> 00:02:25.325
두 텍스트 뷰로 이루어진
첫 번째 항목을 만들 수 있어요.

00:02:25.325 --> 00:02:28.085
이 수직 LinearLayout의
두 번째 항목도 마찬가지죠.

00:02:28.085 --> 00:02:31.205
하나의 이미지 뷰와 두 텍스트 뷰를
담고 있는 수평 LinearLayout으로

00:02:31.205 --> 00:02:32.865
이것을 만들 수 있어요.

00:02:32.865 --> 00:02:34.355
Google Now 앱의 다른 카드는

00:02:34.355 --> 00:02:37.315
당신이 관심 있어할 만한
관련 주식을 보여줍니다.

00:02:37.315 --> 00:02:39.710
Google 주가가 여전히
그 가격이었으면 좋겠네요.

00:02:39.710 --> 00:02:42.850
어쨌건, 이 레이아웃을
수직 LinearLayout으로

00:02:42.850 --> 00:02:45.740
만들 수 있어요.
이 열을 상상할 수 있으니까요.

00:02:45.740 --> 00:02:48.410
이 중앙 부분은 하나의 텍스트 뷰가
아니란 것을 제외하죠.

00:02:48.410 --> 00:02:50.640
그것들은 여러 개의
텍스트 뷰로 만들어졌어요.

00:02:50.640 --> 00:02:53.280
Google 주가와 관련된 이 줄 항목은

00:02:53.280 --> 00:02:57.340
수평 LinearLayout을 사용해
네 개의 텍스트 뷰로 채울 수 있어요.

00:02:57.340 --> 00:02:59.670
다른 주가들도 마찬가지고요.

00:02:59.670 --> 00:03:03.860
이 수평 LinearLayout들은 더 넓은 
수직 LInearLayout의 children입니다.

00:03:04.870 --> 00:03:08.570
Google Play 음악 앱에서
당연히 음악을 들을 수 있죠.

00:03:09.050 --> 00:03:11.260
이것이 만들기에 복잡한
레이아웃으로 보이지만

00:03:11.260 --> 00:03:14.850
당신이 알아보는 더 작은 
뷰 그룹으로 나눌 수 있어요.

00:03:14.850 --> 00:03:19.260
이 패턴은 세 다른 children을 가진
수직 LinearLayout 같네요.

00:03:19.260 --> 00:03:22.620
첫 child는 RelativeLayout을
이용해 만들 수 있어요.

00:03:22.620 --> 00:03:24.200
이 뷰들이 서로 연관있기 때문이죠.

00:03:25.390 --> 00:03:28.360
두 번째 뷰도 RelativeLayout으로
만들 수 있어요.

00:03:28.360 --> 00:03:30.990
뷰들이 서로 겹쳐져 있기 때문이죠.

00:03:30.990 --> 00:03:34.800
세 번째 child는 다섯 개의 
다른 버튼으로 이루어진

00:03:34.800 --> 00:03:37.080
수평 LinearLayout 같네요.

00:03:37.080 --> 00:03:40.480
다시, 우리는 재귀적 뷰 그룹을
이 화면을 만드는 데 사용해요.

00:03:40.480 --> 00:03:41.970
이는 이 레이아웃을 만드는
한 방법입니다.

00:03:41.970 --> 00:03:44.318
다른 많은 방법으로도
이걸 만들 수 있어요.

00:03:45.351 --> 00:03:48.667
Google Maps 앱에서
레스토랑 같은 개별 위치에 대한

00:03:48.667 --> 00:03:50.880
자세한 페이지를 앞서 보았어요.

00:03:51.500 --> 00:03:55.150
단 하나의 LinearLayout이나
RelativeLayout으로는

00:03:55.150 --> 00:03:56.420
그 화면을 만들 수 없어요.

00:03:56.420 --> 00:03:58.700
당신은 많은 뷰 그룹을
끼워넣어야 하죠.

00:03:58.700 --> 00:04:02.860
더 큰 스케일에서 우리는 정보들이 
거의 행으로 정렬된 것을 봤습니다.

00:04:02.860 --> 00:04:05.400
우리는 parent 뷰로 수직
LinearLayout을 사용할 수 있어요.

00:04:05.400 --> 00:04:07.900
한 child는 이 레이아웃
전체가 될 수 있죠.

00:04:07.900 --> 00:04:10.330
다른 child는 이 버튼들의 
줄일 수도 있고요.

00:04:10.330 --> 00:04:12.725
다른 child는 이 설명이
될 수도 있고, 그런 식이죠.

00:04:13.985 --> 00:04:16.894
하지만 각 child 뷰 안에
하나의 뷰만 있는 게 아닙니다.

00:04:16.894 --> 00:04:18.545
여러 개의 뷰가 있어요.

00:04:18.935 --> 00:04:23.762
더 넓은 LinearLayout 안의
이 child는 세 뷰로 만들어졌죠.

00:04:23.762 --> 00:04:27.632
그래서 각 뷰에 동등한 무게를 가진
수평 LinearLayout을 사용해

00:04:27.632 --> 00:04:30.042
그들이 균등하게 퍼지도록
만들 수 있습니다.

00:04:31.042 --> 00:04:34.232
더 넓은 수직 LinearLayout의
이 뷰는 또한

00:04:34.232 --> 00:04:37.636
이미지 뷰, 텍스트 뷰를 가진 수평 
LinearLayout으로 구성될 수도 있어요.

00:04:38.576 --> 00:04:42.696
페이지를 계속 넘길 때,
레스토랑에 대한 정보를 더 볼 수 있죠.

00:04:43.036 --> 00:04:46.896
다시, 정보의 열을 여기서
상상할 수 있습니다.

00:04:47.276 --> 00:04:49.873
수직 LinearLayout을 이 정보에 
사용하는 것은 쓸만해요.

00:04:50.783 --> 00:04:54.173
어떤 줄은 하나의 텍스트 뷰보다
더 복잡하죠.

00:04:54.503 --> 00:04:58.313
이 줄은 당신이 예약할 수 있는
가능한 시간을 많이 보여줍니다.

00:04:58.313 --> 00:05:01.143
이것은 수평 LinearLayout을 이용해
당신이 정렬할 수 있는

00:05:01.143 --> 00:05:03.063
세 개의 다른 버튼으로
구성되어 있습니다.

00:05:03.063 --> 00:05:07.563
이 사진의 줄도 수평
LinearLayout으로 만들 수 있죠.

00:05:07.563 --> 00:05:10.383
사실, 수평 LinearLayout에서

00:05:10.383 --> 00:05:13.360
첫 child는 단 하나의
이미지 뷰가 아닙니다.

00:05:13.360 --> 00:05:15.230
이것은 텍스트 뷰와 함께 있는
이미지 뷰입니다.

00:05:15.230 --> 00:05:18.680
당신은 이 첫 child를 만들기 위해
RelativeLayout을 사용할 수 있어요.

00:05:18.680 --> 00:05:24.130
뷰 그룹 안에 뷰 그룹 안에 뷰 그룹이 
어떻게 있는지 볼 수 있습니다.

00:05:24.130 --> 00:05:26.790
RelativeLayout과
LinearLayout 너머엔

00:05:26.790 --> 00:05:30.905
더 많은 뷰 그룹이 있어요.
FrameLayout, GridLayout이 있죠.

00:05:30.905 --> 00:05:33.285
우리는 이것들을 코스에서 
다룰 시간이 없지만

00:05:33.285 --> 00:05:36.415
여러분이 가서 스스로 그것을
배우길 추천드립니다.

00:05:36.415 --> 00:05:39.796
가끔 그것들은 Relative나
Linear을 사용할 때보다 낫거든요.

