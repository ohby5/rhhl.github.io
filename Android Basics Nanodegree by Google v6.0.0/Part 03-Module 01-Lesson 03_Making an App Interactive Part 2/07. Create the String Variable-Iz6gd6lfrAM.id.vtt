WEBVTT
Kind: captions
Language: id

00:00:00.000 --> 00:00:02.890
Dalam pelajaran sebelumnya kita
belajar cara mengumumkan atau

00:00:02.890 --> 00:00:04.288
menciptakan variabel integer.

00:00:04.288 --> 00:00:07.820
Kita akan mengikuti format yang sama untuk
membuat variabel, tapi kali ini

00:00:07.820 --> 00:00:11.480
ada teks dalam variabelnya
karena ia adalah &lt;i&gt;string&lt;/i&gt;.

00:00:11.480 --> 00:00:13.815
Inilah kode yang ditambahkan ke
aplikasi kita.

00:00:13.815 --> 00:00:16.995
Ini menciptakan variabel &lt;i&gt;string&lt;/i&gt; baru
yang dinamakan &lt;i&gt;priceMessage&lt;/i&gt;.

00:00:16.995 --> 00:00:19.715
Nilai yang tercantum di teks adalah &lt;i&gt;Free&lt;/i&gt;.

00:00:20.545 --> 00:00:24.125
Ia mengikuti sebuah format khusus yang
sesuai dengan aturan sintaks Java.

00:00:24.125 --> 00:00:26.025
Pertama kita akan menentukan tipe data.

00:00:26.025 --> 00:00:28.515
Yaitu &lt;i&gt;string&lt;/i&gt;, dalam kasus ini.

00:00:28.515 --> 00:00:31.485
Ingat bahwa &lt;i&gt;string&lt;/i&gt; hanya 
satu deret karakter.

00:00:31.485 --> 00:00:34.939
Kemudian diikuti oleh nama variabel,
yaitu &lt;i&gt;priceMessage&lt;/i&gt;.

00:00:36.080 --> 00:00:38.850
Lalu diikuti oleh tanda sama dengan,
nilai awal, dan

00:00:38.850 --> 00:00:41.680
tanda titik koma untuk menandakan
kalimat telah berakhir.

00:00:42.490 --> 00:00:46.170
Mengatakan tipe data adalah &lt;i&gt;string&lt;/i&gt;
membatasi tipe informasi yang dapat

00:00:46.170 --> 00:00:47.780
dimasukkan ke dalam variabel ini.

00:00:47.780 --> 00:00:50.780
Hanya satu &lt;i&gt;string&lt;/i&gt; yang bisa disimpan
dalam satu kali.

00:00:50.780 --> 00:00:53.830
Sebuah &lt;i&gt;string&lt;/i&gt; terdiri dari huruf, angka,
atau simbol.

00:00:54.860 --> 00:00:58.770
Anda mungkin ingat bahwa nama variabel
adalah nama yang kita berikan ke variabel

00:00:58.770 --> 00:01:02.250
ini, supaya kita bisa mengacu padanya
nanti untuk mengambil nilai atau

00:01:02.250 --> 00:01:05.430
memperbarui nilai. Sama seperti memberi
tanda nama ke variabel itu.

00:01:05.430 --> 00:01:09.250
Waktu memilih nama variabel, penting untuk
memilih sesuatu yang deskriptif, yang

00:01:09.250 --> 00:01:12.950
menggambarkan tipe informasi
yang akan disimpannya.

00:01:12.950 --> 00:01:15.660
Saya dapat menamakan variabel ini
Catherine tapi itu

00:01:15.660 --> 00:01:18.520
benar-benar tidak mencerminkan
informasi di dalamnya.

00:01:18.520 --> 00:01:20.530
Dan membuat kode saya susah dibaca,

00:01:20.530 --> 00:01:24.500
karena tidak ada yang tahu kenapa ada
variabel &lt;i&gt;string&lt;/i&gt; bernama Catherine.

00:01:24.500 --> 00:01:25.450
Pada sisi lain,

00:01:25.450 --> 00:01:29.270
nama variabel seperti &lt;i&gt;priceMessage&lt;/i&gt; lebih
berguna, karena Anda tahu ada pesan

00:01:29.270 --> 00:01:32.530
di dalamnya yang mungkin
berkaitan dengan harga.

00:01:32.530 --> 00:01:36.280
Kita sudah membahasnya sebelumnya,
tapi ada adat penamaan untuk variabel.

00:01:36.280 --> 00:01:38.990
Jika Anda lupa apa itu, Anda 
selalu dapat memeriksanya.

00:01:38.990 --> 00:01:42.350
Carilah "variable name Java" di
Google Search.

00:01:42.350 --> 00:01:45.530
Saya gulir ke bawah dimana
dibahas soal penamaan.

00:01:45.530 --> 00:01:48.130
Terbilang bahwa nama variabel adalah
kasus sensitif dan

00:01:48.130 --> 00:01:49.850
biasanya dimulai dengan huruf kecil.

00:01:49.850 --> 00:01:53.020
Lalu dapat menggunakan huruf besar
jika ada banyak kata-kata.

00:01:53.950 --> 00:01:57.420
Selanjutnya ada sang operator tugas,
atau tanda sama di sini.

00:01:57.420 --> 00:02:00.830
Operator ini bertanggung jawab atas
menentukan nilai ke sebuah variabel.

00:02:00.830 --> 00:02:05.180
Jadi nilai di kanan ini dimasukkan
ke variable &lt;i&gt;priceMessage&lt;/i&gt;.

00:02:06.100 --> 00:02:10.320
Kita menentukan nilai awal &lt;i&gt;string&lt;/i&gt; ini
sebagai teks dan tanda kutip.

00:02:10.949 --> 00:02:15.800
Ini namanya &lt;i&gt;string literal&lt;/i&gt;, 
karena literal punya nilai tetap.

00:02:15.800 --> 00:02:20.060
Kita pertama kali mendengar soal literal
waktu belajar tentang variabel integer.

00:02:20.060 --> 00:02:24.190
Nilai tetap seperti dua atau lima atau
sepuluh semuanya adalah integer literal

00:02:24.190 --> 00:02:28.510
karena tidak berubah, lain halnya dengan
variabel, yang dapat berubah.

00:02:28.510 --> 00:02:31.480
Kembali ke perumpamaan soal kotak,
nilai &lt;i&gt;Free&lt;/i&gt; akan masuk

00:02:31.480 --> 00:02:34.020
ke dalam variabel ini.

00:02:34.020 --> 00:02:36.830
Tidak kurang pentingnya, ada titik koma 
pada akhir kalimat.

00:02:38.040 --> 00:02:41.310
Sekarang kita telah mengerti baris kode
ini lebih baik, lanjutlah dan

00:02:41.310 --> 00:02:43.860
coba bereksperimentasi dengan nilai
yang berbeda.

00:02:43.860 --> 00:02:47.390
Anda dapat mencoba mengubah
nilai awal atau nama variabel.

00:02:47.390 --> 00:02:50.760
Contoh, Anda dapat memakai &lt;i&gt;string&lt;/i&gt;
pendek seperti &lt;i&gt;Free&lt;/i&gt; atau mengubahnya

00:02:50.760 --> 00:02:52.640
ke sebuah &lt;i&gt;string&lt;/i&gt; yang lebih panjang.

00:02:52.640 --> 00:02:55.220
Anda juga bisa membuatnya kosong.

00:02:55.220 --> 00:02:58.830
Dengan begitu tidak ada karakter
di antara dua tanda kutip.

00:02:58.830 --> 00:03:04.170
Anda juga bisa menambahkan spasi atau
angka atau bisa juga simbol.

00:03:05.920 --> 00:03:08.930
Waktu membuat &lt;i&gt;string literal&lt;/i&gt;, hati-hatilah

00:03:08.930 --> 00:03:12.640
ada karakter tertentu yang perlu Anda
urus secara khusus.

00:03:12.640 --> 00:03:16.040
Contoh, jika Anda memakai tanda kutip
di &lt;i&gt;string&lt;/i&gt;, maka akan ada

00:03:16.040 --> 00:03:18.970
sebuah eror yang berkata

00:03:18.970 --> 00:03:24.090
tidak dapat memecahkan simbol dolar dan
titik koma diharapkan.

00:03:24.090 --> 00:03:29.150
Ini karena &lt;i&gt;compiler&lt;/i&gt; tidak tahu bahwa 
&lt;i&gt;string&lt;/i&gt; ini seharusnya termasuk semuanya.

00:03:29.150 --> 00:03:31.740
Untuk memcahkan masalah ini,
mari kita cari di Google.

00:03:32.190 --> 00:03:34.720
Di Google, carilah "Java
escape characters".

00:03:38.090 --> 00:03:41.750
Dan gulir ke bawah ke bagian yang
bernama Escape Sequences.

00:03:41.750 --> 00:03:44.920
Di Java, karakter tertentu 
punya arti spesial.

00:03:44.920 --> 00:03:49.210
Tanda kutip buka dan tutup berarti
sebuah &lt;i&gt;string&lt;/i&gt; di Java,

00:03:49.210 --> 00:03:52.460
tapi jika Anda benar-benar ingin
memasukkan tanda kutip pada &lt;i&gt;string&lt;/i&gt;,

00:03:52.460 --> 00:03:55.090
anda memerlukan &lt;i&gt;escape sequence&lt;/i&gt;.

00:03:55.090 --> 00:03:59.330
&lt;i&gt;Escape sequence&lt;/i&gt; adalah karakter
yang dimulai dengan garis miring, dan

00:03:59.330 --> 00:04:01.990
&lt;i&gt;Java compiler&lt;/i&gt; akan menerjemahkannya
secara khusus.

00:04:03.030 --> 00:04:06.520
Jika kita memakai garis miring dengan
tanda kutip ganda, maka artinya kita

00:04:06.520 --> 00:04:11.460
mau menggunakan tanda kutip, bukan
tanda kutip yang artinya &lt;i&gt;string&lt;/i&gt; teks.

00:04:11.460 --> 00:04:12.990
Akan saya perlihatkan maksudnya.

00:04:12.990 --> 00:04:16.160
Di Android Studio saya bisa menambahkan
garis miring sebelum setiap

00:04:16.160 --> 00:04:19.079
tanda kutip yang saya inginkan
tampil di teks.

00:04:20.200 --> 00:04:24.520
Semua nilai awal variabel ini
akan menjadi &lt;i&gt;string&lt;/i&gt; ini,

00:04:24.520 --> 00:04:26.880
karena ditandai dengan tanda kutip tutup.

00:04:27.990 --> 00:04:31.390
Di dalam &lt;i&gt;string&lt;/i&gt; teks itu, saya juga mau
memakai tanda kutip, tapi saya

00:04:31.390 --> 00:04:34.720
tandai dengan garis miring sebelum
tanda kutip.

00:04:35.760 --> 00:04:39.220
Jika dijalankan di perangkat, saya 
lihat tanda kutip di sekitar $1, tapi

00:04:39.220 --> 00:04:42.130
tidak melihatnya di sekitar semuanya,
ini sudah kami harapkan.

00:04:43.040 --> 00:04:46.510
&lt;i&gt;Escape sequence&lt;/i&gt; lain yang berguna
adalah garis miring n, yang memasukkan

00:04:46.510 --> 00:04:50.860
baris baru maka teks dapat berlanjut
ke baris berikutnya.

00:04:51.430 --> 00:04:53.520
Anda dapat mencobanya di kode Anda.

00:04:54.230 --> 00:04:57.200
Ingat bahwa titik koma harus selalu
ada di akhir kalimat.

00:04:57.200 --> 00:05:01.070
Walaupun dalam tata bahasa Bahasa Inggris,
yang benar adalah memasukkan tanda baca

00:05:01.070 --> 00:05:04.280
dalam tanda kutip, Anda harus 
menaruhnya di luarnya.

00:05:04.280 --> 00:05:07.620
Apa saja yang ada di antaranya
merupakan bagian dari &lt;i&gt;string&lt;/i&gt; teks.

00:05:07.620 --> 00:05:10.540
Titik koma ditaruh di luar 
agar dikenali &lt;i&gt;Java compiler&lt;/i&gt;.

00:05:10.540 --> 00:05:13.360
Anda juga bisa mengubah nama variabel.

00:05:13.360 --> 00:05:17.440
Jika saya ubah ini ke sesuatu seperti
&lt;i&gt;message&lt;/i&gt;, maka ada eror karena

00:05:17.440 --> 00:05:20.000
ia tidak dapat memecahkan simbol
&lt;i&gt;priceMessage&lt;/i&gt;.

00:05:20.000 --> 00:05:22.760
Saya hanya perlu menyalinnya dan
menaruhnya di sini juga.

00:05:22.760 --> 00:05:24.870
Harusnya ini bisa jalan di perangkat Anda.

00:05:24.870 --> 00:05:26.860
Tapi Anda tidak bisa mengubah tipe data.

00:05:26.860 --> 00:05:29.600
Harus dieja &lt;i&gt;String&lt;/i&gt; tepat seperti ini.

00:05:29.600 --> 00:05:32.435
&lt;i&gt;String&lt;/i&gt; dikapitalisasi di sini karena
ia adalah sebuah obyek.

00:05:32.435 --> 00:05:35.420
Kita akan belajar tentang obyek di
Pelajaran 3, untuk sekarang,

00:05:35.420 --> 00:05:37.040
ketiklah &lt;i&gt;string&lt;/i&gt; dengan kapital S.

00:05:37.040 --> 00:05:38.960
Waktu kita kerjakan integer sebelumnya,

00:05:38.960 --> 00:05:42.309
kita akan mengumumkan integer
dengan huruf kecil "i" untuk "int".

00:05:42.960 --> 00:05:45.570
Hurif kecil karena ia adalah
tipe data primitif,

00:05:45.570 --> 00:05:48.480
artinya salah satu dari tipe
data Java yang dasar.

00:05:48.480 --> 00:05:51.860
Bereksperimentasilah dengan nama
variabel dan nilai awal yang berbeda

00:05:51.860 --> 00:05:54.980
sampai Anda nyaman dengan
menciptakan variabel &lt;i&gt;string&lt;/i&gt;.

00:05:54.980 --> 00:05:59.240
Lalu beritahu saya apa yang salah di
setiap kalimat &lt;i&gt;string&lt;/i&gt; di bawah ini.

00:05:59.240 --> 00:06:02.320
Saya ingin Anda menunjukkan kesalahan
di tiap baris kodenya.

