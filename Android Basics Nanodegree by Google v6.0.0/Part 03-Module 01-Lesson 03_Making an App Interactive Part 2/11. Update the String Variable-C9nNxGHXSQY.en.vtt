WEBVTT
Kind: captions
Language: en

00:00:00.370 --> 00:00:03.270
Just like you can change the value
of an integer variable after you've

00:00:03.270 --> 00:00:06.370
created it, you can also change
the value of a string variable.

00:00:07.390 --> 00:00:10.166
You can update it to
a completely new value.

00:00:10.166 --> 00:00:14.730
In our Just Java app, say we wanted to
display a special drink of the day.

00:00:14.730 --> 00:00:18.180
Then we could use a string variable
to store the name of that drink.

00:00:18.180 --> 00:00:21.510
Here we declare a string
variable called drinkOfTheDay and

00:00:21.510 --> 00:00:24.590
we initially set it to the value Latte.

00:00:24.590 --> 00:00:26.910
With our box analogy this
is what it would look like.

00:00:26.910 --> 00:00:30.152
We have the Latte value
stored inside this variable.

00:00:30.152 --> 00:00:35.710
On another line of code we can say
drinkOfTheDay equals a new string value.

00:00:35.710 --> 00:00:39.000
Now the word Espresso is
stored in this string.

00:00:39.000 --> 00:00:41.550
We don't need to specify
the data type string again,

00:00:41.550 --> 00:00:43.530
because it was already
declared as a string up here.

00:00:44.550 --> 00:00:47.830
On the next line of code if we say
drinkOfTheDay equals Green Tea,

00:00:47.830 --> 00:00:50.070
then we store Green Tea
into this variable now.

00:00:51.310 --> 00:00:54.740
Here's another example where we might
want to display the store hours

00:00:54.740 --> 00:00:56.130
within our app.

00:00:56.130 --> 00:00:58.970
We can create a string variable
to store the text that

00:00:58.970 --> 00:01:01.120
should be displayed on the screen.

00:01:01.120 --> 00:01:04.179
The initial value is Open
today from 8AM to 5PM.

00:01:04.179 --> 00:01:08.160
On a different day we can update the
string variable to say Open today from

00:01:08.160 --> 00:01:12.450
8AM to 2PM, because we want to
leave early to go to the beach.

00:01:12.450 --> 00:01:15.980
Or on another day we can update
the store hours to say Closed today,

00:01:15.980 --> 00:01:18.010
because we don't work on Sundays.

00:01:18.010 --> 00:01:21.050
If our app had a running list of
all the drinks that the user wanted

00:01:21.050 --> 00:01:23.990
then we could create a string
variable called drinksOrdered.

00:01:23.990 --> 00:01:27.950
We could start it off with one drink,
like 1 mocha.

00:01:27.950 --> 00:01:30.440
In the variable we would
store the text 1 mocha.

00:01:31.450 --> 00:01:33.160
And then if the user
wants another drink,

00:01:33.160 --> 00:01:38.350
then we can just concatenate the new
drink onto the existing drinksOrdered.

00:01:38.350 --> 00:01:41.980
This gets stored inside the variable
drinksOrdered like this.

00:01:42.980 --> 00:01:44.190
If I want to add another drink,

00:01:44.190 --> 00:01:48.780
I can just concatenate that onto
the existing string drinksOrdered.

00:01:48.780 --> 00:01:53.307
This expression evaluates to one long
string that says 1 mocha, 1 cappuccino,

00:01:53.307 --> 00:01:54.920
1 macchiato.

00:01:54.920 --> 00:01:57.860
All of that gets stored into
this variable like this.

00:01:59.030 --> 00:02:01.070
It might look a little
funny to have a comma and

00:02:01.070 --> 00:02:02.900
a space at the beginning of this string,

00:02:02.900 --> 00:02:07.460
but that just makes the list look nice
with commas in between each item.

00:02:07.460 --> 00:02:11.430
The reason why I didn't put a comma
at the end of cappuccino is because

00:02:11.430 --> 00:02:14.350
I can't be sure if there's going to be
another drink coming after that or not.

00:02:14.350 --> 00:02:17.579
If there's only two drinks,
then I will say 1 mocha,

00:02:17.579 --> 00:02:19.972
1 cappuccino and that looks fine as is.

00:02:19.972 --> 00:02:23.120
If there's another drink coming,
like a macchiato,

00:02:23.120 --> 00:02:25.920
then I can just add a comma because
I know another drink is coming.

00:02:27.100 --> 00:02:29.072
Go ahead and
try this out in Android Studio.

00:02:29.072 --> 00:02:34.013
Add another line of code that updates
the string variable to a new value,

00:02:34.013 --> 00:02:38.230
or you can update it to the current
value plus some more stuff.

00:02:39.280 --> 00:02:42.010
Once you're comfortable with knowing
how to update string variables in

00:02:42.010 --> 00:02:44.090
Android Studio, then go ahead and

00:02:44.090 --> 00:02:47.740
implement this final behavior
in the app for lesson two.

00:02:47.740 --> 00:02:51.080
When you change the quantity and hit the
Order button, it should say Total and

00:02:51.080 --> 00:02:52.690
the price, and then Thank you!

00:02:53.690 --> 00:02:57.430
Technically you don't need to update the
string variable in order to build out

00:02:57.430 --> 00:02:58.790
this functionality.

00:02:58.790 --> 00:03:01.700
However, I'd still like you to do so
if you can.

00:03:01.700 --> 00:03:05.261
In the next lesson you're going to need
to update string variables more often,

00:03:05.261 --> 00:03:08.659
specifically because there's going to
be more fields in this order form and

00:03:08.659 --> 00:03:10.930
we're going to need to
build up the order summary.

00:03:11.960 --> 00:03:14.960
When you're done,
check these boxes to continue.

00:03:14.960 --> 00:03:17.480
This is the last coding task
of the lesson, so good luck.

