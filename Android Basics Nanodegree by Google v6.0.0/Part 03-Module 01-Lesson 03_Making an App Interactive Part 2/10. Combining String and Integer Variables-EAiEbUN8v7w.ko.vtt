WEBVTT
Kind: captions
Language: ko

00:00:00.540 --> 00:00:03.700
지난 비디오에서
연속 연산자를 사용하여

00:00:03.700 --> 00:00:07.250
문자열 literal을 어떻게 취해서
정수 literal과 조합하는지 봤습니다.

00:00:08.440 --> 00:00:13.670
이 표현은 문자열과 일치해요.
I need 2 cups of coffee on Monday.

00:00:13.670 --> 00:00:17.740
텍스트열의 다른 부분을 함께
연속시키는 것의 강력한 점은

00:00:17.740 --> 00:00:21.080
변화가 필요할 때 다른 부분을
바꾸면 된다는 것입니다.

00:00:21.080 --> 00:00:24.450
예를 들어, 커피 잔의
수가 변화할 것입니다.

00:00:24.450 --> 00:00:28.270
literal 값 대신에 여기의
이것을 변수로 바꾸겠습니다.

00:00:28.270 --> 00:00:31.850
이제 두 개를 삭제했고
이를 수량 변수로 교체했죠.

00:00:31.850 --> 00:00:33.680
이 표현을 실행할 때

00:00:33.680 --> 00:00:36.600
항상 수량 변수의
최신 값을 가질 겁니다.

00:00:36.600 --> 00:00:39.130
이 변수가 2의 값을 가진다면

00:00:39.130 --> 00:00:42.780
이것을 이렇게 말할 겁니다.
I need 2 cups of coffee on Monday.

00:00:42.780 --> 00:00:46.260
문자열의 이 부분은 그대로 남고
변하지 않습니다.

00:00:46.260 --> 00:00:49.490
수량은 자유롭게 변하고
가장 최신 값을 가지는 반면에요.

00:00:49.490 --> 00:00:52.730
Android Studio에서
시도해보겠습니다.

00:00:52.730 --> 00:00:55.950
수량이 우리가 MainActivity에서
이미 선언한 변수가 되었으므로

00:00:55.950 --> 00:01:00.710
저는 이것을 submiOrder
메소드에서 바로 사용할 수 있어요.

00:01:00.710 --> 00:01:05.319
Total Item Count 같은
문자열을 만들 겁니다.

00:01:05.319 --> 00:01:08.910
수량을 더하고, coffees를 적죠.

00:01:08.910 --> 00:01:10.500
이건 가격과 그다지 상관은 없지만

00:01:10.500 --> 00:01:14.490
변수와 문자열을 연결짓는
방법을 보여드리고 싶어요.

00:01:14.490 --> 00:01:15.930
어떻게 보이는지 알기 위해
이걸 실행해봅시다.

00:01:17.500 --> 00:01:18.640
제가 수량을 바꾸고

00:01:18.640 --> 00:01:23.670
주문 버튼을 누르면 이걸 보여주죠.
Total Item Count, 3 coffees.

00:01:23.670 --> 00:01:27.510
3 전후에 공백을 넣는 걸
잊어 버렸네요.

00:01:27.510 --> 00:01:28.610
가서 그걸 넣읍시다.

00:01:28.610 --> 00:01:34.000
여기 공백을 추가해서
수량 바로 옆에 나타나게 할 거예요.

00:01:34.000 --> 00:01:36.740
여기 수량이 큰따옴표
안에 있지 않은 게 보이죠.

00:01:36.740 --> 00:01:40.770
이게 거기 있었다면 이건 그 수량을
그대로 화면에 보여줬을 겁니다.

00:01:40.770 --> 00:01:43.700
하지만 우리는 변수 값을 원하기에
따옴표를 넣지 않았어요.

00:01:43.700 --> 00:01:47.350
이제 이건 추가 공백이 있어요.
실행해서 옳은지 봅시다.

00:01:48.490 --> 00:01:51.900
수량을 3으로 바꾸고
주문 버튼을 눌렀어요.

00:01:51.900 --> 00:01:53.340
Total Item Count 3 coffees.

00:01:54.500 --> 00:01:56.930
이는 수량 값 전후에
바르게 공백을 가지네요.

00:01:58.410 --> 00:02:01.210
뒤로 물러나서 이 코드를 볼 때

00:02:01.210 --> 00:02:05.940
압도적일 수 있어요. 모든 곳에
따옴표, 더하기 부호,

00:02:05.940 --> 00:02:08.720
이상한 곳에 공백이 있으니까요.

00:02:08.720 --> 00:02:11.810
더하기 부호가 없어지고
따옴표 안의 모든 것이

00:02:11.810 --> 00:02:14.340
함께 꼭 붙어 있고
수량 변수는 실제 값으로

00:02:14.340 --> 00:02:16.160
대체된다고 상상하세요.

00:02:17.150 --> 00:02:20.450
이것은 읽기 쉽지 않으므로
여기서 실수하는 건 흔한 일입니다.

00:02:21.480 --> 00:02:24.050
열거나 닫는 따옴표를 잊을 수 있고,

00:02:24.050 --> 00:02:28.060
더하기 부호를 잘못된 곳에 놓거나
변수를 따옴표 안에 넣을 수도 있죠.

00:02:28.060 --> 00:02:31.800
코드를 조심스럽게 읽고
어떤 게 예상되는지 확실히 하세요.

00:02:31.800 --> 00:02:33.720
수학 식도 쓸 수 있습니다.

00:02:33.720 --> 00:02:37.220
수량 곱하기 5를 괄호에 넣으면

00:02:37.220 --> 00:02:43.110
이것은 하나의 정수 값을 바뀌고
Price에 연결될 것입니다.

00:02:43.110 --> 00:02:46.470
문자열 더하기 정수는
정수로 바뀌고 그것은

00:02:46.470 --> 00:02:50.100
변수 priceMessage에 저장되고
화면에 보여질 겁니다.

00:02:50.570 --> 00:02:54.610
이것을 제 기기에서 실행할 때
Price 15가 나오네요.

00:02:54.610 --> 00:02:58.140
달러 기호를 원하거나
보여질 통화 기호를 원한다면

00:02:58.140 --> 00:03:01.370
이렇게 문자열 literal의
일부로 만들 수 있어요.

00:03:01.370 --> 00:03:04.940
정수는 이 숫자 부분만 갖고
통화 기호는 갖지 않죠.

00:03:07.380 --> 00:03:08.718
이걸 제 기기에서 실행하고

00:03:08.718 --> 00:03:11.560
주문 버튼을 누르면 이제
통화 기호가 보이네요.

00:03:12.730 --> 00:03:15.490
제가 보여준 패턴을 따라
진행해 보고

00:03:15.490 --> 00:03:17.410
submitOrder
메소드를 수정하세요.

00:03:17.410 --> 00:03:20.710
화면에 다른 메시지를
표시하는 연습을 하는 겁니다.

00:03:20.710 --> 00:03:23.670
먼저, 주문 버튼을 누를 때
Amount Due $10을

00:03:23.670 --> 00:03:24.669
화면에 출력하세요.

00:03:25.410 --> 00:03:27.430
그게 작동하면, 이걸 바꿔서

00:03:27.430 --> 00:03:30.350
주문 버튼을 누를 때
이 문자열을 출력하게 하세요.

00:03:30.350 --> 00:03:32.740
각각 다른 문자열에서
같은 것을 반복하세요.

00:03:33.940 --> 00:03:37.150
한 번에 화면에서 이 문자열
중 하나만 보여야 해요.

00:03:37.610 --> 00:03:40.295
문자열을 변수들과 연결해서
수량과 가격 변수가

00:03:40.295 --> 00:03:44.345
수량 picker에 기반해
정확하도록 만드세요.

00:03:44.755 --> 00:03:48.285
이를 5잔의 커피 수량으로 바꾸면

00:03:48.285 --> 00:03:51.604
amount due는 $25가
되어야 하죠.

