WEBVTT
Kind: captions
Language: es

00:00:00.234 --> 00:00:02.601
Así como puedes cambiar el valor
de una variable tipo entero

00:00:02.701 --> 00:00:03.968
después de haberla creado,

00:00:04.133 --> 00:00:06.800
también puedes cambiar el valor
de una variable del tipo String.

00:00:07.267 --> 00:00:09.201
Puedes actualizarla
y asignarle un nuevo valor.

00:00:10.167 --> 00:00:11.267
En la aplicación Just Java,

00:00:11.501 --> 00:00:14.302
imagina que quisiéramos mostrar
la bebida especial del día.

00:00:14.501 --> 00:00:17.701
Podríamos usar una variable tipo String
para almacenar el nombre de la bebida.

00:00:18.067 --> 00:00:21.134
Declaramos una variable de tipo String
llamada <i>drinkOfTheDay</i> [bebida del día]

00:00:21.234 --> 00:00:23.768
y le asignamos el valor "Latte".

00:00:24.601 --> 00:00:26.935
Así es como se vería
según nuestra analogía de la caja.

00:00:27.167 --> 00:00:29.934
Hemos almacenado el valor "Latte"
dentro de esta variable.

00:00:30.434 --> 00:00:34.901
En otra línea de código, podemos poner
"<i>drinkOfTheDay</i> = nuevo valor de cadena".

00:00:35.701 --> 00:00:38.302
Ahora, la palabra "Espresso"
queda almacenada en esta cadena.

00:00:38.868 --> 00:00:41.670
No es necesario volver a especificar
que la variable es del tipo String,

00:00:41.734 --> 00:00:43.702
pues fue ya fue definida como tal
aquí arriba.

00:00:44.501 --> 00:00:47.501
En la próxima línea de código
<i>drinkOfTheDay</i> es igual a "Té Verde",

00:00:47.801 --> 00:00:50.235
así que "Té Verde"
queda almacenado en esta variable.

00:00:51.234 --> 00:00:55.434
Ahora imaginemos que queremos mostrar
el horario de la tienda en nuestra app.

00:00:55.968 --> 00:00:57.635
Podemos crear una variable
del tipo String

00:00:57.767 --> 00:01:00.501
para almacenar el texto
que aparecerá en la pantalla.

00:01:01.100 --> 00:01:04.068
El valor inicial es:
"Abrimos hoy de 8AM a 5PM".

00:01:04.968 --> 00:01:07.000
Otro día,
podríamos cambiar la variable tipo String

00:01:07.067 --> 00:01:11.668
para que diga: "Abrimos hoy de 8AM a 2PM",
porque queremos cerrar para ir a la playa.

00:01:12.434 --> 00:01:15.768
Y otro día podríamos cambiar el horario
para que diga: "Cerramos hoy",

00:01:15.868 --> 00:01:17.335
porque no trabajamos los domingos.

00:01:17.901 --> 00:01:20.869
Si nuestra app tuviera una lista
de todas las bebidas que el cliente pidió

00:01:20.968 --> 00:01:24.268
podríamos crear una variable tipo String
llamada <i>drinksOrdered</i> [bebidas pedidas].

00:01:24.934 --> 00:01:27.368
Podríamos empezar con una bebida.
"1 moca", por ejemplo.

00:01:27.934 --> 00:01:30.568
El texto "1 moca"
se almacenaría en la variable.

00:01:31.367 --> 00:01:33.034
Y luego,
si el cliente quiere otra bebida,

00:01:33.133 --> 00:01:37.567
podemos concatenar la nueva bebida
a la variable ya existente <i>drinksOrdered</i>.

00:01:38.334 --> 00:01:41.935
Esto se almacenará
dentro de la variable <i>drinksOrdered</i> así.

00:01:42.934 --> 00:01:44.168
Si quiero agregar otra bebida,

00:01:44.267 --> 00:01:48.001
simplemente la concateno
a la cadena <i>drinksOrdered</i> ya existente.

00:01:48.767 --> 00:01:51.401
Esta expresión evalúa una cadena larga
que dice:

00:01:51.601 --> 00:01:54.402
"1 moca, 1 cappuccino, 1 macchiato".

00:01:54.868 --> 00:01:57.868
Y todo esto se almacena en esta variable.
Así.

00:01:58.934 --> 00:02:01.501
Quizá te parezca raro
ver una coma y un espacio

00:02:01.601 --> 00:02:02.901
al principio de esta cadena,

00:02:03.300 --> 00:02:05.268
pero es simplemente
para que la lista se vea bien

00:02:05.367 --> 00:02:06.901
con comas entre cada ítem.

00:02:07.467 --> 00:02:10.435
La razón por la que no puse una coma
después de "cappuccino"

00:02:10.667 --> 00:02:14.535
es porque no sé
si vendrá otra bebida o no.

00:02:14.934 --> 00:02:18.635
De haber solo dos bebidas,
diría "1 mocha, 1 cappuccino"

00:02:18.734 --> 00:02:19.867
y estaría perfecto así.

00:02:20.667 --> 00:02:23.101
De haber otra bebida en camino,
un macchiato, por ejemplo,

00:02:23.133 --> 00:02:25.934
podría añadir una coma
porque sé que vendrá algo más.

00:02:27.067 --> 00:02:28.901
Intenta esto en Android Studio.

00:02:29.334 --> 00:02:30.701
Añade otra línea de código

00:02:30.801 --> 00:02:33.801
que actualice la variable tipo String
y le dé un nuevo valor

00:02:34.100 --> 00:02:38.233
o que actualice el valor actual
añadiéndole algunas cosas.

00:02:39.267 --> 00:02:42.901
Una vez hayas aprendido a actualizar
variables de cadena en Android Studio,

00:02:43.167 --> 00:02:46.968
implementa este comportamiento final
en la app de la segunda clase.

00:02:47.734 --> 00:02:49.780
Cuando cambies la cantidad
y pulses el botón <i>Order</i>,

00:02:49.834 --> 00:02:51.768
debería aparecer "Total",
seguido del precio,

00:02:51.868 --> 00:02:53.035
y luego "¡Gracias!".

00:02:53.701 --> 00:02:56.569
Técnicamente, no es necesario
actualizar la variable tipo String

00:02:56.667 --> 00:02:58.434
para crear esta funcionalidad.

00:02:58.734 --> 00:03:01.168
Sin embargo,
me gustaría que lo hicieras si puedes.

00:03:01.901 --> 00:03:05.235
En la próxima clase, deberás actualizar
variables del tipo String más a menudo,

00:03:05.734 --> 00:03:08.668
específicamente porque habrá más campos
en este formulario de pedido

00:03:08.868 --> 00:03:11.135
y tendremos que desarrollar
el resumen del pedido.

00:03:11.934 --> 00:03:14.301
Una vez termines,
marca estos recuadros para continuar.

00:03:14.901 --> 00:03:17.635
Esta es la última tarea de codificación
de esta clase. ¡Buena suerte!

