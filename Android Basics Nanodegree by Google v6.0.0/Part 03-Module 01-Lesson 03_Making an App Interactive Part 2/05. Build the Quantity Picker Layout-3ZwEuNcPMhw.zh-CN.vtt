WEBVTT
Kind: captions
Language: zh-CN

00:00:00.350 --> 00:00:03.090
首先我看到屏幕截图

00:00:03.090 --> 00:00:06.180
它们是一排排的 看起来像一个垂直 LinearLayout

00:00:06.180 --> 00:00:08.410
第二个子项不是单独的 View

00:00:08.410 --> 00:00:11.530
事实上这是一个包含三个 View 的水平LinearLayout

00:00:11.530 --> 00:00:14.710
这就是视图层次结构图的样子

00:00:14.710 --> 00:00:19.300
我们有垂直 LinearLayout作为根 View 在它的里面有五个子 View

00:00:20.390 --> 00:00:23.050
这个子 View 本身也有三个子 View

00:00:24.360 --> 00:00:29.700
如果我们有图的话 创建 XML 代码的框架是非常容易的

00:00:29.700 --> 00:00:32.009
根 View 是一个 LinearLayout

00:00:32.009 --> 00:00:36.160
它包含一个 TextView 这是它的第一个子项 接下来是一个 LinearLayout

00:00:36.160 --> 00:00:38.650
这个 LinearLayout 有一个按钮 一个TextView 还有一个按钮

00:00:38.650 --> 00:00:42.560
这是 LinearLayout 的结束标记

00:00:42.560 --> 00:00:45.600
然后有 TextView 另一个 TextView 和一个按钮

00:00:45.600 --> 00:00:49.230
这些都是 LinearLayout 的子项

00:00:49.230 --> 00:00:52.230
我们可以从 XML 进入 Android Studio

00:00:52.230 --> 00:00:56.460
修改我们已有的布局 使它更像这样

00:00:56.460 --> 00:01:00.310
在 Android Studio 里 我打开 activity_main.XML 布局文件

00:01:00.310 --> 00:01:03.039
我们将会在这个文件里做一些改动

00:01:03.039 --> 00:01:06.335
使它更符合我们预期的样子

00:01:06.335 --> 00:01:08.700
第一个子项是 TextView

00:01:08.700 --> 00:01:09.880
我们已经有了

00:01:09.880 --> 00:01:11.350
它应该以 quantity 开头

00:01:12.500 --> 00:01:15.190
下一步 我们应该有一个嵌套的 LinearLayout

00:01:15.190 --> 00:01:17.680
它包含三个 View

00:01:17.680 --> 00:01:20.120
我们现在还没有 所以我们将它添加进去

00:01:20.120 --> 00:01:23.215
我会点击 Enter 键 然后开始键入 LinearLayout

00:01:24.850 --> 00:01:27.390
它也会显示那些自动补全选项

00:01:27.390 --> 00:01:29.020
所以我可以直接点击确定

00:01:29.020 --> 00:01:32.100
然后它会自动填入我输入的属性

00:01:32.100 --> 00:01:33.610
因为宽度和高度是必要的

00:01:34.880 --> 00:01:38.020
我设置宽为 match_parent 然后它会相应地与根 View 的宽度一致

00:01:38.020 --> 00:01:42.720
也和屏幕的宽度一致

00:01:42.720 --> 00:01:45.890
对于布局高度 我不想设置成 match_parent

00:01:45.890 --> 00:01:49.970
否则 它会把其他 View 垂直地推出屏幕

00:01:49.970 --> 00:01:51.820
所以我想设置成 wrap_content

00:01:53.680 --> 00:01:56.960
这种方式的话 LinearLayout 就会和里面的两个按钮

00:01:56.960 --> 00:01:58.610
还有 TextView 一样高了

00:01:58.610 --> 00:02:02.690
现在 结束标记应该移动 LinearLayout

00:02:02.690 --> 00:02:04.060
到所有子项之后

00:02:04.060 --> 00:02:07.160
所以移动到这

00:02:07.160 --> 00:02:09.320
当在一个 ViewGroup 中有子项的话

00:02:09.320 --> 00:02:12.050
你应该将子 View 缩进四个空格

00:02:12.050 --> 00:02:15.630
我也会在这添加一行空格 因为我喜欢在 XML 元素之间

00:02:15.630 --> 00:02:17.090
添加一个空白行

00:02:18.260 --> 00:02:21.440
我们忘记的一件事是设置 LinearLayout 方向

00:02:23.210 --> 00:02:26.260
先前我们已经决定 LinearLayout 的方向应该是水平的

00:02:26.260 --> 00:02:29.390
使得按钮和 TextView 水平显示

00:02:29.390 --> 00:02:30.979
现在它符合我们的需求了

00:02:32.150 --> 00:02:37.340
接下来我们有两个 TextView 和一个按钮 它们已经在我们的布局中存在了

00:02:37.340 --> 00:02:39.010
所以我认为我们做完了

00:02:39.010 --> 00:02:41.860
如果你想检查设计面板 这就是它显示的样子

00:02:43.470 --> 00:02:47.100
我们有着五个直接子项的垂直 LinearLayout

00:02:47.100 --> 00:02:48.880
这个 LinearLayout 有三个子项

00:02:48.880 --> 00:02:52.120
在我们的设备上运行 看看发生什么

00:02:53.390 --> 00:02:55.740
它看起来很接近我们想要的但还不是特别好

00:02:56.920 --> 00:03:00.060
数量选择器是水平的 这是不错的

00:03:00.060 --> 00:03:03.180
但是我们想让 — 在左边 + 在右边

00:03:03.180 --> 00:03:08.355
像先前设计的布局截图显示的那样

00:03:08.355 --> 00:03:11.675
并且 这些按钮排列的太紧密 而且紧贴着 TextView 的边缘

00:03:11.675 --> 00:03:15.080
如果我没记错截图的话 在 TextView 的左右两边

00:03:15.080 --> 00:03:17.851
有 8 dip 的空间

00:03:18.962 --> 00:03:19.832
所以我们加上它吧

00:03:21.252 --> 00:03:22.972
回到 XML

00:03:22.972 --> 00:03:26.702
我将移动 + 按钮到 TextView 的后面

00:03:26.702 --> 00:03:32.432
然后移动 - 按钮到 TextView 的前面

00:03:32.432 --> 00:03:36.372
在一个水平行里 我们应该有 - 按钮 然后是2

00:03:36.372 --> 00:03:38.252
接着是 + 按钮

00:03:38.252 --> 00:03:41.320
我们也想在 TextView 周围加上内边距

00:03:41.320 --> 00:03:44.380
我们可以加内边距或外边距

00:03:44.380 --> 00:03:46.376
我会加内边距

00:03:46.376 --> 00:03:48.959
我们设置内边距的值为8 dips

00:03:48.959 --> 00:03:50.543
不错

00:03:50.543 --> 00:03:53.602
现在我有一种预感 这有很多多余的空格

00:03:53.602 --> 00:03:56.026
我们属性的顺序也许是不正确的

00:03:56.026 --> 00:03:59.310
从 Android Code Style Guidelines 中得到以上结论

00:03:59.310 --> 00:04:02.860
所以在你屏幕顶部的菜单栏 点击代码

00:04:02.860 --> 00:04:04.890
然后点击 Reformat Code（格式化代码）

00:04:04.890 --> 00:04:06.980
和 Rearrange Code（重排代码）

00:04:06.980 --> 00:04:09.120
那样就会重新安排所有的属性并且

00:04:09.120 --> 00:04:11.240
自动为你安排好所有的格式

00:04:12.430 --> 00:04:13.050
不错

00:04:13.050 --> 00:04:13.930
我们再次运行应用

00:04:15.550 --> 00:04:17.170
更好了

00:04:17.170 --> 00:04:20.430
现在在2周围有间隔 — 在2的左边

00:04:20.430 --> 00:04:22.790
+ 在2的右边

00:04:22.790 --> 00:04:24.668
看起来不错

00:04:24.668 --> 00:04:27.610
我们检查一下 它能正常工作

00:04:27.610 --> 00:04:30.620
我会选一个任意的数量 然后订购

00:04:30.620 --> 00:04:32.035
看起来是正确的

00:04:32.035 --> 00:04:37.890
让数量选择器在屏幕上显示是一个很长的过程

00:04:37.890 --> 00:04:40.110
好了 这款应用现在看起来真的很好

00:04:40.110 --> 00:04:43.390
但是目前为止 我只给你展示了在屏幕上显示数字

00:04:43.390 --> 00:04:45.370
如果我想让你在屏幕上显示文本呢？

00:04:46.470 --> 00:04:47.590
继续看 寻找答案

