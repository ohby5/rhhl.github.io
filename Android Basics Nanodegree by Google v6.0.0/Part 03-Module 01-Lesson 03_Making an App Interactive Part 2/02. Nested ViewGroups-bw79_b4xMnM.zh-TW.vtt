WEBVTT
Kind: captions
Language: zh-TW

00:00:00.330 --> 00:00:03.230
当讨论在上一次测试中怎样定位视图时，

00:00:03.230 --> 00:00:05.160
也许你指的是使用相对布局。

00:00:05.160 --> 00:00:06.850
我知道我们学过了。

00:00:06.850 --> 00:00:09.670
但是我想向你介绍另外一种可以用来为我们的应用程序构建图层的方法，

00:00:09.670 --> 00:00:13.890
这种方法更加完美，使用的是嵌套式的视图组。

00:00:13.890 --> 00:00:18.120
嵌套式视图组的意思是将视图组放到其他视图组中。

00:00:18.120 --> 00:00:22.150
使用这种方法，你可创建更有趣、更复杂的图层，比如这些。

00:00:22.150 --> 00:00:24.050
让我们来看一下你将怎样创建一个像这些一样的图层。

00:00:25.240 --> 00:00:28.620
比如说，你有一个垂直线性图层，带有三个视图，

00:00:28.620 --> 00:00:30.840
一个图像视图以及两个文本视图。

00:00:30.840 --> 00:00:34.000
如果你想在图片上覆盖一些文本呢？

00:00:34.000 --> 00:00:36.470
哦，使用线性图层的话你是不能重叠视图的。

00:00:36.470 --> 00:00:38.390
但是使用相对布局，就可以，所以

00:00:38.390 --> 00:00:42.470
我们可以用一个相对布局来代替这个子视图。

00:00:42.470 --> 00:00:45.750
然后，就可以将图像视图放进这个相对布局中。

00:00:45.750 --> 00:00:49.950
现在图像视图的每条边都和母版图对齐了。

00:00:49.950 --> 00:00:53.410
所以，你看到的就是相对布局被包含在

00:00:53.410 --> 00:00:54.899
一个更大的线性图层中的例子。

00:00:55.970 --> 00:00:59.850
你可以得到很多图像视图组包含在其他视图组内的组合。

00:00:59.850 --> 00:01:03.900
比如，你可以用相对布局作为一个应用程序的根视图。

00:01:03.900 --> 00:01:07.270
这其中可以包括很多视图，例如一个图像视图以及两个文本视图。

00:01:08.350 --> 00:01:12.910
你也可以增加一个线性图层作为整体相对布局的子图层。

00:01:14.100 --> 00:01:18.490
这个线性图层本身可以包含其他子视图，比如两个图像视图。

00:01:19.860 --> 00:01:23.340
你可以嵌套任意你想要的试图组在其他视图组中。

00:01:23.340 --> 00:01:26.540
然而，你必须非常小心，因为嵌套得越多，

00:01:31.040 --> 00:01:34.990
特别是相对布局，虽然它非常灵活，但是

00:01:34.990 --> 00:01:39.490
计算每一个视图与其他的相对位置也非常复杂。

00:01:39.490 --> 00:01:42.380
所以推荐不要嵌套太多的视图

00:01:42.380 --> 00:01:43.380
在同一个相对布局中。

00:01:45.040 --> 00:01:48.730
我下载了几个Google软件为你们展示

00:01:48.730 --> 00:01:51.840
什么地方使用嵌套视图组会有用。

00:01:51.840 --> 00:01:55.060
Google Now应用能根据你目前的情况向你展示

00:01:55.060 --> 00:01:59.250
很多相关信息的卡片，比如当前时间或者当前的位置。

00:01:59.250 --> 00:02:01.310
如果你喜欢某个球队，比如Red Sox，

00:02:01.310 --> 00:02:04.040
很好的选择，那么它就会向你展示最近比赛的分数。

00:02:05.040 --> 00:02:08.570
你可以想象使用垂直线性图层来构建这些卡片的图层，

00:02:08.570 --> 00:02:12.160
因为显示的信息是成排的。

00:02:12.160 --> 00:02:16.130
然而，在这个垂直线性图层中第一项就不仅仅是文本视图，

00:02:16.130 --> 00:02:18.380
它又多个视图组成。

00:02:19.410 --> 00:02:22.562
事实上，你应该以水平线性图层来构建第一项，

00:02:22.562 --> 00:02:25.325
它由一个图像视图和两个文本视图组成。

00:02:25.325 --> 00:02:28.085
垂直线性图层的第二项同样如此。

00:02:28.085 --> 00:02:31.205
你应该用水平线性图层来构建，包含一个图像视图

00:02:31.205 --> 00:02:32.865
和两个文本视图。

00:02:32.865 --> 00:02:35.785
GoogleNow应用中的另一张选项卡显示的是相关的

00:02:35.785 --> 00:02:37.315
你可能会感兴趣的股票。

00:02:37.315 --> 00:02:39.710
我真希望Google的股票价格还是那样。

00:02:39.710 --> 00:02:43.390
扯远了，你还是可以以垂直线性图层的方式来创建这个图层，

00:02:43.390 --> 00:02:45.740
因为可以想到这里是成排的。

00:02:45.740 --> 00:02:48.410
除了这些，中间项也不是单独的文本视图，

00:02:48.410 --> 00:02:50.640
而是由多个文本视图组成的。

00:02:50.640 --> 00:02:53.280
这一栏的项目与Google的股票价格相关，

00:02:53.280 --> 00:02:57.340
可以用水平线性图层，并且用四个文本视图来填充。

00:02:57.340 --> 00:02:59.670
对于其他股票价格同样如此。

00:02:59.670 --> 00:03:02.690
这些水平线性图层是整体

00:03:02.690 --> 00:03:03.620
垂直图层的子图层。

00:03:03.620 --> 00:03:09.050
在Google Play音乐应用程序中，你当然可以听音乐。

00:03:09.050 --> 00:03:11.260
尽管它貌似创建起来非常复杂，

00:03:11.260 --> 00:03:14.850
实际上你可以将其拆分成小一点能够承受的试图组。

00:03:14.850 --> 00:03:17.530
这些图案感觉像是一个垂直线性图层，

00:03:17.530 --> 00:03:19.260
包含三个不同的子图层。

00:03:19.260 --> 00:03:22.620
第一个子图层可以用相对布局构建，

00:03:22.620 --> 00:03:24.200
因为每一个视图都是相互关联的。

00:03:25.390 --> 00:03:28.360
第二个子图层也可以用相对布局，

00:03:28.360 --> 00:03:30.990
因为每一个图层是相互堆叠的。

00:03:30.990 --> 00:03:34.800
而第三个子图层看起来像是一个水平线性图层，

00:03:34.800 --> 00:03:37.080
由五个不同的按钮组成。

00:03:37.080 --> 00:03:40.480
同样的，我们可以用嵌套式视图组的形式来构建这一屏。

00:03:40.480 --> 00:03:41.970
这只是扩建图层的一种方法。

00:03:41.970 --> 00:03:44.318
还有很多其他的方法可以使用。

00:03:45.351 --> 00:03:48.667
之前我们在Google Maps应用程序中看到有很多

00:03:48.667 --> 00:03:51.500
关于位置的详细信息页，比如餐馆位置。

00:03:51.500 --> 00:03:55.150
创建这一屏不能仅用一个线性图层或者

00:03:55.150 --> 00:03:56.420
一个相对布局。

00:03:56.420 --> 00:03:58.740
你需要嵌套一圈视图组。

00:03:58.740 --> 00:03:59.500
在整体尺度下，

00:03:59.500 --> 00:04:02.860
我们可以看到信息基本上被编排成了队列。

00:04:02.860 --> 00:04:05.400
所以，我们可以将一个垂直线性图层作为母视图。

00:04:05.400 --> 00:04:07.900
一个子图层作为这里的整体布局。

00:04:07.900 --> 00:04:10.330
另一个子图层作为这排按钮。

00:04:10.330 --> 00:04:12.725
另外一个子图层作为说明等等。

00:04:13.985 --> 00:04:16.894
但是在每一个子图层中并非只有一个视图。

00:04:16.894 --> 00:04:18.935
而是多个视图。

00:04:18.935 --> 00:04:23.762
在整体线性图层内的这个子图层由三个单独的视图组成。

00:04:23.762 --> 00:04:26.472
所以，你可以用一个水平线性图层，

00:04:26.472 --> 00:04:30.042
里面每一个视图的比重都相同，这样它们能均匀地展开。

00:04:31.042 --> 00:04:34.662
整体垂直线性图层内的子图层也可以由

00:04:34.662 --> 00:04:37.636
一个带有图像视图和文本视图的水平线性图层组成。

00:04:37.636 --> 00:04:43.036
如果你继续滚动这一页，你会看到更多的关于餐馆的信息。

00:04:43.036 --> 00:04:47.276
同样的，我可以将这里的详细想象成是按队列编排的。

00:04:47.276 --> 00:04:49.873
将垂直线性图层用于这些信息仍旧可行，

00:04:49.873 --> 00:04:54.503
而多排信息比单独的一个文本视图要复杂。

00:04:54.503 --> 00:04:58.313
这一排显示的是一系列你可以预定的项目，

00:04:58.313 --> 00:05:01.143
而且它由三个不同的按钮组成，你可以

00:05:01.143 --> 00:05:03.063
用一个水平图层来进行安排。

00:05:03.063 --> 00:05:07.563
这一排图片也可以用一个水平线性图层来构建。

00:05:07.563 --> 00:05:10.383
实际上，在这个水平线性图层内，

00:05:10.383 --> 00:05:13.360
第一个子图层不仅仅是一个单独的图像视图。

00:05:13.360 --> 00:05:15.230
它是带有一个文本视图的图像视图。

00:05:15.230 --> 00:05:18.680
所以你可以用一个相对布局来构建第一个子图层。

00:05:18.680 --> 00:05:22.520
所以，你可以看到在视图组内怎么会有视图组，

00:05:22.520 --> 00:05:24.100
在视图组内。

00:05:24.100 --> 00:05:26.790
实际上有更多种的视图组，不知相对布局

00:05:26.790 --> 00:05:30.905
和线性图层，还有框架布局以及网格布局。

00:05:30.905 --> 00:05:33.705
在这堂课中我们没有时间一一进行讲解，但是我

00:05:33.705 --> 00:05:37.215
推荐你们回去之后自学，因为有时候

00:05:37.215 --> 00:05:39.796
使用那些会比相对布局以及线性布局更加好。

