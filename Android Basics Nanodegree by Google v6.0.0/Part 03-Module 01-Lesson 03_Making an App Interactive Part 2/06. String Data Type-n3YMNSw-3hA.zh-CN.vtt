WEBVTT
Kind: captions
Language: zh-CN

00:00:00.410 --> 00:00:02.510
到目前为止 我们已经建立了一个数量选择器

00:00:02.510 --> 00:00:03.100
没错

00:00:03.100 --> 00:00:06.130
下一步就是设计价格功能了

00:00:06.130 --> 00:00:06.750
对

00:00:06.750 --> 00:00:07.900
就是价格功能

00:00:07.900 --> 00:00:12.540
现在价格是一个整数 但我们要拓宽这个范围

00:00:12.540 --> 00:00:13.940
用字符串

00:00:13.940 --> 00:00:16.170
你的意思是 这样的绳子吗？

00:00:16.170 --> 00:00:18.040
不 我指的是这种字符串

00:00:18.040 --> 00:00:18.540
呵呵

00:00:20.010 --> 00:00:22.800
字符串就是指一个字符序列

00:00:22.800 --> 00:00:25.290
等一下 这该如何应用到价格功能里？

00:00:25.290 --> 00:00:29.345
我们要修改屏幕显示 使得它显示 Total

00:00:29.345 --> 00:00:30.809
然后是 $15

00:00:30.809 --> 00:00:34.870
现在 它不仅仅是个数字了 它还含有文本

00:00:34.870 --> 00:00:36.050
数字和文本

00:00:36.050 --> 00:00:37.790
是不是很棒？

00:00:37.790 --> 00:00:42.890
这是从一个晚会上拿回来的 那个晚会你可能去了 可能没去

00:00:42.890 --> 00:00:45.530
在接下来的几个视频中 我们将讨论一下如何

00:00:45.530 --> 00:00:47.370
把字符串应用到我们之前做的 Just Java 应用中

00:00:47.370 --> 00:00:51.220
具体来说 我们将学习如何在应用中创建和更新字符串变量

00:00:51.220 --> 00:00:55.520
我们将修改应用 使得在 PRICE 下面显示 Total: $15

00:00:55.520 --> 00:00:58.720
或者根据根据订购的数量来得到价格

00:00:58.720 --> 00:00:59.680
我们也要显示这个文本信息

00:00:59.680 --> 00:01:02.570
Thank you!  因为有客人来我们应该很高兴

00:01:03.710 --> 00:01:06.350
你可能想知道为什么我们不把所有的文本

00:01:06.350 --> 00:01:07.430
都放在 XML 布局文件中

00:01:08.450 --> 00:01:11.860
我们可以这样做 但是有一个问题是数量也会改变

00:01:11.860 --> 00:01:15.990
当你点击 ORDER 按钮的时候 我想要价格更新

00:01:15.990 --> 00:01:20.480
所以这个文本需要准确反映基于数量的价格

00:01:20.480 --> 00:01:24.070
通过应用字符串变量 我们可以改变文本的值

00:01:24.070 --> 00:01:27.839
当应用运行的时候 而不用写到整个XML布局文件中

00:01:29.440 --> 00:01:32.312
这有一个真正的应用的例子 你可能认出来了

00:01:32.312 --> 00:01:35.636
当有人给你打电话的时候 你可以在

00:01:35.636 --> 00:01:37.090
屏幕上方看到这个人的名字

00:01:37.090 --> 00:01:39.550
我们可以把这个名字直接写进 XML 布局文件中

00:01:39.550 --> 00:01:43.240
因为 它取决于谁给你打电话 除非你所有的家人

00:01:43.240 --> 00:01:44.400
和朋友都叫 Britta Holt 

00:01:45.440 --> 00:01:48.670
最好的做法就是把名字储存在字符串变量中

00:01:48.670 --> 00:01:52.240
这样名字就可以根据谁打给你电话来更新了

00:01:52.240 --> 00:01:55.670
然后 当我们展示这个画面时 它就可以只显示

00:01:55.670 --> 00:01:56.890
存储在变量中的最新的名字

00:01:58.320 --> 00:02:01.169
在 News and Weather 应用中 我们看到了一系列的头条新闻

00:02:02.170 --> 00:02:05.600
当我们创建 XML 布局文件的时候 我们不能将

00:02:05.600 --> 00:02:08.820
这些特定的新闻写死到 XML 布局文件中

00:02:08.820 --> 00:02:10.970
尽管我非常喜欢看冬奥会的新闻

00:02:10.970 --> 00:02:13.870
我也想看一些其他的文章

00:02:13.870 --> 00:02:16.260
我们可以存储每条新闻的一些信息

00:02:16.260 --> 00:02:21.160
例如把文章标题设置为字符串变量 因为它是会变的 

00:02:21.160 --> 00:02:23.990
下一步 我将给你提供一些代码

00:02:23.990 --> 00:02:26.590
我需要你修改一下你的应用

00:02:26.590 --> 00:02:28.990
然后 运行观察会发生什么

00:02:28.990 --> 00:02:32.620
我会问你一些问题 看看你是否能想象到

00:02:32.620 --> 00:02:34.290
将会发生什么

00:02:34.290 --> 00:02:36.840
第一个改变是修改 submitOrder 方法 

00:02:36.840 --> 00:02:40.020
你可以删除原来大括号之间的代码

00:02:40.020 --> 00:02:44.190
用这两行代码来代替

00:02:44.190 --> 00:02:47.090
添加这两行代码会报错 所以我需要你

00:02:47.090 --> 00:02:51.090
添加 displayMessage 方法 这个方法我们已经在讲师注释中提供了

00:02:53.000 --> 00:02:56.360
在讲师注释中 你会发现这段代码

00:02:56.360 --> 00:02:57.900
继续 全选

00:02:57.900 --> 00:03:00.360
从注释一直到最后一个结束大括号

00:03:01.860 --> 00:03:03.560
你可以把这个方法看做一个黑盒子

00:03:03.560 --> 00:03:06.750
你不用关心方法内部是怎么运行的 你只需要

00:03:06.750 --> 00:03:10.210
知道把它加进 MainActivity 文件后 你就可以使用它了

00:03:11.662 --> 00:03:12.830
回到 Android Studio

00:03:12.830 --> 00:03:17.100
在 MainActivity.java 文件中 我把这个新的方法粘贴在这

00:03:17.100 --> 00:03:19.110
我可以把它粘贴在 MainActivity 文件的任何位置 但是

00:03:19.110 --> 00:03:22.870
我把它粘贴在 displayPrice 方法的后面

00:03:22.870 --> 00:03:24.120
我把它放在 

00:03:24.120 --> 00:03:26.247
displayPrice 方法结束大括号的后面

00:03:27.810 --> 00:03:32.362
注意 它还是在 MainActivity 结束大括号里面的

00:03:32.362 --> 00:03:34.790
MainActivity 在这有一个起始大括号

00:03:34.790 --> 00:03:38.260
起始大括号里面的所有东西都是在 MainActivity 里面的

00:03:38.260 --> 00:03:40.898
这里有一个 MainActivity 的结束大括号

00:03:42.650 --> 00:03:45.040
一旦你把 displayMessage 方法加进去

00:03:45.040 --> 00:03:46.890
我们就可以修改 ubmitOrder 方法了

00:03:46.890 --> 00:03:49.420
我把 submitOrder 方法中原来的代码删除掉

00:03:49.420 --> 00:03:51.030
原来的代码删掉

00:03:51.030 --> 00:03:54.518
然后根据测验图片 我将在这添加新的代码

00:03:57.226 --> 00:04:01.020
我故意不给你显示我刚刚所做的细节

00:04:01.020 --> 00:04:03.910
我希望你在自己的应用上运行它

00:04:03.910 --> 00:04:04.730
看看发生了什么

00:04:06.040 --> 00:04:08.990
之后 我希望你回答这些问题

00:04:08.990 --> 00:04:11.200
当你点击 ORDER 按钮的时候 发生了什么？

00:04:12.260 --> 00:04:15.250
如果你仔细看一下 submitOrder 的代码

00:04:15.250 --> 00:04:17.140
实际上 我们创建了一个字符串变量

00:04:18.160 --> 00:04:21.430
尽管我们还没有讲到字符串变量的代码 我希望你

00:04:21.430 --> 00:04:25.090
能做出猜测 你觉得变量名是什么？

00:04:25.090 --> 00:04:26.990
还有 变量值是多少？

00:04:28.538 --> 00:04:30.000
当你做完之后请继续下一课

