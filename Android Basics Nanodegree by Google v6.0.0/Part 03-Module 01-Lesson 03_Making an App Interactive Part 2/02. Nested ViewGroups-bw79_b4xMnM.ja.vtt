WEBVTT
Kind: captions
Language: ja

00:00:00.330 --> 00:00:03.230
先のクイズで
どのようにビューを配置するかを話した際

00:00:03.230 --> 00:00:05.160
相対レイアウトの使用について触れました

00:00:05.160 --> 00:00:06.850
覚えていますね

00:00:06.850 --> 00:00:09.670
ここでは私達のアプリのために
より有効なレイアウトを作ることができる方法

00:00:09.670 --> 00:00:13.890
ネストしたビューグループの使用を説明します

00:00:13.890 --> 00:00:18.120
ビューグループのネストとはビューグループを
他のビューグループに入れることを意味します

00:00:18.120 --> 00:00:22.150
このように複雑な面白いレイアウトが作れます

00:00:22.150 --> 00:00:24.050
ではどのようにこれらのレイアウトを作成するか
見てみましょう

00:00:25.240 --> 00:00:28.620
例えば ３つのビューが入った
縦レイアウトがあるとします

00:00:28.620 --> 00:00:30.840
イメージビューと２つのテキストビューです

00:00:30.840 --> 00:00:34.000
このイメージにテキストを重ねたいとしたら？

00:00:34.000 --> 00:00:36.470
リニアレイアウトではそれができません

00:00:36.470 --> 00:00:38.390
でも相対レイアウトでは可能です

00:00:38.390 --> 00:00:42.470
この子ビューを相対レイアウトで置き換えます

00:00:42.470 --> 00:00:45.750
そして子のイメージビューを
相対レイアウトの中に置きます

00:00:45.750 --> 00:00:49.950
このイメージビューは親の相対レイアウトの
それぞれの端に沿っています

00:00:49.950 --> 00:00:53.410
これが大きいリニアレイアウトの中に

00:00:53.410 --> 00:00:55.389
相対レイアウトが置かれた例です

00:00:55.970 --> 00:00:59.850
その他のビューグループの中に
多くの組み合わせのビューグループが置けます

00:00:59.850 --> 00:01:03.900
例えばアプリの元となるビューを
相対レイアウトとし

00:01:03.900 --> 00:01:07.270
イメージビューと２つのテキストビューを
含めることができます

00:01:08.350 --> 00:01:12.910
そしてリニアレイアウトをこの相対レイアウトの
子として加えることができます

00:01:14.100 --> 00:01:18.490
このリニアレイアウトはそれ自身
２つのイメージビューを子として含んでいます

00:01:19.860 --> 00:01:23.340
いくらでも他のビューグループの中に
必要なビューをネストすることができます

00:01:23.340 --> 00:01:25.910
しかし 多く入れるほど

00:01:25.910 --> 00:01:29.810
画面にアプリを表示するのに
負担がかかるので注意しましょう

00:01:31.040 --> 00:01:34.990
相対レイアウトはとりわけ
柔軟なレイアウトですが

00:01:34.990 --> 00:01:39.490
これらのビューを
相対的に配置する計算が複雑になります

00:01:39.490 --> 00:01:42.380
だから 相対レイアウトの中に

00:01:42.380 --> 00:01:44.570
あまり多くのビューをネストしない様
勧めます

00:01:45.040 --> 00:01:47.210
実例をいくつかお見せしましょう

00:01:47.210 --> 00:01:51.840
ネストされたビューグループが
有効に使用されている Google のアプリです

00:01:51.840 --> 00:01:55.060
Google Now アプリは
場所や時間などの現状に基づいて

00:01:55.060 --> 00:01:59.250
関連した情報のカードを表示します

00:01:59.250 --> 00:02:01.310
もし あなたがレッドソックスといった
チームのファンなら

00:02:01.310 --> 00:02:04.040
最新の試合のスコアを表示します

00:02:05.040 --> 00:02:08.570
このカードのレイアウトを作成するのに
縦レイアウトを使用すると

00:02:08.570 --> 00:02:12.160
それらの情報が行で表示されます

00:02:12.160 --> 00:02:16.130
しかし この縦レイアウトの最初のアイテムは

00:02:16.130 --> 00:02:18.810
単なるテキストビューではなく
複数のビューから成ります

00:02:19.410 --> 00:02:22.562
実際 この最初のアイテムは
１つのイメージビューと２つのテキストビューの

00:02:22.562 --> 00:02:25.325
横レイアウトで作成されたものです

00:02:25.325 --> 00:02:28.085
この縦レイアウトの２つ目も同じです

00:02:28.085 --> 00:02:31.205
これは1つのイメージビューと
２つのテキストビューを含む横レイアウトとして

00:02:31.205 --> 00:02:32.865
作成されるでしょう

00:02:32.865 --> 00:02:35.785
Google Now アプリの他のカードは

00:02:35.785 --> 00:02:37.315
あなたが気になる株式情報を表示します

00:02:37.315 --> 00:02:39.710
Google の株は
今もこの価格であってほしいです

00:02:39.710 --> 00:02:43.390
このレイアウトを
縦レイアウトで作ることもできます

00:02:43.390 --> 00:02:45.740
これを行と見なせるからです

00:02:45.740 --> 00:02:48.410
ただし これらの真ん中のものは
単なる１つのテキストビューではありません

00:02:48.410 --> 00:02:50.640
これらは複数のテキストビューから成ります

00:02:50.640 --> 00:02:53.280
このGoogle の株価に関するアイテムは

00:02:53.280 --> 00:02:57.340
横レイアウトを使用し
４つのテキストビューを入れることができます

00:02:57.340 --> 00:02:59.670
他の株価も同じです

00:02:59.670 --> 00:03:01.640
これらの横レイアウトは

00:03:01.640 --> 00:03:03.620
この広い縦レイアウトの子です

00:03:03.620 --> 00:03:09.050
Google Play music アプリでは
もちろん 音楽を聴くことができます

00:03:09.050 --> 00:03:11.260
これを構築するのは
複雑なレイアウトに見えますが

00:03:11.260 --> 00:03:14.850
馴染みのある小さなビューグループに
分けることができます

00:03:14.850 --> 00:03:17.530
このパターンは３つの子を含む―

00:03:17.530 --> 00:03:19.260
縦レイアウトです

00:03:19.260 --> 00:03:22.620
この最初の子は
相対レイアウトを使って作られていて

00:03:22.620 --> 00:03:24.860
ビューが相対的に置かれています

00:03:25.390 --> 00:03:28.360
２つ目の子も相対レイアウトで

00:03:28.360 --> 00:03:30.990
それぞれが重なっています

00:03:30.990 --> 00:03:34.160
この３つ目の子は横リニアレイアウトで

00:03:34.160 --> 00:03:37.080
５つの異なるボタンから成ります

00:03:37.080 --> 00:03:40.480
この画面を作成するにはネストした
ビューグループを使用することができます

00:03:40.480 --> 00:03:41.970
これはレイアウトを作成する１つの方法です

00:03:41.970 --> 00:03:44.318
いろいろな方法で作れます

00:03:45.351 --> 00:03:48.667
Google Maps アプリでは
前に 個々のレストラン等の位置を含む

00:03:48.667 --> 00:03:51.500
詳細ページが存在するのを見ました

00:03:51.500 --> 00:03:53.930
この画面は
単一のリニアレイアウトや

00:03:53.930 --> 00:03:56.420
単一の相対レイアウトでは作れません

00:03:56.420 --> 00:03:58.740
多くのネストされたビューグループが必要です

00:03:58.740 --> 00:03:59.930
広い目でみると

00:03:59.930 --> 00:04:02.860
これらの情報が行でまとめられていると
見なすことができます

00:04:02.860 --> 00:04:05.400
だから親ビューには
縦レイアウトを使用できます

00:04:05.400 --> 00:04:07.900
１つの子はこの全体の
レイアウトとすることができます

00:04:07.900 --> 00:04:10.330
他の子はこのボタンの列です

00:04:10.330 --> 00:04:12.725
他の子は この説明としたりです

00:04:13.985 --> 00:04:16.894
しかし 各子ビューは
単一のビューではありません

00:04:16.894 --> 00:04:18.935
複数のビューが含まれます

00:04:18.935 --> 00:04:23.762
この広いリニアレイアウトの中のこの子は
３つの個々のビューから成ります

00:04:23.762 --> 00:04:25.852
横レイアウトで

00:04:25.852 --> 00:04:30.042
各ビューの weight が等しく
等分に置かれています

00:04:31.042 --> 00:04:34.662
広い縦リニアレイアウトの中のこの子は

00:04:34.662 --> 00:04:38.206
イメージビューとテキストビューの
横リニアレイアウトからなります

00:04:38.206 --> 00:04:43.036
このページをスクロールすると
このレストランの詳細が見られます

00:04:43.036 --> 00:04:47.276
これを個々の情報の行とみなせます

00:04:47.276 --> 00:04:49.873
これらすべての情報に
縦リニアレイアウトを使うことは可能で

00:04:49.873 --> 00:04:54.503
行によっては単なるテキストビューより
複雑なものもあります

00:04:54.503 --> 00:04:58.313
この行は予約可能な
時間帯が示されます

00:04:58.313 --> 00:05:01.143
これは横リニアレイアウトで置かれた

00:05:01.143 --> 00:05:03.063
３つの異なったボタンからなります

00:05:03.063 --> 00:05:07.563
この写真の行は
横リニアレイアウトで作られます

00:05:07.563 --> 00:05:10.383
実際この横リニアレイアウトでは

00:05:10.383 --> 00:05:13.360
この最初の子は
単なるイメージビューではありません

00:05:13.360 --> 00:05:15.230
これはテキストビューとイメージビューです

00:05:15.230 --> 00:05:18.680
この最初の子は相対レイアウトを使用し
作ることができます

00:05:18.680 --> 00:05:22.520
あるビューグループの中の
ビューグループの中のビューグループが

00:05:22.520 --> 00:05:24.100
どのように存在できるかがわかります

00:05:24.100 --> 00:05:26.790
実際 相対レイアウトや
リニアレイアウトの他にも

00:05:26.790 --> 00:05:30.905
フレームレイアウトやグリッドレイアウトなど
多くのビューグループがあります

00:05:30.905 --> 00:05:33.705
このコースでは説明しませんが

00:05:33.705 --> 00:05:37.215
自分でこれらについて学習されることを
お勧めします

00:05:37.215 --> 00:05:39.796
単に相対レイアウトやリニアレイアウトを
使うよりも良い場合があります

