WEBVTT
Kind: captions
Language: ko

00:00:00.590 --> 00:00:04.400
학생들이 지금까지 이 수업에서 
변수 및 데이터 유형을 배웠는데요.

00:00:04.400 --> 00:00:07.120
특히 정수형 및 문자형에 관해서요.

00:00:07.120 --> 00:00:13.030
이에 관해 배운 내용을 앱에서
살펴볼 수 있는 예가 있을까요?

00:00:13.030 --> 00:00:13.970
&gt;&gt; 예, 많죠.

00:00:13.970 --> 00:00:15.840
문자열과 정수는 어디에나 있어요.

00:00:17.460 --> 00:00:22.850
지메일의 경우, 메일을 처음 열면 
안 읽은 메일이 몇 개인지

00:00:22.850 --> 00:00:27.990
알려주죠. 
매우 매우 중요한 숫자예요.

00:00:27.990 --> 00:00:30.710
그리고 가끔 미묘하게 버그가
생길 때가 있는데,

00:00:31.930 --> 00:00:36.820
이 땐 그 숫자가 실제 읽지 않은
메일과 정확하게 일치하지 않아요.

00:00:36.820 --> 00:00:37.463
그러니까.
[말섞임]

00:00:37.463 --> 00:00:38.271
&gt;&gt; 전 아직 겪어본 적이 없는데,

00:00:38.271 --> 00:00:38.788
그런 적 있나요?

00:00:38.788 --> 00:00:39.550
&gt;&gt; 다행이네요.
&gt;&gt; [웃음]

00:00:39.550 --> 00:00:40.630
&gt;&gt; 아직 안 겪어 보셨다니.

00:00:40.630 --> 00:00:45.328
하지만 이런 건 아시다시피,
흥미로운 문제예요.

00:00:45.328 --> 00:00:49.620
실제로 지메일에서는 먼저 그 
숫자로 싱크로하거든요.

00:00:49.620 --> 00:00:51.010
싱크로라 하면,

00:00:51.010 --> 00:00:54.770
클라우드에서 데이터를 받아서
안드로이드 기기로 전달하는데

00:00:54.770 --> 00:00:55.910
이 때 데이터는, 
이 경우엔 그 수치를 말하는데,

00:00:55.910 --> 00:00:59.790
실제 메일에서 
따로 싱크를 맞춰요.

00:00:59.790 --> 00:01:02.820
따라서 일치하지 않을 
가능성이 있죠.

00:01:02.820 --> 00:01:05.790
참 까다로운 이슈중 하나예요.

00:01:05.790 --> 00:01:10.210
&gt;&gt; 좋아요, 이제 읽지 않은 
이메일 수가 변수라는 걸 알았고,

00:01:10.210 --> 00:01:11.460
그럼 데이터 유형은...

00:01:11.460 --> 00:01:12.344
&gt;&gt; 정수형이겠죠.

00:01:12.344 --> 00:01:13.200
&gt;&gt; 그렇죠.

00:01:14.370 --> 00:01:17.280
그리고 기기에 따라
따로 계산된다는 거네요.

00:01:17.280 --> 00:01:21.560
그 값은 사용 사례 시나리오에 따라서
변하는 거고요.

00:01:21.560 --> 00:01:22.650
경험으로 활용해요 저는.

00:01:22.650 --> 00:01:24.260
&gt;&gt; 맞아요, 그렇죠.

00:01:24.260 --> 00:01:26.110
정수를 사용하는 다른 경우,

00:01:26.110 --> 00:01:29.450
그러니까 정수형 변수의 예는,
기본적으로 변하는 거니까요.

00:01:29.450 --> 00:01:31.510
또다른 예는 ID예요.

00:01:31.510 --> 00:01:35.080
ID의 경우 정수가 늘 똑같이
유지되는 게 매우 중요합니다.

00:01:35.080 --> 00:01:36.351
&gt;&gt; 특히 제 메일 ID 말이죠.

00:01:36.351 --> 00:01:37.260
알겠어요.
&gt;&gt; 바로 그거예요.

00:01:37.260 --> 00:01:40.200
서버 상의 이메일 ID는
이메일이 클라이언트 상의 ID와

00:01:40.200 --> 00:01:43.680
완벽히 일치해야 한다는 뜻이죠.

00:01:43.680 --> 00:01:46.150
그래야만 이 이메일을 
어떤 기기에서든 상관없이

00:01:46.150 --> 00:01:48.260
고유하게 인식할 수 있으니까요.

00:01:48.260 --> 00:01:52.320
&gt;&gt; 지금 대화 내용은 메일 주소가 
아니라 이메일 자체를 말하는 거죠.

00:01:52.320 --> 00:01:56.930
&gt;&gt; 지금 이야기하는 건 지메일
전체 스레드를 예로 든 거예요.

00:01:56.930 --> 00:02:02.460
메일 스레드 안에는 여러 개의
메세지가 있고, 전체 스레드를

00:02:02.460 --> 00:02:05.390
대화라 하고 여기엔 ID가 있어요.
&gt;&gt; 오, 알겠어요.

00:02:05.390 --> 00:02:08.460
&gt;&gt; 그리고 각 메세지 안에는 
고유 ID가 있어요.

00:02:08.460 --> 00:02:13.330
&gt;&gt; 좋아요, 각 ID가 저장된 
변수의 데이터 유형은?

00:02:13.330 --> 00:02:14.010
&gt;&gt; 마찬가지로 정수형이죠.

00:02:14.010 --> 00:02:14.840
&gt;&gt; 알겠어요.

00:02:14.840 --> 00:02:16.040
&gt;&gt; 예
&gt;&gt; 하루에 발송되는

00:02:16.040 --> 00:02:17.640
이메일이 전부 얼마나 되는지

00:02:17.640 --> 00:02:18.410
혹시 아시나요?

00:02:18.410 --> 00:02:19.580
엄청 많을 텐데.

00:02:19.580 --> 00:02:23.160
&gt;&gt; 네, 알아요. 지금 바로는 
기억 안나지만.

00:02:23.160 --> 00:02:28.320
대화 안 각각의 메세지가
고유하고 발송되는 각각의 이메일

00:02:28.320 --> 00:02:31.570
또한 고유하다는 거네요.

00:02:31.570 --> 00:02:32.190
&gt;&gt; 맞아요.

00:02:32.190 --> 00:02:33.580
&gt;&gt; 진짜 엄청난 수겠는데요, 
그렇죠?

00:02:33.580 --> 00:02:34.690
&gt;&gt; 엄청 좋은 질문이예요.

00:02:34.690 --> 00:02:37.810
그래서 실제로 int 대신에
우리는 로그를 사용하죠.

00:02:37.810 --> 00:02:40.542
&gt;&gt; 알겠어요.
&gt;&gt; 64비트니까요.

00:02:40.542 --> 00:02:41.784
&gt;&gt; 그럼 우리는 절대로...

00:02:41.784 --> 00:02:43.655
[말섞임]
&gt;&gt; 큰 수치를 저장하기 위한

00:02:43.655 --> 00:02:45.070
넓은 공간이 생기니까요, 그렇죠?

00:02:45.070 --> 00:02:46.284
그게 int와 로그의 진짜
차이라는 거죠?

00:02:46.284 --> 00:02:49.642
그렇죠.
&gt;&gt; 문자열은 어떤가요?

00:02:49.642 --> 00:02:51.660
&gt;&gt; 문자열이라.

00:02:51.660 --> 00:02:53.460
&gt;&gt; 주관적일 것 같은데.

00:02:53.460 --> 00:02:55.530
문자열 말인가요, 아니면 저장방식?

00:02:55.530 --> 00:02:57.380
&gt;&gt; 전부 다요.

00:02:57.380 --> 00:02:59.420
예, 메일 제목도 문자열이죠.

00:02:59.420 --> 00:03:00.660
&gt;&gt; 맞아요.

00:03:00.660 --> 00:03:03.510
&gt;&gt; 그리고
메일 주소도 당연히 문자열이고.

00:03:03.510 --> 00:03:05.560
그거 중요하죠.

00:03:05.560 --> 00:03:08.980
어느 앱에서나 볼 수 있는
거의 모든 것,

00:03:08.980 --> 00:03:12.960
텍스트를 갖고 있는 거의 모든
것들이 문자열이예요.

00:03:12.960 --> 00:03:16.130
좋은 엔지니어라고 반드시
모든 걸 알아야 하는 건 아니예요.

00:03:16.130 --> 00:03:17.070
하지만 대신에,

00:03:17.070 --> 00:03:21.010
답을 찾아 내는 능력이
탁월해야 하죠.

00:03:21.010 --> 00:03:26.060
찾아보면 좋은 튜토리얼 같은 게
많이 있거든요.

00:03:26.060 --> 00:03:28.720
어떻게 알맞은 키워드로 
찾아 내야 할 지를 알아아죠.

00:03:29.810 --> 00:03:31.850
알맞은 키워드를 찾으라는 거네요.

00:03:31.850 --> 00:03:34.470
&gt;&gt; 다른이에게 도움을 구할 때도요.

00:03:34.470 --> 00:03:36.610
&gt;&gt; 오 그래요,
그거 정말 중요하죠.

00:03:36.610 --> 00:03:39.880
더 일찍 사람들한테 물어볼 걸
하면서 언제나 후회하는 것 같아요.

00:03:39.880 --> 00:03:44.830
혼자 고쳐 보겠다고 하루 종일
끙끙대거나 할 때가 있잖아요,

00:03:44.830 --> 00:03:45.800
그러다 결국엔 말하죠.

00:03:45.800 --> 00:03:50.490
아, 그냥 이 부분 쓴 사람한테
물어볼 걸 그랬어.

00:03:50.490 --> 00:03:55.610
사람들에게 제때 도움을 청할
수 있는 게 정말 중요하다고 봐요.

00:03:55.610 --> 00:03:57.500
소중한 시간을 아끼려면 말이죠.

00:03:57.500 --> 00:04:03.000
그리고 구글 내에서 어떤 다른
프로젝트가 진행중인지 아는 것도요.

00:04:03.000 --> 00:04:06.140
적어도 자기 주변에서 말이죠.

00:04:06.140 --> 00:04:11.270
정말 좋은 엔지니어란, 자기 
일에만 신경쓰는 게 아니라

00:04:11.270 --> 00:04:16.870
일에 관한 화제가 늘 있어야
한다고 생각하거든요.

00:04:16.870 --> 00:04:18.769
&gt;&gt; 사람들에게, 적어도 어떤

00:04:18.769 --> 00:04:20.420
사람들에게 보여줄 수 있는
그런 거 말이죠.

00:04:20.420 --> 00:04:21.140
&gt;&gt; 맞아요.

00:04:21.140 --> 00:04:21.839
그런 사람들이 있죠. 맞아요.

00:04:21.839 --> 00:04:26.330
최신 기술에 대해서도 잘 알죠.
이런 기술 관련 이야기나 혹은

00:04:26.330 --> 00:04:31.600
엔지니어링 쪽에 전달되는 
사항등을 통해서 말이죠.

00:04:31.600 --> 00:04:34.340
그렇게 최고를 유지하는 거예요.

00:04:34.340 --> 00:04:38.320
&gt;&gt; 프로그래밍을 배우던 시기로
한 번 돌아가 보죠.

00:04:39.390 --> 00:04:42.340
지금 그때의 앨리스 자신에게
말을 할 수 있다면,

00:04:42.340 --> 00:04:45.440
어떤 충고를 해 주고 싶은가요?

00:04:45.440 --> 00:04:47.680
&gt;&gt; 와,
정말 재미있는 질문이네요.

00:04:47.680 --> 00:04:51.980
프로그래밍을 좀 더 즐겨야 했다고
생각해요.

00:04:55.140 --> 00:04:57.458
프로그래밍을 배운 방법 같은 게

00:04:57.458 --> 00:05:02.240
지금과는 많이 달라거든요. 저는
원래 중국에서 자랐으니까.

00:05:02.240 --> 00:05:06.100
더 학구적인 쪽으로
초점이 맞춰졌던 것 같아요.

00:05:06.100 --> 00:05:11.461
선생님한테서 수업을 듣는 것 처럼
과외 지도도 받았고,

00:05:11.461 --> 00:05:15.781
숙제 받은 걸 풀려면 공부해야 하고,

00:05:15.781 --> 00:05:17.790
그런 식이었죠.

00:05:18.870 --> 00:05:23.447
지금 돌아보면, 제 생각엔,

00:05:23.447 --> 00:05:31.100
좀 더 재미있게 할 수 있는
것들이 있었으면 좋았을 것 같아요.

00:05:31.100 --> 00:05:34.130
&gt;&gt; 생일 앱 같은 걸 만들 건가요?

00:05:34.130 --> 00:05:35.078
생일 앱이요?
&gt;&gt; [웃음]

00:05:35.078 --> 00:05:35.898
&gt;&gt; 예 그래요.

00:05:35.898 --> 00:05:40.322
그런 종류의 앱이면
많이 배울 수 있을 것 같아요.

00:05:40.322 --> 00:05:44.280
단순히 한 개의 정답을 
찾는 게 아니니까요.

00:05:44.280 --> 00:05:47.310
하지만 생일 앱 같은 그런 걸
만들거나 하다 보면

00:05:47.310 --> 00:05:49.240
디자인 같은 쪽을 
많이 배울 수 있을 것 같아요.

00:05:49.240 --> 00:05:52.645
다양한 UI 요소도 배우고요.
단순히 이 데이터를

00:05:52.645 --> 00:05:56.100
여기서 저기로 보내서
더 효율적으로 해결한다,

00:05:56.100 --> 00:06:01.117
그런 게 아니니까요.

00:06:01.117 --> 00:06:06.240
실제 생활에서의 엔지니어링도
마찬가지인 것 같아요.

00:06:06.240 --> 00:06:10.250
단순히 기술적 문제를 해결하는
것 만이 아니라

00:06:10.250 --> 00:06:12.560
좋은 제품을 만드는 거죠.

00:06:12.560 --> 00:06:14.800
&gt;&gt; 뭔가 자신의 호기심이
동력이 되는 성격 같아요.

00:06:14.800 --> 00:06:15.790
&gt;&gt; 딱 그래요.

00:06:15.790 --> 00:06:16.790
예.

00:06:16.790 --> 00:06:19.290
&gt;&gt; 오늘 시간을 내 주셔서 
캐시와 저는 정말 감사드립니다.

00:06:19.290 --> 00:06:20.250
&gt;&gt; 어유, 천만에요.

00:06:20.250 --> 00:06:23.008
&gt;&gt; 우리 학생들이 이 인터뷰에서
많은 걸 배울 거라고 생각해요.

00:06:23.008 --> 00:06:23.508
&gt;&gt; 그러면 좋겠네요.

