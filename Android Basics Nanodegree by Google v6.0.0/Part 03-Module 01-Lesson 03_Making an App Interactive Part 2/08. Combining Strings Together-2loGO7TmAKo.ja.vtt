WEBVTT
Kind: captions
Language: ja

00:00:00.240 --> 00:00:03.880
Java で文字列を扱う際に
理解しておきたい大事なコンセプトは

00:00:03.880 --> 00:00:05.440
文字列結合です

00:00:05.440 --> 00:00:07.190
なんだか難しく聞こえますが

00:00:07.190 --> 00:00:10.980
単に文字列全体を
くっつけるということです

00:00:10.980 --> 00:00:12.680
こちらが文字列
こちらも文字列

00:00:12.680 --> 00:00:16.630
これを結びつけることで
より長い文字列を作れます

00:00:16.630 --> 00:00:20.750
文字列を結合するには
+ 演算子を使います

00:00:20.750 --> 00:00:23.770
算数で足し算するときの記号と
同じです

00:00:23.770 --> 00:00:29.180
数字を足すように
文字列も結合できます

00:00:29.180 --> 00:00:30.750
例で見ていきましょう

00:00:30.750 --> 00:00:35.040
３つの異なる文字列
１番目は "I need"

00:00:35.040 --> 00:00:36.940
２番目は "2 cups of coffee"

00:00:36.940 --> 00:00:39.580
３番目は "on Monday" です

00:00:39.580 --> 00:00:43.500
ここで + 演算子を使って
すべての文字列を結合します

00:00:44.120 --> 00:00:49.350
とても長い文字列
"I need2 cups of coffeeon Monday" ができました

00:00:49.350 --> 00:00:54.190
こういうのを見たとき
+ 記号が消えて 引用符が消えて

00:00:54.190 --> 00:00:57.720
そういうのが全部
文字どおり押しつぶされた感じです

00:00:58.250 --> 00:01:01.650
ここで押しつぶされたというとき
実際に押しつぶしてて―

00:01:01.650 --> 00:01:06.420
例えばこの文字列と文字列の間に
余分なスペースはありません

00:01:06.420 --> 00:01:07.700
ここにスペースを足したければ

00:01:07.700 --> 00:01:13.125
明示的にこの文字列リテラルの後ろか

00:01:13.125 --> 00:01:16.505
この文字列リテラルの前に
スペースを足さなければいけません

00:01:16.925 --> 00:01:19.095
"coffeeon Monday" も同じです

00:01:19.095 --> 00:01:22.845
ここにスペースが欲しければ
この文字列の終わりか この文字列の前に

00:01:22.845 --> 00:01:24.505
スペースが必要です

00:01:25.065 --> 00:01:27.405
ここと ここに
スペースを足したので

00:01:27.405 --> 00:01:29.705
すべてを結合して―

00:01:29.705 --> 00:01:34.210
全部押しつぶしても
このように文字列が正しくなりました

00:01:34.210 --> 00:01:36.630
ここと ここに スペースありますね

00:01:36.630 --> 00:01:39.743
正しい位置にスペースを足すのは
ちょっと分かりにくいですね

00:01:39.743 --> 00:01:42.330
至るところに引用符があって
+ 記号もあり

00:01:42.330 --> 00:01:44.750
+ 記号の前後にもスペースがあります

00:01:44.750 --> 00:01:47.620
でも + 記号周囲のスペースは

00:01:47.620 --> 00:01:50.025
文字列を表示するのと
何も関係ありません

00:01:50.025 --> 00:01:53.010
二重引用符の内側にスペースが必要です

00:01:53.010 --> 00:01:55.930
さて アプリで文字列結合の
例を見ていきましょう

00:01:55.930 --> 00:01:58.234
テキストを書き換えていって

00:01:58.234 --> 00:02:02.900
"Amount Due " + "$10" とします

00:02:02.900 --> 00:02:06.370
この文字列リテラルと
この文字列リテラルを結合です

00:02:07.120 --> 00:02:09.680
デバイスで実行し
ORDER ボタンを押せば

00:02:09.680 --> 00:02:12.770
Amount Due $10 と出ます

00:02:12.770 --> 00:02:17.490
こちらのように
文字列と整数を結合することもできます

00:02:17.490 --> 00:02:19.930
変更前は 10 は引用符に囲まれていて

00:02:19.930 --> 00:02:22.830
文字列表現としての数字の 10 でしたが

00:02:22.830 --> 00:02:28.220
ここでは引用符なしの 100 で
つまり整数の 100 です

00:02:28.680 --> 00:02:31.470
この文字列と整数を結合すると―

00:02:31.470 --> 00:02:34.590
ただちに全体が文字列になります

00:02:34.590 --> 00:02:38.360
ORDER ボタンを押すと
画面には $100 が表示されます

00:02:38.360 --> 00:02:42.230
ちょっと異なる値との文字列結合で
遊んでみましょう

00:02:42.770 --> 00:02:46.160
コンパイルエラーになりやすいので
気をつけてください

00:02:46.160 --> 00:02:49.580
閉じ引用符を忘れたら
エラーになります

00:02:49.580 --> 00:02:53.210
異なる値との文字列の連結を試して
遊んでみてください

00:02:53.760 --> 00:02:56.280
Android コードスタイル
ガイドラインによれば

00:02:56.280 --> 00:02:59.050
演算子の前後には
スペースが必要です

00:02:59.050 --> 00:03:02.220
そしてこの文字列結合演算子も
演算子の１つです

00:03:02.970 --> 00:03:05.480
さて アプリで練習する番です

00:03:05.480 --> 00:03:08.710
+ 演算子を使って
異なる文字列の結合を試してみましょう

00:03:08.710 --> 00:03:12.420
整数リテラルの値とも結合できます

00:03:12.420 --> 00:03:14.640
文字列結合に慣れてきたら

00:03:14.640 --> 00:03:16.850
問題に答えてください

