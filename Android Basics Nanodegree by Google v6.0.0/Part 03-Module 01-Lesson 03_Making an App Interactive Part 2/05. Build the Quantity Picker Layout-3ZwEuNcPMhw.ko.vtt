WEBVTT
Kind: captions
Language: ko

00:00:00.350 --> 00:00:03.090
먼저 화면 사진을 보고
결정하겠습니다.

00:00:03.090 --> 00:00:06.180
이것들은 열로 있고
수직 LinearLayout처럼 보이네요.

00:00:06.180 --> 00:00:08.410
두 번째 자식 뷰는
하나의 뷰가 아니지만요.

00:00:08.410 --> 00:00:11.530
사실 그건 세 뷰를 가진
수평 LinearLayout입니다.

00:00:11.530 --> 00:00:14.710
뷰 계층 다이어그램은
이렇게 보일 겁니다.

00:00:14.710 --> 00:00:17.390
수직 LinearLayout을
근원 뷰로 가지고,

00:00:17.390 --> 00:00:19.950
아래에 다섯 자식을 가집니다.

00:00:20.390 --> 00:00:23.050
LinearLayout 자신도
세 자식을 가지죠.

00:00:24.360 --> 00:00:29.700
다이어그램을 가지면, 이제
XML 코드 뼈대 만들기는 쉽습니다.

00:00:29.700 --> 00:00:32.009
근원 뷰는 LinearLayout이고

00:00:32.009 --> 00:00:35.470
이는 세 텍스트 뷰를 포함해요.
그의 첫 자식 뷰는

00:00:35.470 --> 00:00:38.650
버튼, 텍스트 뷰, 안의 버튼을 가진
LinearLayout 앞에 오죠.

00:00:39.270 --> 00:00:42.560
이것은 LinearLayout의
닫는 태그이고

00:00:42.560 --> 00:00:45.600
텍스트 뷰를 가지고,
다른 텍스트 뷰와 버튼이 있어요.

00:00:45.600 --> 00:00:49.230
이는 부모 LinearLayout의
모든 자식들입니다.

00:00:49.230 --> 00:00:52.230
이 XML로부터 우리는
Android Studio로 가서

00:00:52.230 --> 00:00:56.460
우리 기본 레이아웃을 바꿔
이것과 비슷하게 보이게 합니다.

00:00:56.460 --> 00:01:00.310
Android Studio에서 activity_main.xml
레이아웃 파일을 엽니다.

00:01:00.310 --> 00:01:03.039
이 파일의 곳곳에
변화를 줘서

00:01:03.039 --> 00:01:06.335
이것이 원하는 레이아웃과
더 비슷하게 만들 겁니다.

00:01:06.335 --> 00:01:08.700
첫 자식은 텍스트 뷰네요.

00:01:08.700 --> 00:01:09.880
이미 여기 있죠.

00:01:09.880 --> 00:01:11.350
이는 quantity 제목이
되어야 해요.

00:01:12.500 --> 00:01:15.190
다음으로 재귀적
LinearLayout이 있어야 하는데

00:01:15.190 --> 00:01:17.680
이는 안에 세 텍스트 뷰를 포함하죠.

00:01:17.680 --> 00:01:20.120
아직 그게 없으니, 추가합시다.

00:01:20.120 --> 00:01:23.215
엔터를 누르고
LinearLayout을 입력합니다.

00:01:24.850 --> 00:01:27.390
자동 완성 선택지 중
하나로 나타나네요.

00:01:27.390 --> 00:01:29.020
오케이를 누릅니다.

00:01:29.020 --> 00:01:32.100
그럼 제가 넣어야 할
속성을 자동으로 넣어줍니다.

00:01:32.100 --> 00:01:33.610
너비와 높이가 필요하므로

00:01:34.880 --> 00:01:38.020
너비를 match_parent로
설정하는데, 이는

00:01:38.020 --> 00:01:42.350
이것의 부모의 너비와 일치할 것이고
이는 화면의 너비와 일치할 겁니다.

00:01:42.720 --> 00:01:45.890
레이아웃 높이는 match_parent로
설정하지 않아요.

00:01:45.890 --> 00:01:49.670
그런다면, 이는 수직적으로
화면에서 다른 뷰를 밀어낼 거예요.

00:01:49.970 --> 00:01:51.820
그냥 wrap_content를 쓰죠.

00:01:53.680 --> 00:01:56.960
LinearLayout이 두 버튼만큼,
안의 텍스트 뷰만큼

00:01:56.960 --> 00:01:58.610
크도록 할 것입니다.

00:01:58.610 --> 00:02:02.690
이제, 닫는 태그가
추가된 LinearLayout의 모든 자식들

00:02:02.690 --> 00:02:04.060
다음으로 옮겨져야 합니다.

00:02:05.060 --> 00:02:07.160
그건 여기 아래로 가겠죠.

00:02:07.160 --> 00:02:09.320
뷰 그룹 안에 자식을 가질 때

00:02:09.320 --> 00:02:12.050
자식은 네 칸 정도 들여써야 합니다.

00:02:12.950 --> 00:02:15.630
XML 각 요소 사이에
공백 두는 것을 좋아하기 때문에

00:02:15.630 --> 00:02:17.090
여기도 공간을 추가할게요.

00:02:18.260 --> 00:02:21.440
우리가 잊은 다른 하나는
LinearLayout 방향 설정입니다.

00:02:23.210 --> 00:02:26.260
앞서 우리는 LinearLayout이
수평이 돼야 한다고 결정했어요.

00:02:26.260 --> 00:02:29.390
버튼과 텍스트 뷰가
수평으로 나타날 수 있게요.

00:02:29.390 --> 00:02:30.979
좋아요, 이제 우리가
원한 것과 일치하네요.

00:02:32.150 --> 00:02:37.340
다음으로 우리가 이미 가진
텍스트 뷰 두개, 버튼이 있네요.

00:02:37.340 --> 00:02:38.770
제 생각에 끝난 것 같아요.

00:02:39.100 --> 00:02:41.860
디자인 창을 확인하고 싶다면
이렇게 보일 것입니다.

00:02:43.470 --> 00:02:47.100
다섯 직계 자식을 가진
수직 LinearLayout이 있고

00:02:47.100 --> 00:02:48.880
이 LinearLayout은
세 자식을 더 가지죠.

00:02:50.130 --> 00:02:52.120
우리 기기에서 실행해
어떻게 되는지 봅시다.

00:02:53.390 --> 00:02:55.740
이건 우리가 원한 것과
비슷하지만 같진 않네요.

00:02:56.920 --> 00:03:00.060
수량 picker가 수평으로
보이는데, 좋은 신호죠.

00:03:00.060 --> 00:03:03.180
하지만 왼쪽 빼기 버튼과
오른쪽 더하기 버튼이

00:03:03.180 --> 00:03:07.645
오른편에 있길 원했어요.
원하는 레이아웃 사진처럼요.

00:03:08.355 --> 00:03:11.675
또한, 이 버튼들은 텍스트 뷰의
가장자리로 매우 조여져 있어요.

00:03:11.675 --> 00:03:16.170
화면 사진을 정확히 기억한다면,
이 텍스트 뷰의 왼쪽, 오른쪽에

00:03:16.170 --> 00:03:17.851
8 dp 공백을 원해요.

00:03:18.962 --> 00:03:19.832
그걸 지금 추가합시다.

00:03:21.252 --> 00:03:22.972
XML로 돌아가서

00:03:22.972 --> 00:03:26.702
이 더하기 버튼을 텍스트 뷰
다음으로 이동시킬게요.

00:03:26.702 --> 00:03:32.432
그리고 빼기 버튼을
텍스트 뷰 앞으로 이동시키죠.

00:03:32.432 --> 00:03:36.372
수평 줄에서 빼기 버튼, 2

00:03:36.372 --> 00:03:38.252
다음에 더하기 버튼이 와야 해요.

00:03:38.252 --> 00:03:41.320
또한 텍스트 뷰 주위에
패딩을 추가하고 싶어요.

00:03:41.320 --> 00:03:43.800
마진이나 패딩을 추가할 수 있지만

00:03:43.800 --> 00:03:46.016
그냥 패딩을 쓸게요.

00:03:46.376 --> 00:03:48.439
이 값을 8 dp로 설정합니다.

00:03:48.959 --> 00:03:50.103
네, 좋아요.

00:03:50.543 --> 00:03:53.602
Android 코드 스타일에 따르면
여분 공백도 있고

00:03:53.602 --> 00:03:58.176
속성 주문이 잘못되었을
것이 많아요.

00:03:59.310 --> 00:04:02.860
화면 상단의 메뉴에서
code를 클릭하고

00:04:02.860 --> 00:04:04.890
reformat code를 클릭하세요.

00:04:04.890 --> 00:04:06.980
Rearrange code도요.

00:04:06.980 --> 00:04:09.120
이건 모든 속성을 재정렬할 것이고

00:04:09.120 --> 00:04:11.240
당신을 위해 자동으로
형식을 고쳐줄 겁니다.

00:04:12.000 --> 00:04:13.050
네, 좋아요.

00:04:13.050 --> 00:04:14.040
앱을 다시 실행해보죠.

00:04:15.550 --> 00:04:16.900
봅시다.
더 좋네요.

00:04:17.170 --> 00:04:20.430
이제 2 주변에 공백이 있고
빼기 버튼은 왼쪽에

00:04:20.430 --> 00:04:22.460
더하기 버튼은 오른쪽에 있네요.

00:04:22.790 --> 00:04:24.668
좋아 보여요.

00:04:24.668 --> 00:04:27.610
이게 여전히 작동하는지
확인해야 합니다.

00:04:27.610 --> 00:04:30.620
추상적인 수량을 골라서 주문할게요.

00:04:30.820 --> 00:04:32.035
정확한 것 같네요.

00:04:33.195 --> 00:04:37.190
화면에 이 수량 picker를
얻기 위한 긴 여정이었습니다.

00:04:37.890 --> 00:04:40.110
좋아요, 앱은 정말 좋아 보이네요.

00:04:40.110 --> 00:04:43.390
지금까지, 화면에 숫자를
보여주는 방법을 보여드렸죠.

00:04:43.390 --> 00:04:45.370
화면에 텍스트를 보여준다면 어떨까요?

00:04:46.470 --> 00:04:47.590
계속 보면서 찾아냅시다.

