WEBVTT
Kind: captions
Language: ja

00:00:00.350 --> 00:00:03.090
このスクリーンショットを見て、

00:00:03.090 --> 00:00:06.180
行が縦に並んでいるので、
縦のLinearLayout様です。

00:00:06.180 --> 00:00:08.410
しかし、二番目の子は単体のビューではありません。

00:00:08.410 --> 00:00:11.530
これは３つのビューを持った
横のLinearLayoutです。

00:00:11.530 --> 00:00:14.710
これがビューヒエラルキー図になります。

00:00:14.710 --> 00:00:19.300
ルートビューとして、縦のLinearLayoutがあり、
その下に５つの子があります。

00:00:20.390 --> 00:00:23.050
このLinearLayout自身も３つの子を持っています。

00:00:24.360 --> 00:00:29.700
このように図があると、XMLコードに
骨組みを作るのも簡単です。

00:00:29.700 --> 00:00:32.009
ルートビューはLinearLayoutで、

00:00:32.009 --> 00:00:36.160
その子には、まずTextView、そしてBottun、

00:00:36.160 --> 00:00:38.650
TextView、Buttonｗ持ったLinearLayout、

00:00:38.650 --> 00:00:42.560
これがLinearLayoutの終結タグで、

00:00:42.560 --> 00:00:45.600
そしてTextView、もう一つTextView、そしてButtonがあります。

00:00:45.600 --> 00:00:49.230
これらはすべて親のLinearLayoutの子になります。

00:00:49.230 --> 00:00:52.230
このXMLから、Android Studioにいき、

00:00:52.230 --> 00:00:56.460
今あるレイアウトを更新して、このようにしてみます。

00:00:56.460 --> 00:01:00.310
Android Studioで、activity main.xml
レイアウトファイルを開きます。

00:01:00.310 --> 00:01:03.039
意図するレイアウトになるように、

00:01:03.039 --> 00:01:06.335
このファイルを変更します。

00:01:06.335 --> 00:01:08.700
最初の子はTextViewです。

00:01:08.700 --> 00:01:09.880
これはすでにありますね。

00:01:09.880 --> 00:01:11.350
Quantityというヘッダーになっています。

00:01:12.500 --> 00:01:15.190
次に、入れ子になったLinearLayoutです。

00:01:15.190 --> 00:01:17.680
この中には３つのビューがあります。

00:01:17.680 --> 00:01:20.120
これはないので、加えましょう。

00:01:20.120 --> 00:01:23.215
Enterを押して、LinearLayoutと記入していきます。

00:01:24.850 --> 00:01:27.390
オートコンプリートオプションとして選ぶこともできます。

00:01:27.390 --> 00:01:29.020
Enterを押して選べます。

00:01:29.020 --> 00:01:32.100
記入すべきアトリビュートが自動的に出てきます。

00:01:32.100 --> 00:01:33.610
幅と高さが必要だからです。

00:01:34.880 --> 00:01:38.020
幅をmatch_parentとすると、

00:01:38.020 --> 00:01:42.720
親もmatch_parentとなっているので、
スクリーンの幅になります。

00:01:42.720 --> 00:01:45.890
高さはmatch_parentにすると、

00:01:45.890 --> 00:01:49.970
他のビューをスクリーンの枠の外に
押し出してしまうからです。

00:01:49.970 --> 00:01:51.820
なのでwrap_contentとします。

00:01:53.680 --> 00:01:56.960
これで、二つのボタンとTextViewの

00:01:56.960 --> 00:01:58.610
高さになります。

00:01:58.610 --> 00:02:02.690
この終結タグは、全ての子が加えられた後に

00:02:02.690 --> 00:02:04.060
来なければいけません。

00:02:04.060 --> 00:02:07.160
ここに来ますね。

00:02:07.160 --> 00:02:09.320
ビューグループの中に子がある場合は、

00:02:09.320 --> 00:02:12.050
子をスペース４つ分字さがりに
しなければいけません。

00:02:12.050 --> 00:02:15.630
それぞれのXMLの要素の間に
スペースがあったほうがいいので、

00:02:15.630 --> 00:02:17.090
ここにもスペースを開けます。

00:02:18.260 --> 00:02:21.440
あとは、LinearLayoutの方向ですね。

00:02:23.210 --> 00:02:26.260
Button TextViewが横並びになるように、

00:02:26.260 --> 00:02:29.390
横のLinearLayoutを使うことにしました。

00:02:29.390 --> 00:02:30.979
そのようにできました。

00:02:32.150 --> 00:02:37.340
次は二つのTextViewとButtonですが、
もうすでに存在していますね。

00:02:37.340 --> 00:02:39.010
なのでこれで終わりです。

00:02:39.010 --> 00:02:41.860
デザインペインを確認すると、こんな感じです。

00:02:43.470 --> 00:02:47.100
縦のLinearLayoutがあり、子が５つあり、

00:02:47.100 --> 00:02:48.880
このLinearLayoutには３つの子があります。

00:02:48.880 --> 00:02:52.120
実際に試してみましょう。

00:02:53.390 --> 00:02:55.740
意図していたものに似ていますが、
完璧ではありません。

00:02:56.920 --> 00:03:00.060
量ピッカーはちゃんと表示されていますね。

00:03:00.060 --> 00:03:03.180
デザインレイアウトにあるように、ーボタンが左で、

00:03:03.180 --> 00:03:08.355
＋ボタンが右に来なければいけません。

00:03:08.355 --> 00:03:11.675
そして二つのボタンがTextViewに詰め寄っていますね。

00:03:11.675 --> 00:03:15.080
TextViewの左右に８ｄｐづつ

00:03:15.080 --> 00:03:17.851
スペースがなければいけません。

00:03:18.962 --> 00:03:19.832
それを加えてみましょう。

00:03:21.252 --> 00:03:22.972
XMLに戻って、

00:03:22.972 --> 00:03:26.702
＋ボタンをTextViewの後に記入します。

00:03:26.702 --> 00:03:32.432
そして＿ボタンをTextViewの前に持ってきます。

00:03:32.432 --> 00:03:36.372
横の行には、－ボタンがきて、２、

00:03:36.372 --> 00:03:38.252
そして＋ボタンが来ます。

00:03:38.252 --> 00:03:41.320
このTextViewの周りにもパディングを加えたいと思います。

00:03:41.320 --> 00:03:44.380
余白でもパディングでもいいですが、

00:03:44.380 --> 00:03:46.376
いまはパディングを使います。

00:03:46.376 --> 00:03:48.959
数値を８dpにします。

00:03:48.959 --> 00:03:50.543
できました。

00:03:50.543 --> 00:03:53.602
余白が多めで、

00:03:53.602 --> 00:03:56.026
アトリビュートの順番も、
Androidコードのガイドラインによると

00:03:56.026 --> 00:03:59.310
違うかもしれません。

00:03:59.310 --> 00:04:02.860
スクリーンの上のcodeをクリックして、

00:04:02.860 --> 00:04:04.890
reformat codeをクリックしてください。

00:04:04.890 --> 00:04:06.980
そしてcodeを再アレンジします。

00:04:06.980 --> 00:04:09.120
これでアトリビュートの順番が正しく、

00:04:09.120 --> 00:04:11.240
フォーマットも自動的に直せました。

00:04:12.430 --> 00:04:13.050
はい。

00:04:13.050 --> 00:04:13.930
実行してみましょう。

00:04:15.550 --> 00:04:17.170
ちゃんとできてますね。

00:04:17.170 --> 00:04:20.430
２の周りスペースがあり、－ボタンが左、

00:04:20.430 --> 00:04:22.790
＋ボタンが右に来ています。

00:04:22.790 --> 00:04:24.668
ちゃんとできていますね。

00:04:24.668 --> 00:04:27.610
ちゃんと機能するかを見てみましょう。

00:04:27.610 --> 00:04:30.620
量を決めて、ORDERをクリックします。

00:04:30.620 --> 00:04:32.035
大丈夫そうですね。

00:04:32.035 --> 00:04:37.890
この量ピッカーを加えるのに少々時間が
かかりましたね。

00:04:37.890 --> 00:04:40.110
とても良くできたと思います。

00:04:40.110 --> 00:04:43.390
今のところ、数字を表示することを学びました。

00:04:43.390 --> 00:04:45.370
テキストを表示するのには
どうすればいいでしょうか。

00:04:46.470 --> 00:04:47.590
それはまた次のビデオで学びます。

