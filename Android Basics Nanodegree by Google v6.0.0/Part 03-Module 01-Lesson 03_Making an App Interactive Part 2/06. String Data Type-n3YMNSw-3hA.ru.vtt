WEBVTT
Kind: captions
Language: ru

00:00:00.410 --> 00:00:02.510
Пока что мы сделали
модуль выбора количества.

00:00:02.510 --> 00:00:03.100
&gt;&gt; Верно.

00:00:03.100 --> 00:00:06.130
И следующее, что мы сделаем
в приложении - это цена.

00:00:06.130 --> 00:00:06.750
&gt;&gt; Да.

00:00:06.750 --> 00:00:07.900
Верно - цена.

00:00:07.900 --> 00:00:12.540
Итак, цена - это число, но мы хотим
сделать больше и

00:00:12.540 --> 00:00:13.940
использовать строки.

00:00:13.940 --> 00:00:16.170
&gt;&gt; Такие строки?

00:00:16.170 --> 00:00:18.040
&gt;&gt; Нет - такие.

00:00:18.040 --> 00:00:18.540
&gt;&gt; Ага.

00:00:20.010 --> 00:00:22.800
&gt;&gt; Итак, строка - это просто
последовательность символов.

00:00:22.800 --> 00:00:25.290
&gt;&gt; Погоди.
А при чем тут цена?

00:00:25.290 --> 00:00:29.345
&gt;&gt; При том, что мы сделаем так,
что на экране появится - total.

00:00:29.345 --> 00:00:30.809
А потом $15.

00:00:30.809 --> 00:00:34.870
Уже не просто число,
а число с текстом.

00:00:34.870 --> 00:00:36.050
&gt;&gt; Числа и текст.

00:00:36.050 --> 00:00:37.790
&gt;&gt; Да.
Здорово, правда?

00:00:37.790 --> 00:00:42.890
А это с вечеринки на которую
тебя [СМЕЕТСЯ] не пригласили.

00:00:42.890 --> 00:00:45.530
В нескольких следующих роликах 
мы расскажем про работу со строками

00:00:45.530 --> 00:00:47.370
в нашем приложении Just Java.

00:00:47.370 --> 00:00:51.220
Конкретно - мы узнаем как создавать
и менять строчные переменные.

00:00:51.220 --> 00:00:55.520
А потом мы перепишем приложение так,
чтобы под заголовком Рrice показывало

00:00:55.520 --> 00:00:58.720
Тotal, $15 или другую цифру
в зависимости от заказа.

00:00:58.720 --> 00:00:59.680
Мы еще покажем текст

00:00:59.680 --> 00:01:02.570
Thank you, потому что
любим своих клиентов.

00:01:03.710 --> 00:01:06.350
Вы думаете почему не
поместить весь текст

00:01:06.350 --> 00:01:07.430
внутри XML?

00:01:08.450 --> 00:01:11.860
Ну, мы можем, но проблема в том,
что количество меняется

00:01:11.860 --> 00:01:15.990
принажатии кнопки Оrder,
и надо чтобы цена менялась тоже.

00:01:15.990 --> 00:01:20.480
Поэтому текст должен точно соответ-
ствовать цене на основе количества.

00:01:20.480 --> 00:01:24.070
Используя строчную переменную
мы можем изменить текст

00:01:24.070 --> 00:01:27.839
а приложению не надо
обрабатывать весь XML.

00:01:29.440 --> 00:01:32.312
Вот знакомый вам пример из
реального приложения.

00:01:32.312 --> 00:01:35.636
Когда вам звонят вы видите
имя звонящего

00:01:35.636 --> 00:01:37.090
вверху экрана.

00:01:37.090 --> 00:01:39.550
Мы не можем записать это имя в XML

00:01:39.550 --> 00:01:43.240
поскольку оно меняется в зависимости
от кого кто звонит, если только всех

00:01:43.240 --> 00:01:44.400
друзей не зовут Бритта Холт.

00:01:45.440 --> 00:01:48.670
Лучше всего сохранить это имя
как строчную переменную.

00:01:48.670 --> 00:01:52.240
Так мы сможем его менять
в зависимости от того кто вам звонит.

00:01:52.240 --> 00:01:55.670
И при показе экрана мы можем
просто показать последнее имя

00:01:55.670 --> 00:01:56.890
записанное в этой переменной.

00:01:58.320 --> 00:02:01.169
В новостных и погодных приложениях
есть список последних новостей.

00:02:02.170 --> 00:02:05.600
При создании XML мы не можем
вписать именно эти

00:02:05.600 --> 00:02:08.820
новости в структуру XML.

00:02:08.820 --> 00:02:10.970
Хоть я и люблю зимние виды спорта,

00:02:10.970 --> 00:02:13.870
я хочу читать и другие новости тоже.

00:02:13.870 --> 00:02:16.260
Поэтому мы можем хранить
информацию для каждой новости,

00:02:16.260 --> 00:02:21.160
заголовок, как строчную переменную,
потому что она может меняться.

00:02:21.160 --> 00:02:23.990
Для следущего задания
я покажу вам код и

00:02:23.990 --> 00:02:26.590
хочу чтобы вы внесли
изменения в свое приложение.

00:02:26.590 --> 00:02:28.990
После вы запустите приложение
и посмотрите что произойдет.

00:02:28.990 --> 00:02:32.620
Я задам вам несколько
вопросов чтобы понять -

00:02:32.620 --> 00:02:34.290
разобрались вы или нет.

00:02:34.290 --> 00:02:36.840
Первое изменение - переделать
алгоритм submitOrder.

00:02:36.840 --> 00:02:40.020
Можно убрать код между открывающей
и закрывающей скобками

00:02:40.020 --> 00:02:44.190
и заменить его этими
двумя строками кода.

00:02:44.190 --> 00:02:47.090
Так вы получите ошибку поэтому
я хочу чтобы вы еще

00:02:47.090 --> 00:02:51.090
добавили алгоритм displayMessage,
который мы вам дали в инструкциях.

00:02:53.000 --> 00:02:56.360
В инструкциях вы найдете
вот это ядро кода.

00:02:56.360 --> 00:02:57.900
Ведлите его целиком,

00:02:57.900 --> 00:03:00.360
от комментария до последней
закрывающей скобки.

00:03:01.860 --> 00:03:03.560
Считайте его секретом,

00:03:03.560 --> 00:03:06.750
вам не надо заботиться о том что
происходит внутри алгоритма, просто

00:03:06.750 --> 00:03:10.210
надо добавить его к MainActivity
чтобы использовать.

00:03:11.662 --> 00:03:12.830
В Android Studio,

00:03:12.830 --> 00:03:17.100
в файле MainActivity.java
я добавляю этот новый алгоритм.

00:03:17.100 --> 00:03:19.110
Я могу вставить его где угодно
в MainActivity, но

00:03:19.110 --> 00:03:22.870
поставлю его сразу после
алгоритма displayPrice.

00:03:22.870 --> 00:03:24.120
Я собираюсь поставить его

00:03:24.120 --> 00:03:26.247
после закрывающей скобки
алгоритма displayPrice.

00:03:27.810 --> 00:03:32.362
Обратите внимание что он также внутри
закрывающей скобки MainActivity.

00:03:32.362 --> 00:03:34.790
Открывающая скобка MainActivity
вот здесь,

00:03:34.790 --> 00:03:38.260
и все что внутри,
содержится в MainActivity.

00:03:38.260 --> 00:03:40.898
А вот закрывающая
скобка MainActivity.

00:03:42.650 --> 00:03:45.040
Как только мы добавим
алгоритм displayMessage,

00:03:45.040 --> 00:03:46.890
мы сможем менять
алгоритм submitOrder.

00:03:46.890 --> 00:03:49.420
Я собираюсь стереть код внутри

00:03:49.420 --> 00:03:51.030
алгоритма submitOrder.

00:03:51.030 --> 00:03:54.518
Теперь, согласно картинке,
я вставлю сюда новый код.

00:03:57.226 --> 00:04:01.020
Я специально не рассказываю
подробно что делаю.

00:04:01.020 --> 00:04:03.910
Я хочу чтобы вы попробовали это
в своем приложении, запустили это,

00:04:03.910 --> 00:04:04.730
и увидели что будет.

00:04:06.040 --> 00:04:08.990
После этого я хочу чтобы вы
ответили на эти вопросы.

00:04:08.990 --> 00:04:11.200
Что будет если вы нажмете на
кнопку заказа прямо сейчас?

00:04:12.260 --> 00:04:15.250
Если вы подробнее рассмотрите
код для размещения заказа,

00:04:15.250 --> 00:04:17.140
то увидите что мы создали
строковую переменную.

00:04:18.160 --> 00:04:21.430
Хоть мы и не проходили код для
строковых переменных я хочу чтобы вы

00:04:21.430 --> 00:04:25.090
попробовали угадать -
какое у переменной имя?

00:04:25.090 --> 00:04:26.990
И - как вы думаете -
какое у нее значение?

00:04:28.538 --> 00:04:30.000
Как закончите - двигайтесь дальше.

