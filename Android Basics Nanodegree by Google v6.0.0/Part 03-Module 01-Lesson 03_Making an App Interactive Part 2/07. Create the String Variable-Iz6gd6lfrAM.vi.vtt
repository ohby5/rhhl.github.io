WEBVTT
Kind: captions
Language: vi

00:00:00.630 --> 00:00:02.790
Trước đó trong bài học chúng ta
đã học về cách khai báo hoặc

00:00:02.790 --> 00:00:04.088
tạo biến số nguyên.

00:00:04.088 --> 00:00:07.520
Chúng ta sẽ đi theo cùng một
định dạng để tạo ra một biến, nhưng

00:00:07.520 --> 00:00:11.480
lần này biến chứa
văn bản bởi vì đó là một chuỗi.

00:00:11.480 --> 00:00:13.815
Đây là mã chúng tôi thêm vào ứng dụng.

00:00:13.815 --> 00:00:16.995
Nó tạo ra một biến chuỗi mới
gọi là priceMessage.

00:00:16.995 --> 00:00:19.715
Và giá trị mà nó
nắm giữ là ký tự Miễn phí.

00:00:20.825 --> 00:00:24.605
Nó tuân theo một định dạng cụ thể
theo các quy tắc cú pháp của Java.

00:00:24.605 --> 00:00:26.025
Đầu tiên, ta xác định kiểu dữ liệu.

00:00:26.025 --> 00:00:28.515
Trong trường hợp này, đó là một chuỗi.

00:00:28.515 --> 00:00:31.485
Hãy nhớ rằng chuỗi chỉ là
một dãy các ký tự.

00:00:31.485 --> 00:00:34.939
Theo sau là tên biến,
trong trường hợp này là priceMessage.

00:00:36.080 --> 00:00:38.850
Tiếp theo đó là một dấu bằng,
giá trị ban đầu,

00:00:38.850 --> 00:00:41.330
và một dấu chấm phẩy để chỉ
kết thúc câu lệnh.

00:00:42.490 --> 00:00:46.280
Cho biết kiểu dữ liệu là một chuỗi
giới hạn loại thông tin có thể đi

00:00:46.280 --> 00:00:47.780
vào trong biến này.

00:00:47.780 --> 00:00:50.780
Chỉ có một chuỗi có thể được
lưu giữ trong nó tại một thời điểm.

00:00:50.780 --> 00:00:53.830
Một chuỗi có thể được tạo thành từ 
các chữ cái, số hoặc ký hiệu.

00:00:54.860 --> 00:00:58.770
Bạn có thể nhớ lại rằng tên biến là
tên mà chúng ta đặt cho biến này, vì vậy

00:00:58.770 --> 00:01:03.160
sau này, ta có thể đề cập đến nó để
lấy giá trị ra hoặc cập nhật giá trị.

00:01:03.160 --> 00:01:04.650
Nó giống như gán cho
biến một thẻ tên.

00:01:05.920 --> 00:01:08.620
Khi bạn chọn một tên biến,
quan trọng là chọn một cái gì đó

00:01:08.620 --> 00:01:12.950
có tính mô tả, cho biết về
loại thông tin sẽ được lưu giữ.

00:01:12.950 --> 00:01:15.660
Tôi có thể gọi tên biến này
là Catherine, nhưng

00:01:15.660 --> 00:01:18.520
nó thực sự không phản ánh
thông tin bên trong đó.

00:01:18.520 --> 00:01:20.530
Nó cũng làm cho mã của tôi khó đọc,

00:01:20.530 --> 00:01:24.820
vì không ai biết lý do tại sao có
một biến chuỗi gọi là Catherine.

00:01:24.820 --> 00:01:25.450
Mặt khác,

00:01:25.450 --> 00:01:28.990
một tên biến như priceMessage thì
hữu ích hơn, bởi vì bạn biết

00:01:28.990 --> 00:01:32.530
có một thông điệp bên trong
có thể liên quan đến giá cả.

00:01:32.530 --> 00:01:36.280
Chúng ta đã xem xét điều này trước đây,
nhưng có quy ước đặt tên cho tên biến.

00:01:36.280 --> 00:01:38.990
Nếu bạn quên chúng là gì,
bạn luôn có thể tìm kiếm chúng.

00:01:38.990 --> 00:01:42.350
Tôi chỉ tìm kiếm tên biến
Java trong Google Search.

00:01:42.350 --> 00:01:45.690
Tôi có thể di chuyển xuống đến
nơi nó nói về cách đặt tên.

00:01:45.690 --> 00:01:47.780
Nó nói rằng tên biến
là trường hợp nhạy cảm, và

00:01:47.780 --> 00:01:49.850
bạn thường bắt đầu với
một chữ viết thường.

00:01:49.850 --> 00:01:52.520
Sau đó bạn viết hoa
chữ cái đầu nếu có nhiều từ.

00:01:53.950 --> 00:01:57.420
Tiếp theo chúng ta có toán tử gán,
hoặc dấu bằng ở đây.

00:01:57.420 --> 00:02:00.830
Toán tử này là có nhiệm vụ
gán giá trị cho một biến.

00:02:00.830 --> 00:02:02.860
Nên bạn lấy giá trị này
phía bên tay phải và

00:02:02.860 --> 00:02:04.910
bạn gán nó vào biến priceMessage.

00:02:06.100 --> 00:02:09.400
Chúng tôi xác định giá trị ban đầu
của chuỗi này là một số ký tự và

00:02:09.400 --> 00:02:10.949
dấu ngoặc kép.

00:02:10.949 --> 00:02:15.800
Nó được gọi là một trực kiện chuỗi,
vì trực kiện có một giá trị cố định.

00:02:15.800 --> 00:02:20.060
Lần đầu chúng ta nghe trực kiện khi
được học về các biến số nguyên.

00:02:20.060 --> 00:02:24.190
Một giá trị cố định như hai hay năm hay
mười đều là các giá trị số nguyên

00:02:24.190 --> 00:02:29.060
bởi vì chúng không thay đổi,
trái ngược với một biến có thay đổi.

00:02:29.060 --> 00:02:31.480
Trở lại với tương tự hộp,
giá trị,

00:02:31.480 --> 00:02:34.020
Miễn phí, sẽ đi vào trong biến này.

00:02:34.020 --> 00:02:36.830
Cuối cùng nhưng cũng quan trọng, chúng ta
có một dấu chấm phẩy ở cuối câu lệnh.

00:02:38.040 --> 00:02:41.310
Bây giờ chúng ta hiểu dòng
mã này hơn, hãy tiếp tục và

00:02:41.310 --> 00:02:43.860
thử nghiệm với các giá trị khác nhau.

00:02:43.860 --> 00:02:47.890
Bạn có thể thử thay đổi giá trị ban đầu
tại đây hoặc thay đổi tên biến.

00:02:47.890 --> 00:02:50.420
Ví dụ,
bạn có thể dùng chuỗi ngắn như Miễn phí

00:02:50.420 --> 00:02:52.460
hoặc đổi thành chuỗi dài hơn.

00:02:52.460 --> 00:02:55.220
Bạn cũng có thể biến nó thành chuỗi
rỗng hoàn toàn,

00:02:55.220 --> 00:02:58.830
mà không để ký tự nào vào
giữa hai dấu trích dẫn.

00:02:58.830 --> 00:03:03.120
Bạn có thể thêm một dấu cách, hoặc
thêm số điện thoại, hoặc

00:03:03.120 --> 00:03:04.250
cũng có thể thêm ký hiệu.

00:03:05.920 --> 00:03:08.930
Khi bạn tạo ra trực kiện chuỗi,
hãy thận trọng

00:03:08.930 --> 00:03:12.640
vì có một số ký tự
mà bạn cần xử lý đặc biệt.

00:03:12.640 --> 00:03:16.040
Ví dụ, nếu bạn sử dụng
dấu trích dẫn trong chuỗi của bạn,

00:03:16.040 --> 00:03:18.970
thì bạn sẽ gặp lỗi cho biết

00:03:18.970 --> 00:03:24.090
không thể xử lý biểu tượng đô la
và dấu chấm phẩy.

00:03:24.090 --> 00:03:27.360
Đây là do trình biên dịch không
hiểu rằng toàn bộ chuỗi là

00:03:27.360 --> 00:03:29.150
là toàn bộ điều này.

00:03:29.150 --> 00:03:30.950
Để giải quyết vấn đề này,
chúng ta hãy tìm kiếm Google.

00:03:32.190 --> 00:03:34.720
Ở Google, tìm kiếm
ký tự thoát khỏi Java.

00:03:38.090 --> 00:03:41.750
Và di chuyển xuống đến phần
gọi là trình tự thoát.

00:03:41.750 --> 00:03:44.920
Trong Java,
một vài ký tự nghĩa là thứ đặc biệt.

00:03:44.920 --> 00:03:49.210
Ký hiệu trích dẫn bắt đầu và kết thúc
là để biểu thị một chuỗi trong Java,

00:03:49.210 --> 00:03:52.160
nhưng nếu bạn muốn thực sự đặt
một dấu trích dẫn trong chuỗi của mình,

00:03:52.160 --> 00:03:55.090
bạn sẽ cần phải sử dụng trình tự thoát.

00:03:55.090 --> 00:03:59.330
Trình tự thoát là một ký tự đặt trước
bằng một dấu gạch chéo ngược, và

00:03:59.330 --> 00:04:01.990
trình biên dịch Java sẽ
giải thích nó theo cách đặc biệt.

00:04:03.030 --> 00:04:06.520
Nếu ta dùng dấu gạch chéo ngược cùng
dấu trích dẫn, cho biết chúng ta thực sự

00:04:06.520 --> 00:04:11.460
muốn dùng biểu tượng trích dẫn, không phải
trích dẫn có nghĩa nó là chuỗi ký tự.

00:04:11.460 --> 00:04:12.350
Hãy để tôi giải thích ý của mình.

00:04:13.480 --> 00:04:16.160
Trong Android Studio tôi có thể thêm
một dấu gạch chéo ngược trước mỗi

00:04:16.160 --> 00:04:19.079
dấu trích dẫn mà tôi
muốn xuất hiện trong văn bản.

00:04:20.200 --> 00:04:24.520
Bây giờ, toàn bộ giá trị ban đầu của
biến này sẽ là toàn bộ chuỗi này,

00:04:24.520 --> 00:04:26.880
bởi vì nó được đánh dấu bằng
một số dấu ngoặc kép kết thúc.

00:04:28.570 --> 00:04:31.390
Và trong chuỗi văn bản đó,
tôi cũng muốn dùng dấu ngoặc kép, nhưng

00:04:31.390 --> 00:04:34.720
tôi đánh dấu bằng dấu gạch chéo ngược
ở phía trước của mỗi trích dẫn.

00:04:35.760 --> 00:04:39.220
Nếu tôi chạy trên điện thoại,
tôi thấy dấu ngoặc kép ở một đô la, nhưng

00:04:39.220 --> 00:04:42.130
tôi không thấy dấu ngoặc kép ở toàn bộ,
như những gì chúng ta mong đợi.

00:04:43.240 --> 00:04:46.510
Một trình tự thoát hữu ích khác
cần biết là dấu gạch chéo ngược,

00:04:46.510 --> 00:04:50.360
cái để chèn một dòng mới để
ký tự tiếp tục tìm đến dòng kế tiếp.

00:04:51.610 --> 00:04:53.180
Bạn có thể thử nó trong mã của mình.

00:04:54.230 --> 00:04:57.730
Hãy nhớ rằng dấu chấm phẩy cần
luôn đặt ở cuối câu lệnh.

00:04:57.730 --> 00:04:59.700
Mặc dù trong tiếng Anh,
đúng ngữ pháp thì phải để

00:04:59.700 --> 00:05:04.050
dấu chấm câu bên trong trích dẫn,
bạn phải đặt nó bên ngoài trích dẫn.

00:05:04.050 --> 00:05:07.620
Bất cứ thứ gì nằm giữa đây
là một phần của chuỗi ký tự.

00:05:07.620 --> 00:05:10.540
Và bạn cần phải đặt dấu chấm phẩy
bên ngoài trình biên dịch Java.

00:05:10.540 --> 00:05:13.360
Bạn cũng có thể thay đổi tên biến.

00:05:13.360 --> 00:05:17.440
Nếu tôi thay đổi cái này thành thứ như
tin nhắn, thì tôi sẽ gặp lỗi

00:05:17.440 --> 00:05:20.200
ở đây, bởi vì nó không thể xử lý
thông báo biểu tượng giá.

00:05:20.200 --> 00:05:22.150
Vì vậy, tôi chỉ cần sao chép nó và
đặt nó xuống ở đây.

00:05:22.150 --> 00:05:23.790
Và nó sẽ chạy trên thiết bị của bạn.

00:05:24.790 --> 00:05:26.860
Bạn không thể thay đổi kiểu dữ liệu.

00:05:26.860 --> 00:05:30.110
Nó phải soát chính tả chuỗi
chính xác như thế này.

00:05:30.110 --> 00:05:32.245
Chuỗi được viết hoa ở đây
bởi vì nó là một đối tượng.

00:05:32.245 --> 00:05:34.700
Ta sẽ tìm hiểu về đối tượng ở Bài 3,

00:05:34.700 --> 00:05:37.230
giờ chỉ cần gõ chuỗi có chữ S viết hoa.

00:05:37.230 --> 00:05:38.960
Khi chúng ta làm việc
với số nguyên lúc trước,

00:05:38.960 --> 00:05:41.889
chúng ta sẽ khai báo số nguyên bằng
chữ i thường có nghĩa là số nguyên.

00:05:42.960 --> 00:05:45.570
Nó là chữ thường bởi vì nó
là kiểu dữ liệu nguyên thủy,

00:05:45.570 --> 00:05:48.540
nguyên thủy có nghĩa nó là một
trong các kiểu dữ liệu Java cơ bản.

00:05:49.730 --> 00:05:51.470
Thử nghiệm với các tên biến và

00:05:51.470 --> 00:05:54.980
giá trị ban đầu khác nhau đến khi bạn
thông thao với việc tạo ra các biến chuỗi.

00:05:54.980 --> 00:05:57.680
Sau đó, tôi muốn bạn cho tôi biết
từng khai báo chuỗi đó có gì

00:05:57.680 --> 00:05:59.670
không đúng được liệt kê bên dưới.

00:05:59.670 --> 00:06:02.320
Tôi muốn bạn chỉ ra các lỗi
trong mỗi dòng mã.

