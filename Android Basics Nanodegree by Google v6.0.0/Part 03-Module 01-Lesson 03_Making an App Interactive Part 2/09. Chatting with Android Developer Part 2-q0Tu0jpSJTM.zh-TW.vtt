WEBVTT
Kind: captions
Language: zh-TW

00:00:00.000 --> 00:00:01.586
生日方面的應用程式?

00:00:00.280 --> 00:00:02.300
那麼我們的學生一直在學習

00:00:02.320 --> 00:00:04.220
本課中的變數和資料型別

00:00:04.300 --> 00:00:06.900
尤其是關於整型和字串

00:00:06.900 --> 00:00:08.860
有沒有應用程式的例子

00:00:08.860 --> 00:00:11.160
其中您用到這些字串？

00:00:11.180 --> 00:00:13.260
是的，有很多

00:00:13.280 --> 00:00:15.960
字串和整型是無所不在的

00:00:15.980 --> 00:00:20.680
比如，在 Gmail 中

00:00:20.680 --> 00:00:25.040
當你初次打開電郵，它告你有多少未讀郵件

00:00:25.040 --> 00:00:27.460
因此，那是一個非常重要的數目

00:00:27.460 --> 00:00:30.980
而我們實際上有這些非常微妙的漏洞

00:00:32.020 --> 00:00:36.400
使數目可能不會精確匹配您有多少未讀郵件

00:00:36.400 --> 00:00:37.600
所以......

00:00:37.600 --> 00:00:38.980
(多人同時講話)我從未遇到那種情況，你呢？

00:00:38.980 --> 00:00:41.240
- 那很好 - (笑) - 你從未遇到那種情況

00:00:41.280 --> 00:00:43.880
是的，所以這些漏洞(很微妙)

00:00:43.900 --> 00:00:45.320
它是個有意思的待解之題

00:00:45.320 --> 00:00:49.640
因為對於Gmail,我們會先同步那一數目

00:00:49.640 --> 00:00:50.960
同步的意思就是說

00:00:50.960 --> 00:00:54.480
我會將資料從雲存儲讀取到我的安卓設備上

00:00:54.480 --> 00:00:56.020
因此，那一資料實際上

00:00:56.020 --> 00:00:59.620
那一數目與您的實際電郵分別同步

00:00:59.640 --> 00:01:02.900
因此，它們有可能並不同步

00:01:02.900 --> 00:01:05.519
而那是更棘手的問題之一

00:01:05.540 --> 00:01:10.080
好的，那麼我們確定未讀郵件數是一個變數

00:01:10.080 --> 00:01:12.080
它的資料類型將是...?

00:01:12.080 --> 00:01:14.040
- 它將是一個整型 - 它將是一個整型?

00:01:14.060 --> 00:01:17.280
它的值將在不同設備之間進行計算

00:01:17.300 --> 00:01:21.060
而它的數值將根據使用情況發生變化

00:01:21.640 --> 00:01:24.020
這是我的經驗之談 - 是的，完全正確

00:01:24.060 --> 00:01:26.100
而整型的另一個用途是.....

00:01:26.100 --> 00:01:27.960
那麼，那是可變整型的一個例子

00:01:28.060 --> 00:01:31.420
它的基本特徵是可變，另外一個例子是ID

00:01:31.420 --> 00:01:33.480
那麼對於 ID，非常重要的一點是

00:01:33.500 --> 00:01:35.180
整型的數值維持不變

00:01:35.180 --> 00:01:37.380
- 那麼尤其是我的電郵ID? - 完全正確 - 好吧

00:01:37.380 --> 00:01:40.620
因此，伺服器上代表該電郵的ID

00:01:40.620 --> 00:01:43.620
需要與用戶端上的ID完全一致

00:01:43.620 --> 00:01:47.220
因為那是我們在任何地方識別此電郵的唯一方式

00:01:47.220 --> 00:01:48.320
不管在您的任何設備上

00:01:48.360 --> 00:01:50.520
- 那麼這是代表我們的電郵對話 - 是的

00:01:50.520 --> 00:01:51.840
而不是代表電郵地址本身

00:01:52.080 --> 00:01:56.560
對，如我們的對話，在Gmail中的執行緒

00:01:56.660 --> 00:02:01.040
包含多個消息的整個電郵執行緒

00:02:01.060 --> 00:02:03.340
我們將其稱之為對話

00:02:03.360 --> 00:02:04.820
- 並且有一個對話 ID - 好的，明白

00:02:04.880 --> 00:02:08.340
而每個消息本身也有自己獨一無二的 ID

00:02:08.380 --> 00:02:12.980
好，那麼每個ID都被存放為一個變數，類型是

00:02:13.300 --> 00:02:15.240
- 還是整型；- 好的 - 是的

00:02:15.640 --> 00:02:18.200
每天有多少電郵發出，你知道嗎？

00:02:18.220 --> 00:02:19.600
這可是海量的數目

00:02:20.100 --> 00:02:23.180
是的，我不知道會有多少電郵

00:02:23.180 --> 00:02:27.360
我設想，如果對話中的每個消息都是獨一無二的

00:02:27.820 --> 00:02:31.420
- 且每個發出的電郵都是獨一無二的；- 對

00:02:31.600 --> 00:02:33.640
那將會是一個非常巨大的數字，是吧？

00:02:33.640 --> 00:02:34.800
這個問題提得好

00:02:34.840 --> 00:02:37.600
對這些場合我們使用長整型而不是整型

00:02:37.680 --> 00:02:39.900
- 哦 - 因為它是 64 位元的

00:02:40.860 --> 00:02:42.060
- 那麼我們將永遠不會.....

00:02:42.140 --> 00:02:43.840
(同時講話) 那麼長整型將給您更多空間

00:02:43.860 --> 00:02:45.040
以存儲更大數位，是吧？

00:02:45.040 --> 00:02:47.260
- 那就是整型和長整型的區別- 對- 哦

00:02:47.260 --> 00:02:49.880
- 談談字串？- 字串

00:02:50.100 --> 00:02:53.460
(思考) - 呃. - 我想它是關於物件的

00:02:53.520 --> 00:02:55.540
(同時講話)- 字串 - 它是怎樣存放的

00:02:55.600 --> 00:02:58.880
是的，每個...是的，物件本身是個字串

00:02:58.880 --> 00:03:03.500
- 哦 - 明顯，電郵位址是字串 - 嗯

00:03:03.520 --> 00:03:05.220
那是另一個非常重要的...

00:03:05.240 --> 00:03:08.980
而你在任何應用程式中見到的一切

00:03:09.000 --> 00:03:12.280
實際上任何帶有文本的東西都將是字串

00:03:12.280 --> 00:03:16.120
而我認為一個優秀的工程師不必無所不知

00:03:16.160 --> 00:03:20.340
但你實際上必須善於發現答案所在

00:03:20.880 --> 00:03:24.920
你很可能會去尋找，也有很多不錯的教程

00:03:25.140 --> 00:03:29.260
- 教您如何尋找正確的關鍵字 - 嗯

00:03:29.340 --> 00:03:31.160
搜尋正確的關鍵字

00:03:31.560 --> 00:03:33.980
而你也會請人幫助？

00:03:34.460 --> 00:03:36.820
哦，是的，那實際上是非常重要的

00:03:36.820 --> 00:03:40.340
我覺得自己總是遺憾沒有更早請教別人

00:03:40.700 --> 00:03:44.780
我可能會試圖解決某個問題，耗去一整天時間

00:03:44.820 --> 00:03:49.740
而最後卻說，好吧，或許我該請人幫我寫這部分

00:03:49.920 --> 00:03:55.580
是的，我覺得早點求助於人絕對是很重要的

00:03:55.620 --> 00:03:57.360
可以節省極為寶貴的時間

00:03:57.440 --> 00:04:02.740
而且也能更瞭解穀歌進行的其他項目

00:04:02.980 --> 00:04:06.600
不僅是自己的項目，也關注周圍的其他項目

00:04:06.600 --> 00:04:09.180
我覺得真正優秀的工程師

00:04:09.180 --> 00:04:11.800
不僅關注他們自己正在做的工作

00:04:11.900 --> 00:04:16.920
而且在工作中我們也有"技術交談"，因此

00:04:16.920 --> 00:04:19.560
它們，或至少其中的一些面向公眾以進行評價

00:04:19.560 --> 00:04:20.860
是的，其中一些是

00:04:21.220 --> 00:04:25.280
因此，他們常會從這些技術交談

00:04:25.280 --> 00:04:31.180
或在技術部門內部公告中瞭解最新的技術

00:04:31.320 --> 00:04:34.820
因此，看看我們，處於技術的最前列

00:04:35.100 --> 00:04:38.640
讓我們回到你開始學習程式設計的時候

00:04:39.380 --> 00:04:41.920
那時候你能夠和Alice交談嗎？

00:04:42.300 --> 00:04:44.820
你今天會給她什麼樣的建議？

00:04:45.380 --> 00:04:47.120
哇，那可是一個有趣的問題

00:04:47.620 --> 00:04:52.380
- 我覺得， 那樣我的程式設計會更有樂趣 - 嗯

00:04:52.680 --> 00:04:56.980
那麼(思考)...我覺得我學習程式設計的方式

00:04:57.400 --> 00:05:01.840
將會與現在有很大區別，因為我來自於中國大陸

00:05:02.320 --> 00:05:04.840
我覺得當時非常專注於學術

00:05:05.060 --> 00:05:10.740
比如，我參加這些課外活動，由教師指導

00:05:10.820 --> 00:05:12.940
然後我們會被佈置作業

00:05:12.980 --> 00:05:15.500
比如，你學會解決它們

00:05:15.800 --> 00:05:18.000
然後，你去真正解決這個問題

00:05:18.340 --> 00:05:22.100
所以我覺得，回顧以往

00:05:22.100 --> 00:05:26.520
我希望能做更多專案，比如有樂趣的專案

00:05:26.520 --> 00:05:27.880
而且我覺得...

00:05:27.880 --> 00:05:29.260
你會做一個生日方面的應用程式嗎?

00:05:29.720 --> 00:05:33.640
我會...一個生日方面的應用程式? (笑)

00:05:34.800 --> 00:05:40.360
是的，一定。你知道我可以從這類應用程式中

00:05:40.360 --> 00:05:44.380
學到更多，因為將不止存在一個正確答案

00:05:44.380 --> 00:05:46.360
但是在開發那樣的應用程式過程中

00:05:46.440 --> 00:05:48.940
我可以學習設計，如果是生日應用程式的話

00:05:49.200 --> 00:05:51.540
我將瞭解不同的 UI 組件

00:05:51.700 --> 00:05:56.060
而不只是把資料搬到這裡或那裡

00:05:56.060 --> 00:05:58.460
然後更有效率地解決問題

00:05:58.560 --> 00:06:03.120
是的，我覺得在實際生活中

00:06:04.260 --> 00:06:09.800
工程的實質，它不只是強調解決技術難題

00:06:10.160 --> 00:06:12.140
也強調創造了不起的產品

00:06:12.360 --> 00:06:16.180
- 有點像被自己的好奇心驅使 -千真萬確

00:06:16.840 --> 00:06:19.120
好了， Cathy 和我感謝您撥冗受訪

00:06:19.160 --> 00:06:20.260
不必客氣

00:06:20.340 --> 00:06:23.180
我覺得學生們一定會從你的觀點中獲益匪淺

00:06:23.220 --> 00:06:24.260
是的

